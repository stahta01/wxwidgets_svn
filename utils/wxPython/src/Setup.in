## This file gives the details of what is needed to build this extension
## module so the Makefile can be created.

## If you have not done "make install" for wxWindows then see Setup.in.linux
## for a more verbose version of this file.

*shared*

CCC=c++
WXWIN=../../..
GENCODEDIR=gtk
srcdir=$(GENCODEDIR)
WX_CONFIG_CFLAGS=`wx-config --cflags`
WX_CONFIG_LIBS=`wx-config --libs`


## Depending on how your Python was built, you may have to set this
## value to use the C++ driver to link with instead of the default
## C driver.  For example:
MY_LDSHARED=$(CCC) -shared

## Same as above, but for statically linking Python and wxPython together,
## in other words, if you comment out the *shared* above.  If this is the
## case then you should ensure that the main() function is Python's, not
## wxWindows'.  You can rebuild $(WXWIN)/src/gtk/app.cpp with NOMAIN defined
## to force this...
MY_LINKCC=$(CCC)


## Pick one of these, or set your own.  This is where the wxPython module
## should be installed.  It should be a subdirectory named wxPython.
TARGETDIR=..
#TARGETDIR=$(BINLIBDEST)/site-packages/wxPython
#TARGETDIR=$(BINLIBDEST)/wxPython


wxc	wx.cpp helpers.cpp windows.cpp events.cpp misc.cpp gdi.cpp \
	mdi.cpp controls.cpp controls2.cpp windows2.cpp cmndlgs.cpp \
	frames.cpp stattool.cpp windows3.cpp image.cpp \
	utils.cpp \
	## comment out the next line to disable wxGLCanvas
	_glcanvas.cpp glcanvas.cpp -DWITH_GLCANVAS -lGL -lGLU \
	-I. $(WX_CONFIG_CFLAGS) -I/usr/local/lib/glib/include \
	-DSWIG_GLOBAL -DWXP_WITH_THREAD $(SEPARATE) -Xlinker $(WX_CONFIG_LIBS)

##-Xlinker -Bstatic
