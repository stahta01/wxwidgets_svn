# -*- python -*-
import sys

MODULE = 'wxc'
SWIGFILES = ['wx.i', 'windows.i', 'windows2.i', 'windows3.i', 'events.i',
             'misc.i', 'misc2.i', 'gdi.i', 'mdi.i', 'controls.i',
             'controls2.i', 'cmndlgs.i', 'stattool.i', 'frames.i',
             'image.i', 'printfw.i',
             ]

PYFILES = ['__init__.py']


if sys.platform == 'win32':
    RESFILE = 1
    SOURCES = ['helpers.cpp', 'libpy.c']
    LIBS = '$(PYTHONLIB)'
    OTHERRULES = """
dist:
	cd ..\..
	wxPython\distrib\zipit.bat $(VERSION)
"""

else:
    DEFAULTRULE = 'default: $(GENCODEDIR) lib$(HELPERLIB)$(SO) $(TARGET)'
    OTHERINSTALLTARGETS = 'installHelpers installLibDemo'


    OTHERRULES = """
lib$(HELPERLIB)$(SO) : helpers.o libpy.o
	$(LDSHARED) helpers.o libpy.o $(LFLAGS) -o $@

installHelpers: $(HELPERLIBDIR)/lib$(HELPERLIB)$(SO)

$(HELPERLIBDIR)/lib$(HELPERLIB)$(SO) : lib$(HELPERLIB)$(SO)
	cp $< $@
	@echo ---------------------------------------------------------
	@echo You may have to run ldconfig, or set an environment
	@echo variable in order for $(HELPERLIBDIR)/lib$(HELPERLIB)$(SO)
	@echo to be found at runtime.  See your man pages for ld.so or
	@echo equivalent.
	@echo ---------------------------------------------------------


installLibDemo:
	@if [ "$(TARGETDIR)" != ".." ]; then        		\\
		mkdir $(TARGETDIR)/lib;            		\\
		mkdir $(TARGETDIR)/lib/sizers;     		\\
		mkdir $(TARGETDIR)/demo;           		\\
		mkdir $(TARGETDIR)/demo/bitmaps;      		\\
		cp ../lib/*.py $(TARGETDIR)/lib;   		\\
		cp ../lib/sizers/*.py $(TARGETDIR)/lib/sizers;	\\
		cp ../demo/*.py $(TARGETDIR)/demo; 		\\
		cp ../lib/*.txt $(TARGETDIR)/lib;  		\\
		cp ../lib/sizers/*.txt $(TARGETDIR)/lib/sizers;	\\
		cp ../demo/*.txt $(TARGETDIR)/demo;		\\
		cp ../demo/bitmaps/[a-z]* $(TARGETDIR)/demo/bitmaps;	\\
		$(EXECPREFIX)/bin/python $(PYLIB)/compileall.py -l $(TARGETDIR); \\
		$(EXECPREFIX)/bin/python -O $(PYLIB)/compileall.py -l $(TARGETDIR); \\
	fi


dist: tgz rpm

tgz:
	cd ../..; wxPython/distrib/maketgz $(VERSION)

rpm:
	cd ../distrib; ./makerpm $(VERSION)



"""





