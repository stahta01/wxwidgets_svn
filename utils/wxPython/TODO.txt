wxPython TODO List
------------------

These are the major tasks to be done on wxPython:

1. Get it working for wxGTK.

2. Figure out how to do embedding of wxPython in a wxWindows C++
   application.

    Actually, now that I think about it it might actually work.  We
    just need to move some of the wxWindows initialization stuff out
    of wxpcinit, ensure that __wxStart is not called and that a wxApp
    is not created.  So this task becomes: Create a test case for
    embedding wxPython in a C++ app.  Should also create some helper
    functions for passing window objects into the Python code, etc.

    Test this with M.


3. Add significantly to the tests.

4. Derived Python classes should have the ability to call the standard
   On** methods in the base class.

5. There are some virtual On** and other methods in wxWindows that
   should end up being callbacks in derived python classes, but they
   are not called via the standard event system.  Is there any way to
   hook into these and call Python methods (if they exist in the
   derived class) without having to derive a specialized C++ class?

6. Add the Doc/View related classes

7. Add the Printing related classes

8. Document the differences (method signatures, new methods to
   compensate for no overloading, etc.) between wxPython and wxWindows.

9. Create some larger-scale sample application with wxPython to show
   it can be done and the simplicity that it will provide...  Test
   distribution with Freeze.


