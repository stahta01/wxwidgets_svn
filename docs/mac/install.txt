Installing and compiling wxMac
============================================================

On MacOS X, you can download Apple's free developer tools (gcc
and associated headers and libraries, such as the Carbon API).
You can then use configure in a similar way to compiling
wxWindows on Linux, (or on Windows using MinGW or Cygwin). See
'Apple Developers Tools' below for more details on using
configure.

To target on MacOS 8 or 9, you need to buy Metrowerks
CodeWarrior. You can then compile Mac Classic or MacOS X
applications on Mac OS X, or compile Mac Classic or MacOS X
applications on Mac Classic. However you can only run and debug
each type of application on the target operating system.

Installing latest headers (and Carbon Support)
----------------------------------------------

NOTE: these steps are not necessary for CW Pro 6 and above,
only for CW Pro 5.3.

The latest build for carbon support leads to a few changes you will have to
follow, in order to successfully compile the code (also necessary if you don't
want to build the carbon targets).

1. You need CodeWarrior Pro 5.3 , i.e. 5.0 with all the upgrades.
2. You have to download the 3.4.0 (or greater) universal interfaces from 
	ftp://ftp.apple.com/developer/Development_Kits/UniversalHeaders3.4.1.img.bin.
3. put the Interfaces and Libraries Folder into the MacOS Support folder and
   replace older versions.
4. remove from the MacOS Support folder the separate OpenTransport folder.
5. open the file MacOS Support:MacHeaders:MacHeaders.c and add the line
		#include <ControlDefinitions.h>
	after the 
		#include <Controls.h>
6. rebuild all MacHeaders from the MacHeaders.mcp project in the same folder.

If you want to build the carbon targets, you will also need the latest
carbonized version of MSL from Metrowerks, at the time of writing, this meant
applying the changes from the folders:

CodeWarrior Pro 5:Pre-Release:Carbon & MacOSX Development:Carbonized MSL and
CodeWarrior Pro 5:Pre-Release:Carbon & MacOSX Development:Carbonized Runtimes 
(consult the file CodeWarrior Pro 5:Pre-Release:Carbon & MacOSX Development:Carbon & MacOSX README)

setup.h
-------

in order to build wxMac with CodeWarrior, you must copy or alias the file
include/wx/mac/setup0.h to include/wx/setup.h.

this step is not needed when using the Apple Developer Tools under Mac OS X
since the setup.h file is automatically generated during the configuration.

OpenGL
------

In order to build opengl support with CodeWarrior, you must install the opengl
libraries and headers from http://developer.apple.com/opengl/index.html

If you want OpenGL support with CodeWarrior, set wxUSE_OPENGL to 1 in
include/wx/setup.h

If you don't want OpenGl support, set wxUSE_OPENGL to 0 (the
default) and remove the file OpenGLLibraryStub from the project
before compilation.

If you want OpenGL support with the Apple Developer Tools under Mac OS X, add
--with-opengl to the arguments of configure when configuring wxMac.

Project Files
-------------

The project files are stored as xml text files and converted to binary
CodeWarrior projects in the distribution (see AppleScript Files below):
  - *M5.xml -> *M5.mcp for CodeWarrior 5.3
  - *M6.xml -> *M6.mcp for CodeWarrior 6
  - *M7.xml -> *M7.mcp for CodeWarrior 7 and above.

In order to build the library (and then the samples) you need to make the
following projects (for CW 5.3, similar process for CW 7):

:src:wxwindowsM5.mcp
:src:png:pngM5.mcp
:src:tiff:tiffM5.mcp
:src:jpeg:jpegM5.mcp
:src:zlib:zlibM5.mcp

Note that if using CW 8 and above, when compiling the samples
you may need to edit the target settings, click on Language
Settings, C/++ Language and remove the forward slash at the
start of /wx/wx_cw_d.h (or similar filename).

AppleScript Files
-----------------

Several AppleScript files are provided in the docs:mac directory (currently
only for CodeWarrior 5.3 related projects):
  - M5xml2mcp.applescript to convert xml files to CodeWarrior projects
  - M5mcp2xml.applescript to convert CodeWarrior projects to xml files
  - M5build.applescript to automatically build all samples/demos projects

Apple Developers Tools
----------------------

As in all Unix projects, you need to do something like this under MacOS 10.1
with the Apple Developers Tools installed:

1) cd into the base dir
2) mkdir build
3) cd build
4) ../configure
5) make

If you want to install the library, you need to be able to log in as "root".
For this, "root" has to be activated in the NetInfo utility - there you will
also have to choose a password for the "root" user. Then

6) su
7) type <PASSWORD>
8) make install
9) exit

Note:
You might want to configure a static library instead:

4) ../configure --disable-shared

or activate OpenGL:

4) ../configure --with-opengl


Problems with .xpm files
------------------------

if you have downloaded all the files and get errors like :

Error   : the file 'wx/generic/tip.xpm' cannot be opened
tipdlg.cpp line 201   #include "wx/generic/tip.xpm"

then your cvs has changed the type of the .xpm files to something other than
text, in order to fix this either change the type by using a resource editor
or drag the files from /include/wx/generic/..xpm on the SetTypeFromExtension
application that is included in this folder. This small applet itself queries
the Internet Config, so you will have to associate the "xpm" extension with
CodeWarrior before making use of this applet.

Missing PLStringFuncsLib
------------------------

You will have to build All Targets for MacOS Support:Libraries:Sources:PLStringFuncs:Glue:PLStringFuncsGlue.mcp

