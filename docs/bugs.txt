wxWindows Buglist
-----------------

Until the wxWindows bug database is up and running, please add
entries in this style:

BUG NUMBER:
SHORT DESCRIPTION:
DETAILS:
WORKAROUND:
wxWINDOWS VERSION:
PLATFORM(S):
DATE IDENTIFIED:
IDENTIFIED BY:
DATE FIXED:
FIXED BY:

-------------------------START OF BUGLIST-------------------------

BUG NUMBER:             1
SHORT DESCRIPTION:      Popup menu bug
DETAILS:
If a popup wxMenu is destroyed after its parent window has been
destroyed, we get the message "Object XXX does not have windowed
ancestor".
Possible fix: call menu->DestroyMenu() before deleting the window,
if the window knows about the menu that was last popped up (hard
to know this with confidence).
WORKAROUND:
Delete the menu before deleting the window on which it
was popped up.
wxWINDOWS VERSION:      2.0.1
PLATFORM(S):            wxMotif
DATE IDENTIFIED:        ?/?/1998
IDENTIFIED BY:          Julian Smart <julian.smart@btopenworld.com>
DATE FIXED:
FIXED BY:

BUG NUMBER:             2
SHORT DESCRIPTION:      Misc. Motif bugs
DETAILS:
- In wxGrid, cell highlight is not drawn/erased properly.

- Setting the size of a hidden window may show that window.

- wxRadioBox sometimes doesn't show (e.g. in controls sample).

- Can't set the colours for the buttons in the file selector, for
  some reason.

- On SGI IRIX 6.4, XtDestroyWidget in ~wxWindow causes a crash in
  some cicumstances. This is being looked into. Meanwhile, a
  possible workaround is to remove the final XtDestroyWidget line in ~wxWindow
  (window.cpp). This will mean that child windows will only get
  destroyed when frames and dialogs are destroyed, so dynamic subwindow
  deletion may not work properly.

- There are reports that scrolling can cause crashes under Lesstif.
  This is probably a Lesstif bug.
WORKAROUND:
wxWINDOWS VERSION:      2.0.1
PLATFORM(S):            wxMotif
DATE IDENTIFIED:        ?/?/1999
IDENTIFIED BY:          Julian Smart
DATE FIXED:
FIXED BY:

BUG NUMBER:             3
SHORT DESCRIPTION:      Dialog Editor issues
DETAILS:
Dialog Editor could be more user-friendly. Controls are hard to
size and position accurately. No way of changing tab order
except by editing .wxr file.
WORKAROUND:
wxWINDOWS VERSION:      2.0.1
PLATFORM(S):            All
DATE IDENTIFIED:        ?/?/1998
IDENTIFIED BY:          Julian Smart <julian.smart@btopenworld.com>
DATE FIXED:
FIXED BY:

BUG NUMBER:             4
SHORT DESCRIPTION: Appending a menuitem with negative id causes menu not to be shown
DETAILS: I haven't tested it throughly, though it happens when appending a submenu
WORKAROUND: Add dummy id number even for menuitems which don't require them (submenus for example)
wxWINDOWS VERSION: 2.1.11
PLATFORMS: wxGTK
DATE IDENTIFIED: 10/11/1999
IDENTIFIED BY: Jonathan Brown <jbrown@sso.sytexinc.com>

BUG NUMBER:             5
SHORT DESCRIPTION: no vertical space inside wxHTML
DETAILS: We are working on making a demonstration of projects we do here
using Python & wxWindows & HTML (wxPython/wxHTML thus). We 'd like to
have the opportunity to specify vertical space, eg <br><br>, or <p><p>
in HTML. These constructs currently do not work. I looked in the source
code (nice job btw), but am not sure where to hack the solution. I
am willing to discuss this in more detail. 
WORKAROUND: Create a transparent gif of 1x1 pixel and use width & height
to fool the renderer
wxWINDOWS VERSION: wxWindows 2.1.11
PLATFORMS: Windows + Python 1.5
DATE IDENTIFIED: 10/11/1999
IDENTIFIED BY: A.T.Hofkamp
DATE FIXED: 11/11/1999
FIXED BY: Vaclav Slavik

BUG NUMBER: 6
SHORT DESCRIPTION: wxGTK-2.1.11 fails to build under IRIX
DETAILS: Seems we have a section that says, if we're not Sun, Linux, or
FreeBSD, then there's something very wrong...
c++ -c -MMD -D__WXGTK__ -DGTK_NO_CHECK_CASTS -D_REENTRANT -D_IODBC_ -O2
-I. -I./include -I./include
-I./src/zlib -I./src/png -I./src/jpeg
-I/home/rhh/software/gtk+-1.2.3/include
-I/home/rhh/software/glib-1.2.3/lib/glib/include
-I/home/rhh/software/glib-1.2.3/include -Wall
-D"wxINSTALL_PREFIX=\"/home/rhh/software/wxGTK-2.1.11\"" -fPIC -o
dialup.o ./src/unix/dialup.cpp ./src/unix/dialup.cpp: In method `int
wxDialUpManagerImpl::CheckIfconfig()':
./src/unix/dialup.cpp:500: warning: ignoring pragma: warning
./src/unix/dialup.cpp:527: parse error before `;'
./src/unix/dialup.cpp:544: confused by earlier errors, bailing out gmake:
*** [dialup.o] Error 1
wxWINDOWS VERSION: 2.1.11
PLATFORMS: wxGTK
DATE IDENTIFIED: 16/11/1999
IDENTIFIED BY: Randall Hopper

DATE+FIXED:
DATE+IDENTIFIED: 11-15-99
DETAILS: I am a new user.  I downloaded setup.exe and setup.wXX then ran the install program.  It prompted me for disk two which puzzled me.  There was no obvious solution.
FIXED+BY: 
IDENTIFIED+BY: William Deans
PLATFORMS: wxWindows
SHORT+DESCRIPTION: misnamed setup.wXX files prevents install
Submit: Submit
WORKAROUND: The problem seems to be that the default download name for the setup.wXX files is not 'setup.wXX' but instead 'setup.wXX..wXX'  Every new user who installs could change these names... but why not simply change them on the server?  (I was using IE 5 under Windows 98)
visitor_email_address: willdeans@mindspring.com
wxWINDOWS+VERSION: Current version as of 11-15-99

DATE+FIXED:
DATE+IDENTIFIED: 11-15-99
DETAILS: to recreate:
  click "new dialog" several times
  view the properties of a dialog box
  DO NOT CLOSE THE PROPERTIES BOX
  click on another dialog in the list
  right click the new dialog and select view properties..... (THE PROPERTY BOX DOES NOT CHANGE EVEN THOUGH IT SHOULD!... BUT THIS IS NOT THE CRASH)
  to make the crash click the Name property in the properties dialog box -- the application crashes
FIXED+BY:
IDENTIFIED+BY: William Deans
PLATFORMS: wxWindows
SHORT+DESCRIPTION: dialog editor CRASHES
Submit: Submit
WORKAROUND: be sure and close the properties box every time before switching to a new dialog... this might be hard to remember as the properties box does not stay in front of the dialog editor........ as I feel that it should
visitor_email_address: willdeans@mindspring.com
wxWINDOWS+VERSION: 2.1.11 (Current version as of 11-15-99)

DATE+FIXED:
DATE+IDENTIFIED: 11-15-99
DETAILS: to recreate:
  click "Dialogs" folder to the left
  select delete from the menu
FIXED+BY: 
IDENTIFIED+BY: William Deans
PLATFORMS: wxWindows
SHORT+DESCRIPTION: Dialog Editor CRASHES (again)
Submit: Submit
WORKAROUND: 
visitor_email_address: willdeans@mindspring.com
wxWINDOWS+VERSION: 2.1.11 (Current version as of 11-15-99)

DATE+FIXED:
DATE+IDENTIFIED: 11-15-99
DETAILS: to recreate:
  go to properties (of any dialog)
  select id
  select ...
  hit cancel
  the property box hangs
FIXED+BY:
IDENTIFIED+BY: William Deans
PLATFORMS: wxWindows
SHORT+DESCRIPTION: Dialog Editor HANGS
Submit: Submit
WORKAROUND: 
visitor_email_address: willdeans@mindspring.com
wxWINDOWS+VERSION: 2.1.11 (Current version as of 11-15-99)

DATE+FIXED:
DATE+IDENTIFIED: 11-15-99
DETAILS: to recreate:
  put a space into the name field of the property box...... this should be disallowed, but is not
FIXED+BY: 
IDENTIFIED+BY: William Deans
PLATFORMS: wxWindows
SHORT+DESCRIPTION: Dialog Editor Creates Files It Cannot Parse
Submit: Submit
WORKAROUND: each time a change is made to a dialog..... that section of the wxr file should be written to a buffer and re-parsed..... if the parsing fails the change should be disallowed
visitor_email_address: willdeans@mindspring.com
wxWINDOWS+VERSION: 2.1.11 (Current version as of 11-15-99)

DATE+IDENTIFIED: 26/11/1999
DETAILS: Around line 1234 or the common/docview.cpp file following code exists...

if (!theTemplate)
    theTemplate=templates[FilterIndex] ;

The problem is tat FilterIndex is one based and the templates array is zero based. The correct
thing might be to use FilterIndex-1 as the index. Else the following scenario will
cause a crash.

1. Use the docvsmdi example
2. Bring up the file open dlg.
3. Select Files of Type "Text"
4. c:\autoexec.bat for file name
5. Press okay and you should see
   the crash.

I understand that it is very
hard to figure out the template
when the user does not select
one of the known extensions but
this simple fix might atleast
avoid the crash....

I started playing with wxMSW
just this morning and have not
yet figured out exactly how to
submit a fix. I atleast wanted
to report it. Besides what I do
for the MSW might not be correct
for the other platforms :-)

Note from JACS: fixed (I hope) by making m_filterIndex
zero-based in MSW wxFileDialog implementation
(it's zero-based in wxGTK/the generic dialog).

IDENTIFIED+BY: Haneef Mohammed
PLATFORMS: wxMSW
SHORT+DESCRIPTION: Bug in wxDocTemplate::SelectDocumentPath()
WORKAROUND:
visitor_email_address: haneef@symphonyeda.com
wxWINDOWS+VERSION: 2.1.12
DATE+FIXED: 29/11/99
FIXED+BY: Julian Smart <julian.smart@btopenworld.com>

DATE+FIXED:
DATE+IDENTIFIED: 29/11/1999
DETAILS: wxGTK cannot seem to find the default font
on (some?) Debian 2.x systems.  This results
in infinite recursion in wxLoadQueryNearestFont.

It only happens on one of my two Debian machines,
but I haven't investigated thoroughly enough to give
any more detail.

I have made a temporary workaround by trapping
recursion in wxLoadQueryNearestFont with a static
bool flag.

I will investigate the problem further if this bug has
not already been reported by someone else.
FIXED+BY: Vadim, just after 2.1.11?
IDENTIFIED+BY: Tom Marshall
PLATFORMS: wxGTK
SHORT+DESCRIPTION: wxGTK: infinite recursion in font selection
WORKAROUND: Create default font mapping for every
wxGTK app (?)
visitor_email_address: tommy@aa.net
wxWINDOWS+VERSION: 2.1.11

DATE+FIXED:
DATE+IDENTIFIED: 29/11/1999
DETAILS: If the listening socket cannot be obtained
(ie, TIME_WAIT) the wxsocket server example
program segfaults.
FIXED+BY:
IDENTIFIED+BY: Tom Marshall
PLATFORMS: wxGTK
SHORT+DESCRIPTION: wxGTK: wxsocket example crashes if listen socket unavailable
WORKAROUND: None.
visitor_email_address: tommy@aa.net
wxWINDOWS+VERSION: 2.1.11

DATE+FIXED: 07/12/1999
DATE+IDENTIFIED: 04/12/1999
DETAILS: In wxTextCtrl::AdjustSpaceLimit(), the check for len > limit
does not take into account when len == limit. This caused the
output to freeze when the limit was reached.
FIXED+BY: Vasu Harish
IDENTIFIED+BY: Vasu Harish
PLATFORMS: wxMSW
SHORT+DESCRIPTION: wxTextCtrl clogs output occassionally when the text size limit is reached
WORKAROUND: In the check for (len > limit) condition in wxTextCtrl::AdjustSpaceLimit()
call, added the condition to check for the len==limit. 
visitor_email_address: vasuh@bullant.net
wxWINDOWS+VERSION: wx2.1.11

DATE+FIXED: 30/12/1999
DATE+IDENTIFIED: 
DETAILS: the setting of wxvc_dll have a bug of precompiled setting with release version.
FIXED+BY: Pumb Peng
IDENTIFIED+BY: Pumb Peng
PLATFORMS: windows NT
SHORT+DESCRIPTION: wxvc_dll.dsp Bug
Submit: Submit
WORKAROUND: 
visitor_email_address: 
wxWINDOWS+VERSION: 2.1.11

DATE+FIXED: 05/01/2000
DATE+IDENTIFIED: 04/01/2000
DETAILS: The various message callback members of
wxMessageDialog pass the client_data variable
as in "int" which are later used a pointers. On a 64-bit 
system they must be passed as pointers or
as "long" variables.
FIXED+BY: JACS
IDENTIFIED+BY: Ray Lanza
PLATFORMS: motif
SHORT+DESCRIPTION: wxMessageDialog is not 64bit safe
Submit: Submit
WORKAROUND: Change the declaration to void * or long
visitor_email_address: rjl@zk3.dec.com
wxWINDOWS+VERSION: 2.1.10

DATE+FIXED: 12/01/2000
DATE+IDENTIFIED: 12/01/2000
DETAILS: When I try to Print or create
wxPrintPreview object in the
printing sample, it fails.
The reason is the wxGetDefaultDeviceName
function in file msw/dcprint.cpp. In line 253
the memory is freed, and then
the pointer to the freed memory
is used.
FIXED+BY: Alexey V. Exarevsky (patched into wxWin 12/1/2000 by JACS)
IDENTIFIED+BY: Alexey V. Exarevsky
PLATFORMS: wxMSW, compiled by VC++ 6.0
SHORT+DESCRIPTION: Print/Print preveiw to default printer in NT
Submit: Submit
WORKAROUND: I have moved lines that free
memory below the lines that
use lpszDeviceName and 
lpszPortName
visitor_email_address: ave@relex.ru
wxWINDOWS+VERSION: 2.1.11

DATE+FIXED:
DATE+IDENTIFIED: 14/01/2000
DETAILS: I run my linux boxes headless and use a Windows box for an XServer... every sample I have tried so far
hangs in a loop tring to get an acceptable font for something or other... here is the GDB trace
#1102 0x40203d19 in wxMessageBox ()
#1103 0x401aee31 in wxFontMapper::GetAltForEncoding ()
#1104 0x40287c45 in wxLoadQueryNearestFont ()
#1105 0x4015b3cc in wxFont::GetInternalFont ()
#1106 0x4017d1db in wxWindow::GetTextExtent ()
#1107 0x4018f499 in wxDialogBase::CreateTextSizer ()
#1108 0x40253302 in wxGenericMessageDialog::wxGenericMessageDialog ()
#1109 0x40203d19 in wxMessageBox ()
#1110 0x401aee31 in wxFontMapper::GetAltForEncoding ()
#1111 0x40287c45 in wxLoadQueryNearestFont ()
#1112 0x4015b3cc in wxFont::GetInternalFont ()
#1113 0x40154653 in wxWindowDC::DoGetTextExtent ()
#1114 0x4015e3fd in wxFrame::OnCreateStatusBar ()
#1115 0x4015e17d in wxFrame::CreateStatusBar ()
#1116 0x8062edc in ChatFrame::ChatFrame ()
#1117 0x8062d3d in ChatClient::OnInit ()
#1118 0x4014587e in wxEntry ()
#1119 0x401617db in main ()
FIXED+BY:
IDENTIFIED+BY: John Barrett
PLATFORMS: wxGTK
SHORT+DESCRIPTION: wxWin/GTK and X-Win32 on Windows
Submit: Submit
WORKAROUND: 
visitor_email_address: jbarrett@box100.com
wxWINDOWS+VERSION: 2.1.11

DATE+FIXED:
DATE+IDENTIFIED: 17.01.2000
DETAILS: wxWindows 2 installer simply replaces msv(i)crt.dll. MUST ONLY overwrite if newer!!! Apart from that: the libraries provided are from VC6Sp1 and are known to be buggy!
FIXED+BY: 
IDENTIFIED+BY: Klaus Richter
PLATFORMS: wxMSW
SHORT+DESCRIPTION: Windows Installer problem
Submit: Submit
WORKAROUND: Dlls from at least Sp2 (better 3) are needed (read MSDN KB Q190536)!
visitor_email_address: richter@secude.com
wxWINDOWS+VERSION: 2.1.11

DATE+FIXED:
DATE+IDENTIFIED: 18/01/2000
DETAILS: I tested wxWindows/GTK+ with a simple example which
uses frame, menu, and statusbar. But when I selected
a menu item which creates a simple 'about dialog'
several times, the program crashed with segmentation fault.
I traced it with gdb, and I got this message:

Program received signal SIGSEGV, Segmentation fault
0x408f1796 in match_theme_image ()
  from /usr/lib/gtk/themes/engines/libpixmap.so

I guessed from this message that the pixmap routine in
GTK+ theme engine caused crash. So, I changed GTK+ theme
to default which doesn't use any pixmaps and tested
again. This time, the program didn't crash.

I'm using Redhat 6.1 with egcs 1.1.2.
FIXED+BY:
IDENTIFIED+BY: Sangpil Yoon
PLATFORMS: wxGTK
SHORT+DESCRIPTION: Problem with GTK+ theme
Submit: Submit
WORKAROUND: Currently none.
visitor_email_address: yphil99@yahoo.com
wxWINDOWS+VERSION: 2.1.12

---------------------------END OF BUGLIST-------------------------


