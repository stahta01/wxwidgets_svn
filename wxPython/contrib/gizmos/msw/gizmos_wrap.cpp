/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.27
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/***********************************************************************
 *
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 *
 ************************************************************************/

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
#  if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#    define SWIGTEMPLATEDISAMBIGUATOR template
#  else
#    define SWIGTEMPLATEDISAMBIGUATOR 
#  endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__) || defined(__ICC)
#   define SWIGUNUSED __attribute__ ((unused)) 
# else
#   define SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods for Windows DLLs */
#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   define SWIGEXPORT
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif



#include <Python.h>

/***********************************************************************
 * swigrun.swg
 *
 *     This file contains generic CAPI SWIG runtime support for pointer
 *     type checking.
 *
 ************************************************************************/

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "2"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store inforomation on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;


/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (int)(*f1 - *f2);
  }
  return (l1 - f1) - (l2 - f2);
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}


/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu = 0;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * SWIG API. Portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * for internal method declarations
 * ----------------------------------------------------------------------------- */

#ifndef SWIGINTERN
#  define SWIGINTERN static SWIGUNUSED
#endif

#ifndef SWIGINTERNINLINE
#  define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/*
  Exception handling in wrappers
*/
#define SWIG_fail                goto fail
#define SWIG_arg_fail(arg)       SWIG_Python_ArgFail(arg)
#define SWIG_append_errmsg(msg)   SWIG_Python_AddErrMesg(msg,0)
#define SWIG_preppend_errmsg(msg) SWIG_Python_AddErrMesg(msg,1)
#define SWIG_type_error(type,obj) SWIG_Python_TypeError(type,obj)
#define SWIG_null_ref(type)       SWIG_Python_NullRef(type)

/*
  Contract support
*/
#define SWIG_contract_assert(expr, msg) \
 if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Alloc. memory flags
 * ----------------------------------------------------------------------------- */
#define SWIG_OLDOBJ  1
#define SWIG_NEWOBJ  SWIG_OLDOBJ + 1
#define SWIG_PYSTR   SWIG_NEWOBJ + 1

#ifdef __cplusplus
}
#endif


/***********************************************************************
 * pyrun.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags)    SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags)       SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)
 

/* Python-specific SWIG API */
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags)   SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type)              SWIG_Python_NewPackedObj(ptr, sz, type)

/* Runtime API */
#define SWIG_GetModule(clientdata) SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer) SWIG_Python_SetModule(pointer)

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */
/*
  Use SWIG_NO_COBJECT_TYPES to force the use of strings to represent
  C/C++ pointers in the python side. Very useful for debugging, but
  not always safe.
*/
#if !defined(SWIG_NO_COBJECT_TYPES) && !defined(SWIG_COBJECT_TYPES)
#  define SWIG_COBJECT_TYPES
#endif

/* Flags for pointer conversion */
#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2


/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
#define PyOS_snprintf snprintf
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Create a new pointer string 
 * ----------------------------------------------------------------------------- */
#ifndef SWIG_BUFFER_SIZE
#define SWIG_BUFFER_SIZE 1024
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000
static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_BUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

#if PY_VERSION_HEX < 0x01060000
#define PyObject_Del(op) PyMem_DEL((op))
#endif

#if defined(SWIG_COBJECT_TYPES)
#if !defined(SWIG_COBJECT_PYTHON)
/* -----------------------------------------------------------------------------
 * Implements a simple Swig Object type, and use it instead of PyCObject
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *ptr;
  const char *desc;
} PySwigObject;

/* Declarations for objects of type PySwigObject */

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int flags)
{
  char result[SWIG_BUFFER_SIZE];
  flags = flags;
  if (SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result))) {
    fputs("<Swig Object at ", fp); fputs(result, fp); fputs(">", fp);
    return 0; 
  } else {
    return 1; 
  }
}
  
SWIGRUNTIME PyObject *
PySwigObject_repr(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result)) ?
    PyString_FromFormat("<Swig Object at %s>", result) : 0;
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args && (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0)) {
    PyObject *ofmt = PyString_FromString(fmt);
    if (ofmt) {
      res = PyString_Format(ofmt,args);
      Py_DECREF(ofmt);
    }
    Py_DECREF(args);
  }  
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  int c = strcmp(v->desc, w->desc);
  if (c) {
    return (c > 0) ? 1 : -1;
  } else {
    void *i = v->ptr;
    void *j = w->ptr;
    return (i < j) ? -1 : ((i > j) ? 1 : 0);
  }
}

SWIGRUNTIME void
PySwigObject_dealloc(PySwigObject *self)
{
  PyObject_Del(self);
}

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static char pyswigobject_type__doc__[] = 
    "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */ 
#elif PY_VERSION_HEX >= 0x02000000
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type
#if !defined(__cplusplus)
  ;  
  static int type_init = 0;
  if (!type_init) {
    PyTypeObject tmp
#endif
    = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,					/*ob_size*/
    (char *)"PySwigObject",		/*tp_name*/
    sizeof(PySwigObject),		/*tp_basicsize*/
    0,					/*tp_itemsize*/
    /* methods */
    (destructor)PySwigObject_dealloc,	/*tp_dealloc*/
    (printfunc)PySwigObject_print,	/*tp_print*/
    (getattrfunc)0,			/*tp_getattr*/
    (setattrfunc)0,			/*tp_setattr*/
    (cmpfunc)PySwigObject_compare,	/*tp_compare*/
    (reprfunc)PySwigObject_repr,	/*tp_repr*/
    &PySwigObject_as_number,	        /*tp_as_number*/
    0,					/*tp_as_sequence*/
    0,					/*tp_as_mapping*/
    (hashfunc)0,			/*tp_hash*/
    (ternaryfunc)0,			/*tp_call*/
    (reprfunc)PySwigObject_str,		/*tp_str*/
    /* Space for future expansion */
    0,0,0,0,
    pyswigobject_type__doc__, 	        /* Documentation string */
#if PY_VERSION_HEX >= 0x02000000
    0,                                  /* tp_traverse */
    0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
    0,                                  /* tp_richcompare */
    0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
    0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
    0,0,0,0                             /* tp_alloc -> tp_next */
#endif
    };
#if !defined(__cplusplus)
    pyswigobject_type = tmp;
    type_init = 1;
  }
#endif
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_FromVoidPtrAndDesc(void *ptr, const char *desc)
{
  PySwigObject *self = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (self) {
    self->ptr = ptr;
    self->desc = desc;
  }
  return (PyObject *)self;
}

SWIGRUNTIMEINLINE void *
PySwigObject_AsVoidPtr(PyObject *self)
{
  return ((PySwigObject *)self)->ptr;
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  return ((PySwigObject *)self)->desc;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  const char *desc;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int flags)
{
  char result[SWIG_BUFFER_SIZE];
  flags = flags;
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->desc,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->desc);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->desc);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->desc);
  } else {
    return PyString_FromString(v->desc);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  int c = strcmp(v->desc, w->desc);
  if (c) {
    return (c > 0) ? 1 : -1;
  } else {
    size_t i = v->size;
    size_t j = w->size;
    int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
    return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
  }
}

SWIGRUNTIME void
PySwigPacked_dealloc(PySwigPacked *self)
{
  free(self->pack);
  PyObject_Del(self);
}

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static char pyswigpacked_type__doc__[] = 
    "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type
#if !defined(__cplusplus)
  ;
  static int type_init = 0;  
  if (!type_init) {
    PyTypeObject tmp
#endif
    = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,					/*ob_size*/
    (char *)"PySwigPacked",		/*tp_name*/
    sizeof(PySwigPacked),		/*tp_basicsize*/
    0,					/*tp_itemsize*/
    /* methods */
    (destructor)PySwigPacked_dealloc,	/*tp_dealloc*/
    (printfunc)PySwigPacked_print,	/*tp_print*/
    (getattrfunc)0,			/*tp_getattr*/
    (setattrfunc)0,			/*tp_setattr*/
    (cmpfunc)PySwigPacked_compare,	/*tp_compare*/
    (reprfunc)PySwigPacked_repr,	/*tp_repr*/
    0,	                                /*tp_as_number*/
    0,					/*tp_as_sequence*/
    0,					/*tp_as_mapping*/
    (hashfunc)0,			/*tp_hash*/
    (ternaryfunc)0,			/*tp_call*/
    (reprfunc)PySwigPacked_str,		/*tp_str*/
    /* Space for future expansion */
    0,0,0,0,
    pyswigpacked_type__doc__, 	        /* Documentation string */
#if PY_VERSION_HEX >= 0x02000000
    0,                                  /* tp_traverse */
    0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
    0,                                  /* tp_richcompare */
    0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000         
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
    0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
    0,0,0,0                             /* tp_alloc -> tp_next */
#endif
    };
#if !defined(__cplusplus)
    pyswigpacked_type = tmp;
    type_init = 1;
  }
#endif
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_FromDataAndDesc(void *ptr, size_t size, const char *desc)
{
  PySwigPacked *self = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (self == NULL) {
    return NULL;
  } else {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      self->pack = pack;
      self->desc = desc;
      self->size = size;
      return (PyObject *) self;
    }
    return NULL;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  PySwigPacked *self = (PySwigPacked *)obj;
  if (self->size != size) return 0;
  memcpy(ptr, self->pack, size);
  return self->desc;
}

SWIGRUNTIMEINLINE const char *
PySwigPacked_GetDesc(PyObject *self)
{
  return ((PySwigPacked *)self)->desc;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

#else
/* -----------------------------------------------------------------------------
 * Use the old Python PyCObject instead of PySwigObject
 * ----------------------------------------------------------------------------- */

#define PySwigObject_GetDesc(obj)	           PyCObject_GetDesc(obj)
#define PySwigObject_Check(obj)	           PyCObject_Check(obj)
#define PySwigObject_AsVoidPtr(obj)	   PyCObject_AsVoidPtr(obj)
#define PySwigObject_FromVoidPtrAndDesc(p, d)  PyCObject_FromVoidPtrAndDesc(p, d, NULL)

#endif

#endif

/* -----------------------------------------------------------------------------
 * errors manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}

SWIGRUNTIMEINLINE void
SWIG_Python_NullRef(const char *type)
{
  if (type) {
    PyErr_Format(PyExc_TypeError, "null reference of type '%s' was received",type);
  } else {
    PyErr_Format(PyExc_TypeError, "null reference was received");
  }
}

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}

SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}


/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* Convert a pointer value */
SWIGRUNTIME int
SWIG_Python_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  const char *c = 0;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;
  void *vptr;
  
  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }

#ifdef SWIG_COBJECT_TYPES
  if (!(PySwigObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PySwigObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  vptr = PySwigObject_AsVoidPtr(obj);
  c = (const char *) PySwigObject_GetDesc(obj);
  if (newref) { Py_DECREF(obj); }
  goto type_check;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  c = SWIG_UnpackVoidPtr(c, &vptr, ty->name);
  if (newref) { Py_DECREF(obj); }
  if (!c) goto type_error;
#endif

type_check:
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,vptr);
  } else {
    *ptr = vptr;
  }
  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
    PyObject_SetAttrString(pyobj,(char*)"thisown",Py_False);
  }
  return 0;

type_error:
  PyErr_Clear();
  if (pyobj && !obj) {    
    obj = pyobj;
    if (PyCFunction_Check(obj)) {
      /* here we get the method pointer for callbacks */
      char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
      c = doc ? strstr(doc, "swig_ptr: ") : 0;
      if (c) {
	c = ty ? SWIG_UnpackVoidPtr(c + 10, &vptr, ty->name) : 0;
	if (!c) goto type_error;
	goto type_check;
      }
    }
  }
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
    } else {
      SWIG_Python_TypeError("C/C++ pointer", obj);
    }
  }
  return -1;
}

/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  const char *c = 0;

#if defined(SWIG_COBJECT_TYPES) && !defined(SWIG_COBJECT_PYTHON)
  c = PySwigPacked_UnpackData(obj, ptr, sz);
#else
  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  c = SWIG_UnpackDataName(c, ptr, sz, ty->name);
#endif
  if (!c) goto type_error;
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:
  PyErr_Clear();
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
    } else {
      SWIG_Python_TypeError("C/C++ packed data", obj);
    }
  }
  return -1;
}  

/* Create a new array object */
SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj = 0;
  if (!type) {
    if (!PyErr_Occurred()) {
      PyErr_Format(PyExc_TypeError, "Swig: null type passed to NewPointerObj");
    }
    return robj;
  }
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PySwigObject_FromVoidPtrAndDesc((void *) ptr, (char *)type->name);
#else
  {
    char result[SWIG_BUFFER_SIZE];
    robj = SWIG_PackVoidPtr(result, ptr, type->name, sizeof(result)) ?
      PyString_FromString(result) : 0;
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
        PyObject_SetAttrString(inst,(char*)"thisown",Py_True);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  PyObject *robj = 0;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#if defined(SWIG_COBJECT_TYPES) && !defined(SWIG_COBJECT_PYTHON)
  robj = PySwigPacked_FromDataAndDesc((void *) ptr, sz, (char *)type->name);
#else
  {
    char result[SWIG_BUFFER_SIZE];
    robj = SWIG_PackDataName(result, ptr, sz, type->name, sizeof(result)) ?
      PyString_FromString(result) : 0;
  }
#endif
  return robj;
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return -1;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return -1;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return -1;
  }
  if (PyDict_SetItemString(dict, name, o))
    return -1;
  Py_DECREF(o);
  return 0;
}
#endif

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, NULL);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  }
}

#ifdef __cplusplus
}
#endif


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_char swig_types[0]
#define SWIGTYPE_p_float swig_types[1]
#define SWIGTYPE_p_form_ops_t swig_types[2]
#define SWIGTYPE_p_int swig_types[3]
#define SWIGTYPE_p_unsigned_char swig_types[4]
#define SWIGTYPE_p_unsigned_int swig_types[5]
#define SWIGTYPE_p_unsigned_long swig_types[6]
#define SWIGTYPE_p_wxANIHandler swig_types[7]
#define SWIGTYPE_p_wxAcceleratorTable swig_types[8]
#define SWIGTYPE_p_wxActivateEvent swig_types[9]
#define SWIGTYPE_p_wxArrayString swig_types[10]
#define SWIGTYPE_p_wxBMPHandler swig_types[11]
#define SWIGTYPE_p_wxBitmap swig_types[12]
#define SWIGTYPE_p_wxBitmapButton swig_types[13]
#define SWIGTYPE_p_wxBookCtrlBase swig_types[14]
#define SWIGTYPE_p_wxBookCtrlBaseEvent swig_types[15]
#define SWIGTYPE_p_wxBoxSizer swig_types[16]
#define SWIGTYPE_p_wxButton swig_types[17]
#define SWIGTYPE_p_wxCURHandler swig_types[18]
#define SWIGTYPE_p_wxCalculateLayoutEvent swig_types[19]
#define SWIGTYPE_p_wxCheckBox swig_types[20]
#define SWIGTYPE_p_wxCheckListBox swig_types[21]
#define SWIGTYPE_p_wxChildFocusEvent swig_types[22]
#define SWIGTYPE_p_wxChoice swig_types[23]
#define SWIGTYPE_p_wxChoicebook swig_types[24]
#define SWIGTYPE_p_wxChoicebookEvent swig_types[25]
#define SWIGTYPE_p_wxCloseEvent swig_types[26]
#define SWIGTYPE_p_wxColour swig_types[27]
#define SWIGTYPE_p_wxColourData swig_types[28]
#define SWIGTYPE_p_wxColourDialog swig_types[29]
#define SWIGTYPE_p_wxComboBox swig_types[30]
#define SWIGTYPE_p_wxCommandEvent swig_types[31]
#define SWIGTYPE_p_wxContextHelp swig_types[32]
#define SWIGTYPE_p_wxContextHelpButton swig_types[33]
#define SWIGTYPE_p_wxContextMenuEvent swig_types[34]
#define SWIGTYPE_p_wxControl swig_types[35]
#define SWIGTYPE_p_wxControlWithItems swig_types[36]
#define SWIGTYPE_p_wxDateEvent swig_types[37]
#define SWIGTYPE_p_wxDatePickerCtrl swig_types[38]
#define SWIGTYPE_p_wxDialog swig_types[39]
#define SWIGTYPE_p_wxDirDialog swig_types[40]
#define SWIGTYPE_p_wxDirFilterListCtrl swig_types[41]
#define SWIGTYPE_p_wxDisplayChangedEvent swig_types[42]
#define SWIGTYPE_p_wxDropFilesEvent swig_types[43]
#define SWIGTYPE_p_wxDuplexMode swig_types[44]
#define SWIGTYPE_p_wxDynamicSashSplitEvent swig_types[45]
#define SWIGTYPE_p_wxDynamicSashUnifyEvent swig_types[46]
#define SWIGTYPE_p_wxDynamicSashWindow swig_types[47]
#define SWIGTYPE_p_wxEditableListBox swig_types[48]
#define SWIGTYPE_p_wxEraseEvent swig_types[49]
#define SWIGTYPE_p_wxEvent swig_types[50]
#define SWIGTYPE_p_wxEvtHandler swig_types[51]
#define SWIGTYPE_p_wxFSFile swig_types[52]
#define SWIGTYPE_p_wxFileDialog swig_types[53]
#define SWIGTYPE_p_wxFileSystem swig_types[54]
#define SWIGTYPE_p_wxFindDialogEvent swig_types[55]
#define SWIGTYPE_p_wxFindReplaceData swig_types[56]
#define SWIGTYPE_p_wxFindReplaceDialog swig_types[57]
#define SWIGTYPE_p_wxFlexGridSizer swig_types[58]
#define SWIGTYPE_p_wxFocusEvent swig_types[59]
#define SWIGTYPE_p_wxFont swig_types[60]
#define SWIGTYPE_p_wxFontData swig_types[61]
#define SWIGTYPE_p_wxFontDialog swig_types[62]
#define SWIGTYPE_p_wxFrame swig_types[63]
#define SWIGTYPE_p_wxGBSizerItem swig_types[64]
#define SWIGTYPE_p_wxGIFHandler swig_types[65]
#define SWIGTYPE_p_wxGauge swig_types[66]
#define SWIGTYPE_p_wxGenericDirCtrl swig_types[67]
#define SWIGTYPE_p_wxGenericDragImage swig_types[68]
#define SWIGTYPE_p_wxGridBagSizer swig_types[69]
#define SWIGTYPE_p_wxGridSizer swig_types[70]
#define SWIGTYPE_p_wxHelpEvent swig_types[71]
#define SWIGTYPE_p_wxICOHandler swig_types[72]
#define SWIGTYPE_p_wxIcon swig_types[73]
#define SWIGTYPE_p_wxIconizeEvent swig_types[74]
#define SWIGTYPE_p_wxIdleEvent swig_types[75]
#define SWIGTYPE_p_wxImage swig_types[76]
#define SWIGTYPE_p_wxImageHandler swig_types[77]
#define SWIGTYPE_p_wxImageList swig_types[78]
#define SWIGTYPE_p_wxIndividualLayoutConstraint swig_types[79]
#define SWIGTYPE_p_wxInitDialogEvent swig_types[80]
#define SWIGTYPE_p_wxJPEGHandler swig_types[81]
#define SWIGTYPE_p_wxKeyEvent swig_types[82]
#define SWIGTYPE_p_wxLEDNumberCtrl swig_types[83]
#define SWIGTYPE_p_wxLayoutAlgorithm swig_types[84]
#define SWIGTYPE_p_wxLayoutConstraints swig_types[85]
#define SWIGTYPE_p_wxListBox swig_types[86]
#define SWIGTYPE_p_wxListEvent swig_types[87]
#define SWIGTYPE_p_wxListItem swig_types[88]
#define SWIGTYPE_p_wxListView swig_types[89]
#define SWIGTYPE_p_wxListbook swig_types[90]
#define SWIGTYPE_p_wxListbookEvent swig_types[91]
#define SWIGTYPE_p_wxMDIChildFrame swig_types[92]
#define SWIGTYPE_p_wxMDIClientWindow swig_types[93]
#define SWIGTYPE_p_wxMDIParentFrame swig_types[94]
#define SWIGTYPE_p_wxMaximizeEvent swig_types[95]
#define SWIGTYPE_p_wxMenu swig_types[96]
#define SWIGTYPE_p_wxMenuBar swig_types[97]
#define SWIGTYPE_p_wxMenuEvent swig_types[98]
#define SWIGTYPE_p_wxMenuItem swig_types[99]
#define SWIGTYPE_p_wxMessageDialog swig_types[100]
#define SWIGTYPE_p_wxMiniFrame swig_types[101]
#define SWIGTYPE_p_wxMouseCaptureChangedEvent swig_types[102]
#define SWIGTYPE_p_wxMouseEvent swig_types[103]
#define SWIGTYPE_p_wxMoveEvent swig_types[104]
#define SWIGTYPE_p_wxMultiChoiceDialog swig_types[105]
#define SWIGTYPE_p_wxNavigationKeyEvent swig_types[106]
#define SWIGTYPE_p_wxNcPaintEvent swig_types[107]
#define SWIGTYPE_p_wxNotebook swig_types[108]
#define SWIGTYPE_p_wxNotebookEvent swig_types[109]
#define SWIGTYPE_p_wxNotifyEvent swig_types[110]
#define SWIGTYPE_p_wxObject swig_types[111]
#define SWIGTYPE_p_wxPCXHandler swig_types[112]
#define SWIGTYPE_p_wxPNGHandler swig_types[113]
#define SWIGTYPE_p_wxPNMHandler swig_types[114]
#define SWIGTYPE_p_wxPageSetupDialog swig_types[115]
#define SWIGTYPE_p_wxPageSetupDialogData swig_types[116]
#define SWIGTYPE_p_wxPaintEvent swig_types[117]
#define SWIGTYPE_p_wxPaletteChangedEvent swig_types[118]
#define SWIGTYPE_p_wxPanel swig_types[119]
#define SWIGTYPE_p_wxPaperSize swig_types[120]
#define SWIGTYPE_p_wxPasswordEntryDialog swig_types[121]
#define SWIGTYPE_p_wxPopupWindow swig_types[122]
#define SWIGTYPE_p_wxPreviewCanvas swig_types[123]
#define SWIGTYPE_p_wxPreviewControlBar swig_types[124]
#define SWIGTYPE_p_wxPreviewFrame swig_types[125]
#define SWIGTYPE_p_wxPrintData swig_types[126]
#define SWIGTYPE_p_wxPrintDialog swig_types[127]
#define SWIGTYPE_p_wxPrintDialogData swig_types[128]
#define SWIGTYPE_p_wxPrintPreview swig_types[129]
#define SWIGTYPE_p_wxPrinter swig_types[130]
#define SWIGTYPE_p_wxProgressDialog swig_types[131]
#define SWIGTYPE_p_wxPyApp swig_types[132]
#define SWIGTYPE_p_wxPyCommandEvent swig_types[133]
#define SWIGTYPE_p_wxPyControl swig_types[134]
#define SWIGTYPE_p_wxPyEvent swig_types[135]
#define SWIGTYPE_p_wxPyHtmlListBox swig_types[136]
#define SWIGTYPE_p_wxPyImageHandler swig_types[137]
#define SWIGTYPE_p_wxPyListCtrl swig_types[138]
#define SWIGTYPE_p_wxPyPanel swig_types[139]
#define SWIGTYPE_p_wxPyPopupTransientWindow swig_types[140]
#define SWIGTYPE_p_wxPyPreviewControlBar swig_types[141]
#define SWIGTYPE_p_wxPyPreviewFrame swig_types[142]
#define SWIGTYPE_p_wxPyPrintPreview swig_types[143]
#define SWIGTYPE_p_wxPyPrintout swig_types[144]
#define SWIGTYPE_p_wxPyScrolledWindow swig_types[145]
#define SWIGTYPE_p_wxPySizer swig_types[146]
#define SWIGTYPE_p_wxPyTaskBarIcon swig_types[147]
#define SWIGTYPE_p_wxPyTreeCompanionWindow swig_types[148]
#define SWIGTYPE_p_wxPyTreeCtrl swig_types[149]
#define SWIGTYPE_p_wxPyTreeItemData swig_types[150]
#define SWIGTYPE_p_wxPyTreeListCtrl swig_types[151]
#define SWIGTYPE_p_wxPyVListBox swig_types[152]
#define SWIGTYPE_p_wxPyVScrolledWindow swig_types[153]
#define SWIGTYPE_p_wxPyValidator swig_types[154]
#define SWIGTYPE_p_wxPyWindow swig_types[155]
#define SWIGTYPE_p_wxQueryLayoutInfoEvent swig_types[156]
#define SWIGTYPE_p_wxQueryNewPaletteEvent swig_types[157]
#define SWIGTYPE_p_wxRadioBox swig_types[158]
#define SWIGTYPE_p_wxRadioButton swig_types[159]
#define SWIGTYPE_p_wxRemotelyScrolledTreeCtrl swig_types[160]
#define SWIGTYPE_p_wxSashEvent swig_types[161]
#define SWIGTYPE_p_wxSashLayoutWindow swig_types[162]
#define SWIGTYPE_p_wxSashWindow swig_types[163]
#define SWIGTYPE_p_wxScrollBar swig_types[164]
#define SWIGTYPE_p_wxScrollEvent swig_types[165]
#define SWIGTYPE_p_wxScrollWinEvent swig_types[166]
#define SWIGTYPE_p_wxScrolledWindow swig_types[167]
#define SWIGTYPE_p_wxSetCursorEvent swig_types[168]
#define SWIGTYPE_p_wxShowEvent swig_types[169]
#define SWIGTYPE_p_wxSingleChoiceDialog swig_types[170]
#define SWIGTYPE_p_wxSizeEvent swig_types[171]
#define SWIGTYPE_p_wxSizer swig_types[172]
#define SWIGTYPE_p_wxSizerItem swig_types[173]
#define SWIGTYPE_p_wxSlider swig_types[174]
#define SWIGTYPE_p_wxSpinButton swig_types[175]
#define SWIGTYPE_p_wxSpinCtrl swig_types[176]
#define SWIGTYPE_p_wxSpinEvent swig_types[177]
#define SWIGTYPE_p_wxSplashScreen swig_types[178]
#define SWIGTYPE_p_wxSplashScreenWindow swig_types[179]
#define SWIGTYPE_p_wxSplitterEvent swig_types[180]
#define SWIGTYPE_p_wxSplitterScrolledWindow swig_types[181]
#define SWIGTYPE_p_wxSplitterWindow swig_types[182]
#define SWIGTYPE_p_wxStaticBitmap swig_types[183]
#define SWIGTYPE_p_wxStaticBox swig_types[184]
#define SWIGTYPE_p_wxStaticBoxSizer swig_types[185]
#define SWIGTYPE_p_wxStaticLine swig_types[186]
#define SWIGTYPE_p_wxStaticPicture swig_types[187]
#define SWIGTYPE_p_wxStaticText swig_types[188]
#define SWIGTYPE_p_wxStatusBar swig_types[189]
#define SWIGTYPE_p_wxStdDialogButtonSizer swig_types[190]
#define SWIGTYPE_p_wxSysColourChangedEvent swig_types[191]
#define SWIGTYPE_p_wxTIFFHandler swig_types[192]
#define SWIGTYPE_p_wxTaskBarIconEvent swig_types[193]
#define SWIGTYPE_p_wxTextCtrl swig_types[194]
#define SWIGTYPE_p_wxTextEntryDialog swig_types[195]
#define SWIGTYPE_p_wxTextUrlEvent swig_types[196]
#define SWIGTYPE_p_wxThinSplitterWindow swig_types[197]
#define SWIGTYPE_p_wxTipWindow swig_types[198]
#define SWIGTYPE_p_wxToggleButton swig_types[199]
#define SWIGTYPE_p_wxToolBar swig_types[200]
#define SWIGTYPE_p_wxToolBarBase swig_types[201]
#define SWIGTYPE_p_wxToolBarToolBase swig_types[202]
#define SWIGTYPE_p_wxToolbook swig_types[203]
#define SWIGTYPE_p_wxToolbookEvent swig_types[204]
#define SWIGTYPE_p_wxTopLevelWindow swig_types[205]
#define SWIGTYPE_p_wxTreeEvent swig_types[206]
#define SWIGTYPE_p_wxTreeItemId swig_types[207]
#define SWIGTYPE_p_wxTreeListColumnInfo swig_types[208]
#define SWIGTYPE_p_wxTreebook swig_types[209]
#define SWIGTYPE_p_wxTreebookEvent swig_types[210]
#define SWIGTYPE_p_wxUpdateUIEvent swig_types[211]
#define SWIGTYPE_p_wxValidator swig_types[212]
#define SWIGTYPE_p_wxWindow swig_types[213]
#define SWIGTYPE_p_wxWindowCreateEvent swig_types[214]
#define SWIGTYPE_p_wxWindowDestroyEvent swig_types[215]
#define SWIGTYPE_p_wxXPMHandler swig_types[216]
#define SWIGTYPE_ptrdiff_t swig_types[217]
#define SWIGTYPE_std__ptrdiff_t swig_types[218]
#define SWIGTYPE_unsigned_int swig_types[219]
static swig_type_info *swig_types[221];
static swig_module_info swig_module = {swig_types, 220, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _gizmos.so
  ------------------------------------------------*/
#define SWIG_init    init_gizmos

#define SWIG_name    "_gizmos"

#include "wx/wxPython/wxPython.h"
#include "wx/wxPython/pyclasses.h"

#include <wx/gizmos/dynamicsash.h>
#include <wx/gizmos/editlbox.h>
#include <wx/gizmos/splittree.h>
#include <wx/gizmos/ledctrl.h>
#include <wx/gizmos/statpict.h>

#include <wx/listctrl.h>
#include <wx/treectrl.h>
#include <wx/imaglist.h>

#include "wx/treelistctrl.h"
#include "wx/wxPython/pytree.h"


 static const wxString wxPyDynamicSashNameStr(wxT("dynamicSashWindow")); 
 static const wxString wxPyEditableListBoxNameStr(wxT("editableListBox")); 
 static const wxString wxPyTreeListCtrlNameStr(wxT("treelistctrl")); 
 static const wxString wxPyStaticPictureNameStr(wxStaticPictureNameStr); 
 static const wxString wxPyEmptyString(wxEmptyString); 

  /*@c:\\PROJECTS\\SWIG-1.3.27\\Lib\\python\\pymacros.swg,72,SWIG_define@*/
#define SWIG_From_int PyInt_FromLong
/*@@*/


#include <limits.h>


SWIGINTERN int
  SWIG_CheckLongInRange(long value, long min_value, long max_value,
			const char *errmsg)
{
  if (value < min_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError, 
		   "value %ld is less than '%s' minimum %ld", 
		   value, errmsg, min_value);
    }
    return 0;    
  } else if (value > max_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError,
		   "value %ld is greater than '%s' maximum %ld", 
		   value, errmsg, max_value);
    }
    return 0;
  }
  return 1;
}


SWIGINTERN int
SWIG_AsVal_long(PyObject* obj, long* val)
{
    if (PyNumber_Check(obj)) {
        if (val) *val = PyInt_AsLong(obj);
        return 1;
    }
    else {
        SWIG_Python_TypeError("number", obj);
    }
    return 0;
}


#if INT_MAX != LONG_MAX
SWIGINTERN int
  SWIG_AsVal_int(PyObject *obj, int *val)
{ 
  const char* errmsg = val ? "int" : (char*)0;
  long v;
  if (SWIG_AsVal_long(obj, &v)) {
    if (SWIG_CheckLongInRange(v, INT_MIN,INT_MAX, errmsg)) {
      if (val) *val = static_cast<int >(v);
      return 1;
    } else {
      return 0;
    }
  } else {
    PyErr_Clear();
  }
  if (val) {
    SWIG_type_error(errmsg, obj);
  }
  return 0;    
}
#else
SWIGINTERNINLINE int
  SWIG_AsVal_int(PyObject *obj, int *val)
{
  return SWIG_AsVal_long(obj,(long*)val);
}
#endif


SWIGINTERNINLINE int
SWIG_As_int(PyObject* obj)
{
  int v;
  if (!SWIG_AsVal_int(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(int));
  }
  return v;
}


SWIGINTERNINLINE long
SWIG_As_long(PyObject* obj)
{
  long v;
  if (!SWIG_AsVal_long(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(long));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_int(PyObject* obj)
{
  return SWIG_AsVal_int(obj, (int*)0);
}

  
SWIGINTERNINLINE int
SWIG_Check_long(PyObject* obj)
{
  return SWIG_AsVal_long(obj, (long*)0);
}

static PyObject *wxEditableListBox_GetStrings(wxEditableListBox *self){
            wxArrayString strings;
            self->GetStrings(strings);
            return wxArrayString2PyList_helper(strings);
        }

    typedef wxTreeCtrl wxPyTreeCtrl;


class wxPyTreeCompanionWindow: public wxTreeCompanionWindow
{
public:
    wxPyTreeCompanionWindow(wxWindow* parent, wxWindowID id = -1,
                            const wxPoint& pos = wxDefaultPosition,
                            const wxSize& size = wxDefaultSize,
                            long style = 0)
        : wxTreeCompanionWindow(parent, id, pos, size, style) {}


    virtual void DrawItem(wxDC& dc, wxTreeItemId id, const wxRect& rect) {
        bool found;
        wxPyBlock_t blocked = wxPyBeginBlockThreads();
        if ((found = wxPyCBH_findCallback(m_myInst, "DrawItem"))) {
            PyObject* dcobj = wxPyMake_wxObject(&dc,false);
            PyObject* idobj = wxPyConstructObject((void*)&id, wxT("wxTreeItemId"), false);
            PyObject* recobj= wxPyConstructObject((void*)&rect, wxT("wxRect"), false);
            wxPyCBH_callCallback(m_myInst, Py_BuildValue("(OOO)", dcobj, idobj, recobj));
            Py_DECREF(dcobj);
            Py_DECREF(idobj);
            Py_DECREF(recobj);
        }
        wxPyEndBlockThreads(blocked);
        if (! found)
            wxTreeCompanionWindow::DrawItem(dc, id, rect);
    }

    PYPRIVATE;
};


SWIGINTERN int
  SWIG_AsVal_bool(PyObject *obj, bool *val)
{
  if (obj == Py_True) {
    if (val) *val = true;
    return 1;
  }
  if (obj == Py_False) {
    if (val) *val = false;
    return 1;
  }
  int res = 0;
  if (SWIG_AsVal_int(obj, &res)) {    
    if (val) *val = res ? true : false;
    return 1;
  } else {
    PyErr_Clear();
  }  
  if (val) {
    SWIG_type_error("bool", obj);
  }
  return 0;
}


SWIGINTERNINLINE bool
SWIG_As_bool(PyObject* obj)
{
  bool v;
  if (!SWIG_AsVal_bool(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(bool));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_bool(PyObject* obj)
{
  return SWIG_AsVal_bool(obj, (bool*)0);
}


SWIGINTERN int 
SWIG_AsVal_unsigned_SS_long(PyObject* obj, unsigned long* val)
{
    long v = 0;
    if (SWIG_AsVal_long(obj, &v) && v < 0) {
        SWIG_Python_TypeError("unsigned number", obj);
    }
    else if (val)
        *val = (unsigned long)v;
    return 1;
}


SWIGINTERNINLINE unsigned long
SWIG_As_unsigned_SS_long(PyObject* obj)
{
  unsigned long v;
  if (!SWIG_AsVal_unsigned_SS_long(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(unsigned long));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_unsigned_SS_long(PyObject* obj)
{
  return SWIG_AsVal_unsigned_SS_long(obj, (unsigned long*)0);
}


SWIGINTERNINLINE PyObject* 
  SWIG_From_unsigned_SS_long(unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) 
    : PyInt_FromLong(static_cast<long >(value)); 
}

 // C++ version of Python aware control
class wxPyTreeListCtrl : public wxTreeListCtrl {
    DECLARE_ABSTRACT_CLASS(wxPyTreeListCtrl);
public:
    wxPyTreeListCtrl() : wxTreeListCtrl() {}
    wxPyTreeListCtrl(wxWindow *parent, wxWindowID id,
                     const wxPoint& pos,
                     const wxSize& size,
                     long style,
                     const wxValidator &validator,
                     const wxString& name) :
        wxTreeListCtrl(parent, id, pos, size, style, validator, name) {}

    int OnCompareItems(const wxTreeItemId& item1,
                       const wxTreeItemId& item2) {
        int rval = 0;
        bool found;
        wxPyBlock_t blocked = wxPyBeginBlockThreads();
        if ((found = wxPyCBH_findCallback(m_myInst, "OnCompareItems"))) {
            PyObject *o1 = wxPyConstructObject((void*)&item1, wxT("wxTreeItemId"), 0);
            PyObject *o2 = wxPyConstructObject((void*)&item2, wxT("wxTreeItemId"), 0);
            rval = wxPyCBH_callCallback(m_myInst, Py_BuildValue("(OO)",o1,o2));
            Py_DECREF(o1);
            Py_DECREF(o2);
        }
        wxPyEndBlockThreads(blocked);
        if (! found)
            rval = wxTreeListCtrl::OnCompareItems(item1, item2);
        return rval;
    }
    PYPRIVATE;
};

IMPLEMENT_ABSTRACT_CLASS(wxPyTreeListCtrl, wxTreeListCtrl)



  /*@c:\\PROJECTS\\SWIG-1.3.27\\Lib\\python\\pymacros.swg,72,SWIG_define@*/
#define SWIG_From_long PyInt_FromLong
/*@@*/


#if UINT_MAX < LONG_MAX
/*@c:\\PROJECTS\\SWIG-1.3.27\\Lib\\python\\pymacros.swg,72,SWIG_define@*/
#define SWIG_From_unsigned_SS_int SWIG_From_long
/*@@*/
#else
/*@c:\\PROJECTS\\SWIG-1.3.27\\Lib\\python\\pymacros.swg,72,SWIG_define@*/
#define SWIG_From_unsigned_SS_int SWIG_From_unsigned_SS_long
/*@@*/
#endif


SWIGINTERNINLINE int
  SWIG_CheckUnsignedLongInRange(unsigned long value,
				unsigned long max_value,
				const char *errmsg) 
{
  if (value > max_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError,
		   "value %lu is greater than '%s' minimum %lu",
		   value, errmsg, max_value);
    }
    return 0;
  }
  return 1;
 }


#if UINT_MAX != ULONG_MAX
SWIGINTERN int
  SWIG_AsVal_unsigned_SS_int(PyObject *obj, unsigned int *val)
{ 
  const char* errmsg = val ? "unsigned int" : (char*)0;
  unsigned long v;
  if (SWIG_AsVal_unsigned_SS_long(obj, &v)) {
    if (SWIG_CheckUnsignedLongInRange(v, INT_MAX, errmsg)) {
      if (val) *val = static_cast<unsigned int >(v);
      return 1;
    }
  } else {
    PyErr_Clear();
  }
  if (val) {
    SWIG_type_error(errmsg, obj);
  }
  return 0;    
}
#else
SWIGINTERNINLINE unsigned int
  SWIG_AsVal_unsigned_SS_int(PyObject *obj, unsigned int *val)
{
  return SWIG_AsVal_unsigned_SS_long(obj,(unsigned long *)val);
}
#endif


SWIGINTERNINLINE unsigned int
SWIG_As_unsigned_SS_int(PyObject* obj)
{
  unsigned int v;
  if (!SWIG_AsVal_unsigned_SS_int(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(unsigned int));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_unsigned_SS_int(PyObject* obj)
{
  return SWIG_AsVal_unsigned_SS_int(obj, (unsigned int*)0);
}

static wxString wxPyTreeListCtrl_GetItemText(wxPyTreeListCtrl *self,wxTreeItemId const &item,int column=-1){
            if (column < 0) column = self->GetMainColumn();
            return self->GetItemText(item, column);
        }
static int wxPyTreeListCtrl_GetItemImage(wxPyTreeListCtrl *self,wxTreeItemId const &item,int column=-1,wxTreeItemIcon which=wxTreeItemIcon_Normal){
            if (column < 0) column = self->GetMainColumn();
            return self->GetItemImage(item, column, which);
        }
static void wxPyTreeListCtrl_SetItemText(wxPyTreeListCtrl *self,wxTreeItemId const &item,wxString const &text,int column=-1){
            if (column < 0) column = self->GetMainColumn();
            self->SetItemText(item, column, text);
        }
static void wxPyTreeListCtrl_SetItemImage(wxPyTreeListCtrl *self,wxTreeItemId const &item,int image,int column=-1,wxTreeItemIcon which=wxTreeItemIcon_Normal){
            if (column < 0) column = self->GetMainColumn();
            self->SetItemImage(item, column, image, which);
        }
static wxPyTreeItemData *wxPyTreeListCtrl_GetItemData(wxPyTreeListCtrl *self,wxTreeItemId const &item){
            wxPyTreeItemData* data = (wxPyTreeItemData*)self->GetItemData(item);
            if (data == NULL) {
                data = new wxPyTreeItemData();
                data->SetId(item); // set the id
                self->SetItemData(item, data);
            }
            return data;
        }
static void wxPyTreeListCtrl_SetItemData(wxPyTreeListCtrl *self,wxTreeItemId const &item,wxPyTreeItemData *data){
            data->SetId(item); // set the id
            self->SetItemData(item, data);
        }
static PyObject *wxPyTreeListCtrl_GetItemPyData(wxPyTreeListCtrl *self,wxTreeItemId const &item){
            wxPyTreeItemData* data = (wxPyTreeItemData*)self->GetItemData(item);
            if (data == NULL) {
                data = new wxPyTreeItemData();
                data->SetId(item); // set the id
                self->SetItemData(item, data);
            }
            return data->GetData();
        }
static void wxPyTreeListCtrl_SetItemPyData(wxPyTreeListCtrl *self,wxTreeItemId const &item,PyObject *obj){
            wxPyTreeItemData* data = (wxPyTreeItemData*)self->GetItemData(item);
            if (data == NULL) {
                data = new wxPyTreeItemData(obj);
                data->SetId(item); // set the id
                self->SetItemData(item, data);
            } else
                data->SetData(obj);
        }
static PyObject *wxPyTreeListCtrl_GetSelections(wxPyTreeListCtrl *self){
            wxPyBlock_t blocked = wxPyBeginBlockThreads();
            PyObject*           rval = PyList_New(0);
            wxArrayTreeItemIds  array;
            size_t              num, x;
            num = self->GetSelections(array);
            for (x=0; x < num; x++) {
                wxTreeItemId *tii = new wxTreeItemId(array.Item(x));
                PyObject* item = wxPyConstructObject((void*)tii, wxT("wxTreeItemId"), true);
                PyList_Append(rval, item);
            }
            wxPyEndBlockThreads(blocked);
            return rval;
        }
static PyObject *wxPyTreeListCtrl_GetFirstChild(wxPyTreeListCtrl *self,wxTreeItemId const &item){
            void* cookie = 0;
            wxTreeItemId* ritem = new wxTreeItemId(self->GetFirstChild(item, cookie));
            wxPyBlock_t blocked = wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, wxPyConstructObject(ritem, wxT("wxTreeItemId"), true));
            PyTuple_SET_ITEM(tup, 1, wxPyMakeSwigPtr(cookie, wxT("void")));
            wxPyEndBlockThreads(blocked);
            return tup;
        }
static PyObject *wxPyTreeListCtrl_GetNextChild(wxPyTreeListCtrl *self,wxTreeItemId const &item,void *cookie){
            wxTreeItemId* ritem = new wxTreeItemId(self->GetNextChild(item, cookie));
            wxPyBlock_t blocked = wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, wxPyConstructObject(ritem, wxT("wxTreeItemId"), true));
            PyTuple_SET_ITEM(tup, 1, wxPyMakeSwigPtr(cookie, wxT("void")));
            wxPyEndBlockThreads(blocked);
            return tup;
        }

    static PyObject* t_output_helper(PyObject* result, PyObject* obj)
    {
        PyObject*   o2;
        PyObject*   o3;
        if (!result) {
            result = obj;
        } else if (result == Py_None) {
            Py_DECREF(result);
            result = obj;
        } else {
            if (!PyTuple_Check(result)) {
                o2 = result;
                result = PyTuple_New(1);
                PyTuple_SET_ITEM(result, 0, o2);
            }
            o3 = PyTuple_New(1);            
            PyTuple_SetItem(o3, 0, obj);      
            o2 = result;
            result = PySequence_Concat(o2, o3); 
            Py_DECREF(o2);                      
            Py_DECREF(o3);
        }
        return result;
    }


static PyObject *wxPyTreeListCtrl_GetBoundingRect(wxPyTreeListCtrl *self,wxTreeItemId const &item,bool textOnly=false){
            wxRect rect;
            if (self->GetBoundingRect(item, rect, textOnly)) {
                wxPyBlock_t blocked = wxPyBeginBlockThreads();
                wxRect* r = new wxRect(rect);
                PyObject* val = wxPyConstructObject((void*)r, wxT("wxRect"), 1);
                wxPyEndBlockThreads(blocked);
                return val;
            }
            else {
                RETURN_NONE();
            }
        }

#include <float.h>
SWIGINTERN int
  SWIG_CheckDoubleInRange(double value, double min_value, 
			  double max_value, const char* errmsg)
{
  if (value < min_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError, 
		   "value %g is less than %s minimum %g", 
		   value, errmsg, min_value);
    }
    return 0;
  } else if (value > max_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError, 
		   "value %g is greater than %s maximum %g", 
		   value, errmsg, max_value);
    }
    return 0;
  }
  return 1;
}


SWIGINTERN int
SWIG_AsVal_double(PyObject *obj, double* val)
{
    if (PyNumber_Check(obj)) {
        if (val) *val = PyFloat_AsDouble(obj);
        return 1;
    }
    else {
        SWIG_Python_TypeError("number", obj);
    }
    return 0;
}


SWIGINTERN int
  SWIG_AsVal_float(PyObject *obj, float *val)
{
  const char* errmsg = val ? "float" : (char*)0;
  double v;
  if (SWIG_AsVal_double(obj, &v)) {
    if (SWIG_CheckDoubleInRange(v, -FLT_MAX, FLT_MAX, errmsg)) {
      if (val) *val = static_cast<float >(v);
      return 1;
    } else {
      return 0;
    }
  } else {
    PyErr_Clear();
  }
  if (val) {
    SWIG_type_error(errmsg, obj);
  }
  return 0;
}


SWIGINTERNINLINE float
SWIG_As_float(PyObject* obj)
{
  float v;
  if (!SWIG_AsVal_float(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(float));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_float(PyObject* obj)
{
  return SWIG_AsVal_float(obj, (float*)0);
}


  /*@c:\\PROJECTS\\SWIG-1.3.27\\Lib\\python\\pymacros.swg,72,SWIG_define@*/
#define SWIG_From_float PyFloat_FromDouble
/*@@*/


#ifdef __cplusplus
extern "C" {
#endif
static int _wrap_DynamicSashNameStr_set(PyObject *) {
    PyErr_SetString(PyExc_TypeError,"Variable DynamicSashNameStr is read-only.");
    return 1;
}


static PyObject *_wrap_DynamicSashNameStr_get(void) {
    PyObject *pyobj = NULL;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyDynamicSashNameStr)->c_str(), (&wxPyDynamicSashNameStr)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyDynamicSashNameStr)->c_str(), (&wxPyDynamicSashNameStr)->Len());
#endif
    }
    return pyobj;
}


static int _wrap_EditableListBoxNameStr_set(PyObject *) {
    PyErr_SetString(PyExc_TypeError,"Variable EditableListBoxNameStr is read-only.");
    return 1;
}


static PyObject *_wrap_EditableListBoxNameStr_get(void) {
    PyObject *pyobj = NULL;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyEditableListBoxNameStr)->c_str(), (&wxPyEditableListBoxNameStr)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyEditableListBoxNameStr)->c_str(), (&wxPyEditableListBoxNameStr)->Len());
#endif
    }
    return pyobj;
}


static int _wrap_TreeListCtrlNameStr_set(PyObject *) {
    PyErr_SetString(PyExc_TypeError,"Variable TreeListCtrlNameStr is read-only.");
    return 1;
}


static PyObject *_wrap_TreeListCtrlNameStr_get(void) {
    PyObject *pyobj = NULL;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyTreeListCtrlNameStr)->c_str(), (&wxPyTreeListCtrlNameStr)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyTreeListCtrlNameStr)->c_str(), (&wxPyTreeListCtrlNameStr)->Len());
#endif
    }
    return pyobj;
}


static int _wrap_StaticPictureNameStr_set(PyObject *) {
    PyErr_SetString(PyExc_TypeError,"Variable StaticPictureNameStr is read-only.");
    return 1;
}


static PyObject *_wrap_StaticPictureNameStr_get(void) {
    PyObject *pyobj = NULL;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyStaticPictureNameStr)->c_str(), (&wxPyStaticPictureNameStr)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyStaticPictureNameStr)->c_str(), (&wxPyStaticPictureNameStr)->Len());
#endif
    }
    return pyobj;
}


static PyObject *_wrap_new_DynamicSashSplitEvent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxObject *arg1 = (wxObject *) 0 ;
    wxDynamicSashSplitEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "target", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:new_DynamicSashSplitEvent",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxObject, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDynamicSashSplitEvent *)new wxDynamicSashSplitEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxDynamicSashSplitEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DynamicSashSplitEvent_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxDynamicSashSplitEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DynamicSashUnifyEvent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxObject *arg1 = (wxObject *) 0 ;
    wxDynamicSashUnifyEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "target", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:new_DynamicSashUnifyEvent",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxObject, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDynamicSashUnifyEvent *)new wxDynamicSashUnifyEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxDynamicSashUnifyEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DynamicSashUnifyEvent_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxDynamicSashUnifyEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DynamicSashWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) -1 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) wxCLIP_CHILDREN|wxDS_MANAGE_SCROLLBARS|wxDS_DRAG_CORNER ;
    wxString const &arg6_defvalue = wxPyDynamicSashNameStr ;
    wxString *arg6 = (wxString *) &arg6_defvalue ;
    wxDynamicSashWindow *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    bool temp6 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOOO:new_DynamicSashWindow",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<long >(SWIG_As_long(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = wxString_in_helper(obj5);
            if (arg6 == NULL) SWIG_fail;
            temp6 = true;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDynamicSashWindow *)new wxDynamicSashWindow(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5,(wxString const &)*arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxDynamicSashWindow, 1);
    {
        if (temp6)
        delete arg6;
    }
    return resultobj;
    fail:
    {
        if (temp6)
        delete arg6;
    }
    return NULL;
}


static PyObject *_wrap_new_PreDynamicSashWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxDynamicSashWindow *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PreDynamicSashWindow",kwnames)) goto fail;
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDynamicSashWindow *)new wxDynamicSashWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxDynamicSashWindow, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DynamicSashWindow_Create(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxDynamicSashWindow *arg1 = (wxDynamicSashWindow *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 = (int) -1 ;
    wxPoint const &arg4_defvalue = wxDefaultPosition ;
    wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
    wxSize const &arg5_defvalue = wxDefaultSize ;
    wxSize *arg5 = (wxSize *) &arg5_defvalue ;
    long arg6 = (long) wxCLIP_CHILDREN|wxDS_MANAGE_SCROLLBARS|wxDS_DRAG_CORNER ;
    wxString const &arg7_defvalue = wxPyDynamicSashNameStr ;
    wxString *arg7 = (wxString *) &arg7_defvalue ;
    bool result;
    wxPoint temp4 ;
    wxSize temp5 ;
    bool temp7 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOOO:DynamicSashWindow_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDynamicSashWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (obj2) {
        {
            arg3 = static_cast<int >(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = static_cast<long >(SWIG_As_long(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = wxString_in_helper(obj6);
            if (arg7 == NULL) SWIG_fail;
            temp7 = true;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Create(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxString const &)*arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp7)
        delete arg7;
    }
    return resultobj;
    fail:
    {
        if (temp7)
        delete arg7;
    }
    return NULL;
}


static PyObject *_wrap_DynamicSashWindow_GetHScrollBar(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxDynamicSashWindow *arg1 = (wxDynamicSashWindow *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxScrollBar *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "child", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DynamicSashWindow_GetHScrollBar",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDynamicSashWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxScrollBar *)((wxDynamicSashWindow const *)arg1)->GetHScrollBar((wxWindow const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxScrollBar, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DynamicSashWindow_GetVScrollBar(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxDynamicSashWindow *arg1 = (wxDynamicSashWindow *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxScrollBar *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "child", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DynamicSashWindow_GetVScrollBar",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDynamicSashWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxScrollBar *)((wxDynamicSashWindow const *)arg1)->GetVScrollBar((wxWindow const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxScrollBar, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DynamicSashWindow_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxDynamicSashWindow, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_EditableListBox(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) -1 ;
    wxString const &arg3_defvalue = wxPyEmptyString ;
    wxString *arg3 = (wxString *) &arg3_defvalue ;
    wxPoint const &arg4_defvalue = wxDefaultPosition ;
    wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
    wxSize const &arg5_defvalue = wxDefaultSize ;
    wxSize *arg5 = (wxSize *) &arg5_defvalue ;
    long arg6 = (long) wxEL_ALLOW_NEW|wxEL_ALLOW_EDIT|wxEL_ALLOW_DELETE ;
    wxString const &arg7_defvalue = wxPyEditableListBoxNameStr ;
    wxString *arg7 = (wxString *) &arg7_defvalue ;
    wxEditableListBox *result;
    bool temp3 = false ;
    wxPoint temp4 ;
    wxSize temp5 ;
    bool temp7 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "label",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOOOO:new_EditableListBox",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = wxString_in_helper(obj2);
            if (arg3 == NULL) SWIG_fail;
            temp3 = true;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = static_cast<long >(SWIG_As_long(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = wxString_in_helper(obj6);
            if (arg7 == NULL) SWIG_fail;
            temp7 = true;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEditableListBox *)new wxEditableListBox(arg1,arg2,(wxString const &)*arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxString const &)*arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxEditableListBox, 1);
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp7)
        delete arg7;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp7)
        delete arg7;
    }
    return NULL;
}


static PyObject *_wrap_EditableListBox_SetStrings(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxEditableListBox *arg1 = (wxEditableListBox *) 0 ;
    wxArrayString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "strings", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:EditableListBox_SetStrings",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxEditableListBox, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        if (! PySequence_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
            SWIG_fail;
        }
        arg2 = new wxArrayString;
        temp2 = true;
        int i, len=PySequence_Length(obj1);
        for (i=0; i<len; i++) {
            PyObject* item = PySequence_GetItem(obj1, i);
            wxString* s = wxString_in_helper(item);
            if (PyErr_Occurred())  SWIG_fail;
            arg2->Add(*s);
            delete s;
            Py_DECREF(item);
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetStrings((wxArrayString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2) delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2) delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_EditableListBox_GetStrings(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxEditableListBox *arg1 = (wxEditableListBox *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EditableListBox_GetStrings",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxEditableListBox, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxEditableListBox_GetStrings(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EditableListBox_GetListCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxEditableListBox *arg1 = (wxEditableListBox *) 0 ;
    wxPyListCtrl *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EditableListBox_GetListCtrl",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxEditableListBox, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyListCtrl *)(arg1)->GetListCtrl();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyListCtrl, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EditableListBox_GetDelButton(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxEditableListBox *arg1 = (wxEditableListBox *) 0 ;
    wxBitmapButton *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EditableListBox_GetDelButton",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxEditableListBox, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxBitmapButton *)(arg1)->GetDelButton();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EditableListBox_GetNewButton(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxEditableListBox *arg1 = (wxEditableListBox *) 0 ;
    wxBitmapButton *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EditableListBox_GetNewButton",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxEditableListBox, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxBitmapButton *)(arg1)->GetNewButton();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EditableListBox_GetUpButton(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxEditableListBox *arg1 = (wxEditableListBox *) 0 ;
    wxBitmapButton *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EditableListBox_GetUpButton",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxEditableListBox, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxBitmapButton *)(arg1)->GetUpButton();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EditableListBox_GetDownButton(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxEditableListBox *arg1 = (wxEditableListBox *) 0 ;
    wxBitmapButton *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EditableListBox_GetDownButton",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxEditableListBox, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxBitmapButton *)(arg1)->GetDownButton();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EditableListBox_GetEditButton(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxEditableListBox *arg1 = (wxEditableListBox *) 0 ;
    wxBitmapButton *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EditableListBox_GetEditButton",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxEditableListBox, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxBitmapButton *)(arg1)->GetEditButton();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * EditableListBox_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxEditableListBox, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_RemotelyScrolledTreeCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) wxTR_HAS_BUTTONS ;
    wxRemotelyScrolledTreeCtrl *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOO:new_RemotelyScrolledTreeCtrl",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<long >(SWIG_As_long(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxRemotelyScrolledTreeCtrl *)new wxRemotelyScrolledTreeCtrl(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RemotelyScrolledTreeCtrl_HideVScrollbar(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxRemotelyScrolledTreeCtrl *arg1 = (wxRemotelyScrolledTreeCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:RemotelyScrolledTreeCtrl_HideVScrollbar",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->HideVScrollbar();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RemotelyScrolledTreeCtrl_AdjustRemoteScrollbars(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxRemotelyScrolledTreeCtrl *arg1 = (wxRemotelyScrolledTreeCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:RemotelyScrolledTreeCtrl_AdjustRemoteScrollbars",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AdjustRemoteScrollbars();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RemotelyScrolledTreeCtrl_GetScrolledWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxRemotelyScrolledTreeCtrl *arg1 = (wxRemotelyScrolledTreeCtrl *) 0 ;
    wxScrolledWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:RemotelyScrolledTreeCtrl_GetScrolledWindow",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxScrolledWindow *)((wxRemotelyScrolledTreeCtrl const *)arg1)->GetScrolledWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RemotelyScrolledTreeCtrl_ScrollToLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxRemotelyScrolledTreeCtrl *arg1 = (wxRemotelyScrolledTreeCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "posHoriz",(char *) "posVert", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:RemotelyScrolledTreeCtrl_ScrollToLine",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ScrollToLine(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RemotelyScrolledTreeCtrl_SetCompanionWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxRemotelyScrolledTreeCtrl *arg1 = (wxRemotelyScrolledTreeCtrl *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "companion", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RemotelyScrolledTreeCtrl_SetCompanionWindow",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCompanionWindow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RemotelyScrolledTreeCtrl_GetCompanionWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxRemotelyScrolledTreeCtrl *arg1 = (wxRemotelyScrolledTreeCtrl *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:RemotelyScrolledTreeCtrl_GetCompanionWindow",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxRemotelyScrolledTreeCtrl const *)arg1)->GetCompanionWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RemotelyScrolledTreeCtrl_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_TreeCompanionWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) -1 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) 0 ;
    wxPyTreeCompanionWindow *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOO:new_TreeCompanionWindow",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<long >(SWIG_As_long(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyTreeCompanionWindow *)new wxPyTreeCompanionWindow(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyTreeCompanionWindow, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeCompanionWindow__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeCompanionWindow *arg1 = (wxPyTreeCompanionWindow *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeCompanionWindow__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeCompanionWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeCompanionWindow_GetTreeCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeCompanionWindow *arg1 = (wxPyTreeCompanionWindow *) 0 ;
    wxRemotelyScrolledTreeCtrl *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeCompanionWindow_GetTreeCtrl",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeCompanionWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxRemotelyScrolledTreeCtrl *)((wxPyTreeCompanionWindow const *)arg1)->GetTreeCtrl();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeCompanionWindow_SetTreeCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeCompanionWindow *arg1 = (wxPyTreeCompanionWindow *) 0 ;
    wxRemotelyScrolledTreeCtrl *arg2 = (wxRemotelyScrolledTreeCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "treeCtrl", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeCompanionWindow_SetTreeCtrl",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeCompanionWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxRemotelyScrolledTreeCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTreeCtrl(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * TreeCompanionWindow_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyTreeCompanionWindow, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ThinSplitterWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) -1 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) wxSP_3D|wxCLIP_CHILDREN ;
    wxThinSplitterWindow *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOO:new_ThinSplitterWindow",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<long >(SWIG_As_long(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxThinSplitterWindow *)new wxThinSplitterWindow(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxThinSplitterWindow, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ThinSplitterWindow_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxThinSplitterWindow, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_SplitterScrolledWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) -1 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) 0 ;
    wxSplitterScrolledWindow *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOO:new_SplitterScrolledWindow",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<long >(SWIG_As_long(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSplitterScrolledWindow *)new wxSplitterScrolledWindow(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxSplitterScrolledWindow, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SplitterScrolledWindow_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxSplitterScrolledWindow, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_LEDNumberCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) -1 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) wxLED_ALIGN_LEFT|wxLED_DRAW_FADED ;
    wxLEDNumberCtrl *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOO:new_LEDNumberCtrl",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<long >(SWIG_As_long(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxLEDNumberCtrl *)new wxLEDNumberCtrl(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxLEDNumberCtrl, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_PreLEDNumberCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxLEDNumberCtrl *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PreLEDNumberCtrl",kwnames)) goto fail;
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxLEDNumberCtrl *)new wxLEDNumberCtrl();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxLEDNumberCtrl, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LEDNumberCtrl_Create(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxLEDNumberCtrl *arg1 = (wxLEDNumberCtrl *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 = (int) -1 ;
    wxPoint const &arg4_defvalue = wxDefaultPosition ;
    wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
    wxSize const &arg5_defvalue = wxDefaultSize ;
    wxSize *arg5 = (wxSize *) &arg5_defvalue ;
    long arg6 = (long) wxLED_ALIGN_LEFT|wxLED_DRAW_FADED ;
    bool result;
    wxPoint temp4 ;
    wxSize temp5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOO:LEDNumberCtrl_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxLEDNumberCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (obj2) {
        {
            arg3 = static_cast<int >(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = static_cast<long >(SWIG_As_long(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Create(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LEDNumberCtrl_GetAlignment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxLEDNumberCtrl *arg1 = (wxLEDNumberCtrl *) 0 ;
    wxLEDValueAlign result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LEDNumberCtrl_GetAlignment",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxLEDNumberCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxLEDValueAlign)((wxLEDNumberCtrl const *)arg1)->GetAlignment();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LEDNumberCtrl_GetDrawFaded(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxLEDNumberCtrl *arg1 = (wxLEDNumberCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LEDNumberCtrl_GetDrawFaded",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxLEDNumberCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxLEDNumberCtrl const *)arg1)->GetDrawFaded();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LEDNumberCtrl_GetValue(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxLEDNumberCtrl *arg1 = (wxLEDNumberCtrl *) 0 ;
    wxString *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LEDNumberCtrl_GetValue",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxLEDNumberCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxString const &_result_ref = ((wxLEDNumberCtrl const *)arg1)->GetValue();
            result = (wxString *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
        resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LEDNumberCtrl_SetAlignment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxLEDNumberCtrl *arg1 = (wxLEDNumberCtrl *) 0 ;
    wxLEDValueAlign arg2 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "Alignment",(char *) "Redraw", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:LEDNumberCtrl_SetAlignment",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxLEDNumberCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<wxLEDValueAlign >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAlignment(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LEDNumberCtrl_SetDrawFaded(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxLEDNumberCtrl *arg1 = (wxLEDNumberCtrl *) 0 ;
    bool arg2 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "DrawFaded",(char *) "Redraw", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:LEDNumberCtrl_SetDrawFaded",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxLEDNumberCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDrawFaded(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LEDNumberCtrl_SetValue(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxLEDNumberCtrl *arg1 = (wxLEDNumberCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool arg3 = (bool) true ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "Value",(char *) "Redraw", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:LEDNumberCtrl_SetValue",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxLEDNumberCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    if (obj2) {
        {
            arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetValue((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject * LEDNumberCtrl_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxLEDNumberCtrl, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_TreeListColumnInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxString const &arg1_defvalue = wxPyEmptyString ;
    wxString *arg1 = (wxString *) &arg1_defvalue ;
    int arg2 = (int) -1 ;
    size_t arg3 = (size_t) 100 ;
    bool arg4 = (bool) true ;
    wxTreeListColumnAlign arg5 = (wxTreeListColumnAlign) wxTL_ALIGN_LEFT ;
    wxTreeListColumnInfo *result;
    bool temp1 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "text",(char *) "image",(char *) "width",(char *) "shown",(char *) "alignment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOO:new_TreeListColumnInfo",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if (obj0) {
        {
            arg1 = wxString_in_helper(obj0);
            if (arg1 == NULL) SWIG_fail;
            temp1 = true;
        }
    }
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<wxTreeListColumnAlign >(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxTreeListColumnInfo *)new wxTreeListColumnInfo((wxString const &)*arg1,arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxTreeListColumnInfo, 1);
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_GetShown(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListColumnInfo_GetShown",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxTreeListColumnInfo const *)arg1)->GetShown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_GetAlignment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    wxTreeListColumnAlign result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListColumnInfo_GetAlignment",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxTreeListColumnAlign)((wxTreeListColumnInfo const *)arg1)->GetAlignment();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_GetText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListColumnInfo_GetText",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxTreeListColumnInfo const *)arg1)->GetText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_GetImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListColumnInfo_GetImage",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxTreeListColumnInfo const *)arg1)->GetImage();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_GetSelectedImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListColumnInfo_GetSelectedImage",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxTreeListColumnInfo const *)arg1)->GetSelectedImage();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_GetWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListColumnInfo_GetWidth",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (size_t)((wxTreeListColumnInfo const *)arg1)->GetWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_unsigned_SS_long(static_cast<unsigned long >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_SetShown(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListColumnInfo_SetShown",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetShown(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_SetAlignment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    wxTreeListColumnAlign arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "alignment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListColumnInfo_SetAlignment",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<wxTreeListColumnAlign >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAlignment(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_SetText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListColumnInfo_SetText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_SetImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "image", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListColumnInfo_SetImage",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetImage(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_SetSelectedImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "image", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListColumnInfo_SetSelectedImage",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSelectedImage(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListColumnInfo_SetWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxTreeListColumnInfo *arg1 = (wxTreeListColumnInfo *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "with", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListColumnInfo_SetWidth",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWidth(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * TreeListColumnInfo_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxTreeListColumnInfo, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_TreeListCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) -1 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) wxTR_DEFAULT_STYLE ;
    wxValidator const &arg6_defvalue = wxDefaultValidator ;
    wxValidator *arg6 = (wxValidator *) &arg6_defvalue ;
    wxString const &arg7_defvalue = wxPyTreeListCtrlNameStr ;
    wxString *arg7 = (wxString *) &arg7_defvalue ;
    wxPyTreeListCtrl *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    bool temp7 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "validator",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOOOO:new_TreeListCtrl",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<long >(SWIG_As_long(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_wxValidator, SWIG_POINTER_EXCEPTION | 0);
            if (SWIG_arg_fail(6)) SWIG_fail;
            if (arg6 == NULL) {
                SWIG_null_ref("wxValidator");
            }
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = wxString_in_helper(obj6);
            if (arg7 == NULL) SWIG_fail;
            temp7 = true;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyTreeListCtrl *)new wxPyTreeListCtrl(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5,(wxValidator const &)*arg6,(wxString const &)*arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyTreeListCtrl, 1);
    {
        if (temp7)
        delete arg7;
    }
    return resultobj;
    fail:
    {
        if (temp7)
        delete arg7;
    }
    return NULL;
}


static PyObject *_wrap_new_PreTreeListCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PreTreeListCtrl",kwnames)) goto fail;
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyTreeListCtrl *)new wxPyTreeListCtrl();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyTreeListCtrl, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_Create(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 = (int) -1 ;
    wxPoint const &arg4_defvalue = wxDefaultPosition ;
    wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
    wxSize const &arg5_defvalue = wxDefaultSize ;
    wxSize *arg5 = (wxSize *) &arg5_defvalue ;
    long arg6 = (long) wxTR_DEFAULT_STYLE ;
    wxValidator const &arg7_defvalue = wxDefaultValidator ;
    wxValidator *arg7 = (wxValidator *) &arg7_defvalue ;
    wxString const &arg8_defvalue = wxPyTreeListCtrlNameStr ;
    wxString *arg8 = (wxString *) &arg8_defvalue ;
    bool result;
    wxPoint temp4 ;
    wxSize temp5 ;
    bool temp8 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "validator",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOOOO:TreeListCtrl_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (obj2) {
        {
            arg3 = static_cast<int >(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = static_cast<long >(SWIG_As_long(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            SWIG_Python_ConvertPtr(obj6, (void **)&arg7, SWIGTYPE_p_wxValidator, SWIG_POINTER_EXCEPTION | 0);
            if (SWIG_arg_fail(7)) SWIG_fail;
            if (arg7 == NULL) {
                SWIG_null_ref("wxValidator");
            }
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    if (obj7) {
        {
            arg8 = wxString_in_helper(obj7);
            if (arg8 == NULL) SWIG_fail;
            temp8 = true;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Create(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxValidator const &)*arg7,(wxString const &)*arg8);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp8)
        delete arg8;
    }
    return resultobj;
    fail:
    {
        if (temp8)
        delete arg8;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetCount(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetCount",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (size_t)((wxPyTreeListCtrl const *)arg1)->GetCount();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_unsigned_SS_long(static_cast<unsigned long >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetIndent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetIndent",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned int)((wxPyTreeListCtrl const *)arg1)->GetIndent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_unsigned_SS_int(static_cast<unsigned int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetIndent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "indent", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_SetIndent",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<unsigned int >(SWIG_As_unsigned_SS_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetIndent(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetLineSpacing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetLineSpacing",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned int)((wxPyTreeListCtrl const *)arg1)->GetLineSpacing();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_unsigned_SS_int(static_cast<unsigned int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetLineSpacing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "spacing", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_SetLineSpacing",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<unsigned int >(SWIG_As_unsigned_SS_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLineSpacing(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetImageList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxImageList *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetImageList",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImageList *)((wxPyTreeListCtrl const *)arg1)->GetImageList();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, (bool)0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetStateImageList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxImageList *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetStateImageList",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImageList *)((wxPyTreeListCtrl const *)arg1)->GetStateImageList();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, (bool)0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetButtonsImageList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxImageList *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetButtonsImageList",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImageList *)((wxPyTreeListCtrl const *)arg1)->GetButtonsImageList();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, (bool)0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetImageList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxImageList *arg2 = (wxImageList *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "imageList", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_SetImageList",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxImageList, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetImageList(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetStateImageList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxImageList *arg2 = (wxImageList *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "imageList", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_SetStateImageList",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxImageList, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetStateImageList(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetButtonsImageList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxImageList *arg2 = (wxImageList *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "imageList", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_SetButtonsImageList",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxImageList, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetButtonsImageList(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_AssignImageList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxImageList *arg2 = (wxImageList *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "imageList", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_AssignImageList",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxImageList, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AssignImageList(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_AssignStateImageList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxImageList *arg2 = (wxImageList *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "imageList", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_AssignStateImageList",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxImageList, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AssignStateImageList(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_AssignButtonsImageList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxImageList *arg2 = (wxImageList *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "imageList", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_AssignButtonsImageList",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxImageList, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AssignButtonsImageList(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_AddColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_AddColumn",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddColumn((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_AddColumnInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeListColumnInfo *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "col", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_AddColumnInfo",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeListColumnInfo");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddColumn((wxTreeListColumnInfo const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_InsertColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "before",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_InsertColumn",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->InsertColumn(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_InsertColumnInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    wxTreeListColumnInfo *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "before",(char *) "col", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_InsertColumnInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("wxTreeListColumnInfo");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->InsertColumn(arg2,(wxTreeListColumnInfo const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_RemoveColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_RemoveColumn",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveColumn(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetColumnCount(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetColumnCount",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (size_t)((wxPyTreeListCtrl const *)arg1)->GetColumnCount();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_unsigned_SS_long(static_cast<unsigned long >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetColumnWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    size_t arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column",(char *) "width", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetColumnWidth",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetColumnWidth(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetColumnWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetColumnWidth",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxPyTreeListCtrl const *)arg1)->GetColumnWidth(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetMainColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_SetMainColumn",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMainColumn(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetMainColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetMainColumn",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (size_t)((wxPyTreeListCtrl const *)arg1)->GetMainColumn();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_unsigned_SS_long(static_cast<unsigned long >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetColumnText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetColumnText",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetColumnText(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetColumnText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetColumnText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetColumnText(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    wxTreeListColumnInfo *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column",(char *) "info", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetColumn",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxTreeListColumnInfo, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("wxTreeListColumnInfo");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetColumn(arg2,(wxTreeListColumnInfo const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    wxTreeListColumnInfo *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetColumn",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxTreeListColumnInfo &_result_ref = (arg1)->GetColumn(arg2);
            result = (wxTreeListColumnInfo *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxTreeListColumnInfo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetColumnAlignment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    wxTreeListColumnAlign arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column",(char *) "align", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetColumnAlignment",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<wxTreeListColumnAlign >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetColumnAlignment(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetColumnAlignment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    wxTreeListColumnAlign result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetColumnAlignment",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxTreeListColumnAlign)((wxPyTreeListCtrl const *)arg1)->GetColumnAlignment(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetColumnImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column",(char *) "image", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetColumnImage",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetColumnImage(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetColumnImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetColumnImage",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxPyTreeListCtrl const *)arg1)->GetColumnImage(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_ShowColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column",(char *) "shown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_ShowColumn",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ShowColumn(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_IsColumnShown(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    size_t arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_IsColumnShown",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyTreeListCtrl const *)arg1)->IsColumnShown(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetItemText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    int arg3 = (int) -1 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:TreeListCtrl_GetItemText",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<int >(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = wxPyTreeListCtrl_GetItemText(arg1,(wxTreeItemId const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetItemImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    int arg3 = (int) -1 ;
    wxTreeItemIcon arg4 = (wxTreeItemIcon) wxTreeItemIcon_Normal ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "column",(char *) "which", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:TreeListCtrl_GetItemImage",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<int >(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = static_cast<wxTreeItemIcon >(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxPyTreeListCtrl_GetItemImage(arg1,(wxTreeItemId const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetItemText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxString *arg3 = 0 ;
    int arg4 = (int) -1 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "text",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:TreeListCtrl_SetItemText",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    if (obj3) {
        {
            arg4 = static_cast<int >(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyTreeListCtrl_SetItemText(arg1,(wxTreeItemId const &)*arg2,(wxString const &)*arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetItemImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    int arg3 ;
    int arg4 = (int) -1 ;
    wxTreeItemIcon arg5 = (wxTreeItemIcon) wxTreeItemIcon_Normal ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "image",(char *) "column",(char *) "which", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:TreeListCtrl_SetItemImage",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = static_cast<int >(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<wxTreeItemIcon >(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyTreeListCtrl_SetItemImage(arg1,(wxTreeItemId const &)*arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetItemData(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxPyTreeItemData *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetItemData",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyTreeItemData *)wxPyTreeListCtrl_GetItemData(arg1,(wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyTreeItemData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetItemData(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxPyTreeItemData *arg3 = (wxPyTreeItemData *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetItemData",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxPyTreeItemData, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyTreeListCtrl_SetItemData(arg1,(wxTreeItemId const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetItemPyData(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetItemPyData",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyTreeListCtrl_GetItemPyData(arg1,(wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetItemPyData(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "obj", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetItemPyData",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyTreeListCtrl_SetItemPyData(arg1,(wxTreeItemId const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetItemHasChildren(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "has", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:TreeListCtrl_SetItemHasChildren",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetItemHasChildren((wxTreeItemId const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetItemBold(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "bold", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:TreeListCtrl_SetItemBold",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetItemBold((wxTreeItemId const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetItemTextColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetItemTextColour",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetItemTextColour((wxTreeItemId const &)*arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetItemBackgroundColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetItemBackgroundColour",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetItemBackgroundColour((wxTreeItemId const &)*arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SetItemFont(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxFont *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "font", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_SetItemFont",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxFont, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("wxFont");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetItemFont((wxTreeItemId const &)*arg2,(wxFont const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetItemBold(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetItemBold",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyTreeListCtrl const *)arg1)->GetItemBold((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetItemTextColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetItemTextColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetItemTextColour((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour(static_cast<wxColour & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetItemBackgroundColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetItemBackgroundColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetItemBackgroundColour((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour(static_cast<wxColour & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetItemFont(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxFont result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetItemFont",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetItemFont((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxFont * resultptr;
        resultptr = new wxFont(static_cast<wxFont & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxFont, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_IsVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_IsVisible",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyTreeListCtrl const *)arg1)->IsVisible((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_ItemHasChildren(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_ItemHasChildren",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyTreeListCtrl const *)arg1)->ItemHasChildren((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_IsExpanded(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_IsExpanded",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyTreeListCtrl const *)arg1)->IsExpanded((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_IsSelected(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_IsSelected",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyTreeListCtrl const *)arg1)->IsSelected((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_IsBold(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_IsBold",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyTreeListCtrl const *)arg1)->IsBold((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetChildrenCount(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool arg3 = (bool) true ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "recursively", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:TreeListCtrl_GetChildrenCount",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (size_t)(arg1)->GetChildrenCount((wxTreeItemId const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_unsigned_SS_long(static_cast<unsigned long >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetRootItem(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetRootItem",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetRootItem();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetSelection(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetSelection",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetSelection();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetSelections(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetSelections",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyTreeListCtrl_GetSelections(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetItemParent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetItemParent",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetItemParent((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetFirstChild(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetFirstChild",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyTreeListCtrl_GetFirstChild(arg1,(wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetNextChild(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    void *arg3 = (void *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "cookie", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TreeListCtrl_GetNextChild",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        if ((SWIG_ConvertPtr(obj2,reinterpret_cast<void ** >(&arg3),0,SWIG_POINTER_EXCEPTION|0))== -1) {
            SWIG_arg_fail(3);SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyTreeListCtrl_GetNextChild(arg1,(wxTreeItemId const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetLastChild(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetLastChild",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetLastChild((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetNextSibling(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetNextSibling",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetNextSibling((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetPrevSibling(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetPrevSibling",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetPrevSibling((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetFirstVisibleItem(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetFirstVisibleItem",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetFirstVisibleItem();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetNextVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetNextVisible",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetNextVisible((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetPrevVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetPrevVisible",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetPrevVisible((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetNext(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxTreeItemId result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_GetNext",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyTreeListCtrl const *)arg1)->GetNext((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_AddRoot(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 = (int) -1 ;
    int arg4 = (int) -1 ;
    wxPyTreeItemData *arg5 = (wxPyTreeItemData *) NULL ;
    wxTreeItemId result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text",(char *) "image",(char *) "selectedImage",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOO:TreeListCtrl_AddRoot",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    if (obj2) {
        {
            arg3 = static_cast<int >(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = static_cast<int >(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_wxPyTreeItemData, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->AddRoot((wxString const &)*arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_PrependItem(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxString *arg3 = 0 ;
    int arg4 = (int) -1 ;
    int arg5 = (int) -1 ;
    wxPyTreeItemData *arg6 = (wxPyTreeItemData *) NULL ;
    wxTreeItemId result;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "text",(char *) "image",(char *) "selectedImage",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OOO:TreeListCtrl_PrependItem",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    if (obj3) {
        {
            arg4 = static_cast<int >(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<int >(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_wxPyTreeItemData, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->PrependItem((wxTreeItemId const &)*arg2,(wxString const &)*arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_InsertItem(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxTreeItemId *arg3 = 0 ;
    wxString *arg4 = 0 ;
    int arg5 = (int) -1 ;
    int arg6 = (int) -1 ;
    wxPyTreeItemData *arg7 = (wxPyTreeItemData *) NULL ;
    wxTreeItemId result;
    bool temp4 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "idPrevious",(char *) "text",(char *) "image",(char *) "selectedImage",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OOO:TreeListCtrl_InsertItem",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = true;
    }
    if (obj4) {
        {
            arg5 = static_cast<int >(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = static_cast<int >(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        SWIG_Python_ConvertPtr(obj6, (void **)&arg7, SWIGTYPE_p_wxPyTreeItemData, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(7)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->InsertItem((wxTreeItemId const &)*arg2,(wxTreeItemId const &)*arg3,(wxString const &)*arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_InsertItemBefore(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    size_t arg3 ;
    wxString *arg4 = 0 ;
    int arg5 = (int) -1 ;
    int arg6 = (int) -1 ;
    wxPyTreeItemData *arg7 = (wxPyTreeItemData *) NULL ;
    wxTreeItemId result;
    bool temp4 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "index",(char *) "text",(char *) "image",(char *) "selectedImage",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OOO:TreeListCtrl_InsertItemBefore",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<size_t >(SWIG_As_unsigned_SS_long(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = true;
    }
    if (obj4) {
        {
            arg5 = static_cast<int >(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = static_cast<int >(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        SWIG_Python_ConvertPtr(obj6, (void **)&arg7, SWIGTYPE_p_wxPyTreeItemData, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(7)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->InsertItem((wxTreeItemId const &)*arg2,arg3,(wxString const &)*arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_AppendItem(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxString *arg3 = 0 ;
    int arg4 = (int) -1 ;
    int arg5 = (int) -1 ;
    wxPyTreeItemData *arg6 = (wxPyTreeItemData *) NULL ;
    wxTreeItemId result;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "text",(char *) "image",(char *) "selectedImage",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OOO:TreeListCtrl_AppendItem",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    if (obj3) {
        {
            arg4 = static_cast<int >(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<int >(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_wxPyTreeItemData, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->AppendItem((wxTreeItemId const &)*arg2,(wxString const &)*arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_Delete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_Delete",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Delete((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_DeleteChildren(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_DeleteChildren",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteChildren((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_DeleteAllItems(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_DeleteAllItems",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteAllItems();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_Expand(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_Expand",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Expand((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_ExpandAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_ExpandAll",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ExpandAll((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_Collapse(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_Collapse",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Collapse((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_CollapseAndReset(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_CollapseAndReset",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CollapseAndReset((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_Toggle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_Toggle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Toggle((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_Unselect(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_Unselect",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Unselect();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_UnselectAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_UnselectAll",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->UnselectAll();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SelectItem(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool arg3 = (bool) true ;
    bool arg4 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "unselect_others",(char *) "extended_select", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:TreeListCtrl_SelectItem",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SelectItem((wxTreeItemId const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SelectAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    bool arg2 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "extended_select", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:TreeListCtrl_SelectAll",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SelectAll(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_EnsureVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_EnsureVisible",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EnsureVisible((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_ScrollTo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_ScrollTo",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ScrollTo((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_HitTest(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxPoint *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    wxTreeItemId result;
    wxPoint temp2 ;
    int temp3 ;
    int res3 = 0 ;
    int temp4 ;
    int res4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "point", NULL 
    };
    
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_HitTest",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->HitTest((wxPoint const &)*arg2,*arg3,*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_int, 0)));
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_int, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetBoundingRect(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    bool arg3 = (bool) false ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "textOnly", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:TreeListCtrl_GetBoundingRect",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyTreeListCtrl_GetBoundingRect(arg1,(wxTreeItemId const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_EditLabel(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_EditLabel",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EditLabel((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_Edit(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_Edit",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Edit((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_SortChildren(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TreeListCtrl_SortChildren",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SortChildren((wxTreeItemId const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_FindItem(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxTreeItemId *arg2 = 0 ;
    wxString *arg3 = 0 ;
    int arg4 = (int) 0 ;
    wxTreeItemId result;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "str",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:TreeListCtrl_FindItem",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxTreeItemId, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxTreeItemId");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    if (obj3) {
        {
            arg4 = static_cast<int >(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->FindItem((wxTreeItemId const &)*arg2,(wxString const &)*arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxTreeItemId * resultptr;
        resultptr = new wxTreeItemId(static_cast<wxTreeItemId & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxTreeItemId, 1);
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetHeaderWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetHeaderWindow",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxPyTreeListCtrl const *)arg1)->GetHeaderWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TreeListCtrl_GetMainWindow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxPyTreeListCtrl *arg1 = (wxPyTreeListCtrl *) 0 ;
    wxScrolledWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:TreeListCtrl_GetMainWindow",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTreeListCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxScrolledWindow *)((wxPyTreeListCtrl const *)arg1)->GetMainWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * TreeListCtrl_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyTreeListCtrl, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_StaticPicture(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) -1 ;
    wxBitmap const &arg3_defvalue = wxNullBitmap ;
    wxBitmap *arg3 = (wxBitmap *) &arg3_defvalue ;
    wxPoint const &arg4_defvalue = wxDefaultPosition ;
    wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
    wxSize const &arg5_defvalue = wxDefaultSize ;
    wxSize *arg5 = (wxSize *) &arg5_defvalue ;
    long arg6 = (long) 0 ;
    wxString const &arg7_defvalue = wxPyStaticPictureNameStr ;
    wxString *arg7 = (wxString *) &arg7_defvalue ;
    wxStaticPicture *result;
    wxPoint temp4 ;
    wxSize temp5 ;
    bool temp7 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "label",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOOOO:new_StaticPicture",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxBitmap, SWIG_POINTER_EXCEPTION | 0);
            if (SWIG_arg_fail(3)) SWIG_fail;
            if (arg3 == NULL) {
                SWIG_null_ref("wxBitmap");
            }
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = static_cast<long >(SWIG_As_long(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = wxString_in_helper(obj6);
            if (arg7 == NULL) SWIG_fail;
            temp7 = true;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxStaticPicture *)new wxStaticPicture(arg1,arg2,(wxBitmap const &)*arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxString const &)*arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxStaticPicture, 1);
    {
        if (temp7)
        delete arg7;
    }
    return resultobj;
    fail:
    {
        if (temp7)
        delete arg7;
    }
    return NULL;
}


static PyObject *_wrap_new_PreStaticPicture(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PreStaticPicture",kwnames)) goto fail;
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxStaticPicture *)new wxStaticPicture();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxStaticPicture, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_Create(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 = (int) -1 ;
    wxBitmap const &arg4_defvalue = wxNullBitmap ;
    wxBitmap *arg4 = (wxBitmap *) &arg4_defvalue ;
    wxPoint const &arg5_defvalue = wxDefaultPosition ;
    wxPoint *arg5 = (wxPoint *) &arg5_defvalue ;
    wxSize const &arg6_defvalue = wxDefaultSize ;
    wxSize *arg6 = (wxSize *) &arg6_defvalue ;
    long arg7 = (long) 0 ;
    wxString const &arg8_defvalue = wxPyStaticPictureNameStr ;
    wxString *arg8 = (wxString *) &arg8_defvalue ;
    bool result;
    wxPoint temp5 ;
    wxSize temp6 ;
    bool temp8 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "id",(char *) "label",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOOOO:StaticPicture_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (obj2) {
        {
            arg3 = static_cast<int >(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_wxBitmap, SWIG_POINTER_EXCEPTION | 0);
            if (SWIG_arg_fail(4)) SWIG_fail;
            if (arg4 == NULL) {
                SWIG_null_ref("wxBitmap");
            }
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxPoint_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = &temp6;
            if ( ! wxSize_helper(obj5, &arg6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = static_cast<long >(SWIG_As_long(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    if (obj7) {
        {
            arg8 = wxString_in_helper(obj7);
            if (arg8 == NULL) SWIG_fail;
            temp8 = true;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Create(arg2,arg3,(wxBitmap const &)*arg4,(wxPoint const &)*arg5,(wxSize const &)*arg6,arg7,(wxString const &)*arg8);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp8)
        delete arg8;
    }
    return resultobj;
    fail:
    {
        if (temp8)
        delete arg8;
    }
    return NULL;
}


static PyObject *_wrap_StaticPicture_SetBitmap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    wxBitmap *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bmp", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StaticPicture_SetBitmap",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxBitmap, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxBitmap");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBitmap((wxBitmap const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_GetBitmap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    wxBitmap result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StaticPicture_GetBitmap",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxStaticPicture const *)arg1)->GetBitmap();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxBitmap * resultptr;
        resultptr = new wxBitmap(static_cast<wxBitmap & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxBitmap, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_SetIcon(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    wxIcon *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "icon", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StaticPicture_SetIcon",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxIcon, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxIcon");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetIcon((wxIcon const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_GetIcon(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    wxIcon result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StaticPicture_GetIcon",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxStaticPicture const *)arg1)->GetIcon();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxIcon * resultptr;
        resultptr = new wxIcon(static_cast<wxIcon & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxIcon, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_SetAlignment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "align", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StaticPicture_SetAlignment",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAlignment(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_GetAlignment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StaticPicture_GetAlignment",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStaticPicture const *)arg1)->GetAlignment();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_SetScale(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "scale", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StaticPicture_SetScale",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetScale(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_GetScale(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StaticPicture_GetScale",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStaticPicture const *)arg1)->GetScale();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_SetCustomScale(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    float arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sx",(char *) "sy", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StaticPicture_SetCustomScale",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCustomScale(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticPicture_GetCustomScale(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStaticPicture *arg1 = (wxStaticPicture *) 0 ;
    float *arg2 = (float *) 0 ;
    float *arg3 = (float *) 0 ;
    float temp2 ;
    int res2 = 0 ;
    float temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StaticPicture_GetCustomScale",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStaticPicture, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        ((wxStaticPicture const *)arg1)->GetCustomScale(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_float((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_float, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_float((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_float, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject * StaticPicture_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxStaticPicture, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyMethodDef SwigMethods[] = {
	 { (char *)"new_DynamicSashSplitEvent", (PyCFunction) _wrap_new_DynamicSashSplitEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"DynamicSashSplitEvent_swigregister", DynamicSashSplitEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DynamicSashUnifyEvent", (PyCFunction) _wrap_new_DynamicSashUnifyEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"DynamicSashUnifyEvent_swigregister", DynamicSashUnifyEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DynamicSashWindow", (PyCFunction) _wrap_new_DynamicSashWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"new_PreDynamicSashWindow", (PyCFunction) _wrap_new_PreDynamicSashWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"DynamicSashWindow_Create", (PyCFunction) _wrap_DynamicSashWindow_Create, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"DynamicSashWindow_GetHScrollBar", (PyCFunction) _wrap_DynamicSashWindow_GetHScrollBar, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"DynamicSashWindow_GetVScrollBar", (PyCFunction) _wrap_DynamicSashWindow_GetVScrollBar, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"DynamicSashWindow_swigregister", DynamicSashWindow_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_EditableListBox", (PyCFunction) _wrap_new_EditableListBox, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EditableListBox_SetStrings", (PyCFunction) _wrap_EditableListBox_SetStrings, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EditableListBox_GetStrings", (PyCFunction) _wrap_EditableListBox_GetStrings, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EditableListBox_GetListCtrl", (PyCFunction) _wrap_EditableListBox_GetListCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EditableListBox_GetDelButton", (PyCFunction) _wrap_EditableListBox_GetDelButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EditableListBox_GetNewButton", (PyCFunction) _wrap_EditableListBox_GetNewButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EditableListBox_GetUpButton", (PyCFunction) _wrap_EditableListBox_GetUpButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EditableListBox_GetDownButton", (PyCFunction) _wrap_EditableListBox_GetDownButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EditableListBox_GetEditButton", (PyCFunction) _wrap_EditableListBox_GetEditButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EditableListBox_swigregister", EditableListBox_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RemotelyScrolledTreeCtrl", (PyCFunction) _wrap_new_RemotelyScrolledTreeCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"RemotelyScrolledTreeCtrl_HideVScrollbar", (PyCFunction) _wrap_RemotelyScrolledTreeCtrl_HideVScrollbar, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"RemotelyScrolledTreeCtrl_AdjustRemoteScrollbars", (PyCFunction) _wrap_RemotelyScrolledTreeCtrl_AdjustRemoteScrollbars, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"RemotelyScrolledTreeCtrl_GetScrolledWindow", (PyCFunction) _wrap_RemotelyScrolledTreeCtrl_GetScrolledWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"RemotelyScrolledTreeCtrl_ScrollToLine", (PyCFunction) _wrap_RemotelyScrolledTreeCtrl_ScrollToLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"RemotelyScrolledTreeCtrl_SetCompanionWindow", (PyCFunction) _wrap_RemotelyScrolledTreeCtrl_SetCompanionWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"RemotelyScrolledTreeCtrl_GetCompanionWindow", (PyCFunction) _wrap_RemotelyScrolledTreeCtrl_GetCompanionWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"RemotelyScrolledTreeCtrl_swigregister", RemotelyScrolledTreeCtrl_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TreeCompanionWindow", (PyCFunction) _wrap_new_TreeCompanionWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeCompanionWindow__setCallbackInfo", (PyCFunction) _wrap_TreeCompanionWindow__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeCompanionWindow_GetTreeCtrl", (PyCFunction) _wrap_TreeCompanionWindow_GetTreeCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeCompanionWindow_SetTreeCtrl", (PyCFunction) _wrap_TreeCompanionWindow_SetTreeCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeCompanionWindow_swigregister", TreeCompanionWindow_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ThinSplitterWindow", (PyCFunction) _wrap_new_ThinSplitterWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ThinSplitterWindow_swigregister", ThinSplitterWindow_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SplitterScrolledWindow", (PyCFunction) _wrap_new_SplitterScrolledWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"SplitterScrolledWindow_swigregister", SplitterScrolledWindow_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LEDNumberCtrl", (PyCFunction) _wrap_new_LEDNumberCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"new_PreLEDNumberCtrl", (PyCFunction) _wrap_new_PreLEDNumberCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LEDNumberCtrl_Create", (PyCFunction) _wrap_LEDNumberCtrl_Create, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LEDNumberCtrl_GetAlignment", (PyCFunction) _wrap_LEDNumberCtrl_GetAlignment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LEDNumberCtrl_GetDrawFaded", (PyCFunction) _wrap_LEDNumberCtrl_GetDrawFaded, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LEDNumberCtrl_GetValue", (PyCFunction) _wrap_LEDNumberCtrl_GetValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LEDNumberCtrl_SetAlignment", (PyCFunction) _wrap_LEDNumberCtrl_SetAlignment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LEDNumberCtrl_SetDrawFaded", (PyCFunction) _wrap_LEDNumberCtrl_SetDrawFaded, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LEDNumberCtrl_SetValue", (PyCFunction) _wrap_LEDNumberCtrl_SetValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LEDNumberCtrl_swigregister", LEDNumberCtrl_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TreeListColumnInfo", (PyCFunction) _wrap_new_TreeListColumnInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_GetShown", (PyCFunction) _wrap_TreeListColumnInfo_GetShown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_GetAlignment", (PyCFunction) _wrap_TreeListColumnInfo_GetAlignment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_GetText", (PyCFunction) _wrap_TreeListColumnInfo_GetText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_GetImage", (PyCFunction) _wrap_TreeListColumnInfo_GetImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_GetSelectedImage", (PyCFunction) _wrap_TreeListColumnInfo_GetSelectedImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_GetWidth", (PyCFunction) _wrap_TreeListColumnInfo_GetWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_SetShown", (PyCFunction) _wrap_TreeListColumnInfo_SetShown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_SetAlignment", (PyCFunction) _wrap_TreeListColumnInfo_SetAlignment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_SetText", (PyCFunction) _wrap_TreeListColumnInfo_SetText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_SetImage", (PyCFunction) _wrap_TreeListColumnInfo_SetImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_SetSelectedImage", (PyCFunction) _wrap_TreeListColumnInfo_SetSelectedImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_SetWidth", (PyCFunction) _wrap_TreeListColumnInfo_SetWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListColumnInfo_swigregister", TreeListColumnInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TreeListCtrl", (PyCFunction) _wrap_new_TreeListCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"new_PreTreeListCtrl", (PyCFunction) _wrap_new_PreTreeListCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_Create", (PyCFunction) _wrap_TreeListCtrl_Create, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl__setCallbackInfo", (PyCFunction) _wrap_TreeListCtrl__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetCount", (PyCFunction) _wrap_TreeListCtrl_GetCount, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetIndent", (PyCFunction) _wrap_TreeListCtrl_GetIndent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetIndent", (PyCFunction) _wrap_TreeListCtrl_SetIndent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetLineSpacing", (PyCFunction) _wrap_TreeListCtrl_GetLineSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetLineSpacing", (PyCFunction) _wrap_TreeListCtrl_SetLineSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetImageList", (PyCFunction) _wrap_TreeListCtrl_GetImageList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetStateImageList", (PyCFunction) _wrap_TreeListCtrl_GetStateImageList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetButtonsImageList", (PyCFunction) _wrap_TreeListCtrl_GetButtonsImageList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetImageList", (PyCFunction) _wrap_TreeListCtrl_SetImageList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetStateImageList", (PyCFunction) _wrap_TreeListCtrl_SetStateImageList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetButtonsImageList", (PyCFunction) _wrap_TreeListCtrl_SetButtonsImageList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_AssignImageList", (PyCFunction) _wrap_TreeListCtrl_AssignImageList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_AssignStateImageList", (PyCFunction) _wrap_TreeListCtrl_AssignStateImageList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_AssignButtonsImageList", (PyCFunction) _wrap_TreeListCtrl_AssignButtonsImageList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_AddColumn", (PyCFunction) _wrap_TreeListCtrl_AddColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_AddColumnInfo", (PyCFunction) _wrap_TreeListCtrl_AddColumnInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_InsertColumn", (PyCFunction) _wrap_TreeListCtrl_InsertColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_InsertColumnInfo", (PyCFunction) _wrap_TreeListCtrl_InsertColumnInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_RemoveColumn", (PyCFunction) _wrap_TreeListCtrl_RemoveColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetColumnCount", (PyCFunction) _wrap_TreeListCtrl_GetColumnCount, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetColumnWidth", (PyCFunction) _wrap_TreeListCtrl_SetColumnWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetColumnWidth", (PyCFunction) _wrap_TreeListCtrl_GetColumnWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetMainColumn", (PyCFunction) _wrap_TreeListCtrl_SetMainColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetMainColumn", (PyCFunction) _wrap_TreeListCtrl_GetMainColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetColumnText", (PyCFunction) _wrap_TreeListCtrl_SetColumnText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetColumnText", (PyCFunction) _wrap_TreeListCtrl_GetColumnText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetColumn", (PyCFunction) _wrap_TreeListCtrl_SetColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetColumn", (PyCFunction) _wrap_TreeListCtrl_GetColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetColumnAlignment", (PyCFunction) _wrap_TreeListCtrl_SetColumnAlignment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetColumnAlignment", (PyCFunction) _wrap_TreeListCtrl_GetColumnAlignment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetColumnImage", (PyCFunction) _wrap_TreeListCtrl_SetColumnImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetColumnImage", (PyCFunction) _wrap_TreeListCtrl_GetColumnImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_ShowColumn", (PyCFunction) _wrap_TreeListCtrl_ShowColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_IsColumnShown", (PyCFunction) _wrap_TreeListCtrl_IsColumnShown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetItemText", (PyCFunction) _wrap_TreeListCtrl_GetItemText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetItemImage", (PyCFunction) _wrap_TreeListCtrl_GetItemImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetItemText", (PyCFunction) _wrap_TreeListCtrl_SetItemText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetItemImage", (PyCFunction) _wrap_TreeListCtrl_SetItemImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetItemData", (PyCFunction) _wrap_TreeListCtrl_GetItemData, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetItemData", (PyCFunction) _wrap_TreeListCtrl_SetItemData, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetItemPyData", (PyCFunction) _wrap_TreeListCtrl_GetItemPyData, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetItemPyData", (PyCFunction) _wrap_TreeListCtrl_SetItemPyData, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetItemHasChildren", (PyCFunction) _wrap_TreeListCtrl_SetItemHasChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetItemBold", (PyCFunction) _wrap_TreeListCtrl_SetItemBold, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetItemTextColour", (PyCFunction) _wrap_TreeListCtrl_SetItemTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetItemBackgroundColour", (PyCFunction) _wrap_TreeListCtrl_SetItemBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SetItemFont", (PyCFunction) _wrap_TreeListCtrl_SetItemFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetItemBold", (PyCFunction) _wrap_TreeListCtrl_GetItemBold, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetItemTextColour", (PyCFunction) _wrap_TreeListCtrl_GetItemTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetItemBackgroundColour", (PyCFunction) _wrap_TreeListCtrl_GetItemBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetItemFont", (PyCFunction) _wrap_TreeListCtrl_GetItemFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_IsVisible", (PyCFunction) _wrap_TreeListCtrl_IsVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_ItemHasChildren", (PyCFunction) _wrap_TreeListCtrl_ItemHasChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_IsExpanded", (PyCFunction) _wrap_TreeListCtrl_IsExpanded, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_IsSelected", (PyCFunction) _wrap_TreeListCtrl_IsSelected, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_IsBold", (PyCFunction) _wrap_TreeListCtrl_IsBold, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetChildrenCount", (PyCFunction) _wrap_TreeListCtrl_GetChildrenCount, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetRootItem", (PyCFunction) _wrap_TreeListCtrl_GetRootItem, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetSelection", (PyCFunction) _wrap_TreeListCtrl_GetSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetSelections", (PyCFunction) _wrap_TreeListCtrl_GetSelections, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetItemParent", (PyCFunction) _wrap_TreeListCtrl_GetItemParent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetFirstChild", (PyCFunction) _wrap_TreeListCtrl_GetFirstChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetNextChild", (PyCFunction) _wrap_TreeListCtrl_GetNextChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetLastChild", (PyCFunction) _wrap_TreeListCtrl_GetLastChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetNextSibling", (PyCFunction) _wrap_TreeListCtrl_GetNextSibling, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetPrevSibling", (PyCFunction) _wrap_TreeListCtrl_GetPrevSibling, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetFirstVisibleItem", (PyCFunction) _wrap_TreeListCtrl_GetFirstVisibleItem, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetNextVisible", (PyCFunction) _wrap_TreeListCtrl_GetNextVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetPrevVisible", (PyCFunction) _wrap_TreeListCtrl_GetPrevVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetNext", (PyCFunction) _wrap_TreeListCtrl_GetNext, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_AddRoot", (PyCFunction) _wrap_TreeListCtrl_AddRoot, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_PrependItem", (PyCFunction) _wrap_TreeListCtrl_PrependItem, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_InsertItem", (PyCFunction) _wrap_TreeListCtrl_InsertItem, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_InsertItemBefore", (PyCFunction) _wrap_TreeListCtrl_InsertItemBefore, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_AppendItem", (PyCFunction) _wrap_TreeListCtrl_AppendItem, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_Delete", (PyCFunction) _wrap_TreeListCtrl_Delete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_DeleteChildren", (PyCFunction) _wrap_TreeListCtrl_DeleteChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_DeleteAllItems", (PyCFunction) _wrap_TreeListCtrl_DeleteAllItems, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_Expand", (PyCFunction) _wrap_TreeListCtrl_Expand, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_ExpandAll", (PyCFunction) _wrap_TreeListCtrl_ExpandAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_Collapse", (PyCFunction) _wrap_TreeListCtrl_Collapse, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_CollapseAndReset", (PyCFunction) _wrap_TreeListCtrl_CollapseAndReset, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_Toggle", (PyCFunction) _wrap_TreeListCtrl_Toggle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_Unselect", (PyCFunction) _wrap_TreeListCtrl_Unselect, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_UnselectAll", (PyCFunction) _wrap_TreeListCtrl_UnselectAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SelectItem", (PyCFunction) _wrap_TreeListCtrl_SelectItem, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SelectAll", (PyCFunction) _wrap_TreeListCtrl_SelectAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_EnsureVisible", (PyCFunction) _wrap_TreeListCtrl_EnsureVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_ScrollTo", (PyCFunction) _wrap_TreeListCtrl_ScrollTo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_HitTest", (PyCFunction) _wrap_TreeListCtrl_HitTest, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetBoundingRect", (PyCFunction) _wrap_TreeListCtrl_GetBoundingRect, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_EditLabel", (PyCFunction) _wrap_TreeListCtrl_EditLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_Edit", (PyCFunction) _wrap_TreeListCtrl_Edit, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_SortChildren", (PyCFunction) _wrap_TreeListCtrl_SortChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_FindItem", (PyCFunction) _wrap_TreeListCtrl_FindItem, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetHeaderWindow", (PyCFunction) _wrap_TreeListCtrl_GetHeaderWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_GetMainWindow", (PyCFunction) _wrap_TreeListCtrl_GetMainWindow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"TreeListCtrl_swigregister", TreeListCtrl_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_StaticPicture", (PyCFunction) _wrap_new_StaticPicture, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"new_PreStaticPicture", (PyCFunction) _wrap_new_PreStaticPicture, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_Create", (PyCFunction) _wrap_StaticPicture_Create, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_SetBitmap", (PyCFunction) _wrap_StaticPicture_SetBitmap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_GetBitmap", (PyCFunction) _wrap_StaticPicture_GetBitmap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_SetIcon", (PyCFunction) _wrap_StaticPicture_SetIcon, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_GetIcon", (PyCFunction) _wrap_StaticPicture_GetIcon, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_SetAlignment", (PyCFunction) _wrap_StaticPicture_SetAlignment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_GetAlignment", (PyCFunction) _wrap_StaticPicture_GetAlignment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_SetScale", (PyCFunction) _wrap_StaticPicture_SetScale, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_GetScale", (PyCFunction) _wrap_StaticPicture_GetScale, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_SetCustomScale", (PyCFunction) _wrap_StaticPicture_SetCustomScale, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_GetCustomScale", (PyCFunction) _wrap_StaticPicture_GetCustomScale, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StaticPicture_swigregister", StaticPicture_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_wxPyValidatorTo_p_wxValidator(void *x) {
    return (void *)((wxValidator *)  ((wxPyValidator *) x));
}
static void *_p_wxScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxScrolledWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPyVScrolledWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxSplitterScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxScrolledWindow *) ((wxSplitterScrolledWindow *) x));
}
static void *_p_wxPyVListBoxTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxPyPanelTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPyPanel *) x));
}
static void *_p_wxEditableListBoxTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxEditableListBox *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPreviewControlBar *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxToolbookTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxBookCtrlBase *) ((wxToolbook *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_wxPreviewFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxCheckBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxCheckBox *) x));
}
static void *_p_wxPyTreeCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxPyTreeCtrl *) x));
}
static void *_p_wxRemotelyScrolledTreeCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxPyTreeCtrl *) ((wxRemotelyScrolledTreeCtrl *) x));
}
static void *_p_wxPyPanelTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPyPanel *) x));
}
static void *_p_wxGenericDirCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxGenericDirCtrl *) x));
}
static void *_p_wxPyListCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxPyListCtrl *) x));
}
static void *_p_wxDirFilterListCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxControlWithItems *)(wxChoice *) ((wxDirFilterListCtrl *) x));
}
static void *_p_wxPyTreeListCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxPyTreeListCtrl *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxStaticLineTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxStaticLine *) x));
}
static void *_p_wxControlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxControl *) x));
}
static void *_p_wxPyControlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxPyControl *) x));
}
static void *_p_wxGaugeTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxGauge *) x));
}
static void *_p_wxToolBarBaseTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxToolBarBase *) x));
}
static void *_p_wxToggleButtonTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxToggleButton *) x));
}
static void *_p_wxRadioButtonTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxRadioButton *) x));
}
static void *_p_wxChoiceTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxControlWithItems *) ((wxChoice *) x));
}
static void *_p_wxTreebookTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxBookCtrlBase *) ((wxTreebook *) x));
}
static void *_p_wxListViewTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxPyListCtrl *) ((wxListView *) x));
}
static void *_p_wxTextCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxTextCtrl *) x));
}
static void *_p_wxNotebookTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxBookCtrlBase *) ((wxNotebook *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxChoicebookTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxBookCtrlBase *) ((wxChoicebook *) x));
}
static void *_p_wxPyWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPyWindow *) x));
}
static void *_p_wxSplashScreenTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxListbookTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxBookCtrlBase *) ((wxListbook *) x));
}
static void *_p_wxFileDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxProgressDialog *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxStaticBitmapTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxStaticBitmap *) x));
}
static void *_p_wxSliderTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxSlider *) x));
}
static void *_p_wxStaticBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxStaticBox *) x));
}
static void *_p_wxBookCtrlBaseTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxBookCtrlBase *) x));
}
static void *_p_wxCheckListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxControlWithItems *)(wxListBox *) ((wxCheckListBox *) x));
}
static void *_p_wxListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxControlWithItems *) ((wxListBox *) x));
}
static void *_p_wxPyVListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxEditableListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxEditableListBox *) x));
}
static void *_p_wxLEDNumberCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxLEDNumberCtrl *) x));
}
static void *_p_wxSpinButtonTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxSpinButton *) x));
}
static void *_p_wxBitmapButtonTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxButton *) ((wxBitmapButton *) x));
}
static void *_p_wxButtonTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxButton *) x));
}
static void *_p_wxContextHelpButtonTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxButton *)(wxBitmapButton *) ((wxContextHelpButton *) x));
}
static void *_p_wxRadioBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxRadioBox *) x));
}
static void *_p_wxScrollBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxScrollBar *) x));
}
static void *_p_wxComboBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxControlWithItems *)(wxChoice *) ((wxComboBox *) x));
}
static void *_p_wxMiniFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *) ((wxFrame *) x));
}
static void *_p_wxSpinCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxSpinCtrl *) x));
}
static void *_p_wxStatusBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxStatusBar *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxStaticPictureTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxStaticPicture *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxMDIClientWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMDIClientWindow *) x));
}
static void *_p_wxSashWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxSashWindow *) x));
}
static void *_p_wxSplitterWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxSplitterWindow *) x));
}
static void *_p_wxSplashScreenWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxSplashScreenWindow *) x));
}
static void *_p_wxTopLevelWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxTopLevelWindow *) x));
}
static void *_p_wxScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxScrolledWindow *) x));
}
static void *_p_wxSashLayoutWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxSashWindow *) ((wxSashLayoutWindow *) x));
}
static void *_p_wxPopupWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPopupWindow *) x));
}
static void *_p_wxPyPopupTransientWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPopupWindow *) ((wxPyPopupTransientWindow *) x));
}
static void *_p_wxTipWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPopupWindow *)(wxPyPopupTransientWindow *) ((wxTipWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPyVScrolledWindow *) x));
}
static void *_p_wxMenuBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMenuBar *) x));
}
static void *_p_wxDynamicSashWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxDynamicSashWindow *) x));
}
static void *_p_wxPyTreeCompanionWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPyTreeCompanionWindow *) x));
}
static void *_p_wxThinSplitterWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxSplitterWindow *) ((wxThinSplitterWindow *) x));
}
static void *_p_wxSplitterScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxScrolledWindow *) ((wxSplitterScrolledWindow *) x));
}
static void *_p_wxDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *) ((wxDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDirDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxFontDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxPanelTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPanel *) x));
}
static void *_p_wxStaticTextTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxStaticText *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPreviewControlBar *) x));
}
static void *_p_wxDatePickerCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxDatePickerCtrl *) x));
}
static void *_p_wxControlWithItemsTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxToolBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *)(wxToolBarBase *) ((wxToolBar *) x));
}
static void *_p_wxThinSplitterWindowTo_p_wxSplitterWindow(void *x) {
    return (void *)((wxSplitterWindow *)  ((wxThinSplitterWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxScrolledWindow(void *x) {
    return (void *)((wxScrolledWindow *)  ((wxPyScrolledWindow *) x));
}
static void *_p_wxSplitterScrolledWindowTo_p_wxScrolledWindow(void *x) {
    return (void *)((wxScrolledWindow *)  ((wxSplitterScrolledWindow *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxScrolledWindow(void *x) {
    return (void *)((wxScrolledWindow *)  ((wxPreviewCanvas *) x));
}
static void *_p_wxBookCtrlBaseTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxBookCtrlBase *) x));
}
static void *_p_wxToolBarTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxToolBarBase *) ((wxToolBar *) x));
}
static void *_p_wxToggleButtonTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxToggleButton *) x));
}
static void *_p_wxRadioButtonTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxRadioButton *) x));
}
static void *_p_wxLEDNumberCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxLEDNumberCtrl *) x));
}
static void *_p_wxToolbookTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxBookCtrlBase *) ((wxToolbook *) x));
}
static void *_p_wxToolBarBaseTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxToolBarBase *) x));
}
static void *_p_wxDirFilterListCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxControlWithItems *)(wxChoice *) ((wxDirFilterListCtrl *) x));
}
static void *_p_wxPyListCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxPyListCtrl *) x));
}
static void *_p_wxComboBoxTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxControlWithItems *)(wxChoice *) ((wxComboBox *) x));
}
static void *_p_wxPyControlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxPyControl *) x));
}
static void *_p_wxPyTreeListCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxPyTreeListCtrl *) x));
}
static void *_p_wxGenericDirCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxGenericDirCtrl *) x));
}
static void *_p_wxScrollBarTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxScrollBar *) x));
}
static void *_p_wxControlWithItemsTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxControlWithItems *) x));
}
static void *_p_wxGaugeTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxGauge *) x));
}
static void *_p_wxStaticLineTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxStaticLine *) x));
}
static void *_p_wxChoicebookTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxBookCtrlBase *) ((wxChoicebook *) x));
}
static void *_p_wxListbookTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxBookCtrlBase *) ((wxListbook *) x));
}
static void *_p_wxPyTreeCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxPyTreeCtrl *) x));
}
static void *_p_wxRemotelyScrolledTreeCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxPyTreeCtrl *) ((wxRemotelyScrolledTreeCtrl *) x));
}
static void *_p_wxCheckBoxTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxCheckBox *) x));
}
static void *_p_wxRadioBoxTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxRadioBox *) x));
}
static void *_p_wxChoiceTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxControlWithItems *) ((wxChoice *) x));
}
static void *_p_wxListBoxTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxControlWithItems *) ((wxListBox *) x));
}
static void *_p_wxCheckListBoxTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxControlWithItems *)(wxListBox *) ((wxCheckListBox *) x));
}
static void *_p_wxListViewTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxPyListCtrl *) ((wxListView *) x));
}
static void *_p_wxNotebookTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxBookCtrlBase *) ((wxNotebook *) x));
}
static void *_p_wxStaticBitmapTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxStaticBitmap *) x));
}
static void *_p_wxSpinCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxSpinCtrl *) x));
}
static void *_p_wxStaticTextTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxStaticText *) x));
}
static void *_p_wxStaticBoxTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxStaticBox *) x));
}
static void *_p_wxSliderTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxSlider *) x));
}
static void *_p_wxTreebookTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxBookCtrlBase *) ((wxTreebook *) x));
}
static void *_p_wxSpinButtonTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxSpinButton *) x));
}
static void *_p_wxButtonTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxButton *) x));
}
static void *_p_wxBitmapButtonTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxButton *) ((wxBitmapButton *) x));
}
static void *_p_wxContextHelpButtonTo_p_wxControl(void *x) {
    return (void *)((wxControl *) (wxButton *)(wxBitmapButton *) ((wxContextHelpButton *) x));
}
static void *_p_wxDatePickerCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxDatePickerCtrl *) x));
}
static void *_p_wxStaticPictureTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxStaticPicture *) x));
}
static void *_p_wxTextCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxTextCtrl *) x));
}
static void *_p_wxListViewTo_p_wxPyListCtrl(void *x) {
    return (void *)((wxPyListCtrl *)  ((wxListView *) x));
}
static void *_p_wxContextMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMenuEvent *) x));
}
static void *_p_wxCloseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxEraseEvent *) x));
}
static void *_p_wxBookCtrlBaseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *) ((wxBookCtrlBaseEvent *) x));
}
static void *_p_wxTreeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *) ((wxTreeEvent *) x));
}
static void *_p_wxSetCursorEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSetCursorEvent *) x));
}
static void *_p_wxSplitterEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *) ((wxSplitterEvent *) x));
}
static void *_p_wxInitDialogEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxInitDialogEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxFindDialogEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxFindDialogEvent *) x));
}
static void *_p_wxTextUrlEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxTextUrlEvent *) x));
}
static void *_p_wxPyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPyEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxCalculateLayoutEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCalculateLayoutEvent *) x));
}
static void *_p_wxListEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *) ((wxListEvent *) x));
}
static void *_p_wxDynamicSashSplitEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxDynamicSashSplitEvent *) x));
}
static void *_p_wxDynamicSashUnifyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxDynamicSashUnifyEvent *) x));
}
static void *_p_wxNotebookEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxNotebookEvent *) x));
}
static void *_p_wxListbookEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxListbookEvent *) x));
}
static void *_p_wxChoicebookEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxChoicebookEvent *) x));
}
static void *_p_wxTreebookEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxTreebookEvent *) x));
}
static void *_p_wxToolbookEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxToolbookEvent *) x));
}
static void *_p_wxHelpEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxHelpEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIdleEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIconizeEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxActivateEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMoveEvent *) x));
}
static void *_p_wxDateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxDateEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNcPaintEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSysColourChangedEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDropFilesEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxSashEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxSashEvent *) x));
}
static void *_p_wxQueryLayoutInfoEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxQueryLayoutInfoEvent *) x));
}
static void *_p_wxShowEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxShowEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCommandEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxKeyEvent *) x));
}
static void *_p_wxScrollWinEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxScrollWinEvent *) x));
}
static void *_p_wxTaskBarIconEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxTaskBarIconEvent *) x));
}
static void *_p_wxSpinEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *) ((wxSpinEvent *) x));
}
static void *_p_wxScrollBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxScrollBar *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvent *) x));
}
static void *_p_wxFindDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxFindDialogEvent *) x));
}
static void *_p_wxInitDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxInitDialogEvent *) x));
}
static void *_p_wxIndividualLayoutConstraintTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxIndividualLayoutConstraint *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_wxPreviewFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxToolBarBaseTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxToolBarBase *) x));
}
static void *_p_wxMenuItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxMenuItem *) x));
}
static void *_p_wxImageTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImage *) x));
}
static void *_p_wxPySizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxPySizer *) x));
}
static void *_p_wxStaticBitmapTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxStaticBitmap *) x));
}
static void *_p_wxGenericDragImageTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxGenericDragImage *) x));
}
static void *_p_wxComboBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxControlWithItems *)(wxChoice *) ((wxComboBox *) x));
}
static void *_p_wxPyTaskBarIconTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyTaskBarIcon *) x));
}
static void *_p_wxLayoutAlgorithmTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutAlgorithm *) x));
}
static void *_p_wxPyAppTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyApp *) x));
}
static void *_p_wxTreebookTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxTreebook *) x));
}
static void *_p_wxNotebookTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxNotebook *) x));
}
static void *_p_wxListItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxListItem *) x));
}
static void *_p_wxChoicebookTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxChoicebook *) x));
}
static void *_p_wxBookCtrlBaseTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxBookCtrlBase *) x));
}
static void *_p_wxPyTreeCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxPyTreeCtrl *) x));
}
static void *_p_wxRemotelyScrolledTreeCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxPyTreeCtrl *) ((wxRemotelyScrolledTreeCtrl *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPreviewControlBar *) x));
}
static void *_p_wxFindReplaceDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFindReplaceData *) x));
}
static void *_p_wxStaticLineTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxStaticLine *) x));
}
static void *_p_wxValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxValidator *) x));
}
static void *_p_wxPyValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxEraseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxEraseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseEvent *) x));
}
static void *_p_wxCloseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCloseEvent *) x));
}
static void *_p_wxBookCtrlBaseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *) ((wxBookCtrlBaseEvent *) x));
}
static void *_p_wxTreeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *) ((wxTreeEvent *) x));
}
static void *_p_wxTextUrlEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxTextUrlEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxPrintDialogDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintDialogData *) x));
}
static void *_p_wxPageSetupDialogDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPageSetupDialogData *) x));
}
static void *_p_wxPrinterTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrinter *) x));
}
static void *_p_wxControlWithItemsTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxRadioBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxRadioBox *) x));
}
static void *_p_wxGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxGridSizer *) x));
}
static void *_p_wxFlexGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *) ((wxFlexGridSizer *) x));
}
static void *_p_wxAcceleratorTableTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxAcceleratorTable *) x));
}
static void *_p_wxTreeListColumnInfoTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxTreeListColumnInfo *) x));
}
static void *_p_wxControlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxControl *) x));
}
static void *_p_wxPyControlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxPyControl *) x));
}
static void *_p_wxContextHelpTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxContextHelp *) x));
}
static void *_p_wxColourDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxColourData *) x));
}
static void *_p_wxActivateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxActivateEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMoveEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIconizeEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMaximizeEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIdleEvent *) x));
}
static void *_p_wxDateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxDateEvent *) x));
}
static void *_p_wxStaticTextTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxStaticText *) x));
}
static void *_p_wxCalculateLayoutEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCalculateLayoutEvent *) x));
}
static void *_p_wxListEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *) ((wxListEvent *) x));
}
static void *_p_wxDynamicSashSplitEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxDynamicSashSplitEvent *) x));
}
static void *_p_wxPyPrintoutTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPyPrintout *) x));
}
static void *_p_wxGaugeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxGauge *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxStdDialogButtonSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStdDialogButtonSizer *) x));
}
static void *_p_wxChoiceTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxControlWithItems *) ((wxChoice *) x));
}
static void *_p_wxSpinButtonTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxSpinButton *) x));
}
static void *_p_wxBitmapButtonTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxButton *) ((wxBitmapButton *) x));
}
static void *_p_wxButtonTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxButton *) x));
}
static void *_p_wxContextHelpButtonTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxButton *)(wxBitmapButton *) ((wxContextHelpButton *) x));
}
static void *_p_wxKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxKeyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNavigationKeyEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxSashEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxSashEvent *) x));
}
static void *_p_wxCheckListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxControlWithItems *)(wxListBox *) ((wxCheckListBox *) x));
}
static void *_p_wxListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxControlWithItems *) ((wxListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxPyVListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPrintDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintData *) x));
}
static void *_p_wxFontDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFontData *) x));
}
static void *_p_wxEditableListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxEditableListBox *) x));
}
static void *_p_wxMiniFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxListbookTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxListbook *) x));
}
static void *_p_wxFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *) ((wxFrame *) x));
}
static void *_p_wxPyPanelTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPyPanel *) x));
}
static void *_p_wxStaticBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxStaticBox *) x));
}
static void *_p_wxQueryLayoutInfoEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryLayoutInfoEvent *) x));
}
static void *_p_wxSplashScreenTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxFileSystemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFileSystem *) x));
}
static void *_p_wxPyPrintPreviewTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPrintPreview *) ((wxPyPrintPreview *) x));
}
static void *_p_wxPrintPreviewTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintPreview *) x));
}
static void *_p_wxListViewTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxPyListCtrl *) ((wxListView *) x));
}
static void *_p_wxLayoutConstraintsTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutConstraints *) x));
}
static void *_p_wxPyListCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxPyListCtrl *) x));
}
static void *_p_wxDirFilterListCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxControlWithItems *)(wxChoice *) ((wxDirFilterListCtrl *) x));
}
static void *_p_wxPyTreeListCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxPyTreeListCtrl *) x));
}
static void *_p_wxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizer *) x));
}
static void *_p_wxBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxBoxSizer *) x));
}
static void *_p_wxStaticBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStaticBoxSizer *) x));
}
static void *_p_wxGridBagSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *)(wxFlexGridSizer *) ((wxGridBagSizer *) x));
}
static void *_p_wxNcPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNcPaintEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaintEvent *) x));
}
static void *_p_wxFSFileTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFSFile *) x));
}
static void *_p_wxSplitterEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *) ((wxSplitterEvent *) x));
}
static void *_p_wxSetCursorEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSetCursorEvent *) x));
}
static void *_p_wxTextCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxTextCtrl *) x));
}
static void *_p_wxMenuTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxMenu *) x));
}
static void *_p_wxToggleButtonTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxToggleButton *) x));
}
static void *_p_wxRadioButtonTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxRadioButton *) x));
}
static void *_p_wxSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizerItem *) x));
}
static void *_p_wxGBSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizerItem *) ((wxGBSizerItem *) x));
}
static void *_p_wxPrintDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintDialog *) x));
}
static void *_p_wxPageSetupDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPageSetupDialog *) x));
}
static void *_p_wxFontDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxDirDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *) ((wxDialog *) x));
}
static void *_p_wxNotifyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxPyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPyEvent *) x));
}
static void *_p_wxGenericDirCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxGenericDirCtrl *) x));
}
static void *_p_wxDynamicSashUnifyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxDynamicSashUnifyEvent *) x));
}
static void *_p_wxStaticPictureTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxStaticPicture *) x));
}
static void *_p_wxEvtHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvtHandler *) x));
}
static void *_p_wxTIFFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxTIFFHandler *) x));
}
static void *_p_wxXPMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxXPMHandler *) x));
}
static void *_p_wxImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImageHandler *) x));
}
static void *_p_wxPyImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPyImageHandler *) x));
}
static void *_p_wxBMPHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxBMPHandler *) x));
}
static void *_p_wxICOHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *) ((wxICOHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *) ((wxCURHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *)(wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxPNGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNGHandler *) x));
}
static void *_p_wxGIFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxGIFHandler *) x));
}
static void *_p_wxPCXHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPCXHandler *) x));
}
static void *_p_wxJPEGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxJPEGHandler *) x));
}
static void *_p_wxPNMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNMHandler *) x));
}
static void *_p_wxShowEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxShowEvent *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxMDIClientWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMDIClientWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPyVScrolledWindow *) x));
}
static void *_p_wxTipWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPopupWindow *)(wxPyPopupTransientWindow *) ((wxTipWindow *) x));
}
static void *_p_wxPyPopupTransientWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPopupWindow *) ((wxPyPopupTransientWindow *) x));
}
static void *_p_wxPopupWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPopupWindow *) x));
}
static void *_p_wxSashLayoutWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxSashWindow *) ((wxSashLayoutWindow *) x));
}
static void *_p_wxSashWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxSashWindow *) x));
}
static void *_p_wxSplitterWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxSplitterWindow *) x));
}
static void *_p_wxSplashScreenWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxSplashScreenWindow *) x));
}
static void *_p_wxTopLevelWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxTopLevelWindow *) x));
}
static void *_p_wxScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxScrolledWindow *) x));
}
static void *_p_wxWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxWindow *) x));
}
static void *_p_wxDynamicSashWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxDynamicSashWindow *) x));
}
static void *_p_wxPyTreeCompanionWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPyTreeCompanionWindow *) x));
}
static void *_p_wxThinSplitterWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxSplitterWindow *) ((wxThinSplitterWindow *) x));
}
static void *_p_wxSplitterScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxSplitterScrolledWindow *) x));
}
static void *_p_wxSpinCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxSpinCtrl *) x));
}
static void *_p_wxNotebookEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxNotebookEvent *) x));
}
static void *_p_wxListbookEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxListbookEvent *) x));
}
static void *_p_wxChoicebookEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxChoicebookEvent *) x));
}
static void *_p_wxTreebookEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxTreebookEvent *) x));
}
static void *_p_wxToolbookEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxToolbookEvent *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxProgressDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxFileDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxToolBarToolBaseTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxToolBarToolBase *) x));
}
static void *_p_wxSliderTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxSlider *) x));
}
static void *_p_wxPyWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPyWindow *) x));
}
static void *_p_wxDatePickerCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxDatePickerCtrl *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSysColourChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDisplayChangedEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaletteChangedEvent *) x));
}
static void *_p_wxCheckBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxCheckBox *) x));
}
static void *_p_wxHelpEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxHelpEvent *) x));
}
static void *_p_wxPanelTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPanel *) x));
}
static void *_p_wxSpinEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *) ((wxSpinEvent *) x));
}
static void *_p_wxTaskBarIconEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxTaskBarIconEvent *) x));
}
static void *_p_wxScrollWinEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxScrollWinEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMenuEvent *) x));
}
static void *_p_wxContextMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxLEDNumberCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxLEDNumberCtrl *) x));
}
static void *_p_wxCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCommandEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxToolbookTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxToolbook *) x));
}
static void *_p_wxToolBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *)(wxToolBarBase *) ((wxToolBar *) x));
}
static void *_p_wxStatusBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxStatusBar *) x));
}
static void *_p_wxChildFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxFocusEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDropFilesEvent *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxMenuBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxToolbookTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxToolbook *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_wxPreviewFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxCheckBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxCheckBox *) x));
}
static void *_p_wxPyTreeCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxPyTreeCtrl *) x));
}
static void *_p_wxRemotelyScrolledTreeCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxPyTreeCtrl *) ((wxRemotelyScrolledTreeCtrl *) x));
}
static void *_p_wxPyPanelTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPyPanel *) x));
}
static void *_p_wxPyTaskBarIconTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyTaskBarIcon *) x));
}
static void *_p_wxGenericDirCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxGenericDirCtrl *) x));
}
static void *_p_wxPyListCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxPyListCtrl *) x));
}
static void *_p_wxDirFilterListCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxControlWithItems *)(wxChoice *) ((wxDirFilterListCtrl *) x));
}
static void *_p_wxPyTreeListCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxPyTreeListCtrl *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxStaticLineTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxStaticLine *) x));
}
static void *_p_wxControlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxControl *) x));
}
static void *_p_wxPyControlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxPyControl *) x));
}
static void *_p_wxGaugeTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxGauge *) x));
}
static void *_p_wxToggleButtonTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxToggleButton *) x));
}
static void *_p_wxRadioButtonTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxRadioButton *) x));
}
static void *_p_wxToolBarBaseTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxToolBarBase *) x));
}
static void *_p_wxChoiceTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxControlWithItems *) ((wxChoice *) x));
}
static void *_p_wxTreebookTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxTreebook *) x));
}
static void *_p_wxListViewTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxPyListCtrl *) ((wxListView *) x));
}
static void *_p_wxTextCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxTextCtrl *) x));
}
static void *_p_wxNotebookTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxNotebook *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxChoicebookTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxChoicebook *) x));
}
static void *_p_wxPyWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPyWindow *) x));
}
static void *_p_wxSplashScreenTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxListbookTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxBookCtrlBase *) ((wxListbook *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxProgressDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxFileDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxStaticBitmapTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxStaticBitmap *) x));
}
static void *_p_wxSliderTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxSlider *) x));
}
static void *_p_wxStaticBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxStaticBox *) x));
}
static void *_p_wxBookCtrlBaseTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxBookCtrlBase *) x));
}
static void *_p_wxCheckListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxControlWithItems *)(wxListBox *) ((wxCheckListBox *) x));
}
static void *_p_wxListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxControlWithItems *) ((wxListBox *) x));
}
static void *_p_wxPyVListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxEditableListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxEditableListBox *) x));
}
static void *_p_wxLEDNumberCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxLEDNumberCtrl *) x));
}
static void *_p_wxSpinButtonTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxSpinButton *) x));
}
static void *_p_wxBitmapButtonTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxButton *) ((wxBitmapButton *) x));
}
static void *_p_wxButtonTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxButton *) x));
}
static void *_p_wxContextHelpButtonTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxButton *)(wxBitmapButton *) ((wxContextHelpButton *) x));
}
static void *_p_wxRadioBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxRadioBox *) x));
}
static void *_p_wxScrollBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxScrollBar *) x));
}
static void *_p_wxComboBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxControlWithItems *)(wxChoice *) ((wxComboBox *) x));
}
static void *_p_wxMiniFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *) ((wxFrame *) x));
}
static void *_p_wxSpinCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxSpinCtrl *) x));
}
static void *_p_wxStatusBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxStatusBar *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxStaticPictureTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxStaticPicture *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxMDIClientWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMDIClientWindow *) x));
}
static void *_p_wxTopLevelWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxTopLevelWindow *) x));
}
static void *_p_wxScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxScrolledWindow *) x));
}
static void *_p_wxWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxWindow *) x));
}
static void *_p_wxSplashScreenWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxSplashScreenWindow *) x));
}
static void *_p_wxSplitterWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxSplitterWindow *) x));
}
static void *_p_wxSashWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxSashWindow *) x));
}
static void *_p_wxSashLayoutWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxSashWindow *) ((wxSashLayoutWindow *) x));
}
static void *_p_wxPopupWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPopupWindow *) x));
}
static void *_p_wxPyPopupTransientWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPopupWindow *) ((wxPyPopupTransientWindow *) x));
}
static void *_p_wxTipWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPopupWindow *)(wxPyPopupTransientWindow *) ((wxTipWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPyVScrolledWindow *) x));
}
static void *_p_wxMenuTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxMenu *) x));
}
static void *_p_wxMenuBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxDynamicSashWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxDynamicSashWindow *) x));
}
static void *_p_wxPyTreeCompanionWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPyTreeCompanionWindow *) x));
}
static void *_p_wxThinSplitterWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxSplitterWindow *) ((wxThinSplitterWindow *) x));
}
static void *_p_wxSplitterScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxSplitterScrolledWindow *) x));
}
static void *_p_wxFontDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *) ((wxDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDirDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxPanelTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPanel *) x));
}
static void *_p_wxPyAppTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyApp *) x));
}
static void *_p_wxStaticTextTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxStaticText *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPreviewControlBar *) x));
}
static void *_p_wxDatePickerCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxDatePickerCtrl *) x));
}
static void *_p_wxControlWithItemsTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxToolBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *)(wxToolBarBase *) ((wxToolBar *) x));
}
static void *_p_wxPyValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxValidator *) x));
}
static void *_p_wxRemotelyScrolledTreeCtrlTo_p_wxPyTreeCtrl(void *x) {
    return (void *)((wxPyTreeCtrl *)  ((wxRemotelyScrolledTreeCtrl *) x));
}
static void *_p_wxSashEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxSashEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowDestroyEvent *) x));
}
static void *_p_wxSplitterEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *) ((wxSplitterEvent *) x));
}
static void *_p_wxTextUrlEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxTextUrlEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxScrollEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxPyCommandEvent *) x));
}
static void *_p_wxContextMenuEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxContextMenuEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxChildFocusEvent *) x));
}
static void *_p_wxNotebookEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxNotebookEvent *) x));
}
static void *_p_wxListbookEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxListbookEvent *) x));
}
static void *_p_wxChoicebookEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxChoicebookEvent *) x));
}
static void *_p_wxTreebookEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxTreebookEvent *) x));
}
static void *_p_wxToolbookEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *)(wxBookCtrlBaseEvent *) ((wxToolbookEvent *) x));
}
static void *_p_wxDateEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxDateEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowCreateEvent *) x));
}
static void *_p_wxListEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *) ((wxListEvent *) x));
}
static void *_p_wxDynamicSashSplitEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxDynamicSashSplitEvent *) x));
}
static void *_p_wxBookCtrlBaseEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *) ((wxBookCtrlBaseEvent *) x));
}
static void *_p_wxTreeEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *) ((wxTreeEvent *) x));
}
static void *_p_wxSpinEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *) ((wxSpinEvent *) x));
}
static void *_p_wxHelpEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxHelpEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxNotifyEvent *) x));
}
static void *_p_wxDynamicSashUnifyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxDynamicSashUnifyEvent *) x));
}
static void *_p_wxFindDialogEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxFindDialogEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxUpdateUIEvent *) x));
}
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, 0};
static swig_type_info _swigt__p_form_ops_t = {"_p_form_ops_t", "enum form_ops_t *|form_ops_t *", 0, 0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|byte *", 0, 0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *|time_t *", 0, 0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *|wxUIntPtr *", 0, 0, 0};
static swig_type_info _swigt__p_wxArrayString = {"_p_wxArrayString", "wxArrayString *", 0, 0, 0};
static swig_type_info _swigt__p_wxBitmap = {"_p_wxBitmap", "wxBitmap *", 0, 0, 0};
static swig_type_info _swigt__p_wxColour = {"_p_wxColour", "wxColour *", 0, 0, 0};
static swig_type_info _swigt__p_wxCommandEvent = {"_p_wxCommandEvent", "wxCommandEvent *", 0, 0, 0};
static swig_type_info _swigt__p_wxSashEvent = {"_p_wxSashEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxWindowDestroyEvent = {"_p_wxWindowDestroyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSplitterEvent = {"_p_wxSplitterEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTextUrlEvent = {"_p_wxTextUrlEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxScrollEvent = {"_p_wxScrollEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyCommandEvent = {"_p_wxPyCommandEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxContextMenuEvent = {"_p_wxContextMenuEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxChildFocusEvent = {"_p_wxChildFocusEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNotebookEvent = {"_p_wxNotebookEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxListbookEvent = {"_p_wxListbookEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxChoicebookEvent = {"_p_wxChoicebookEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTreebookEvent = {"_p_wxTreebookEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxToolbookEvent = {"_p_wxToolbookEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDateEvent = {"_p_wxDateEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxWindowCreateEvent = {"_p_wxWindowCreateEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxListEvent = {"_p_wxListEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBookCtrlBaseEvent = {"_p_wxBookCtrlBaseEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTreeEvent = {"_p_wxTreeEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSpinEvent = {"_p_wxSpinEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxHelpEvent = {"_p_wxHelpEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNotifyEvent = {"_p_wxNotifyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFindDialogEvent = {"_p_wxFindDialogEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxUpdateUIEvent = {"_p_wxUpdateUIEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxControl = {"_p_wxControl", "wxControl *", 0, 0, 0};
static swig_type_info _swigt__p_wxBookCtrlBase = {"_p_wxBookCtrlBase", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxToolBar = {"_p_wxToolBar", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxToggleButton = {"_p_wxToggleButton", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxRadioButton = {"_p_wxRadioButton", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxToolbook = {"_p_wxToolbook", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyControl = {"_p_wxPyControl", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxToolBarBase = {"_p_wxToolBarBase", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDirFilterListCtrl = {"_p_wxDirFilterListCtrl", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxComboBox = {"_p_wxComboBox", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGenericDirCtrl = {"_p_wxGenericDirCtrl", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxControlWithItems = {"_p_wxControlWithItems", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGauge = {"_p_wxGauge", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStaticLine = {"_p_wxStaticLine", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxChoicebook = {"_p_wxChoicebook", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxListbook = {"_p_wxListbook", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCheckBox = {"_p_wxCheckBox", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxRadioBox = {"_p_wxRadioBox", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxChoice = {"_p_wxChoice", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxListBox = {"_p_wxListBox", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCheckListBox = {"_p_wxCheckListBox", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxListView = {"_p_wxListView", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNotebook = {"_p_wxNotebook", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStaticBitmap = {"_p_wxStaticBitmap", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSpinCtrl = {"_p_wxSpinCtrl", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStaticText = {"_p_wxStaticText", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStaticBox = {"_p_wxStaticBox", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSlider = {"_p_wxSlider", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTreebook = {"_p_wxTreebook", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSpinButton = {"_p_wxSpinButton", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxButton = {"_p_wxButton", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBitmapButton = {"_p_wxBitmapButton", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxContextHelpButton = {"_p_wxContextHelpButton", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDatePickerCtrl = {"_p_wxDatePickerCtrl", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTextCtrl = {"_p_wxTextCtrl", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDuplexMode = {"_p_wxDuplexMode", "enum wxDuplexMode *|wxDuplexMode *", 0, 0, 0};
static swig_type_info _swigt__p_wxDynamicSashSplitEvent = {"_p_wxDynamicSashSplitEvent", "wxDynamicSashSplitEvent *", 0, 0, 0};
static swig_type_info _swigt__p_wxDynamicSashUnifyEvent = {"_p_wxDynamicSashUnifyEvent", "wxDynamicSashUnifyEvent *", 0, 0, 0};
static swig_type_info _swigt__p_wxDynamicSashWindow = {"_p_wxDynamicSashWindow", "wxDynamicSashWindow *", 0, 0, 0};
static swig_type_info _swigt__p_wxEditableListBox = {"_p_wxEditableListBox", "wxEditableListBox *", 0, 0, 0};
static swig_type_info _swigt__p_wxEvent = {"_p_wxEvent", "wxEvent *", 0, 0, 0};
static swig_type_info _swigt__p_wxMenuEvent = {"_p_wxMenuEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCloseEvent = {"_p_wxCloseEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMouseEvent = {"_p_wxMouseEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxEraseEvent = {"_p_wxEraseEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSetCursorEvent = {"_p_wxSetCursorEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxInitDialogEvent = {"_p_wxInitDialogEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyEvent = {"_p_wxPyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCalculateLayoutEvent = {"_p_wxCalculateLayoutEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxIdleEvent = {"_p_wxIdleEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxQueryNewPaletteEvent = {"_p_wxQueryNewPaletteEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMaximizeEvent = {"_p_wxMaximizeEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxIconizeEvent = {"_p_wxIconizeEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxActivateEvent = {"_p_wxActivateEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSizeEvent = {"_p_wxSizeEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMoveEvent = {"_p_wxMoveEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPaintEvent = {"_p_wxPaintEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNcPaintEvent = {"_p_wxNcPaintEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPaletteChangedEvent = {"_p_wxPaletteChangedEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDisplayChangedEvent = {"_p_wxDisplayChangedEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMouseCaptureChangedEvent = {"_p_wxMouseCaptureChangedEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSysColourChangedEvent = {"_p_wxSysColourChangedEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDropFilesEvent = {"_p_wxDropFilesEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFocusEvent = {"_p_wxFocusEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxQueryLayoutInfoEvent = {"_p_wxQueryLayoutInfoEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxShowEvent = {"_p_wxShowEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNavigationKeyEvent = {"_p_wxNavigationKeyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxKeyEvent = {"_p_wxKeyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxScrollWinEvent = {"_p_wxScrollWinEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTaskBarIconEvent = {"_p_wxTaskBarIconEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxEvtHandler = {"_p_wxEvtHandler", "wxEvtHandler *", 0, 0, 0};
static swig_type_info _swigt__p_wxPyPreviewFrame = {"_p_wxPyPreviewFrame", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPreviewFrame = {"_p_wxPreviewFrame", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPanel = {"_p_wxPyPanel", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMenu = {"_p_wxMenu", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyTaskBarIcon = {"_p_wxPyTaskBarIcon", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPreviewCanvas = {"_p_wxPreviewCanvas", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMDIChildFrame = {"_p_wxMDIChildFrame", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyWindow = {"_p_wxPyWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSplashScreen = {"_p_wxSplashScreen", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMessageDialog = {"_p_wxMessageDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxProgressDialog = {"_p_wxProgressDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFindReplaceDialog = {"_p_wxFindReplaceDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFileDialog = {"_p_wxFileDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMultiChoiceDialog = {"_p_wxMultiChoiceDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSingleChoiceDialog = {"_p_wxSingleChoiceDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTextEntryDialog = {"_p_wxTextEntryDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPasswordEntryDialog = {"_p_wxPasswordEntryDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyVListBox = {"_p_wxPyVListBox", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyHtmlListBox = {"_p_wxPyHtmlListBox", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMiniFrame = {"_p_wxMiniFrame", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFrame = {"_p_wxFrame", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStatusBar = {"_p_wxStatusBar", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMDIParentFrame = {"_p_wxMDIParentFrame", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSashWindow = {"_p_wxSashWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSashLayoutWindow = {"_p_wxSashLayoutWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPopupWindow = {"_p_wxPopupWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPopupTransientWindow = {"_p_wxPyPopupTransientWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTipWindow = {"_p_wxTipWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSplashScreenWindow = {"_p_wxSplashScreenWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyVScrolledWindow = {"_p_wxPyVScrolledWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyScrolledWindow = {"_p_wxPyScrolledWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTopLevelWindow = {"_p_wxTopLevelWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMDIClientWindow = {"_p_wxMDIClientWindow", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMenuBar = {"_p_wxMenuBar", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDialog = {"_p_wxDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxColourDialog = {"_p_wxColourDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDirDialog = {"_p_wxDirDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFontDialog = {"_p_wxFontDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyApp = {"_p_wxPyApp", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPreviewControlBar = {"_p_wxPreviewControlBar", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPreviewControlBar = {"_p_wxPyPreviewControlBar", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyValidator = {"_p_wxPyValidator", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFont = {"_p_wxFont", "wxFont *", 0, 0, 0};
static swig_type_info _swigt__p_wxIcon = {"_p_wxIcon", "wxIcon *", 0, 0, 0};
static swig_type_info _swigt__p_wxImageList = {"_p_wxImageList", "wxImageList *", 0, 0, 0};
static swig_type_info _swigt__p_wxLEDNumberCtrl = {"_p_wxLEDNumberCtrl", "wxLEDNumberCtrl *", 0, 0, 0};
static swig_type_info _swigt__p_wxObject = {"_p_wxObject", "wxObject *", 0, 0, 0};
static swig_type_info _swigt__p_wxIndividualLayoutConstraint = {"_p_wxIndividualLayoutConstraint", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMenuItem = {"_p_wxMenuItem", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxImage = {"_p_wxImage", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPySizer = {"_p_wxPySizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGenericDragImage = {"_p_wxGenericDragImage", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxLayoutAlgorithm = {"_p_wxLayoutAlgorithm", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxListItem = {"_p_wxListItem", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFindReplaceData = {"_p_wxFindReplaceData", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPageSetupDialogData = {"_p_wxPageSetupDialogData", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrintDialogData = {"_p_wxPrintDialogData", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrinter = {"_p_wxPrinter", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFlexGridSizer = {"_p_wxFlexGridSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGridSizer = {"_p_wxGridSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxAcceleratorTable = {"_p_wxAcceleratorTable", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxContextHelp = {"_p_wxContextHelp", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxColourData = {"_p_wxColourData", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPrintout = {"_p_wxPyPrintout", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStdDialogButtonSizer = {"_p_wxStdDialogButtonSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrintData = {"_p_wxPrintData", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFontData = {"_p_wxFontData", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFileSystem = {"_p_wxFileSystem", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPrintPreview = {"_p_wxPyPrintPreview", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrintPreview = {"_p_wxPrintPreview", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxLayoutConstraints = {"_p_wxLayoutConstraints", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSizer = {"_p_wxSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBoxSizer = {"_p_wxBoxSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStaticBoxSizer = {"_p_wxStaticBoxSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGridBagSizer = {"_p_wxGridBagSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFSFile = {"_p_wxFSFile", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSizerItem = {"_p_wxSizerItem", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGBSizerItem = {"_p_wxGBSizerItem", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrintDialog = {"_p_wxPrintDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPageSetupDialog = {"_p_wxPageSetupDialog", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPCXHandler = {"_p_wxPCXHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxJPEGHandler = {"_p_wxJPEGHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPNMHandler = {"_p_wxPNMHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGIFHandler = {"_p_wxGIFHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPNGHandler = {"_p_wxPNGHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxANIHandler = {"_p_wxANIHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCURHandler = {"_p_wxCURHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxICOHandler = {"_p_wxICOHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBMPHandler = {"_p_wxBMPHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyImageHandler = {"_p_wxPyImageHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxImageHandler = {"_p_wxImageHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxXPMHandler = {"_p_wxXPMHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTIFFHandler = {"_p_wxTIFFHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxToolBarToolBase = {"_p_wxToolBarToolBase", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPanel = {"_p_wxPanel", "wxPanel *", 0, 0, 0};
static swig_type_info _swigt__p_wxPaperSize = {"_p_wxPaperSize", "enum wxPaperSize *|wxPaperSize *", 0, 0, 0};
static swig_type_info _swigt__p_wxPyListCtrl = {"_p_wxPyListCtrl", "wxPyListCtrl *", 0, 0, 0};
static swig_type_info _swigt__p_wxPyTreeCompanionWindow = {"_p_wxPyTreeCompanionWindow", "wxPyTreeCompanionWindow *", 0, 0, 0};
static swig_type_info _swigt__p_wxPyTreeCtrl = {"_p_wxPyTreeCtrl", "wxPyTreeCtrl *", 0, 0, 0};
static swig_type_info _swigt__p_wxPyTreeItemData = {"_p_wxPyTreeItemData", "wxPyTreeItemData *", 0, 0, 0};
static swig_type_info _swigt__p_wxPyTreeListCtrl = {"_p_wxPyTreeListCtrl", "wxPyTreeListCtrl *", 0, 0, 0};
static swig_type_info _swigt__p_wxRemotelyScrolledTreeCtrl = {"_p_wxRemotelyScrolledTreeCtrl", "wxRemotelyScrolledTreeCtrl *", 0, 0, 0};
static swig_type_info _swigt__p_wxScrollBar = {"_p_wxScrollBar", "wxScrollBar *", 0, 0, 0};
static swig_type_info _swigt__p_wxScrolledWindow = {"_p_wxScrolledWindow", "wxScrolledWindow *", 0, 0, 0};
static swig_type_info _swigt__p_wxSplitterScrolledWindow = {"_p_wxSplitterScrolledWindow", "wxSplitterScrolledWindow *", 0, 0, 0};
static swig_type_info _swigt__p_wxSplitterWindow = {"_p_wxSplitterWindow", "wxSplitterWindow *", 0, 0, 0};
static swig_type_info _swigt__p_wxStaticPicture = {"_p_wxStaticPicture", "wxStaticPicture *", 0, 0, 0};
static swig_type_info _swigt__p_wxThinSplitterWindow = {"_p_wxThinSplitterWindow", "wxThinSplitterWindow *", 0, 0, 0};
static swig_type_info _swigt__p_wxTreeItemId = {"_p_wxTreeItemId", "wxTreeItemId *", 0, 0, 0};
static swig_type_info _swigt__p_wxTreeListColumnInfo = {"_p_wxTreeListColumnInfo", "wxTreeListColumnInfo *", 0, 0, 0};
static swig_type_info _swigt__p_wxValidator = {"_p_wxValidator", "wxValidator *", 0, 0, 0};
static swig_type_info _swigt__p_wxWindow = {"_p_wxWindow", "wxWindow *", 0, 0, 0};
static swig_type_info _swigt__ptrdiff_t = {"_ptrdiff_t", "ptrdiff_t", 0, 0, 0};
static swig_type_info _swigt__std__ptrdiff_t = {"_std__ptrdiff_t", "std::ptrdiff_t", 0, 0, 0};
static swig_type_info _swigt__unsigned_int = {"_unsigned_int", "unsigned int|std::size_t", 0, 0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_char,
  &_swigt__p_float,
  &_swigt__p_form_ops_t,
  &_swigt__p_int,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_wxANIHandler,
  &_swigt__p_wxAcceleratorTable,
  &_swigt__p_wxActivateEvent,
  &_swigt__p_wxArrayString,
  &_swigt__p_wxBMPHandler,
  &_swigt__p_wxBitmap,
  &_swigt__p_wxBitmapButton,
  &_swigt__p_wxBookCtrlBase,
  &_swigt__p_wxBookCtrlBaseEvent,
  &_swigt__p_wxBoxSizer,
  &_swigt__p_wxButton,
  &_swigt__p_wxCURHandler,
  &_swigt__p_wxCalculateLayoutEvent,
  &_swigt__p_wxCheckBox,
  &_swigt__p_wxCheckListBox,
  &_swigt__p_wxChildFocusEvent,
  &_swigt__p_wxChoice,
  &_swigt__p_wxChoicebook,
  &_swigt__p_wxChoicebookEvent,
  &_swigt__p_wxCloseEvent,
  &_swigt__p_wxColour,
  &_swigt__p_wxColourData,
  &_swigt__p_wxColourDialog,
  &_swigt__p_wxComboBox,
  &_swigt__p_wxCommandEvent,
  &_swigt__p_wxContextHelp,
  &_swigt__p_wxContextHelpButton,
  &_swigt__p_wxContextMenuEvent,
  &_swigt__p_wxControl,
  &_swigt__p_wxControlWithItems,
  &_swigt__p_wxDateEvent,
  &_swigt__p_wxDatePickerCtrl,
  &_swigt__p_wxDialog,
  &_swigt__p_wxDirDialog,
  &_swigt__p_wxDirFilterListCtrl,
  &_swigt__p_wxDisplayChangedEvent,
  &_swigt__p_wxDropFilesEvent,
  &_swigt__p_wxDuplexMode,
  &_swigt__p_wxDynamicSashSplitEvent,
  &_swigt__p_wxDynamicSashUnifyEvent,
  &_swigt__p_wxDynamicSashWindow,
  &_swigt__p_wxEditableListBox,
  &_swigt__p_wxEraseEvent,
  &_swigt__p_wxEvent,
  &_swigt__p_wxEvtHandler,
  &_swigt__p_wxFSFile,
  &_swigt__p_wxFileDialog,
  &_swigt__p_wxFileSystem,
  &_swigt__p_wxFindDialogEvent,
  &_swigt__p_wxFindReplaceData,
  &_swigt__p_wxFindReplaceDialog,
  &_swigt__p_wxFlexGridSizer,
  &_swigt__p_wxFocusEvent,
  &_swigt__p_wxFont,
  &_swigt__p_wxFontData,
  &_swigt__p_wxFontDialog,
  &_swigt__p_wxFrame,
  &_swigt__p_wxGBSizerItem,
  &_swigt__p_wxGIFHandler,
  &_swigt__p_wxGauge,
  &_swigt__p_wxGenericDirCtrl,
  &_swigt__p_wxGenericDragImage,
  &_swigt__p_wxGridBagSizer,
  &_swigt__p_wxGridSizer,
  &_swigt__p_wxHelpEvent,
  &_swigt__p_wxICOHandler,
  &_swigt__p_wxIcon,
  &_swigt__p_wxIconizeEvent,
  &_swigt__p_wxIdleEvent,
  &_swigt__p_wxImage,
  &_swigt__p_wxImageHandler,
  &_swigt__p_wxImageList,
  &_swigt__p_wxIndividualLayoutConstraint,
  &_swigt__p_wxInitDialogEvent,
  &_swigt__p_wxJPEGHandler,
  &_swigt__p_wxKeyEvent,
  &_swigt__p_wxLEDNumberCtrl,
  &_swigt__p_wxLayoutAlgorithm,
  &_swigt__p_wxLayoutConstraints,
  &_swigt__p_wxListBox,
  &_swigt__p_wxListEvent,
  &_swigt__p_wxListItem,
  &_swigt__p_wxListView,
  &_swigt__p_wxListbook,
  &_swigt__p_wxListbookEvent,
  &_swigt__p_wxMDIChildFrame,
  &_swigt__p_wxMDIClientWindow,
  &_swigt__p_wxMDIParentFrame,
  &_swigt__p_wxMaximizeEvent,
  &_swigt__p_wxMenu,
  &_swigt__p_wxMenuBar,
  &_swigt__p_wxMenuEvent,
  &_swigt__p_wxMenuItem,
  &_swigt__p_wxMessageDialog,
  &_swigt__p_wxMiniFrame,
  &_swigt__p_wxMouseCaptureChangedEvent,
  &_swigt__p_wxMouseEvent,
  &_swigt__p_wxMoveEvent,
  &_swigt__p_wxMultiChoiceDialog,
  &_swigt__p_wxNavigationKeyEvent,
  &_swigt__p_wxNcPaintEvent,
  &_swigt__p_wxNotebook,
  &_swigt__p_wxNotebookEvent,
  &_swigt__p_wxNotifyEvent,
  &_swigt__p_wxObject,
  &_swigt__p_wxPCXHandler,
  &_swigt__p_wxPNGHandler,
  &_swigt__p_wxPNMHandler,
  &_swigt__p_wxPageSetupDialog,
  &_swigt__p_wxPageSetupDialogData,
  &_swigt__p_wxPaintEvent,
  &_swigt__p_wxPaletteChangedEvent,
  &_swigt__p_wxPanel,
  &_swigt__p_wxPaperSize,
  &_swigt__p_wxPasswordEntryDialog,
  &_swigt__p_wxPopupWindow,
  &_swigt__p_wxPreviewCanvas,
  &_swigt__p_wxPreviewControlBar,
  &_swigt__p_wxPreviewFrame,
  &_swigt__p_wxPrintData,
  &_swigt__p_wxPrintDialog,
  &_swigt__p_wxPrintDialogData,
  &_swigt__p_wxPrintPreview,
  &_swigt__p_wxPrinter,
  &_swigt__p_wxProgressDialog,
  &_swigt__p_wxPyApp,
  &_swigt__p_wxPyCommandEvent,
  &_swigt__p_wxPyControl,
  &_swigt__p_wxPyEvent,
  &_swigt__p_wxPyHtmlListBox,
  &_swigt__p_wxPyImageHandler,
  &_swigt__p_wxPyListCtrl,
  &_swigt__p_wxPyPanel,
  &_swigt__p_wxPyPopupTransientWindow,
  &_swigt__p_wxPyPreviewControlBar,
  &_swigt__p_wxPyPreviewFrame,
  &_swigt__p_wxPyPrintPreview,
  &_swigt__p_wxPyPrintout,
  &_swigt__p_wxPyScrolledWindow,
  &_swigt__p_wxPySizer,
  &_swigt__p_wxPyTaskBarIcon,
  &_swigt__p_wxPyTreeCompanionWindow,
  &_swigt__p_wxPyTreeCtrl,
  &_swigt__p_wxPyTreeItemData,
  &_swigt__p_wxPyTreeListCtrl,
  &_swigt__p_wxPyVListBox,
  &_swigt__p_wxPyVScrolledWindow,
  &_swigt__p_wxPyValidator,
  &_swigt__p_wxPyWindow,
  &_swigt__p_wxQueryLayoutInfoEvent,
  &_swigt__p_wxQueryNewPaletteEvent,
  &_swigt__p_wxRadioBox,
  &_swigt__p_wxRadioButton,
  &_swigt__p_wxRemotelyScrolledTreeCtrl,
  &_swigt__p_wxSashEvent,
  &_swigt__p_wxSashLayoutWindow,
  &_swigt__p_wxSashWindow,
  &_swigt__p_wxScrollBar,
  &_swigt__p_wxScrollEvent,
  &_swigt__p_wxScrollWinEvent,
  &_swigt__p_wxScrolledWindow,
  &_swigt__p_wxSetCursorEvent,
  &_swigt__p_wxShowEvent,
  &_swigt__p_wxSingleChoiceDialog,
  &_swigt__p_wxSizeEvent,
  &_swigt__p_wxSizer,
  &_swigt__p_wxSizerItem,
  &_swigt__p_wxSlider,
  &_swigt__p_wxSpinButton,
  &_swigt__p_wxSpinCtrl,
  &_swigt__p_wxSpinEvent,
  &_swigt__p_wxSplashScreen,
  &_swigt__p_wxSplashScreenWindow,
  &_swigt__p_wxSplitterEvent,
  &_swigt__p_wxSplitterScrolledWindow,
  &_swigt__p_wxSplitterWindow,
  &_swigt__p_wxStaticBitmap,
  &_swigt__p_wxStaticBox,
  &_swigt__p_wxStaticBoxSizer,
  &_swigt__p_wxStaticLine,
  &_swigt__p_wxStaticPicture,
  &_swigt__p_wxStaticText,
  &_swigt__p_wxStatusBar,
  &_swigt__p_wxStdDialogButtonSizer,
  &_swigt__p_wxSysColourChangedEvent,
  &_swigt__p_wxTIFFHandler,
  &_swigt__p_wxTaskBarIconEvent,
  &_swigt__p_wxTextCtrl,
  &_swigt__p_wxTextEntryDialog,
  &_swigt__p_wxTextUrlEvent,
  &_swigt__p_wxThinSplitterWindow,
  &_swigt__p_wxTipWindow,
  &_swigt__p_wxToggleButton,
  &_swigt__p_wxToolBar,
  &_swigt__p_wxToolBarBase,
  &_swigt__p_wxToolBarToolBase,
  &_swigt__p_wxToolbook,
  &_swigt__p_wxToolbookEvent,
  &_swigt__p_wxTopLevelWindow,
  &_swigt__p_wxTreeEvent,
  &_swigt__p_wxTreeItemId,
  &_swigt__p_wxTreeListColumnInfo,
  &_swigt__p_wxTreebook,
  &_swigt__p_wxTreebookEvent,
  &_swigt__p_wxUpdateUIEvent,
  &_swigt__p_wxValidator,
  &_swigt__p_wxWindow,
  &_swigt__p_wxWindowCreateEvent,
  &_swigt__p_wxWindowDestroyEvent,
  &_swigt__p_wxXPMHandler,
  &_swigt__ptrdiff_t,
  &_swigt__std__ptrdiff_t,
  &_swigt__unsigned_int,
};

static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_form_ops_t[] = {  {&_swigt__p_form_ops_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxArrayString[] = {  {&_swigt__p_wxArrayString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBitmap[] = {  {&_swigt__p_wxBitmap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxColour[] = {  {&_swigt__p_wxColour, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSashEvent[] = {{&_swigt__p_wxSashEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindowDestroyEvent[] = {{&_swigt__p_wxWindowDestroyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSplitterEvent[] = {{&_swigt__p_wxSplitterEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTextUrlEvent[] = {{&_swigt__p_wxTextUrlEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrollEvent[] = {{&_swigt__p_wxScrollEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyCommandEvent[] = {{&_swigt__p_wxPyCommandEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxContextMenuEvent[] = {{&_swigt__p_wxContextMenuEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxChildFocusEvent[] = {{&_swigt__p_wxChildFocusEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNotebookEvent[] = {{&_swigt__p_wxNotebookEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxListbookEvent[] = {{&_swigt__p_wxListbookEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxChoicebookEvent[] = {{&_swigt__p_wxChoicebookEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTreebookEvent[] = {{&_swigt__p_wxTreebookEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxToolbookEvent[] = {{&_swigt__p_wxToolbookEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDateEvent[] = {{&_swigt__p_wxDateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindowCreateEvent[] = {{&_swigt__p_wxWindowCreateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxListEvent[] = {{&_swigt__p_wxListEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBookCtrlBaseEvent[] = {{&_swigt__p_wxBookCtrlBaseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTreeEvent[] = {{&_swigt__p_wxTreeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSpinEvent[] = {{&_swigt__p_wxSpinEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxHelpEvent[] = {{&_swigt__p_wxHelpEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNotifyEvent[] = {{&_swigt__p_wxNotifyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFindDialogEvent[] = {{&_swigt__p_wxFindDialogEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxUpdateUIEvent[] = {{&_swigt__p_wxUpdateUIEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCommandEvent[] = {  {&_swigt__p_wxSashEvent, _p_wxSashEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxWindowDestroyEvent, _p_wxWindowDestroyEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxSplitterEvent, _p_wxSplitterEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxTextUrlEvent, _p_wxTextUrlEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxScrollEvent, _p_wxScrollEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxPyCommandEvent, _p_wxPyCommandEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxCommandEvent, 0, 0, 0},  {&_swigt__p_wxContextMenuEvent, _p_wxContextMenuEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxChildFocusEvent, _p_wxChildFocusEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxNotebookEvent, _p_wxNotebookEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxListbookEvent, _p_wxListbookEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxChoicebookEvent, _p_wxChoicebookEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxTreebookEvent, _p_wxTreebookEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxToolbookEvent, _p_wxToolbookEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxDateEvent, _p_wxDateEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxWindowCreateEvent, _p_wxWindowCreateEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxListEvent, _p_wxListEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxDynamicSashSplitEvent, _p_wxDynamicSashSplitEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxBookCtrlBaseEvent, _p_wxBookCtrlBaseEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxTreeEvent, _p_wxTreeEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxSpinEvent, _p_wxSpinEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxHelpEvent, _p_wxHelpEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxNotifyEvent, _p_wxNotifyEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxDynamicSashUnifyEvent, _p_wxDynamicSashUnifyEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxFindDialogEvent, _p_wxFindDialogEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxUpdateUIEvent, _p_wxUpdateUIEventTo_p_wxCommandEvent, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBookCtrlBase[] = {{&_swigt__p_wxBookCtrlBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxToolBar[] = {{&_swigt__p_wxToolBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxToggleButton[] = {{&_swigt__p_wxToggleButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxRadioButton[] = {{&_swigt__p_wxRadioButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxToolbook[] = {{&_swigt__p_wxToolbook, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyControl[] = {{&_swigt__p_wxPyControl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxToolBarBase[] = {{&_swigt__p_wxToolBarBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDirFilterListCtrl[] = {{&_swigt__p_wxDirFilterListCtrl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxComboBox[] = {{&_swigt__p_wxComboBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGenericDirCtrl[] = {{&_swigt__p_wxGenericDirCtrl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxControlWithItems[] = {{&_swigt__p_wxControlWithItems, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGauge[] = {{&_swigt__p_wxGauge, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStaticLine[] = {{&_swigt__p_wxStaticLine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxChoicebook[] = {{&_swigt__p_wxChoicebook, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxListbook[] = {{&_swigt__p_wxListbook, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCheckBox[] = {{&_swigt__p_wxCheckBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxRadioBox[] = {{&_swigt__p_wxRadioBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxChoice[] = {{&_swigt__p_wxChoice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxListBox[] = {{&_swigt__p_wxListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCheckListBox[] = {{&_swigt__p_wxCheckListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxListView[] = {{&_swigt__p_wxListView, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNotebook[] = {{&_swigt__p_wxNotebook, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStaticBitmap[] = {{&_swigt__p_wxStaticBitmap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSpinCtrl[] = {{&_swigt__p_wxSpinCtrl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStaticText[] = {{&_swigt__p_wxStaticText, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStaticBox[] = {{&_swigt__p_wxStaticBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSlider[] = {{&_swigt__p_wxSlider, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTreebook[] = {{&_swigt__p_wxTreebook, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSpinButton[] = {{&_swigt__p_wxSpinButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxButton[] = {{&_swigt__p_wxButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBitmapButton[] = {{&_swigt__p_wxBitmapButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxContextHelpButton[] = {{&_swigt__p_wxContextHelpButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDatePickerCtrl[] = {{&_swigt__p_wxDatePickerCtrl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTextCtrl[] = {{&_swigt__p_wxTextCtrl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxControl[] = {  {&_swigt__p_wxBookCtrlBase, _p_wxBookCtrlBaseTo_p_wxControl, 0, 0},  {&_swigt__p_wxToolBar, _p_wxToolBarTo_p_wxControl, 0, 0},  {&_swigt__p_wxToggleButton, _p_wxToggleButtonTo_p_wxControl, 0, 0},  {&_swigt__p_wxRadioButton, _p_wxRadioButtonTo_p_wxControl, 0, 0},  {&_swigt__p_wxLEDNumberCtrl, _p_wxLEDNumberCtrlTo_p_wxControl, 0, 0},  {&_swigt__p_wxToolbook, _p_wxToolbookTo_p_wxControl, 0, 0},  {&_swigt__p_wxControl, 0, 0, 0},  {&_swigt__p_wxPyControl, _p_wxPyControlTo_p_wxControl, 0, 0},  {&_swigt__p_wxToolBarBase, _p_wxToolBarBaseTo_p_wxControl, 0, 0},  {&_swigt__p_wxDirFilterListCtrl, _p_wxDirFilterListCtrlTo_p_wxControl, 0, 0},  {&_swigt__p_wxPyListCtrl, _p_wxPyListCtrlTo_p_wxControl, 0, 0},  {&_swigt__p_wxPyTreeListCtrl, _p_wxPyTreeListCtrlTo_p_wxControl, 0, 0},  {&_swigt__p_wxComboBox, _p_wxComboBoxTo_p_wxControl, 0, 0},  {&_swigt__p_wxGenericDirCtrl, _p_wxGenericDirCtrlTo_p_wxControl, 0, 0},  {&_swigt__p_wxScrollBar, _p_wxScrollBarTo_p_wxControl, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxControl, 0, 0},  {&_swigt__p_wxGauge, _p_wxGaugeTo_p_wxControl, 0, 0},  {&_swigt__p_wxStaticLine, _p_wxStaticLineTo_p_wxControl, 0, 0},  {&_swigt__p_wxChoicebook, _p_wxChoicebookTo_p_wxControl, 0, 0},  {&_swigt__p_wxListbook, _p_wxListbookTo_p_wxControl, 0, 0},  {&_swigt__p_wxPyTreeCtrl, _p_wxPyTreeCtrlTo_p_wxControl, 0, 0},  {&_swigt__p_wxRemotelyScrolledTreeCtrl, _p_wxRemotelyScrolledTreeCtrlTo_p_wxControl, 0, 0},  {&_swigt__p_wxCheckBox, _p_wxCheckBoxTo_p_wxControl, 0, 0},  {&_swigt__p_wxRadioBox, _p_wxRadioBoxTo_p_wxControl, 0, 0},  {&_swigt__p_wxChoice, _p_wxChoiceTo_p_wxControl, 0, 0},  {&_swigt__p_wxListBox, _p_wxListBoxTo_p_wxControl, 0, 0},  {&_swigt__p_wxCheckListBox, _p_wxCheckListBoxTo_p_wxControl, 0, 0},  {&_swigt__p_wxListView, _p_wxListViewTo_p_wxControl, 0, 0},  {&_swigt__p_wxNotebook, _p_wxNotebookTo_p_wxControl, 0, 0},  {&_swigt__p_wxStaticBitmap, _p_wxStaticBitmapTo_p_wxControl, 0, 0},  {&_swigt__p_wxSpinCtrl, _p_wxSpinCtrlTo_p_wxControl, 0, 0},  {&_swigt__p_wxStaticText, _p_wxStaticTextTo_p_wxControl, 0, 0},  {&_swigt__p_wxStaticBox, _p_wxStaticBoxTo_p_wxControl, 0, 0},  {&_swigt__p_wxSlider, _p_wxSliderTo_p_wxControl, 0, 0},  {&_swigt__p_wxTreebook, _p_wxTreebookTo_p_wxControl, 0, 0},  {&_swigt__p_wxSpinButton, _p_wxSpinButtonTo_p_wxControl, 0, 0},  {&_swigt__p_wxButton, _p_wxButtonTo_p_wxControl, 0, 0},  {&_swigt__p_wxBitmapButton, _p_wxBitmapButtonTo_p_wxControl, 0, 0},  {&_swigt__p_wxContextHelpButton, _p_wxContextHelpButtonTo_p_wxControl, 0, 0},  {&_swigt__p_wxDatePickerCtrl, _p_wxDatePickerCtrlTo_p_wxControl, 0, 0},  {&_swigt__p_wxStaticPicture, _p_wxStaticPictureTo_p_wxControl, 0, 0},  {&_swigt__p_wxTextCtrl, _p_wxTextCtrlTo_p_wxControl, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDuplexMode[] = {  {&_swigt__p_wxDuplexMode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDynamicSashSplitEvent[] = {  {&_swigt__p_wxDynamicSashSplitEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDynamicSashUnifyEvent[] = {  {&_swigt__p_wxDynamicSashUnifyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDynamicSashWindow[] = {  {&_swigt__p_wxDynamicSashWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEditableListBox[] = {  {&_swigt__p_wxEditableListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenuEvent[] = {{&_swigt__p_wxMenuEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCloseEvent[] = {{&_swigt__p_wxCloseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMouseEvent[] = {{&_swigt__p_wxMouseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEraseEvent[] = {{&_swigt__p_wxEraseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSetCursorEvent[] = {{&_swigt__p_wxSetCursorEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxInitDialogEvent[] = {{&_swigt__p_wxInitDialogEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyEvent[] = {{&_swigt__p_wxPyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCalculateLayoutEvent[] = {{&_swigt__p_wxCalculateLayoutEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIdleEvent[] = {{&_swigt__p_wxIdleEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxQueryNewPaletteEvent[] = {{&_swigt__p_wxQueryNewPaletteEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMaximizeEvent[] = {{&_swigt__p_wxMaximizeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIconizeEvent[] = {{&_swigt__p_wxIconizeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxActivateEvent[] = {{&_swigt__p_wxActivateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSizeEvent[] = {{&_swigt__p_wxSizeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMoveEvent[] = {{&_swigt__p_wxMoveEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPaintEvent[] = {{&_swigt__p_wxPaintEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNcPaintEvent[] = {{&_swigt__p_wxNcPaintEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPaletteChangedEvent[] = {{&_swigt__p_wxPaletteChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDisplayChangedEvent[] = {{&_swigt__p_wxDisplayChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMouseCaptureChangedEvent[] = {{&_swigt__p_wxMouseCaptureChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSysColourChangedEvent[] = {{&_swigt__p_wxSysColourChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDropFilesEvent[] = {{&_swigt__p_wxDropFilesEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFocusEvent[] = {{&_swigt__p_wxFocusEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxQueryLayoutInfoEvent[] = {{&_swigt__p_wxQueryLayoutInfoEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxShowEvent[] = {{&_swigt__p_wxShowEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNavigationKeyEvent[] = {{&_swigt__p_wxNavigationKeyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxKeyEvent[] = {{&_swigt__p_wxKeyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrollWinEvent[] = {{&_swigt__p_wxScrollWinEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTaskBarIconEvent[] = {{&_swigt__p_wxTaskBarIconEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEvent[] = {  {&_swigt__p_wxContextMenuEvent, _p_wxContextMenuEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMenuEvent, _p_wxMenuEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxCloseEvent, _p_wxCloseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMouseEvent, _p_wxMouseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxEraseEvent, _p_wxEraseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxBookCtrlBaseEvent, _p_wxBookCtrlBaseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxTreeEvent, _p_wxTreeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSetCursorEvent, _p_wxSetCursorEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSplitterEvent, _p_wxSplitterEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxInitDialogEvent, _p_wxInitDialogEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxFindDialogEvent, _p_wxFindDialogEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxScrollEvent, _p_wxScrollEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxTextUrlEvent, _p_wxTextUrlEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPyEvent, _p_wxPyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNotifyEvent, _p_wxNotifyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDynamicSashUnifyEvent, _p_wxDynamicSashUnifyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxCalculateLayoutEvent, _p_wxCalculateLayoutEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxListEvent, _p_wxListEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDynamicSashSplitEvent, _p_wxDynamicSashSplitEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxHelpEvent, _p_wxHelpEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNotebookEvent, _p_wxNotebookEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxListbookEvent, _p_wxListbookEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxChoicebookEvent, _p_wxChoicebookEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxTreebookEvent, _p_wxTreebookEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxToolbookEvent, _p_wxToolbookEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxEvent, 0, 0, 0},  {&_swigt__p_wxIdleEvent, _p_wxIdleEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxWindowCreateEvent, _p_wxWindowCreateEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxQueryNewPaletteEvent, _p_wxQueryNewPaletteEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMaximizeEvent, _p_wxMaximizeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxIconizeEvent, _p_wxIconizeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxActivateEvent, _p_wxActivateEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSizeEvent, _p_wxSizeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMoveEvent, _p_wxMoveEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDateEvent, _p_wxDateEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPaintEvent, _p_wxPaintEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNcPaintEvent, _p_wxNcPaintEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxUpdateUIEvent, _p_wxUpdateUIEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPaletteChangedEvent, _p_wxPaletteChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDisplayChangedEvent, _p_wxDisplayChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMouseCaptureChangedEvent, _p_wxMouseCaptureChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSysColourChangedEvent, _p_wxSysColourChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDropFilesEvent, _p_wxDropFilesEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxFocusEvent, _p_wxFocusEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxChildFocusEvent, _p_wxChildFocusEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSashEvent, _p_wxSashEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxQueryLayoutInfoEvent, _p_wxQueryLayoutInfoEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxShowEvent, _p_wxShowEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxCommandEvent, _p_wxCommandEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPyCommandEvent, _p_wxPyCommandEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxWindowDestroyEvent, _p_wxWindowDestroyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNavigationKeyEvent, _p_wxNavigationKeyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxKeyEvent, _p_wxKeyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSpinEvent, _p_wxSpinEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxScrollWinEvent, _p_wxScrollWinEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxTaskBarIconEvent, _p_wxTaskBarIconEventTo_p_wxEvent, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPreviewFrame[] = {{&_swigt__p_wxPyPreviewFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPreviewFrame[] = {{&_swigt__p_wxPreviewFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPanel[] = {{&_swigt__p_wxPyPanel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenu[] = {{&_swigt__p_wxMenu, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyTaskBarIcon[] = {{&_swigt__p_wxPyTaskBarIcon, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPreviewCanvas[] = {{&_swigt__p_wxPreviewCanvas, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMDIChildFrame[] = {{&_swigt__p_wxMDIChildFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyWindow[] = {{&_swigt__p_wxPyWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSplashScreen[] = {{&_swigt__p_wxSplashScreen, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMessageDialog[] = {{&_swigt__p_wxMessageDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxProgressDialog[] = {{&_swigt__p_wxProgressDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFindReplaceDialog[] = {{&_swigt__p_wxFindReplaceDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFileDialog[] = {{&_swigt__p_wxFileDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMultiChoiceDialog[] = {{&_swigt__p_wxMultiChoiceDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSingleChoiceDialog[] = {{&_swigt__p_wxSingleChoiceDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTextEntryDialog[] = {{&_swigt__p_wxTextEntryDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPasswordEntryDialog[] = {{&_swigt__p_wxPasswordEntryDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyVListBox[] = {{&_swigt__p_wxPyVListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyHtmlListBox[] = {{&_swigt__p_wxPyHtmlListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMiniFrame[] = {{&_swigt__p_wxMiniFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFrame[] = {{&_swigt__p_wxFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStatusBar[] = {{&_swigt__p_wxStatusBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMDIParentFrame[] = {{&_swigt__p_wxMDIParentFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSashWindow[] = {{&_swigt__p_wxSashWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSashLayoutWindow[] = {{&_swigt__p_wxSashLayoutWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPopupWindow[] = {{&_swigt__p_wxPopupWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPopupTransientWindow[] = {{&_swigt__p_wxPyPopupTransientWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTipWindow[] = {{&_swigt__p_wxTipWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSplashScreenWindow[] = {{&_swigt__p_wxSplashScreenWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyVScrolledWindow[] = {{&_swigt__p_wxPyVScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyScrolledWindow[] = {{&_swigt__p_wxPyScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTopLevelWindow[] = {{&_swigt__p_wxTopLevelWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMDIClientWindow[] = {{&_swigt__p_wxMDIClientWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenuBar[] = {{&_swigt__p_wxMenuBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDialog[] = {{&_swigt__p_wxDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxColourDialog[] = {{&_swigt__p_wxColourDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDirDialog[] = {{&_swigt__p_wxDirDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFontDialog[] = {{&_swigt__p_wxFontDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyApp[] = {{&_swigt__p_wxPyApp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPreviewControlBar[] = {{&_swigt__p_wxPreviewControlBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPreviewControlBar[] = {{&_swigt__p_wxPyPreviewControlBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyValidator[] = {{&_swigt__p_wxPyValidator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEvtHandler[] = {  {&_swigt__p_wxToolbook, _p_wxToolbookTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyPreviewFrame, _p_wxPyPreviewFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPreviewFrame, _p_wxPreviewFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxCheckBox, _p_wxCheckBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyTreeCtrl, _p_wxPyTreeCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxRemotelyScrolledTreeCtrl, _p_wxRemotelyScrolledTreeCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyPanel, _p_wxPyPanelTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMenu, _p_wxMenuTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyTaskBarIcon, _p_wxPyTaskBarIconTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxGenericDirCtrl, _p_wxGenericDirCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyListCtrl, _p_wxPyListCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxDirFilterListCtrl, _p_wxDirFilterListCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyTreeListCtrl, _p_wxPyTreeListCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxStaticLine, _p_wxStaticLineTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxControl, _p_wxControlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyControl, _p_wxPyControlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxGauge, _p_wxGaugeTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxToolBarBase, _p_wxToolBarBaseTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxToggleButton, _p_wxToggleButtonTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxRadioButton, _p_wxRadioButtonTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxChoice, _p_wxChoiceTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxTreebook, _p_wxTreebookTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxListView, _p_wxListViewTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxTextCtrl, _p_wxTextCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxNotebook, _p_wxNotebookTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMDIChildFrame, _p_wxMDIChildFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxChoicebook, _p_wxChoicebookTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyWindow, _p_wxPyWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSplashScreen, _p_wxSplashScreenTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxListbook, _p_wxListbookTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMessageDialog, _p_wxMessageDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxProgressDialog, _p_wxProgressDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxFindReplaceDialog, _p_wxFindReplaceDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxFileDialog, _p_wxFileDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMultiChoiceDialog, _p_wxMultiChoiceDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSingleChoiceDialog, _p_wxSingleChoiceDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxTextEntryDialog, _p_wxTextEntryDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPasswordEntryDialog, _p_wxPasswordEntryDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxStaticBitmap, _p_wxStaticBitmapTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSlider, _p_wxSliderTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxStaticBox, _p_wxStaticBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxBookCtrlBase, _p_wxBookCtrlBaseTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxEvtHandler, 0, 0, 0},  {&_swigt__p_wxPyVListBox, _p_wxPyVListBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyHtmlListBox, _p_wxPyHtmlListBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxEditableListBox, _p_wxEditableListBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxCheckListBox, _p_wxCheckListBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxListBox, _p_wxListBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxLEDNumberCtrl, _p_wxLEDNumberCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxContextHelpButton, _p_wxContextHelpButtonTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxBitmapButton, _p_wxBitmapButtonTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxButton, _p_wxButtonTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSpinButton, _p_wxSpinButtonTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxRadioBox, _p_wxRadioBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxScrollBar, _p_wxScrollBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxComboBox, _p_wxComboBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMiniFrame, _p_wxMiniFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxFrame, _p_wxFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSpinCtrl, _p_wxSpinCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxStatusBar, _p_wxStatusBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMDIParentFrame, _p_wxMDIParentFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxStaticPicture, _p_wxStaticPictureTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxThinSplitterWindow, _p_wxThinSplitterWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSplitterWindow, _p_wxSplitterWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSashWindow, _p_wxSashWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSashLayoutWindow, _p_wxSashLayoutWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPopupWindow, _p_wxPopupWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyPopupTransientWindow, _p_wxPyPopupTransientWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxTipWindow, _p_wxTipWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSplashScreenWindow, _p_wxSplashScreenWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxWindow, _p_wxWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyVScrolledWindow, _p_wxPyVScrolledWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxScrolledWindow, _p_wxScrolledWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSplitterScrolledWindow, _p_wxSplitterScrolledWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxTopLevelWindow, _p_wxTopLevelWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMDIClientWindow, _p_wxMDIClientWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMenuBar, _p_wxMenuBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxDynamicSashWindow, _p_wxDynamicSashWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyTreeCompanionWindow, _p_wxPyTreeCompanionWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxDialog, _p_wxDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxColourDialog, _p_wxColourDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxDirDialog, _p_wxDirDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxFontDialog, _p_wxFontDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPanel, _p_wxPanelTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyApp, _p_wxPyAppTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxStaticText, _p_wxStaticTextTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPreviewControlBar, _p_wxPreviewControlBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyPreviewControlBar, _p_wxPyPreviewControlBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxDatePickerCtrl, _p_wxDatePickerCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxToolBar, _p_wxToolBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyValidator, _p_wxPyValidatorTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxValidator, _p_wxValidatorTo_p_wxEvtHandler, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFont[] = {  {&_swigt__p_wxFont, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIcon[] = {  {&_swigt__p_wxIcon, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxImageList[] = {  {&_swigt__p_wxImageList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxLEDNumberCtrl[] = {  {&_swigt__p_wxLEDNumberCtrl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIndividualLayoutConstraint[] = {{&_swigt__p_wxIndividualLayoutConstraint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenuItem[] = {{&_swigt__p_wxMenuItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxImage[] = {{&_swigt__p_wxImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPySizer[] = {{&_swigt__p_wxPySizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGenericDragImage[] = {{&_swigt__p_wxGenericDragImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxLayoutAlgorithm[] = {{&_swigt__p_wxLayoutAlgorithm, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxListItem[] = {{&_swigt__p_wxListItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFindReplaceData[] = {{&_swigt__p_wxFindReplaceData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPageSetupDialogData[] = {{&_swigt__p_wxPageSetupDialogData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrintDialogData[] = {{&_swigt__p_wxPrintDialogData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrinter[] = {{&_swigt__p_wxPrinter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFlexGridSizer[] = {{&_swigt__p_wxFlexGridSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGridSizer[] = {{&_swigt__p_wxGridSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxAcceleratorTable[] = {{&_swigt__p_wxAcceleratorTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxContextHelp[] = {{&_swigt__p_wxContextHelp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxColourData[] = {{&_swigt__p_wxColourData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPrintout[] = {{&_swigt__p_wxPyPrintout, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStdDialogButtonSizer[] = {{&_swigt__p_wxStdDialogButtonSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrintData[] = {{&_swigt__p_wxPrintData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFontData[] = {{&_swigt__p_wxFontData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFileSystem[] = {{&_swigt__p_wxFileSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPrintPreview[] = {{&_swigt__p_wxPyPrintPreview, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrintPreview[] = {{&_swigt__p_wxPrintPreview, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxLayoutConstraints[] = {{&_swigt__p_wxLayoutConstraints, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSizer[] = {{&_swigt__p_wxSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBoxSizer[] = {{&_swigt__p_wxBoxSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStaticBoxSizer[] = {{&_swigt__p_wxStaticBoxSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGridBagSizer[] = {{&_swigt__p_wxGridBagSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFSFile[] = {{&_swigt__p_wxFSFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSizerItem[] = {{&_swigt__p_wxSizerItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGBSizerItem[] = {{&_swigt__p_wxGBSizerItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrintDialog[] = {{&_swigt__p_wxPrintDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPageSetupDialog[] = {{&_swigt__p_wxPageSetupDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPCXHandler[] = {{&_swigt__p_wxPCXHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxJPEGHandler[] = {{&_swigt__p_wxJPEGHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPNMHandler[] = {{&_swigt__p_wxPNMHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGIFHandler[] = {{&_swigt__p_wxGIFHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPNGHandler[] = {{&_swigt__p_wxPNGHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxANIHandler[] = {{&_swigt__p_wxANIHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCURHandler[] = {{&_swigt__p_wxCURHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxICOHandler[] = {{&_swigt__p_wxICOHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBMPHandler[] = {{&_swigt__p_wxBMPHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyImageHandler[] = {{&_swigt__p_wxPyImageHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxImageHandler[] = {{&_swigt__p_wxImageHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxXPMHandler[] = {{&_swigt__p_wxXPMHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTIFFHandler[] = {{&_swigt__p_wxTIFFHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxToolBarToolBase[] = {{&_swigt__p_wxToolBarToolBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxObject[] = {  {&_swigt__p_wxScrollBar, _p_wxScrollBarTo_p_wxObject, 0, 0},  {&_swigt__p_wxUpdateUIEvent, _p_wxUpdateUIEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxObject, 0, 0},  {&_swigt__p_wxEvent, _p_wxEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxFindDialogEvent, _p_wxFindDialogEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxInitDialogEvent, _p_wxInitDialogEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxIndividualLayoutConstraint, _p_wxIndividualLayoutConstraintTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPreviewFrame, _p_wxPyPreviewFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxPreviewFrame, _p_wxPreviewFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxToolBarBase, _p_wxToolBarBaseTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenuItem, _p_wxMenuItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxImage, _p_wxImageTo_p_wxObject, 0, 0},  {&_swigt__p_wxPySizer, _p_wxPySizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxGenericDragImage, _p_wxGenericDragImageTo_p_wxObject, 0, 0},  {&_swigt__p_wxStaticBitmap, _p_wxStaticBitmapTo_p_wxObject, 0, 0},  {&_swigt__p_wxComboBox, _p_wxComboBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxLayoutAlgorithm, _p_wxLayoutAlgorithmTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyTaskBarIcon, _p_wxPyTaskBarIconTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyApp, _p_wxPyAppTo_p_wxObject, 0, 0},  {&_swigt__p_wxTreebook, _p_wxTreebookTo_p_wxObject, 0, 0},  {&_swigt__p_wxNotebook, _p_wxNotebookTo_p_wxObject, 0, 0},  {&_swigt__p_wxListItem, _p_wxListItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxChoicebook, _p_wxChoicebookTo_p_wxObject, 0, 0},  {&_swigt__p_wxBookCtrlBase, _p_wxBookCtrlBaseTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyTreeCtrl, _p_wxPyTreeCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxRemotelyScrolledTreeCtrl, _p_wxRemotelyScrolledTreeCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPreviewControlBar, _p_wxPyPreviewControlBarTo_p_wxObject, 0, 0},  {&_swigt__p_wxPreviewControlBar, _p_wxPreviewControlBarTo_p_wxObject, 0, 0},  {&_swigt__p_wxFindReplaceData, _p_wxFindReplaceDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxStaticLine, _p_wxStaticLineTo_p_wxObject, 0, 0},  {&_swigt__p_wxValidator, _p_wxValidatorTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyValidator, _p_wxPyValidatorTo_p_wxObject, 0, 0},  {&_swigt__p_wxCloseEvent, _p_wxCloseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMouseEvent, _p_wxMouseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxEraseEvent, _p_wxEraseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxBookCtrlBaseEvent, _p_wxBookCtrlBaseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxTreeEvent, _p_wxTreeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxTextUrlEvent, _p_wxTextUrlEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxScrollEvent, _p_wxScrollEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPageSetupDialogData, _p_wxPageSetupDialogDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrintDialogData, _p_wxPrintDialogDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrinter, _p_wxPrinterTo_p_wxObject, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxObject, 0, 0},  {&_swigt__p_wxObject, 0, 0, 0},  {&_swigt__p_wxRadioBox, _p_wxRadioBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxFlexGridSizer, _p_wxFlexGridSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxGridSizer, _p_wxGridSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxTreeListColumnInfo, _p_wxTreeListColumnInfoTo_p_wxObject, 0, 0},  {&_swigt__p_wxAcceleratorTable, _p_wxAcceleratorTableTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyControl, _p_wxPyControlTo_p_wxObject, 0, 0},  {&_swigt__p_wxControl, _p_wxControlTo_p_wxObject, 0, 0},  {&_swigt__p_wxContextHelp, _p_wxContextHelpTo_p_wxObject, 0, 0},  {&_swigt__p_wxColourData, _p_wxColourDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxIconizeEvent, _p_wxIconizeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxActivateEvent, _p_wxActivateEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSizeEvent, _p_wxSizeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMoveEvent, _p_wxMoveEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMaximizeEvent, _p_wxMaximizeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxQueryNewPaletteEvent, _p_wxQueryNewPaletteEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindowCreateEvent, _p_wxWindowCreateEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxIdleEvent, _p_wxIdleEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxDateEvent, _p_wxDateEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxStaticText, _p_wxStaticTextTo_p_wxObject, 0, 0},  {&_swigt__p_wxCalculateLayoutEvent, _p_wxCalculateLayoutEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxListEvent, _p_wxListEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxDynamicSashSplitEvent, _p_wxDynamicSashSplitEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPrintout, _p_wxPyPrintoutTo_p_wxObject, 0, 0},  {&_swigt__p_wxGauge, _p_wxGaugeTo_p_wxObject, 0, 0},  {&_swigt__p_wxMDIChildFrame, _p_wxMDIChildFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxStdDialogButtonSizer, _p_wxStdDialogButtonSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxChoice, _p_wxChoiceTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenu, _p_wxMenuTo_p_wxObject, 0, 0},  {&_swigt__p_wxContextHelpButton, _p_wxContextHelpButtonTo_p_wxObject, 0, 0},  {&_swigt__p_wxBitmapButton, _p_wxBitmapButtonTo_p_wxObject, 0, 0},  {&_swigt__p_wxButton, _p_wxButtonTo_p_wxObject, 0, 0},  {&_swigt__p_wxSpinButton, _p_wxSpinButtonTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindowDestroyEvent, _p_wxWindowDestroyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxNavigationKeyEvent, _p_wxNavigationKeyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxKeyEvent, _p_wxKeyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSashEvent, _p_wxSashEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyHtmlListBox, _p_wxPyHtmlListBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyVListBox, _p_wxPyVListBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxEditableListBox, _p_wxEditableListBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxListBox, _p_wxListBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxCheckListBox, _p_wxCheckListBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrintData, _p_wxPrintDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxFontData, _p_wxFontDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxMiniFrame, _p_wxMiniFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxListbook, _p_wxListbookTo_p_wxObject, 0, 0},  {&_swigt__p_wxFrame, _p_wxFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPanel, _p_wxPyPanelTo_p_wxObject, 0, 0},  {&_swigt__p_wxStaticBox, _p_wxStaticBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxQueryLayoutInfoEvent, _p_wxQueryLayoutInfoEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSplashScreen, _p_wxSplashScreenTo_p_wxObject, 0, 0},  {&_swigt__p_wxFileSystem, _p_wxFileSystemTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPrintPreview, _p_wxPyPrintPreviewTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrintPreview, _p_wxPrintPreviewTo_p_wxObject, 0, 0},  {&_swigt__p_wxListView, _p_wxListViewTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyTreeListCtrl, _p_wxPyTreeListCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyListCtrl, _p_wxPyListCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxDirFilterListCtrl, _p_wxDirFilterListCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxLayoutConstraints, _p_wxLayoutConstraintsTo_p_wxObject, 0, 0},  {&_swigt__p_wxSizer, _p_wxSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxBoxSizer, _p_wxBoxSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxStaticBoxSizer, _p_wxStaticBoxSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxGridBagSizer, _p_wxGridBagSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPaintEvent, _p_wxPaintEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxNcPaintEvent, _p_wxNcPaintEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxFSFile, _p_wxFSFileTo_p_wxObject, 0, 0},  {&_swigt__p_wxSetCursorEvent, _p_wxSetCursorEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSplitterEvent, _p_wxSplitterEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxTextCtrl, _p_wxTextCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxRadioButton, _p_wxRadioButtonTo_p_wxObject, 0, 0},  {&_swigt__p_wxToggleButton, _p_wxToggleButtonTo_p_wxObject, 0, 0},  {&_swigt__p_wxSizerItem, _p_wxSizerItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxGBSizerItem, _p_wxGBSizerItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrintDialog, _p_wxPrintDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxPageSetupDialog, _p_wxPageSetupDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxFontDialog, _p_wxFontDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxDirDialog, _p_wxDirDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxColourDialog, _p_wxColourDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxDialog, _p_wxDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyEvent, _p_wxPyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxNotifyEvent, _p_wxNotifyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxDynamicSashUnifyEvent, _p_wxDynamicSashUnifyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxGenericDirCtrl, _p_wxGenericDirCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxStaticPicture, _p_wxStaticPictureTo_p_wxObject, 0, 0},  {&_swigt__p_wxPCXHandler, _p_wxPCXHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxJPEGHandler, _p_wxJPEGHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPNMHandler, _p_wxPNMHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxShowEvent, _p_wxShowEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxGIFHandler, _p_wxGIFHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPNGHandler, _p_wxPNGHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxANIHandler, _p_wxANIHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxCURHandler, _p_wxCURHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxICOHandler, _p_wxICOHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxBMPHandler, _p_wxBMPHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyImageHandler, _p_wxPyImageHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxImageHandler, _p_wxImageHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxXPMHandler, _p_wxXPMHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxTIFFHandler, _p_wxTIFFHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxEvtHandler, _p_wxEvtHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxTipWindow, _p_wxTipWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPopupTransientWindow, _p_wxPyPopupTransientWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPopupWindow, _p_wxPopupWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSashLayoutWindow, _p_wxSashLayoutWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSashWindow, _p_wxSashWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSplitterWindow, _p_wxSplitterWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxThinSplitterWindow, _p_wxThinSplitterWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSplashScreenWindow, _p_wxSplashScreenWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindow, _p_wxWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyVScrolledWindow, _p_wxPyVScrolledWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxScrolledWindow, _p_wxScrolledWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSplitterScrolledWindow, _p_wxSplitterScrolledWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxTopLevelWindow, _p_wxTopLevelWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxMDIClientWindow, _p_wxMDIClientWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxDynamicSashWindow, _p_wxDynamicSashWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyTreeCompanionWindow, _p_wxPyTreeCompanionWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSpinCtrl, _p_wxSpinCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxNotebookEvent, _p_wxNotebookEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxListbookEvent, _p_wxListbookEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxChoicebookEvent, _p_wxChoicebookEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxTreebookEvent, _p_wxTreebookEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxToolbookEvent, _p_wxToolbookEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPasswordEntryDialog, _p_wxPasswordEntryDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxTextEntryDialog, _p_wxTextEntryDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxSingleChoiceDialog, _p_wxSingleChoiceDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxMultiChoiceDialog, _p_wxMultiChoiceDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxFileDialog, _p_wxFileDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxFindReplaceDialog, _p_wxFindReplaceDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxProgressDialog, _p_wxProgressDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxMessageDialog, _p_wxMessageDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxToolBarToolBase, _p_wxToolBarToolBaseTo_p_wxObject, 0, 0},  {&_swigt__p_wxDatePickerCtrl, _p_wxDatePickerCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxSlider, _p_wxSliderTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyWindow, _p_wxPyWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPaletteChangedEvent, _p_wxPaletteChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxDisplayChangedEvent, _p_wxDisplayChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMouseCaptureChangedEvent, _p_wxMouseCaptureChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSysColourChangedEvent, _p_wxSysColourChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxCheckBox, _p_wxCheckBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxHelpEvent, _p_wxHelpEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPanel, _p_wxPanelTo_p_wxObject, 0, 0},  {&_swigt__p_wxSpinEvent, _p_wxSpinEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxScrollWinEvent, _p_wxScrollWinEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxTaskBarIconEvent, _p_wxTaskBarIconEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxContextMenuEvent, _p_wxContextMenuEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenuEvent, _p_wxMenuEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxLEDNumberCtrl, _p_wxLEDNumberCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxToolBar, _p_wxToolBarTo_p_wxObject, 0, 0},  {&_swigt__p_wxCommandEvent, _p_wxCommandEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyCommandEvent, _p_wxPyCommandEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxToolbook, _p_wxToolbookTo_p_wxObject, 0, 0},  {&_swigt__p_wxStatusBar, _p_wxStatusBarTo_p_wxObject, 0, 0},  {&_swigt__p_wxDropFilesEvent, _p_wxDropFilesEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxFocusEvent, _p_wxFocusEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxChildFocusEvent, _p_wxChildFocusEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMDIParentFrame, _p_wxMDIParentFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenuBar, _p_wxMenuBarTo_p_wxObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPanel[] = {  {&_swigt__p_wxPanel, 0, 0, 0},  {&_swigt__p_wxScrolledWindow, _p_wxScrolledWindowTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxPanel, 0, 0},  {&_swigt__p_wxSplitterScrolledWindow, _p_wxSplitterScrolledWindowTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyVScrolledWindow, _p_wxPyVScrolledWindowTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyVListBox, _p_wxPyVListBoxTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyHtmlListBox, _p_wxPyHtmlListBoxTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyPanel, _p_wxPyPanelTo_p_wxPanel, 0, 0},  {&_swigt__p_wxEditableListBox, _p_wxEditableListBoxTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPreviewControlBar, _p_wxPreviewControlBarTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyPreviewControlBar, _p_wxPyPreviewControlBarTo_p_wxPanel, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPaperSize[] = {  {&_swigt__p_wxPaperSize, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyListCtrl[] = {  {&_swigt__p_wxPyListCtrl, 0, 0, 0},  {&_swigt__p_wxListView, _p_wxListViewTo_p_wxPyListCtrl, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyTreeCompanionWindow[] = {  {&_swigt__p_wxPyTreeCompanionWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyTreeCtrl[] = {  {&_swigt__p_wxPyTreeCtrl, 0, 0, 0},  {&_swigt__p_wxRemotelyScrolledTreeCtrl, _p_wxRemotelyScrolledTreeCtrlTo_p_wxPyTreeCtrl, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyTreeItemData[] = {  {&_swigt__p_wxPyTreeItemData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyTreeListCtrl[] = {  {&_swigt__p_wxPyTreeListCtrl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxRemotelyScrolledTreeCtrl[] = {  {&_swigt__p_wxRemotelyScrolledTreeCtrl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrollBar[] = {  {&_swigt__p_wxScrollBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrolledWindow[] = {  {&_swigt__p_wxScrolledWindow, 0, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxScrolledWindow, 0, 0},  {&_swigt__p_wxSplitterScrolledWindow, _p_wxSplitterScrolledWindowTo_p_wxScrolledWindow, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxScrolledWindow, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSplitterScrolledWindow[] = {  {&_swigt__p_wxSplitterScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSplitterWindow[] = {  {&_swigt__p_wxSplitterWindow, 0, 0, 0},  {&_swigt__p_wxThinSplitterWindow, _p_wxThinSplitterWindowTo_p_wxSplitterWindow, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStaticPicture[] = {  {&_swigt__p_wxStaticPicture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxThinSplitterWindow[] = {  {&_swigt__p_wxThinSplitterWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTreeItemId[] = {  {&_swigt__p_wxTreeItemId, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTreeListColumnInfo[] = {  {&_swigt__p_wxTreeListColumnInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxValidator[] = {  {&_swigt__p_wxValidator, 0, 0, 0},  {&_swigt__p_wxPyValidator, _p_wxPyValidatorTo_p_wxValidator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindow[] = {  {&_swigt__p_wxToolbook, _p_wxToolbookTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyPreviewFrame, _p_wxPyPreviewFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPreviewFrame, _p_wxPreviewFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxCheckBox, _p_wxCheckBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyTreeCtrl, _p_wxPyTreeCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxRemotelyScrolledTreeCtrl, _p_wxRemotelyScrolledTreeCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyPanel, _p_wxPyPanelTo_p_wxWindow, 0, 0},  {&_swigt__p_wxGenericDirCtrl, _p_wxGenericDirCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyListCtrl, _p_wxPyListCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxDirFilterListCtrl, _p_wxDirFilterListCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyTreeListCtrl, _p_wxPyTreeListCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxWindow, 0, 0},  {&_swigt__p_wxStaticLine, _p_wxStaticLineTo_p_wxWindow, 0, 0},  {&_swigt__p_wxControl, _p_wxControlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyControl, _p_wxPyControlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxGauge, _p_wxGaugeTo_p_wxWindow, 0, 0},  {&_swigt__p_wxToolBarBase, _p_wxToolBarBaseTo_p_wxWindow, 0, 0},  {&_swigt__p_wxToggleButton, _p_wxToggleButtonTo_p_wxWindow, 0, 0},  {&_swigt__p_wxRadioButton, _p_wxRadioButtonTo_p_wxWindow, 0, 0},  {&_swigt__p_wxChoice, _p_wxChoiceTo_p_wxWindow, 0, 0},  {&_swigt__p_wxTreebook, _p_wxTreebookTo_p_wxWindow, 0, 0},  {&_swigt__p_wxListView, _p_wxListViewTo_p_wxWindow, 0, 0},  {&_swigt__p_wxTextCtrl, _p_wxTextCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxNotebook, _p_wxNotebookTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMDIChildFrame, _p_wxMDIChildFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxChoicebook, _p_wxChoicebookTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyWindow, _p_wxPyWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSplashScreen, _p_wxSplashScreenTo_p_wxWindow, 0, 0},  {&_swigt__p_wxListbook, _p_wxListbookTo_p_wxWindow, 0, 0},  {&_swigt__p_wxTextEntryDialog, _p_wxTextEntryDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSingleChoiceDialog, _p_wxSingleChoiceDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMultiChoiceDialog, _p_wxMultiChoiceDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxFileDialog, _p_wxFileDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPasswordEntryDialog, _p_wxPasswordEntryDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMessageDialog, _p_wxMessageDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxProgressDialog, _p_wxProgressDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxFindReplaceDialog, _p_wxFindReplaceDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxStaticBitmap, _p_wxStaticBitmapTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSlider, _p_wxSliderTo_p_wxWindow, 0, 0},  {&_swigt__p_wxStaticBox, _p_wxStaticBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxBookCtrlBase, _p_wxBookCtrlBaseTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyVListBox, _p_wxPyVListBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyHtmlListBox, _p_wxPyHtmlListBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxEditableListBox, _p_wxEditableListBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxCheckListBox, _p_wxCheckListBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxListBox, _p_wxListBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxLEDNumberCtrl, _p_wxLEDNumberCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxContextHelpButton, _p_wxContextHelpButtonTo_p_wxWindow, 0, 0},  {&_swigt__p_wxBitmapButton, _p_wxBitmapButtonTo_p_wxWindow, 0, 0},  {&_swigt__p_wxButton, _p_wxButtonTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSpinButton, _p_wxSpinButtonTo_p_wxWindow, 0, 0},  {&_swigt__p_wxRadioBox, _p_wxRadioBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxScrollBar, _p_wxScrollBarTo_p_wxWindow, 0, 0},  {&_swigt__p_wxComboBox, _p_wxComboBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMiniFrame, _p_wxMiniFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxFrame, _p_wxFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSpinCtrl, _p_wxSpinCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxStatusBar, _p_wxStatusBarTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMDIParentFrame, _p_wxMDIParentFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxStaticPicture, _p_wxStaticPictureTo_p_wxWindow, 0, 0},  {&_swigt__p_wxTopLevelWindow, _p_wxTopLevelWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSplitterScrolledWindow, _p_wxSplitterScrolledWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxScrolledWindow, _p_wxScrolledWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSashLayoutWindow, _p_wxSashLayoutWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPopupWindow, _p_wxPopupWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyPopupTransientWindow, _p_wxPyPopupTransientWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxTipWindow, _p_wxTipWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyVScrolledWindow, _p_wxPyVScrolledWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxWindow, 0, 0, 0},  {&_swigt__p_wxSplashScreenWindow, _p_wxSplashScreenWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSplitterWindow, _p_wxSplitterWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxThinSplitterWindow, _p_wxThinSplitterWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSashWindow, _p_wxSashWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMDIClientWindow, _p_wxMDIClientWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMenuBar, _p_wxMenuBarTo_p_wxWindow, 0, 0},  {&_swigt__p_wxDynamicSashWindow, _p_wxDynamicSashWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyTreeCompanionWindow, _p_wxPyTreeCompanionWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxDialog, _p_wxDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxColourDialog, _p_wxColourDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxDirDialog, _p_wxDirDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxFontDialog, _p_wxFontDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPanel, _p_wxPanelTo_p_wxWindow, 0, 0},  {&_swigt__p_wxStaticText, _p_wxStaticTextTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPreviewControlBar, _p_wxPreviewControlBarTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyPreviewControlBar, _p_wxPyPreviewControlBarTo_p_wxWindow, 0, 0},  {&_swigt__p_wxDatePickerCtrl, _p_wxDatePickerCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxWindow, 0, 0},  {&_swigt__p_wxToolBar, _p_wxToolBarTo_p_wxWindow, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__ptrdiff_t[] = {  {&_swigt__ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__std__ptrdiff_t[] = {  {&_swigt__std__ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__unsigned_int[] = {  {&_swigt__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_char,
  _swigc__p_float,
  _swigc__p_form_ops_t,
  _swigc__p_int,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_wxANIHandler,
  _swigc__p_wxAcceleratorTable,
  _swigc__p_wxActivateEvent,
  _swigc__p_wxArrayString,
  _swigc__p_wxBMPHandler,
  _swigc__p_wxBitmap,
  _swigc__p_wxBitmapButton,
  _swigc__p_wxBookCtrlBase,
  _swigc__p_wxBookCtrlBaseEvent,
  _swigc__p_wxBoxSizer,
  _swigc__p_wxButton,
  _swigc__p_wxCURHandler,
  _swigc__p_wxCalculateLayoutEvent,
  _swigc__p_wxCheckBox,
  _swigc__p_wxCheckListBox,
  _swigc__p_wxChildFocusEvent,
  _swigc__p_wxChoice,
  _swigc__p_wxChoicebook,
  _swigc__p_wxChoicebookEvent,
  _swigc__p_wxCloseEvent,
  _swigc__p_wxColour,
  _swigc__p_wxColourData,
  _swigc__p_wxColourDialog,
  _swigc__p_wxComboBox,
  _swigc__p_wxCommandEvent,
  _swigc__p_wxContextHelp,
  _swigc__p_wxContextHelpButton,
  _swigc__p_wxContextMenuEvent,
  _swigc__p_wxControl,
  _swigc__p_wxControlWithItems,
  _swigc__p_wxDateEvent,
  _swigc__p_wxDatePickerCtrl,
  _swigc__p_wxDialog,
  _swigc__p_wxDirDialog,
  _swigc__p_wxDirFilterListCtrl,
  _swigc__p_wxDisplayChangedEvent,
  _swigc__p_wxDropFilesEvent,
  _swigc__p_wxDuplexMode,
  _swigc__p_wxDynamicSashSplitEvent,
  _swigc__p_wxDynamicSashUnifyEvent,
  _swigc__p_wxDynamicSashWindow,
  _swigc__p_wxEditableListBox,
  _swigc__p_wxEraseEvent,
  _swigc__p_wxEvent,
  _swigc__p_wxEvtHandler,
  _swigc__p_wxFSFile,
  _swigc__p_wxFileDialog,
  _swigc__p_wxFileSystem,
  _swigc__p_wxFindDialogEvent,
  _swigc__p_wxFindReplaceData,
  _swigc__p_wxFindReplaceDialog,
  _swigc__p_wxFlexGridSizer,
  _swigc__p_wxFocusEvent,
  _swigc__p_wxFont,
  _swigc__p_wxFontData,
  _swigc__p_wxFontDialog,
  _swigc__p_wxFrame,
  _swigc__p_wxGBSizerItem,
  _swigc__p_wxGIFHandler,
  _swigc__p_wxGauge,
  _swigc__p_wxGenericDirCtrl,
  _swigc__p_wxGenericDragImage,
  _swigc__p_wxGridBagSizer,
  _swigc__p_wxGridSizer,
  _swigc__p_wxHelpEvent,
  _swigc__p_wxICOHandler,
  _swigc__p_wxIcon,
  _swigc__p_wxIconizeEvent,
  _swigc__p_wxIdleEvent,
  _swigc__p_wxImage,
  _swigc__p_wxImageHandler,
  _swigc__p_wxImageList,
  _swigc__p_wxIndividualLayoutConstraint,
  _swigc__p_wxInitDialogEvent,
  _swigc__p_wxJPEGHandler,
  _swigc__p_wxKeyEvent,
  _swigc__p_wxLEDNumberCtrl,
  _swigc__p_wxLayoutAlgorithm,
  _swigc__p_wxLayoutConstraints,
  _swigc__p_wxListBox,
  _swigc__p_wxListEvent,
  _swigc__p_wxListItem,
  _swigc__p_wxListView,
  _swigc__p_wxListbook,
  _swigc__p_wxListbookEvent,
  _swigc__p_wxMDIChildFrame,
  _swigc__p_wxMDIClientWindow,
  _swigc__p_wxMDIParentFrame,
  _swigc__p_wxMaximizeEvent,
  _swigc__p_wxMenu,
  _swigc__p_wxMenuBar,
  _swigc__p_wxMenuEvent,
  _swigc__p_wxMenuItem,
  _swigc__p_wxMessageDialog,
  _swigc__p_wxMiniFrame,
  _swigc__p_wxMouseCaptureChangedEvent,
  _swigc__p_wxMouseEvent,
  _swigc__p_wxMoveEvent,
  _swigc__p_wxMultiChoiceDialog,
  _swigc__p_wxNavigationKeyEvent,
  _swigc__p_wxNcPaintEvent,
  _swigc__p_wxNotebook,
  _swigc__p_wxNotebookEvent,
  _swigc__p_wxNotifyEvent,
  _swigc__p_wxObject,
  _swigc__p_wxPCXHandler,
  _swigc__p_wxPNGHandler,
  _swigc__p_wxPNMHandler,
  _swigc__p_wxPageSetupDialog,
  _swigc__p_wxPageSetupDialogData,
  _swigc__p_wxPaintEvent,
  _swigc__p_wxPaletteChangedEvent,
  _swigc__p_wxPanel,
  _swigc__p_wxPaperSize,
  _swigc__p_wxPasswordEntryDialog,
  _swigc__p_wxPopupWindow,
  _swigc__p_wxPreviewCanvas,
  _swigc__p_wxPreviewControlBar,
  _swigc__p_wxPreviewFrame,
  _swigc__p_wxPrintData,
  _swigc__p_wxPrintDialog,
  _swigc__p_wxPrintDialogData,
  _swigc__p_wxPrintPreview,
  _swigc__p_wxPrinter,
  _swigc__p_wxProgressDialog,
  _swigc__p_wxPyApp,
  _swigc__p_wxPyCommandEvent,
  _swigc__p_wxPyControl,
  _swigc__p_wxPyEvent,
  _swigc__p_wxPyHtmlListBox,
  _swigc__p_wxPyImageHandler,
  _swigc__p_wxPyListCtrl,
  _swigc__p_wxPyPanel,
  _swigc__p_wxPyPopupTransientWindow,
  _swigc__p_wxPyPreviewControlBar,
  _swigc__p_wxPyPreviewFrame,
  _swigc__p_wxPyPrintPreview,
  _swigc__p_wxPyPrintout,
  _swigc__p_wxPyScrolledWindow,
  _swigc__p_wxPySizer,
  _swigc__p_wxPyTaskBarIcon,
  _swigc__p_wxPyTreeCompanionWindow,
  _swigc__p_wxPyTreeCtrl,
  _swigc__p_wxPyTreeItemData,
  _swigc__p_wxPyTreeListCtrl,
  _swigc__p_wxPyVListBox,
  _swigc__p_wxPyVScrolledWindow,
  _swigc__p_wxPyValidator,
  _swigc__p_wxPyWindow,
  _swigc__p_wxQueryLayoutInfoEvent,
  _swigc__p_wxQueryNewPaletteEvent,
  _swigc__p_wxRadioBox,
  _swigc__p_wxRadioButton,
  _swigc__p_wxRemotelyScrolledTreeCtrl,
  _swigc__p_wxSashEvent,
  _swigc__p_wxSashLayoutWindow,
  _swigc__p_wxSashWindow,
  _swigc__p_wxScrollBar,
  _swigc__p_wxScrollEvent,
  _swigc__p_wxScrollWinEvent,
  _swigc__p_wxScrolledWindow,
  _swigc__p_wxSetCursorEvent,
  _swigc__p_wxShowEvent,
  _swigc__p_wxSingleChoiceDialog,
  _swigc__p_wxSizeEvent,
  _swigc__p_wxSizer,
  _swigc__p_wxSizerItem,
  _swigc__p_wxSlider,
  _swigc__p_wxSpinButton,
  _swigc__p_wxSpinCtrl,
  _swigc__p_wxSpinEvent,
  _swigc__p_wxSplashScreen,
  _swigc__p_wxSplashScreenWindow,
  _swigc__p_wxSplitterEvent,
  _swigc__p_wxSplitterScrolledWindow,
  _swigc__p_wxSplitterWindow,
  _swigc__p_wxStaticBitmap,
  _swigc__p_wxStaticBox,
  _swigc__p_wxStaticBoxSizer,
  _swigc__p_wxStaticLine,
  _swigc__p_wxStaticPicture,
  _swigc__p_wxStaticText,
  _swigc__p_wxStatusBar,
  _swigc__p_wxStdDialogButtonSizer,
  _swigc__p_wxSysColourChangedEvent,
  _swigc__p_wxTIFFHandler,
  _swigc__p_wxTaskBarIconEvent,
  _swigc__p_wxTextCtrl,
  _swigc__p_wxTextEntryDialog,
  _swigc__p_wxTextUrlEvent,
  _swigc__p_wxThinSplitterWindow,
  _swigc__p_wxTipWindow,
  _swigc__p_wxToggleButton,
  _swigc__p_wxToolBar,
  _swigc__p_wxToolBarBase,
  _swigc__p_wxToolBarToolBase,
  _swigc__p_wxToolbook,
  _swigc__p_wxToolbookEvent,
  _swigc__p_wxTopLevelWindow,
  _swigc__p_wxTreeEvent,
  _swigc__p_wxTreeItemId,
  _swigc__p_wxTreeListColumnInfo,
  _swigc__p_wxTreebook,
  _swigc__p_wxTreebookEvent,
  _swigc__p_wxUpdateUIEvent,
  _swigc__p_wxValidator,
  _swigc__p_wxWindow,
  _swigc__p_wxWindowCreateEvent,
  _swigc__p_wxWindowDestroyEvent,
  _swigc__p_wxXPMHandler,
  _swigc__ptrdiff_t,
  _swigc__std__ptrdiff_t,
  _swigc__unsigned_int,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/*************************************************************************
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.

 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop though that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.

 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
**/

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif

SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
    size_t i;
    swig_module_info *module_head;
    static int init_run = 0;
    
    clientdata = clientdata;
    
    if (init_run) return;
    init_run = 1;
    
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    
    /* Try and load any already created modules */
    module_head = SWIG_GetModule(clientdata);
    if (module_head) {
        swig_module.next = module_head->next;
        module_head->next = &swig_module;
    } else {
        /* This is the first module loaded */
        swig_module.next = &swig_module;
        SWIG_SetModule(clientdata, &swig_module);
    }
    
    /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
    for (i = 0; i < swig_module.size; ++i) {
        swig_type_info *type = 0;
        swig_type_info *ret;
        swig_cast_info *cast;
        
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
        
        /* if there is another module already loaded */
        if (swig_module.next != &swig_module) {
            type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
        }
        if (type) {
            /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
            printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
            if (swig_module.type_initial[i]->clientdata) {
                type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
                printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
            }
        } else {
            type = swig_module.type_initial[i];
        }
        
        /* Insert casting types */
        cast = swig_module.cast_initial[i];
        while (cast->type) {
            /* Don't need to add information already in the list */
            ret = 0;
#ifdef SWIGRUNTIME_DEBUG
            printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
            if (swig_module.next != &swig_module) {
                ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
                if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
            }
            if (ret) {
                if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
                    printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
                    cast->type = ret;
                    ret = 0;
                } else {
                    /* Check for casting already in the list */
                    swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
                    if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
                    if (!ocast) ret = 0;
                }
            }
            
            if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
                printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
                if (type->cast) {
                    type->cast->prev = cast;
                    cast->next = type->cast;
                }
                type->cast = cast;
            }
            cast++;
        }
        /* Set entry in modules->types array equal to the type */
        swig_module.types[i] = type;
    }
    swig_module.types[i] = 0;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("**** SWIG_InitializeModule: Cast List ******\n");
    for (i = 0; i < swig_module.size; ++i) {
        int j = 0;
        swig_cast_info *cast = swig_module.cast_initial[i];
        printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
        while (cast->type) {
            printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
            cast++;
            ++j;
        }
        printf("---- Total casts: %d\n",j);
    }
    printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
    size_t i;
    swig_cast_info *equiv;
    static int init_run = 0;
    
    if (init_run) return;
    init_run = 1;
    
    for (i = 0; i < swig_module.size; i++) {
        if (swig_module.types[i]->clientdata) {
            equiv = swig_module.types[i]->cast;
            while (equiv) {
                if (!equiv->converter) {
                    if (equiv->type && !equiv->type->clientdata)
                    SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
                }
                equiv = equiv->next;
            }
        }
    }
}

#ifdef __cplusplus
#if 0
{
    /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
    
    /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
    
    /* -----------------------------------------------------------------------------
     * global variable support code.
     * ----------------------------------------------------------------------------- */
    
    typedef struct swig_globalvar {
        char       *name;                  /* Name of global variable */
        PyObject *(*get_attr)(void);       /* Return the current value */
        int       (*set_attr)(PyObject *); /* Set the value */
        struct swig_globalvar *next;
    } swig_globalvar;
    
    typedef struct swig_varlinkobject {
        PyObject_HEAD
        swig_globalvar *vars;
    } swig_varlinkobject;
    
    SWIGINTERN PyObject *
    swig_varlink_repr(swig_varlinkobject *v) {
        v = v;
        return PyString_FromString("<Swig global variables>");
    }
    
    SWIGINTERN int
    swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
        swig_globalvar  *var;
        flags = flags;
        fprintf(fp,"Swig global variables { ");
        for (var = v->vars; var; var=var->next) {
            fprintf(fp,"%s", var->name);
            if (var->next) fprintf(fp,", ");
        }
        fprintf(fp," }\n");
        return 0;
    }
    
    SWIGINTERN PyObject *
    swig_varlink_getattr(swig_varlinkobject *v, char *n) {
        swig_globalvar *var = v->vars;
        while (var) {
            if (strcmp(var->name,n) == 0) {
                return (*var->get_attr)();
            }
            var = var->next;
        }
        PyErr_SetString(PyExc_NameError,"Unknown C global variable");
        return NULL;
    }
    
    SWIGINTERN int
    swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
        swig_globalvar *var = v->vars;
        while (var) {
            if (strcmp(var->name,n) == 0) {
                return (*var->set_attr)(p);
            }
            var = var->next;
        }
        PyErr_SetString(PyExc_NameError,"Unknown C global variable");
        return 1;
    }
    
    SWIGINTERN PyTypeObject*
    swig_varlink_type(void) {
        static char varlink__doc__[] = "Swig var link object";
        static PyTypeObject varlink_type
#if !defined(__cplusplus)
        ;
        static int type_init = 0;  
        if (!type_init) {
            PyTypeObject tmp
#endif
            = {
                PyObject_HEAD_INIT(&PyType_Type)
                0,                                  /* Number of items in variable part (ob_size) */
                (char *)"swigvarlink",              /* Type name (tp_name) */
                sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
                0,                                  /* Itemsize (tp_itemsize) */
                0,                                  /* Deallocator (tp_dealloc) */ 
                (printfunc) swig_varlink_print,     /* Print (tp_print) */
                (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
                (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
                0,                                  /* tp_compare */
                (reprfunc) swig_varlink_repr,       /* tp_repr */
                0,                                  /* tp_as_number */
                0,                                  /* tp_as_sequence */
                0,                                  /* tp_as_mapping */
                0,                                  /* tp_hash */
                0,                                  /* tp_call */
                0,                                  /* tp_str */
                0,                                  /* tp_getattro */
                0,                                  /* tp_setattro */
                0,                                  /* tp_as_buffer */
                0,                                  /* tp_flags */
                varlink__doc__,                     /* tp_doc */
#if PY_VERSION_HEX >= 0x02000000
                0,                                  /* tp_traverse */
                0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
                0,                                  /* tp_richcompare */
                0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
                0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
                0,0,0,0                             /* tp_alloc -> tp_next */
#endif
            };
#if !defined(__cplusplus)
            varlink_type = tmp;
            type_init = 1;
        }
#endif
        return &varlink_type;
    }
    
    /* Create a variable linking object for use later */
    SWIGINTERN PyObject *
    SWIG_Python_newvarlink(void) {
        swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
        if (result) {
            result->vars = 0;
        }
        return ((PyObject*) result);
    }
    
    SWIGINTERN void 
    SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
        swig_varlinkobject *v = (swig_varlinkobject *) p;
        swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
        if (gv) {
            size_t size = strlen(name)+1;
            gv->name = (char *)malloc(size);
            if (gv->name) {
                strncpy(gv->name,name,size);
                gv->get_attr = get_attr;
                gv->set_attr = set_attr;
                gv->next = v->vars;
            }
        }
        v->vars = gv;
    }
    
    /* -----------------------------------------------------------------------------
     * constants/methods manipulation
     * ----------------------------------------------------------------------------- */
    
    /* Install Constants */
    SWIGINTERN void
    SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
        PyObject *obj = 0;
        size_t i;
        for (i = 0; constants[i].type; ++i) {
            switch(constants[i].type) {
                case SWIG_PY_INT:
                obj = PyInt_FromLong(constants[i].lvalue);
                break;
                case SWIG_PY_FLOAT:
                obj = PyFloat_FromDouble(constants[i].dvalue);
                break;
                case SWIG_PY_STRING:
                if (constants[i].pvalue) {
                    obj = PyString_FromString((char *) constants[i].pvalue);
                } else {
                    Py_INCREF(Py_None);
                    obj = Py_None;
                }
                break;
                case SWIG_PY_POINTER:
                obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
                break;
                case SWIG_PY_BINARY:
                obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
                break;
                default:
                obj = 0;
                break;
            }
            if (obj) {
                PyDict_SetItemString(d,constants[i].name,obj);
                Py_DECREF(obj);
            }
        }
    }
    
    /* -----------------------------------------------------------------------------*/
    /* Fix SwigMethods to carry the callback ptrs when needed */
    /* -----------------------------------------------------------------------------*/
    
    SWIGINTERN void
    SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
        size_t i;
        for (i = 0; methods[i].ml_name; ++i) {
            char *c = methods[i].ml_doc;
            if (c && (c = strstr(c, "swig_ptr: "))) {
                int j;
                swig_const_info *ci = 0;
                char *name = c + 10;
                for (j = 0; const_table[j].type; ++j) {
                    if (strncmp(const_table[j].name, name, 
                    strlen(const_table[j].name)) == 0) {
                        ci = &(const_table[j]);
                        break;
                    }
                }
                if (ci) {
                    size_t shift = (ci->ptype) - types;
                    swig_type_info *ty = types_initial[shift];
                    size_t ldoc = (c - methods[i].ml_doc);
                    size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
                    char *ndoc = (char*)malloc(ldoc + lptr + 10);
                    if (ndoc) {
                        char *buff = ndoc;
                        void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
                        if (ptr) {
                            strncpy(buff, methods[i].ml_doc, ldoc);
                            buff += ldoc;
                            strncpy(buff, "swig_ptr: ", 10);
                            buff += 10;
                            SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
                            methods[i].ml_doc = ndoc;
                        }
                    }
                }
            }
        }
    }
    
    /* -----------------------------------------------------------------------------*
     *  Initialize type list
     * -----------------------------------------------------------------------------*/
    
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    PyObject *m, *d;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    
    /* Fix SwigMethods to carry the callback ptrs when needed */
    SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
    
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    SWIG_InitializeModule(0);
    SWIG_InstallConstants(d,swig_const_table);
    
    PyDict_SetItemString(d,(char*)"cvar", SWIG_globals);
    SWIG_addvarlink(SWIG_globals,(char*)"DynamicSashNameStr",_wrap_DynamicSashNameStr_get, _wrap_DynamicSashNameStr_set);
    SWIG_addvarlink(SWIG_globals,(char*)"EditableListBoxNameStr",_wrap_EditableListBoxNameStr_get, _wrap_EditableListBoxNameStr_set);
    SWIG_addvarlink(SWIG_globals,(char*)"TreeListCtrlNameStr",_wrap_TreeListCtrlNameStr_get, _wrap_TreeListCtrlNameStr_set);
    SWIG_addvarlink(SWIG_globals,(char*)"StaticPictureNameStr",_wrap_StaticPictureNameStr_get, _wrap_StaticPictureNameStr_set);
    {
        PyDict_SetItemString(d,"DS_MANAGE_SCROLLBARS", SWIG_From_int(static_cast<int >(wxDS_MANAGE_SCROLLBARS))); 
    }
    {
        PyDict_SetItemString(d,"DS_DRAG_CORNER", SWIG_From_int(static_cast<int >(wxDS_DRAG_CORNER))); 
    }
    PyDict_SetItemString(d, "wxEVT_DYNAMIC_SASH_SPLIT", PyInt_FromLong(wxEVT_DYNAMIC_SASH_SPLIT));
    PyDict_SetItemString(d, "wxEVT_DYNAMIC_SASH_UNIFY", PyInt_FromLong(wxEVT_DYNAMIC_SASH_UNIFY));
    {
        PyDict_SetItemString(d,"EL_ALLOW_NEW", SWIG_From_int(static_cast<int >(wxEL_ALLOW_NEW))); 
    }
    {
        PyDict_SetItemString(d,"EL_ALLOW_EDIT", SWIG_From_int(static_cast<int >(wxEL_ALLOW_EDIT))); 
    }
    {
        PyDict_SetItemString(d,"EL_ALLOW_DELETE", SWIG_From_int(static_cast<int >(wxEL_ALLOW_DELETE))); 
    }
    {
        PyDict_SetItemString(d,"LED_ALIGN_LEFT", SWIG_From_int(static_cast<int >(wxLED_ALIGN_LEFT))); 
    }
    {
        PyDict_SetItemString(d,"LED_ALIGN_RIGHT", SWIG_From_int(static_cast<int >(wxLED_ALIGN_RIGHT))); 
    }
    {
        PyDict_SetItemString(d,"LED_ALIGN_CENTER", SWIG_From_int(static_cast<int >(wxLED_ALIGN_CENTER))); 
    }
    {
        PyDict_SetItemString(d,"LED_ALIGN_MASK", SWIG_From_int(static_cast<int >(wxLED_ALIGN_MASK))); 
    }
    {
        PyDict_SetItemString(d,"LED_DRAW_FADED", SWIG_From_int(static_cast<int >(wxLED_DRAW_FADED))); 
    }
    {
        PyDict_SetItemString(d,"TL_ALIGN_LEFT", SWIG_From_int(static_cast<int >(wxTL_ALIGN_LEFT))); 
    }
    {
        PyDict_SetItemString(d,"TL_ALIGN_RIGHT", SWIG_From_int(static_cast<int >(wxTL_ALIGN_RIGHT))); 
    }
    {
        PyDict_SetItemString(d,"TL_ALIGN_CENTER", SWIG_From_int(static_cast<int >(wxTL_ALIGN_CENTER))); 
    }
    {
        PyDict_SetItemString(d,"TREE_HITTEST_ONITEMCOLUMN", SWIG_From_int(static_cast<int >(wxTREE_HITTEST_ONITEMCOLUMN))); 
    }
    {
        PyDict_SetItemString(d,"TL_SEARCH_VISIBLE", SWIG_From_int(static_cast<int >(wxTL_SEARCH_VISIBLE))); 
    }
    {
        PyDict_SetItemString(d,"TL_SEARCH_LEVEL", SWIG_From_int(static_cast<int >(wxTL_SEARCH_LEVEL))); 
    }
    {
        PyDict_SetItemString(d,"TL_SEARCH_FULL", SWIG_From_int(static_cast<int >(wxTL_SEARCH_FULL))); 
    }
    {
        PyDict_SetItemString(d,"TL_SEARCH_PARTIAL", SWIG_From_int(static_cast<int >(wxTL_SEARCH_PARTIAL))); 
    }
    {
        PyDict_SetItemString(d,"TL_SEARCH_NOCASE", SWIG_From_int(static_cast<int >(wxTL_SEARCH_NOCASE))); 
    }
    {
        PyDict_SetItemString(d,"TR_DONT_ADJUST_MAC", SWIG_From_int(static_cast<int >(wxTR_DONT_ADJUST_MAC))); 
    }
    {
        PyDict_SetItemString(d,"SCALE_HORIZONTAL", SWIG_From_int(static_cast<int >(wxSCALE_HORIZONTAL))); 
    }
    {
        PyDict_SetItemString(d,"SCALE_VERTICAL", SWIG_From_int(static_cast<int >(wxSCALE_VERTICAL))); 
    }
    {
        PyDict_SetItemString(d,"SCALE_UNIFORM", SWIG_From_int(static_cast<int >(wxSCALE_UNIFORM))); 
    }
    {
        PyDict_SetItemString(d,"SCALE_CUSTOM", SWIG_From_int(static_cast<int >(wxSCALE_CUSTOM))); 
    }
    
    
    wxPyPtrTypeMap_Add("wxTreeCompanionWindow", "wxPyTreeCompanionWindow");
    wxPyPtrTypeMap_Add("wxTreeListCtrl", "wxPyTreeListCtrl");
    
}

