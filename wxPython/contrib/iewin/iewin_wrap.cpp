/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.22
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_NOINCLUDE

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};                                                    
#endif


#include "Python.h"

/*************************************************************** -*- c -*-
 * python/precommon.swg
 *
 * Rename all exported symbols from common.swg, to avoid symbol
 * clashes if multiple interpreters are included
 *
 ************************************************************************/

#define SWIG_TypeRegister    SWIG_Python_TypeRegister
#define SWIG_TypeCheck       SWIG_Python_TypeCheck
#define SWIG_TypeCast        SWIG_Python_TypeCast
#define SWIG_TypeDynamicCast SWIG_Python_TypeDynamicCast
#define SWIG_TypeName        SWIG_Python_TypeName
#define SWIG_TypeQuery       SWIG_Python_TypeQuery
#define SWIG_TypeClientData  SWIG_Python_TypeClientData
#define SWIG_PackData        SWIG_Python_PackData 
#define SWIG_UnpackData      SWIG_Python_UnpackData 


/***********************************************************************
 * common.swg for wxPython
 *
 * Include only the function prototypes and such from SWIG's common.swg,
 * but not the runtime functions themselves.  This helps keep the
 * wrapper files clean of unnecessary stuff that is in the libpy.c file
 * anyway.
 *
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  if defined(_MSC_VER) || defined(__GNUC__)
#    if defined(STATIC_LINKED)
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) extern a
#    else
#      define SWIGEXPORT(a) __declspec(dllexport) a
#      define SWIGIMPORT(a) extern a
#    endif
#  else
#    if defined(__BORLANDC__)
#      define SWIGEXPORT(a) a _export
#      define SWIGIMPORT(a) a _export
#    else
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) a
#    endif
#  endif
#else
#  define SWIGEXPORT(a) a
#  define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#  define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#  define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;


SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);
SWIGIMPORT(char *)           SWIG_PackData(char *, void *, int);
SWIGIMPORT(char *)           SWIG_UnpackData(char *, void *, int);


#ifdef __cplusplus
}

#endif


/***********************************************************************
 * pyrun.swg for wxPython
 *
 * Include only the function prototypes and such from SWIG's pyrun.swg,
 * but not the runtime functions themselves.  This helps keep the
 * wrapper files clean of unnecessary stuff that is in the libpy.c file
 * anyway.
 *
 ************************************************************************/

#include "Python.h"

#include <limits.h>
#include <float.h>

#ifdef __cplusplus
#define SWIG_STATIC_INLINE static inline 
#else
#define SWIG_STATIC_INLINE static 
#endif 

SWIG_STATIC_INLINE long
SPyObj_AsLong(PyObject * obj)
{
  return PyInt_Check(obj) ?  PyInt_AsLong(obj) : PyLong_AsLong(obj);
}

SWIG_STATIC_INLINE unsigned long
SPyObj_AsUnsignedLong(PyObject * obj) 
{
  if (PyLong_Check(obj)) {
    return PyLong_AsUnsignedLong(obj);
  } else {
    long i = PyInt_AsLong(obj);
    if ( !PyErr_Occurred() && (i < 0)) {
      PyErr_SetString(PyExc_TypeError, "negative value for unsigned type");
    }
    return i;
  }
}

#if !defined(_MSC_VER)
SWIG_STATIC_INLINE PyObject* 
SPyObj_FromLongLong(long long value)
{
  return (value > (long)(LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong((long)value); 
}
#endif

SWIG_STATIC_INLINE PyObject* 
SPyObj_FromUnsignedLong(unsigned long value)
{
  return (value > (unsigned long)(LONG_MAX)) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong((long)value); 
}

#if !defined(_MSC_VER)
SWIG_STATIC_INLINE PyObject* 
SPyObj_FromUnsignedLongLong(unsigned long long value)
{
  return (value > (unsigned long long)(LONG_MAX)) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong((long)value); 
}
#endif

SWIG_STATIC_INLINE long
SPyObj_AsLongInRange(PyObject * obj, long min_value, long max_value)
{
  long value = SPyObj_AsLong(obj);
  if (!PyErr_Occurred()) {
    if (value < min_value) {
      PyErr_SetString(PyExc_OverflowError,"value is smaller than type minimum");
    } else if (value > max_value) {
      PyErr_SetString(PyExc_OverflowError,"value is greater than type maximum");
    }
  }
  return value;
}

SWIG_STATIC_INLINE unsigned long
SPyObj_AsUnsignedLongInRange(PyObject *obj, unsigned long max_value) 
{
  unsigned long value = SPyObj_AsUnsignedLong(obj);
  if (!PyErr_Occurred()) {
    if (value > max_value) {     
      PyErr_SetString(PyExc_OverflowError,"value is greater than type maximum");
    }
  }
  return value;
}

SWIG_STATIC_INLINE signed char
SPyObj_AsSignedChar(PyObject *obj) { 
  return (signed char)SPyObj_AsLongInRange(obj, SCHAR_MIN, SCHAR_MAX);
}

SWIG_STATIC_INLINE short
SPyObj_AsShort(PyObject *obj) { 
  return (short)SPyObj_AsLongInRange(obj, SHRT_MIN, SHRT_MAX);
}

SWIG_STATIC_INLINE int
SPyObj_AsInt(PyObject *obj) { 
  return SPyObj_AsLongInRange(obj, INT_MIN, INT_MAX);
}

SWIG_STATIC_INLINE unsigned char
SPyObj_AsUnsignedChar(PyObject *obj) { 
  return (unsigned char)SPyObj_AsUnsignedLongInRange(obj, UCHAR_MAX);
}

SWIG_STATIC_INLINE unsigned short 
SPyObj_AsUnsignedShort(PyObject *obj) { 
  return (unsigned short)SPyObj_AsUnsignedLongInRange(obj, USHRT_MAX);
}

SWIG_STATIC_INLINE unsigned int
SPyObj_AsUnsignedInt(PyObject *obj) { 
  return SPyObj_AsUnsignedLongInRange(obj, UINT_MAX);
}

#if !defined(_MSC_VER)
SWIG_STATIC_INLINE long long
SPyObj_AsLongLong(PyObject *obj) {
  return PyInt_Check(obj) ?
    PyInt_AsLong(obj) : PyLong_AsLongLong(obj);
}

SWIG_STATIC_INLINE unsigned long long
SPyObj_AsUnsignedLongLong(PyObject *obj) {
  return PyLong_Check(obj) ?
    PyLong_AsUnsignedLongLong(obj) : SPyObj_AsUnsignedLong(obj);
}
#endif

SWIG_STATIC_INLINE double
SPyObj_AsDouble(PyObject *obj) {
  return (PyFloat_Check(obj)) ? PyFloat_AsDouble(obj) :
    (double)((PyInt_Check(obj)) ? PyInt_AsLong(obj) : PyLong_AsLongLong(obj));
}

SWIG_STATIC_INLINE float
SPyObj_AsFloat(PyObject *obj) {
  double value = SPyObj_AsDouble(obj);
  if (!PyErr_Occurred()) {
    if (value < FLT_MIN) {
      PyErr_SetString(PyExc_OverflowError,"float is smaller than flt_min");
    } else if (value > FLT_MAX) {     
      PyErr_SetString(PyExc_OverflowError,"float is greater than flt_max");
    }
  }
  return (float) value;
}

SWIG_STATIC_INLINE char
SPyObj_AsChar(PyObject *obj) { 
  char c = (PyString_Check(obj) && PyString_Size(obj) == 1) ?
    PyString_AsString(obj)[0] 
    : (char) SPyObj_AsLongInRange(obj, CHAR_MIN, CHAR_MAX);
  if (PyErr_Occurred()) {
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError, "a char is required");
  }
  return c;
}

SWIG_STATIC_INLINE PyObject *
SPyObj_FromChar(char c) { 
  return PyString_FromStringAndSize(&c,1);
}

SWIG_STATIC_INLINE PyObject *
SPyObj_FromCharPtr(const char* cptr) { 
  return cptr ? PyString_FromString(cptr) : Py_BuildValue((char*)"");
}
 
SWIG_STATIC_INLINE int
SPyObj_AsBool(PyObject *obj) {
    return SPyObj_AsLong/*Long*/(obj) ?  1 : 0;
}



#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags) \
  SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags) \
  SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags) \
  SWIG_Python_MustGetPtr(p, type, argnum, flags)
 
/* Python-specific SWIG API */
#define SWIG_newvarlink() \
  SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr) \
  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags) \
  SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type) \
  SWIG_Python_NewPackedObj(ptr, sz, type)
#define SWIG_InstallConstants(d, constants) \
  SWIG_Python_InstallConstants(d, constants)


SWIGIMPORT(int)               SWIG_Python_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPointerObj(void *, swig_type_info *,int own);
SWIGIMPORT(void *)            SWIG_Python_MustGetPtr(PyObject *, swig_type_info *, int, int);
SWIGIMPORT(PyObject *)        SWIG_Python_newvarlink(void);
SWIGIMPORT(void)              SWIG_Python_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGIMPORT(int)               SWIG_Python_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPackedObj(void *, int sz, swig_type_info *);
SWIGIMPORT(void)              SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]);



/* Contract support */

#define SWIG_contract_assert(expr, msg) if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

#ifdef __cplusplus
}
#endif



/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_wxMSHTMLEvent swig_types[0] 
#define  SWIGTYPE_p_wxIEHtmlWin swig_types[1] 
#define  SWIGTYPE_p_wxWindow swig_types[2] 
#define  SWIGTYPE_p_wxEvent swig_types[3] 
#define  SWIGTYPE_p_wxObject swig_types[4] 
#define  SWIGTYPE_p_wxEvtHandler swig_types[5] 
#define  SWIGTYPE_p_wxString swig_types[6] 
#define  SWIGTYPE_p_wxNotifyEvent swig_types[7] 
#define  SWIGTYPE_p_wxCommandEvent swig_types[8] 
#define  SWIGTYPE_p_wxInputStream swig_types[9] 
static swig_type_info *swig_types[11];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _iewin.so
  ------------------------------------------------*/
#define SWIG_init    init_iewin

#define SWIG_name    "_iewin"

#include "wx/wxPython/wxPython.h"
#include "wx/wxPython/pyclasses.h"
#include "wx/wxPython/pyistream.h"    

#include "IEHtmlWin.h"

 static const wxString wxPyPanelNameStr(wxPanelNameStr); 
#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_new_MSHTMLEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    wxMSHTMLEvent *result;
    char *kwnames[] = {
        (char *) "commandType",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|ii:new_MSHTMLEvent",kwnames,&arg1,&arg2)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMSHTMLEvent *)new wxMSHTMLEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxMSHTMLEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MSHTMLEvent_GetText1(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMSHTMLEvent *arg1 = (wxMSHTMLEvent *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MSHTMLEvent_GetText1",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMSHTMLEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetText1();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MSHTMLEvent_GetLong1(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMSHTMLEvent *arg1 = (wxMSHTMLEvent *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MSHTMLEvent_GetLong1",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMSHTMLEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)(arg1)->GetLong1();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MSHTMLEvent_GetLong2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMSHTMLEvent *arg1 = (wxMSHTMLEvent *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MSHTMLEvent_GetLong2",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMSHTMLEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)(arg1)->GetLong2();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MSHTMLEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMSHTMLEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_IEHtmlWin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) -1 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) 0 ;
    wxString const &arg6_defvalue = wxPyPanelNameStr ;
    wxString *arg6 = (wxString *) &arg6_defvalue ;
    wxIEHtmlWin *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    bool temp6 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|iOOlO:new_IEHtmlWin",kwnames,&obj0,&arg2,&obj2,&obj3,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = wxString_in_helper(obj5);
            if (arg6 == NULL) SWIG_fail;
            temp6 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxIEHtmlWin *)new wxIEHtmlWin(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5,(wxString const &)*arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIEHtmlWin, 1);
    {
        if (temp6)
        delete arg6;
    }
    return resultobj;
    fail:
    {
        if (temp6)
        delete arg6;
    }
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_LoadUrl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self","arg2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IEHtmlWin_LoadUrl",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LoadUrl((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_LoadString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    wxString arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "html", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IEHtmlWin_LoadString",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        wxString* sptr = wxString_in_helper(obj1);
        if (sptr == NULL) SWIG_fail;
        arg2 = *sptr;
        delete sptr;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LoadString(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_LoadStream(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    wxInputStream *arg2 = (wxInputStream *) 0 ;
    bool result;
    wxPyInputStream *temp2 ;
    bool created2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "is", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IEHtmlWin_LoadStream",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (wxPyConvertSwigPtr(obj1, (void **)&temp2, wxT("wxPyInputStream"))) {
            arg2 = temp2->m_wxis;
            created2 = False;
        } else {
            PyErr_Clear();  // clear the failure of the wxPyConvert above
            arg2 = wxPyCBInputStream_create(obj1, False);
            if (arg2 == NULL) {
                PyErr_SetString(PyExc_TypeError, "Expected wxInputStream or Python file-like object.");
                SWIG_fail;
            }
            created2 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LoadStream(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    {
        if (created2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (created2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_SetCharset(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    wxString arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "charset", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IEHtmlWin_SetCharset",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        wxString* sptr = wxString_in_helper(obj1);
        if (sptr == NULL) SWIG_fail;
        arg2 = *sptr;
        delete sptr;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCharset(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_SetEditMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "seton", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IEHtmlWin_SetEditMode",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SPyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEditMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_GetEditMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IEHtmlWin_GetEditMode",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetEditMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_GetStringSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    bool arg2 = (bool) False ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "asHTML", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:IEHtmlWin_GetStringSelection",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SPyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetStringSelection(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_GetText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    bool arg2 = (bool) False ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "asHTML", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:IEHtmlWin_GetText",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SPyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetText(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_GoBack(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IEHtmlWin_GoBack",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GoBack();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_GoForward(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IEHtmlWin_GoForward",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GoForward();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_GoHome(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IEHtmlWin_GoHome",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GoHome();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_GoSearch(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IEHtmlWin_GoSearch",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GoSearch();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_RefreshPage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "level", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"Oi:IEHtmlWin_RefreshPage",kwnames,&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Refresh((wxIEHtmlRefreshLevel )arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IEHtmlWin_Stop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIEHtmlWin *arg1 = (wxIEHtmlWin *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IEHtmlWin_Stop",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIEHtmlWin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Stop();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * IEHtmlWin_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxIEHtmlWin, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyMethodDef SwigMethods[] = {
	 { (char *)"new_MSHTMLEvent", (PyCFunction) _wrap_new_MSHTMLEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MSHTMLEvent_GetText1", (PyCFunction) _wrap_MSHTMLEvent_GetText1, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MSHTMLEvent_GetLong1", (PyCFunction) _wrap_MSHTMLEvent_GetLong1, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MSHTMLEvent_GetLong2", (PyCFunction) _wrap_MSHTMLEvent_GetLong2, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MSHTMLEvent_swigregister", MSHTMLEvent_swigregister, METH_VARARGS },
	 { (char *)"new_IEHtmlWin", (PyCFunction) _wrap_new_IEHtmlWin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_LoadUrl", (PyCFunction) _wrap_IEHtmlWin_LoadUrl, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_LoadString", (PyCFunction) _wrap_IEHtmlWin_LoadString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_LoadStream", (PyCFunction) _wrap_IEHtmlWin_LoadStream, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_SetCharset", (PyCFunction) _wrap_IEHtmlWin_SetCharset, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_SetEditMode", (PyCFunction) _wrap_IEHtmlWin_SetEditMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_GetEditMode", (PyCFunction) _wrap_IEHtmlWin_GetEditMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_GetStringSelection", (PyCFunction) _wrap_IEHtmlWin_GetStringSelection, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_GetText", (PyCFunction) _wrap_IEHtmlWin_GetText, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_GoBack", (PyCFunction) _wrap_IEHtmlWin_GoBack, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_GoForward", (PyCFunction) _wrap_IEHtmlWin_GoForward, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_GoHome", (PyCFunction) _wrap_IEHtmlWin_GoHome, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_GoSearch", (PyCFunction) _wrap_IEHtmlWin_GoSearch, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_RefreshPage", (PyCFunction) _wrap_IEHtmlWin_RefreshPage, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_Stop", (PyCFunction) _wrap_IEHtmlWin_Stop, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IEHtmlWin_swigregister", IEHtmlWin_swigregister, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_wxControlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxControl *) x));
}
static void *_p_wxIEHtmlWinTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxIEHtmlWin *) x));
}
static void *_p_wxControlWithItemsTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxMenuBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMenuBar *) x));
}
static void *_p_wxContextMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMenuEvent *) x));
}
static void *_p_wxCloseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxEraseEvent *) x));
}
static void *_p_wxSetCursorEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSetCursorEvent *) x));
}
static void *_p_wxInitDialogEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxInitDialogEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxMSHTMLEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *) ((wxMSHTMLEvent *) x));
}
static void *_p_wxPyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPyEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIdleEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIconizeEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxActivateEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMoveEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNcPaintEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSysColourChangedEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDropFilesEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxShowEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxShowEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCommandEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxKeyEvent *) x));
}
static void *_p_wxScrollWinEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxScrollWinEvent *) x));
}
static void *_p_wxLayoutConstraintsTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutConstraints *) x));
}
static void *_p_wxGBSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizerItem *) ((wxGBSizerItem *) x));
}
static void *_p_wxSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizerItem *) x));
}
static void *_p_wxMSHTMLEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *) ((wxMSHTMLEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxIndividualLayoutConstraintTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxIndividualLayoutConstraint *) x));
}
static void *_p_wxStaticBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStaticBoxSizer *) x));
}
static void *_p_wxBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxBoxSizer *) x));
}
static void *_p_wxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizer *) x));
}
static void *_p_wxGridBagSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *)(wxFlexGridSizer *) ((wxGridBagSizer *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvent *) x));
}
static void *_p_wxFlexGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *) ((wxFlexGridSizer *) x));
}
static void *_p_wxGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxGridSizer *) x));
}
static void *_p_wxInitDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxInitDialogEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNcPaintEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSysColourChangedEvent *) x));
}
static void *_p_wxControlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxControl *) x));
}
static void *_p_wxSetCursorEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSetCursorEvent *) x));
}
static void *_p_wxFSFileTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFSFile *) x));
}
static void *_p_wxIEHtmlWinTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxIEHtmlWin *) x));
}
static void *_p_wxPySizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxPySizer *) x));
}
static void *_p_wxPyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPyEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxShowEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxShowEvent *) x));
}
static void *_p_wxMenuItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxMenuItem *) x));
}
static void *_p_wxIdleEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIdleEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIconizeEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMoveEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxActivateEvent *) x));
}
static void *_p_wxXPMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxXPMHandler *) x));
}
static void *_p_wxPNMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNMHandler *) x));
}
static void *_p_wxJPEGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxJPEGHandler *) x));
}
static void *_p_wxPCXHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPCXHandler *) x));
}
static void *_p_wxGIFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxGIFHandler *) x));
}
static void *_p_wxPNGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNGHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *)(wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *) ((wxCURHandler *) x));
}
static void *_p_wxICOHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *) ((wxICOHandler *) x));
}
static void *_p_wxBMPHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxBMPHandler *) x));
}
static void *_p_wxImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImageHandler *) x));
}
static void *_p_wxTIFFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxTIFFHandler *) x));
}
static void *_p_wxEvtHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvtHandler *) x));
}
static void *_p_wxAcceleratorTableTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxAcceleratorTable *) x));
}
static void *_p_wxImageTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImage *) x));
}
static void *_p_wxScrollWinEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxScrollWinEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxKeyEvent *) x));
}
static void *_p_wxWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxWindow *) x));
}
static void *_p_wxMenuTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxMenu *) x));
}
static void *_p_wxMenuBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxFileSystemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFileSystem *) x));
}
static void *_p_wxContextMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMenuEvent *) x));
}
static void *_p_wxPyAppTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyApp *) x));
}
static void *_p_wxCloseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxEraseEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCommandEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDropFilesEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxControlWithItemsTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxValidator *) x));
}
static void *_p_wxControlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxControl *) x));
}
static void *_p_wxIEHtmlWinTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxIEHtmlWin *) x));
}
static void *_p_wxWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxWindow *) x));
}
static void *_p_wxControlWithItemsTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyAppTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyApp *) x));
}
static void *_p_wxValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxValidator *) x));
}
static void *_p_wxPyValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxMenuBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxMenuTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxMenu *) x));
}
static void *_p_wxMSHTMLEventTo_p_wxNotifyEvent(void *x) {
    return (void *)((wxNotifyEvent *)  ((wxMSHTMLEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxChildFocusEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxScrollEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowCreateEvent *) x));
}
static void *_p_wxMSHTMLEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *) ((wxMSHTMLEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxUpdateUIEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowDestroyEvent *) x));
}
static void *_p_wxContextMenuEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxContextMenuEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxNotifyEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxPyCommandEvent *) x));
}
static swig_type_info _swigt__p_wxMSHTMLEvent[] = {{"_p_wxMSHTMLEvent", 0, "wxMSHTMLEvent *", 0},{"_p_wxMSHTMLEvent"},{0}};
static swig_type_info _swigt__p_wxIEHtmlWin[] = {{"_p_wxIEHtmlWin", 0, "wxIEHtmlWin *", 0},{"_p_wxIEHtmlWin"},{0}};
static swig_type_info _swigt__p_wxWindow[] = {{"_p_wxWindow", 0, "wxWindow *", 0},{"_p_wxControl", _p_wxControlTo_p_wxWindow},{"_p_wxIEHtmlWin", _p_wxIEHtmlWinTo_p_wxWindow},{"_p_wxWindow"},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxWindow},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxWindow},{0}};
static swig_type_info _swigt__p_wxEvent[] = {{"_p_wxEvent", 0, "wxEvent *", 0},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxEvent},{"_p_wxMenuEvent", _p_wxMenuEventTo_p_wxEvent},{"_p_wxCloseEvent", _p_wxCloseEventTo_p_wxEvent},{"_p_wxMouseEvent", _p_wxMouseEventTo_p_wxEvent},{"_p_wxEraseEvent", _p_wxEraseEventTo_p_wxEvent},{"_p_wxSetCursorEvent", _p_wxSetCursorEventTo_p_wxEvent},{"_p_wxInitDialogEvent", _p_wxInitDialogEventTo_p_wxEvent},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxEvent},{"_p_wxMSHTMLEvent", _p_wxMSHTMLEventTo_p_wxEvent},{"_p_wxPyEvent", _p_wxPyEventTo_p_wxEvent},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxEvent},{"_p_wxEvent"},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxEvent},{"_p_wxIdleEvent", _p_wxIdleEventTo_p_wxEvent},{"_p_wxQueryNewPaletteEvent", _p_wxQueryNewPaletteEventTo_p_wxEvent},{"_p_wxMaximizeEvent", _p_wxMaximizeEventTo_p_wxEvent},{"_p_wxIconizeEvent", _p_wxIconizeEventTo_p_wxEvent},{"_p_wxActivateEvent", _p_wxActivateEventTo_p_wxEvent},{"_p_wxMoveEvent", _p_wxMoveEventTo_p_wxEvent},{"_p_wxSizeEvent", _p_wxSizeEventTo_p_wxEvent},{"_p_wxPaintEvent", _p_wxPaintEventTo_p_wxEvent},{"_p_wxNcPaintEvent", _p_wxNcPaintEventTo_p_wxEvent},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxEvent},{"_p_wxPaletteChangedEvent", _p_wxPaletteChangedEventTo_p_wxEvent},{"_p_wxDisplayChangedEvent", _p_wxDisplayChangedEventTo_p_wxEvent},{"_p_wxMouseCaptureChangedEvent", _p_wxMouseCaptureChangedEventTo_p_wxEvent},{"_p_wxSysColourChangedEvent", _p_wxSysColourChangedEventTo_p_wxEvent},{"_p_wxDropFilesEvent", _p_wxDropFilesEventTo_p_wxEvent},{"_p_wxFocusEvent", _p_wxFocusEventTo_p_wxEvent},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxEvent},{"_p_wxShowEvent", _p_wxShowEventTo_p_wxEvent},{"_p_wxCommandEvent", _p_wxCommandEventTo_p_wxEvent},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxEvent},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxEvent},{"_p_wxNavigationKeyEvent", _p_wxNavigationKeyEventTo_p_wxEvent},{"_p_wxKeyEvent", _p_wxKeyEventTo_p_wxEvent},{"_p_wxScrollWinEvent", _p_wxScrollWinEventTo_p_wxEvent},{0}};
static swig_type_info _swigt__p_wxObject[] = {{"_p_wxObject", 0, "wxObject *", 0},{"_p_wxLayoutConstraints", _p_wxLayoutConstraintsTo_p_wxObject},{"_p_wxGBSizerItem", _p_wxGBSizerItemTo_p_wxObject},{"_p_wxSizerItem", _p_wxSizerItemTo_p_wxObject},{"_p_wxMSHTMLEvent", _p_wxMSHTMLEventTo_p_wxObject},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxObject},{"_p_wxIndividualLayoutConstraint", _p_wxIndividualLayoutConstraintTo_p_wxObject},{"_p_wxStaticBoxSizer", _p_wxStaticBoxSizerTo_p_wxObject},{"_p_wxBoxSizer", _p_wxBoxSizerTo_p_wxObject},{"_p_wxSizer", _p_wxSizerTo_p_wxObject},{"_p_wxGridBagSizer", _p_wxGridBagSizerTo_p_wxObject},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxObject},{"_p_wxMenu", _p_wxMenuTo_p_wxObject},{"_p_wxEvent", _p_wxEventTo_p_wxObject},{"_p_wxGridSizer", _p_wxGridSizerTo_p_wxObject},{"_p_wxFlexGridSizer", _p_wxFlexGridSizerTo_p_wxObject},{"_p_wxInitDialogEvent", _p_wxInitDialogEventTo_p_wxObject},{"_p_wxNcPaintEvent", _p_wxNcPaintEventTo_p_wxObject},{"_p_wxPaintEvent", _p_wxPaintEventTo_p_wxObject},{"_p_wxPaletteChangedEvent", _p_wxPaletteChangedEventTo_p_wxObject},{"_p_wxDisplayChangedEvent", _p_wxDisplayChangedEventTo_p_wxObject},{"_p_wxMouseCaptureChangedEvent", _p_wxMouseCaptureChangedEventTo_p_wxObject},{"_p_wxSysColourChangedEvent", _p_wxSysColourChangedEventTo_p_wxObject},{"_p_wxControl", _p_wxControlTo_p_wxObject},{"_p_wxSetCursorEvent", _p_wxSetCursorEventTo_p_wxObject},{"_p_wxFSFile", _p_wxFSFileTo_p_wxObject},{"_p_wxIEHtmlWin", _p_wxIEHtmlWinTo_p_wxObject},{"_p_wxPySizer", _p_wxPySizerTo_p_wxObject},{"_p_wxPyEvent", _p_wxPyEventTo_p_wxObject},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxObject},{"_p_wxShowEvent", _p_wxShowEventTo_p_wxObject},{"_p_wxMenuItem", _p_wxMenuItemTo_p_wxObject},{"_p_wxMoveEvent", _p_wxMoveEventTo_p_wxObject},{"_p_wxSizeEvent", _p_wxSizeEventTo_p_wxObject},{"_p_wxActivateEvent", _p_wxActivateEventTo_p_wxObject},{"_p_wxIconizeEvent", _p_wxIconizeEventTo_p_wxObject},{"_p_wxMaximizeEvent", _p_wxMaximizeEventTo_p_wxObject},{"_p_wxQueryNewPaletteEvent", _p_wxQueryNewPaletteEventTo_p_wxObject},{"_p_wxIdleEvent", _p_wxIdleEventTo_p_wxObject},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxObject},{"_p_wxXPMHandler", _p_wxXPMHandlerTo_p_wxObject},{"_p_wxPNMHandler", _p_wxPNMHandlerTo_p_wxObject},{"_p_wxJPEGHandler", _p_wxJPEGHandlerTo_p_wxObject},{"_p_wxPCXHandler", _p_wxPCXHandlerTo_p_wxObject},{"_p_wxGIFHandler", _p_wxGIFHandlerTo_p_wxObject},{"_p_wxPNGHandler", _p_wxPNGHandlerTo_p_wxObject},{"_p_wxANIHandler", _p_wxANIHandlerTo_p_wxObject},{"_p_wxCURHandler", _p_wxCURHandlerTo_p_wxObject},{"_p_wxICOHandler", _p_wxICOHandlerTo_p_wxObject},{"_p_wxBMPHandler", _p_wxBMPHandlerTo_p_wxObject},{"_p_wxImageHandler", _p_wxImageHandlerTo_p_wxObject},{"_p_wxTIFFHandler", _p_wxTIFFHandlerTo_p_wxObject},{"_p_wxEvtHandler", _p_wxEvtHandlerTo_p_wxObject},{"_p_wxAcceleratorTable", _p_wxAcceleratorTableTo_p_wxObject},{"_p_wxImage", _p_wxImageTo_p_wxObject},{"_p_wxScrollWinEvent", _p_wxScrollWinEventTo_p_wxObject},{"_p_wxObject"},{"_p_wxKeyEvent", _p_wxKeyEventTo_p_wxObject},{"_p_wxNavigationKeyEvent", _p_wxNavigationKeyEventTo_p_wxObject},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxObject},{"_p_wxWindow", _p_wxWindowTo_p_wxObject},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxObject},{"_p_wxFileSystem", _p_wxFileSystemTo_p_wxObject},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxObject},{"_p_wxMenuEvent", _p_wxMenuEventTo_p_wxObject},{"_p_wxPyApp", _p_wxPyAppTo_p_wxObject},{"_p_wxCloseEvent", _p_wxCloseEventTo_p_wxObject},{"_p_wxMouseEvent", _p_wxMouseEventTo_p_wxObject},{"_p_wxEraseEvent", _p_wxEraseEventTo_p_wxObject},{"_p_wxCommandEvent", _p_wxCommandEventTo_p_wxObject},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxObject},{"_p_wxDropFilesEvent", _p_wxDropFilesEventTo_p_wxObject},{"_p_wxFocusEvent", _p_wxFocusEventTo_p_wxObject},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxObject},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxObject},{"_p_wxPyValidator", _p_wxPyValidatorTo_p_wxObject},{"_p_wxValidator", _p_wxValidatorTo_p_wxObject},{0}};
static swig_type_info _swigt__p_wxEvtHandler[] = {{"_p_wxEvtHandler", 0, "wxEvtHandler *", 0},{"_p_wxControl", _p_wxControlTo_p_wxEvtHandler},{"_p_wxIEHtmlWin", _p_wxIEHtmlWinTo_p_wxEvtHandler},{"_p_wxWindow", _p_wxWindowTo_p_wxEvtHandler},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxEvtHandler},{"_p_wxEvtHandler"},{"_p_wxPyApp", _p_wxPyAppTo_p_wxEvtHandler},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxEvtHandler},{"_p_wxValidator", _p_wxValidatorTo_p_wxEvtHandler},{"_p_wxPyValidator", _p_wxPyValidatorTo_p_wxEvtHandler},{"_p_wxMenu", _p_wxMenuTo_p_wxEvtHandler},{0}};
static swig_type_info _swigt__p_wxString[] = {{"_p_wxString", 0, "wxString *", 0},{"_p_wxString"},{0}};
static swig_type_info _swigt__p_wxNotifyEvent[] = {{"_p_wxNotifyEvent", 0, "wxNotifyEvent *", 0},{"_p_wxMSHTMLEvent", _p_wxMSHTMLEventTo_p_wxNotifyEvent},{"_p_wxNotifyEvent"},{0}};
static swig_type_info _swigt__p_wxCommandEvent[] = {{"_p_wxCommandEvent", 0, "wxCommandEvent *", 0},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxCommandEvent},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxCommandEvent},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxCommandEvent},{"_p_wxMSHTMLEvent", _p_wxMSHTMLEventTo_p_wxCommandEvent},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxCommandEvent},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxCommandEvent},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxCommandEvent},{"_p_wxCommandEvent"},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxCommandEvent},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxCommandEvent},{0}};
static swig_type_info _swigt__p_wxInputStream[] = {{"_p_wxInputStream", 0, "wxInputStream *", 0},{"_p_wxInputStream"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_wxMSHTMLEvent, 
_swigt__p_wxIEHtmlWin, 
_swigt__p_wxWindow, 
_swigt__p_wxEvent, 
_swigt__p_wxObject, 
_swigt__p_wxEvtHandler, 
_swigt__p_wxString, 
_swigt__p_wxNotifyEvent, 
_swigt__p_wxCommandEvent, 
_swigt__p_wxInputStream, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"wxEVT_COMMAND_MSHTML_BEFORENAVIGATE2", (long) wxEVT_COMMAND_MSHTML_BEFORENAVIGATE2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_COMMAND_MSHTML_NEWWINDOW2", (long) wxEVT_COMMAND_MSHTML_NEWWINDOW2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_COMMAND_MSHTML_DOCUMENTCOMPLETE", (long) wxEVT_COMMAND_MSHTML_DOCUMENTCOMPLETE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_COMMAND_MSHTML_PROGRESSCHANGE", (long) wxEVT_COMMAND_MSHTML_PROGRESSCHANGE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_COMMAND_MSHTML_STATUSTEXTCHANGE", (long) wxEVT_COMMAND_MSHTML_STATUSTEXTCHANGE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_COMMAND_MSHTML_TITLECHANGE", (long) wxEVT_COMMAND_MSHTML_TITLECHANGE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"IEHTML_REFRESH_NORMAL", (long) wxIEHTML_REFRESH_NORMAL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"IEHTML_REFRESH_IFEXPIRED", (long) wxIEHTML_REFRESH_IFEXPIRED, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"IEHTML_REFRESH_CONTINUE", (long) wxIEHTML_REFRESH_CONTINUE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"IEHTML_REFRESH_COMPLETELY", (long) wxIEHTML_REFRESH_COMPLETELY, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
}

