Building wxPython on Mac OS X
-----------------------------


These are the steps I have used for building wxPython on Mac OS X 10.x
with the Apple Developer Tools, a.k.a the Darwin version.  I assume
that you know your way around a command line and that you know how to
get things from various CVS repositories as needed.


1. "MacPython-OSX" 2.3 is required.  If you don't have it already there is a disk image with an
   installer package at

   http://homepages.cwi.nl/~jack/macpython/download.html

   If, for some reason you need to build your own Python, get the
   source from www.python.org and follow the instructions in the
   Mac/OSX/README file to build and install the Python.framework and
   Python tools.

   One last thing, make sure that /usr/local/bin is in your PATH
   environment variable since that is where the new python and pythonw
   commands will be located.


2. In a wxWindows CVS tree make a build directory.  (You can also use
   a CVS snapshot located in http://wxwindows.org/snapshots/ or the
   released wxPythonSrc-*.tr.gz archive.)

	cd ~/proj/wxWindows	# or wherever you put it
	mkdir build

3. Run configure from that build directory.

        cd build
	../configure --with-mac
		     --with-opengl \
		     --enable-geometry \
                     --enable-optimise \
		     --with-libjpeg=builtin \
		     --with-libpng=builtin \
		     --with-libtiff=builtin \

   If you want to add code that activates various runtime checks and
   assertion exceptions then add --enable-debug_flag.

4. Make and install wxMac.

	make
	sudo make install

5. Build and install wxPython.

	cd ../wxPython
	python setup.py build install

   If you would like to install to someplace besides the Python
   site-packages directory (such as to your home directory) then you
   can add "--root=<path>" after the "install" command.  To use
   wxPython like this you'll need to ensure that the directory
   containing wxPyrthon is contained in in the PYTHONPATH environment
   variable.

6. Test.  Just navigate in the Finder to the demo directory and double
   click demo.py, or simple.py, or whatever you want to run.  Or from
   a command line you can run it this way:

	cd demo
	pythonw demo.py

7. Figure out what's wrong, figure out how to fix it, and then send
   the patches to me.  <wink>



NOTE: If you get a compile error while building the wxGLCanvas module
then this is likely due to a bug in one of Apple's header files.  This
one character patch to
/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h
will take care of it:


--- fp.h.orig	2003-06-23 13:17:16.000000000 -0700
+++ fp.h	2003-06-23 13:51:46.000000000 -0700
@@ -1893,7 +1893,7 @@
 extern long double  scalbl(long double x, long n);
 #if TYPE_LONGDOUBLE_IS_DOUBLE
   #ifdef __cplusplus
-    inline long double scalbl(long double x, long n) { return (long double) scalb((double)(x), (n)); }
+    inline long double scalbl(long double x, long n) { return (long double) scalbl((double)(x), (n)); }
   #else
     #define scalbl(x, n) ((long double) scalb((double)(x), (n)))
   #endif

--Robin






