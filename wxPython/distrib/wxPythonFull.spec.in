%define pref 	%{_prefix}
%define python 	@PYTHON@
%define pyver 	@PYVER@
%define port  	@PORT@
%define lcport 	@LCPORT@
%define tarname @TARNAME@
%define version @VERSION@
%define ver2    @VER2@
%define release 1
%define wxpref  %{pref}/lib/wxPython
%define name    wxPython%{port}-py%{pyver}

# Should --enable-debug_flag be used in release builds?
# Using it defines __WXDEBUG__ and gives us runtime diagnostics
# that are turned into Python exceptions starting with 2.3.4.
%define debug_flag 1



%if %{debug_flag}
    %define wxconfigname %{wxpref}/bin/wx%{lcport}d-%{ver2}-config
%else
    %define wxconfigname %{wxpref}/bin/wx%{lcport}-%{ver2}-config
%endif


#----------------------------------------------------------------
Summary:   Cross platform GUI toolkit for Python using wx%{port}
Name:      %{name}
Version:   %{version}
Release:   %{release}
Source0:   %{tarname}-%{version}.tar.gz
License:   wxWindows Library Licence, Version 3
URL:       http://wxPython.org/
Packager:  Robin Dunn <robin@alldunn.com>
Group:     Development/Python
BuildRoot: %{_tmppath}/%{name}-buildroot
Prefix:    %{pref}
#BuildRequires: %{python}

Provides: wxwin
Provides: wx%{port} = %{version}
Provides: wxPython  = %{version}


# old wxPython packages
Obsoletes: wxPython


%description
wxPython is a GUI toolkit for Python that is a wrapper around the
wxWindows C++ GUI library.  wxPython provides a large variety of
window types and controls, all implemented with a native look and feel
(and native runtime speed) on the platforms it is supported on.

This package is implemented using the %{port} port of wxWindows, and
includes the wx%{port} shared libs and etc.


%package -n wxPython%{port}-devel
Summary: wxPython%{port} development files
Group: Development/Libraries
Requires: wxPython%{port} = %{version}


%description -n wxPython%{port}-devel
This packages contains the headers and etc. for building apps or
Python extension modules that use the same wx%{port} shared libraries
that wxPython uses.

#----------------------------------------------------------------
%prep
%setup -q -n %{tarname}-%{version}


#----------------------------------------------------------------
%build
if [ "$SMP" != "" ]; then
    MAKE="make -j$SMP"
else
    MAKE="make"
fi

WXDIR=`pwd`
mkdir build
cd build

# Configure, trying to reduce external dependencies
$WXDIR/configure --with-%{lcport} \
	--prefix=%{wxpref} \
	--disable-soname \
	--enable-rpath=%{wxpref}/lib \
	--with-opengl \
	--enable-geometry \
	--enable-optimise \
%if %{debug_flag}
	--enable-debug_flag \
%endif
	--with-libjpeg=builtin \
	--with-libpng=builtin \
	--with-libtiff=builtin \
	--with-zlib=builtin \



# Build wxWindows
$MAKE
cd $WXDIR/locale
make allmo

# Now build wxPython
cd $WXDIR/wxPython
%{python} setup.py \
	IN_CVS_TREE=1 \
	NO_SCRIPTS=1 \
	WX_CONFIG="$WXDIR/build/wx-config --inplace --prefix=$RPM_BUILD_ROOT%{wxpref}" \
	build


#----------------------------------------------------------------
%install
[ "$RPM_BUILD_ROOT" != "/" ] && rm -rf $RPM_BUILD_ROOT

# install wxWindows
WXDIR=`pwd`
cd build
make prefix=$RPM_BUILD_ROOT%{wxpref} install

# install wxPython
cd $WXDIR/wxPython
%{python} setup.py \
	IN_CVS_TREE=1 \
	NO_SCRIPTS=1 \
	WX_CONFIG="$RPM_BUILD_ROOT%{wxpref}/bin/wx-config --prefix=$RPM_BUILD_ROOT%{wxpref}" \
	install \
	--root=$RPM_BUILD_ROOT

# Since I want this RPM to be as generic as possible I won't let
# distutils copy the scripts since it will mangle the #! line to use
# the real python pathname.  Since some distros install python 2.2 as
# python2 and others as python, then I can't let distutils do that
# otherwise the dependencies will be fouled up.  Copy them manually
# instead, leaving the #!/bin/env line intact:

mkdir -p $RPM_BUILD_ROOT/usr/bin
for s in \
	img2png \
	img2py \
	img2xpm \
	pycrust \
	pyshell \
	xrced; do
    cp scripts/$s $RPM_BUILD_ROOT/usr/bin
done


# Generate the filelists.  For some reason the %defattr below is still
# resulting in many (but not all) files not owned by root when just
# specifying directories and wildcards to be included in each package.
# So instead we'll build some explicit filelists here and use %attr on
# each entry.
cd $WXDIR
mkdir -p $RPM_BUILD_ROOT%{pref}/share/doc
GFL="%{python} wxPython/distrib/genfilelist.py"
$GFL    $RPM_BUILD_ROOT %{pref}                     > FILELIST
$GFL -r $RPM_BUILD_ROOT %{pref}/bin                >> FILELIST
$GFL    $RPM_BUILD_ROOT %{pref}/lib                >> FILELIST
$GFL -r $RPM_BUILD_ROOT %{pref}/lib/python%{pyver} >> FILELIST
$GFL -r $RPM_BUILD_ROOT %{pref}/share              >> FILELIST
$GFL    $RPM_BUILD_ROOT %{wxpref}                  >> FILELIST
$GFL    $RPM_BUILD_ROOT %{wxpref}/lib              >> FILELIST
$GFL    $RPM_BUILD_ROOT "%{wxpref}/lib/libwx*"     >> FILELIST
$GFL -r $RPM_BUILD_ROOT %{wxpref}/share            >> FILELIST

$GFL    $RPM_BUILD_ROOT %{wxpref}/include           > DEVELLIST
$GFL -r $RPM_BUILD_ROOT %{wxpref}/include/wx       >> DEVELLIST
$GFL -r $RPM_BUILD_ROOT %{wxpref}/lib/wx           >> DEVELLIST
$GFL    $RPM_BUILD_ROOT %{wxconfigname}            >> DEVELLIST
$GFL    $RPM_BUILD_ROOT %{wxpref}/bin/wx-config    >> DEVELLIST


#----------------------------------------------------------------
%clean
[ "$RPM_BUILD_ROOT" != "/" ] && rm -rf $RPM_BUILD_ROOT


#----------------------------------------------------------------

%files -f FILELIST
%defattr(-,root,root)
%doc docs/preamble.txt docs/licence.txt docs/readme.txt docs/changes.txt
%doc wxPython/README.txt wxPython/CHANGES.txt


%files -n wxPython%{port}-devel -f DEVELLIST
%defattr(-,root,root)


#----------------------------------------------------------------
%changelog

# end of file
