# THIS IS JUST A DUMMY FILE for allowing the makefile
# to work before there a real makeprog.env has been
# created by configure.

# Make environment for making samples on Unix

# The binary program extension, if any, including dots (e.g. '.exe')
PROGRAM_EXT = 
BIN_PROGRAM = $(PROGRAM)$(PROGRAM_EXT)
RES_PROGRAM_OBJ = 
BUNDLE = $(BIN_PROGRAM).app/Contents

# NB: see remark in Makefile.in as to why we don't use %.foo: %.bar rules
.SUFFIXES: .o .c .cpp .cxx .rc _resources.o

.c.o:
	$(CC) -c $(CFLAGS) $(APPEXTRADEFS) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(APPEXTRADEFS) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(APPEXTRADEFS) -o $@ $<

.rc_resources.o:
	$(RESCOMP) -i $< -o $@ $(RESFLAGS)


# the comment at the end of the next line is needed because otherwise autoconf
# would remove this line completely - it contains a built-in hack to remove
# any VPATH assignment not containing ':'
VPATH = :$(top_srcdir)/$(program_dir) # ':' for autoconf

#
# File:     make.env
# Author:   Julian Smart, Robert Roebling, Vadim Zeitlin, Ron Lee
# Created:  1993
# Updated:  2001
# Copyright:(c) 1993, AIAI, University of Edinburgh,
# Copyright:(c) 1999, Vadim Zeitlin
# Copyright:(c) 1999, Robert Roebling
# Copyright:(c) 2001, Ron Lee
#

####################### GENERAL SETTINGS ############################

# see comment near LDFLAGS at the end of file
EXTRALIBS =  -framework Carbon -framework System  -lz -lm -lpthread 
OPENGLLIBS = 
LDLIBS = ${APPEXTRALIBS} ${top_builddir}/lib/libwx_macd-2.3.a ${EXTRALIBS}

TOOLKIT = MAC
TOOLKITDIR = mac

WXLIB = libwx_macd-2.3.a
WXSHLIB = libwx_macd-2.3.dylib.2.0.0

########################### VERSION #################################

WX_MAJOR_VERSION_NUMBER = 2
WX_MINOR_VERSION_NUMBER = 3
WX_RELEASE_NUMBER = 3

########################### Programs #################################

CXX         = c++
CC          = gcc

# Compiler for lex/yacc .c programs
CCLEX       = gcc

LEX         = flex
YACC        = bison -y
AR          = ar
AS          = 
NM          = 
LN_S        = ln -s
STRIP       = strip
AROPTIONS   = rcu
RANLIB      = ranlib
LD          = 
MAKEINFO    = 
RM          = rm -f

SHARED_LD   = 

RESFLAGS    = 
RESCOMP     = /Developer/Tools/Rez

DEREZ       = /Developer/Tools/DeRez

DLLTOOL     = 

INSTALL         = /usr/bin/install -c
INSTALL_PROGRAM = cp -fp
INSTALL_DATA    = cp -fp
INSTALL_SCRIPT  = /usr/bin/install -c

########################### Flags #################################

CPPFLAGS = ${APPEXTRACPPFLAGS}  -no-cpp-precomp -I/Developer/Headers/FlatCarbon -I${top_srcdir}/src/mac/morefile $(EXTRADEFS) $(APPEXTRADEFS)  -D__WXMAC__ -D__WXDEBUG__
CFLAGS = ${APPEXTRACFLAGS} ${CPPFLAGS}  -MMD -fpascal-strings -g -I${top_builddir}/lib/wx/include/macd-2.3 -I${top_srcdir}/include -I${top_srcdir}/src/png -I${top_srcdir}/src/tiff -Wall
CXXFLAGS = ${APPEXTRACXXFLAGS} ${CPPFLAGS} -MMD -fpascal-strings -g -I${top_builddir}/lib/wx/include/macd-2.3 -I${top_srcdir}/include -I${top_srcdir}/src/png -I${top_srcdir}/src/tiff -Wall
PICFLAGS = 

# taking into account how SHARED_LD is defined, appending LDFLAGS to it
# doesn't work, so we put them in the end of the linker command line in
# EXTRALIBS instead (see above)
# LDFLAGS =  -framework Carbon -framework System 

# specific linker flags for when building executables since there
# Mac OS X requires specific linker flags for executables linked
# against dynamic shared libraries
LDFLAGS_EXE = 

