# Modified from automatic creation by Kevin Butler (butler@byu.edu)
# for Microsoft Visual C++ (11/22/96)
#
#######################################################################
# $Header$
# Simplified Wrapper and Interface Generator (SWIG)
#
# Makefile for version 1.1
# Dave Beazley
# March 12, 1997
#
# This makefile is now mostly constructed by ./configure.
#
# $Log$
# Revision 1.1  2002/04/29 19:56:48  RD
# Since I have made several changes to SWIG over the years to accomodate
# special cases and other things in wxPython, and since I plan on making
# several more, I've decided to put the SWIG sources in wxPython's CVS
# instead of relying on maintaining patches.  This effectivly becomes a
# fork of an obsolete version of SWIG, :-( but since SWIG 1.3 still
# doesn't have some things I rely on in 1.1, not to mention that my
# custom patches would all have to be redone, I felt that this is the
# easier road to take.
#
# Revision 1.1.1.1  1999/02/28 02:00:52  beazley
# Swig1.1
#
# Revision 1.1  1996/08/12 01:55:02  dmb
# Initial revision
#
#######################################################################

#.KEEP_STATE:

rootdir = ..
!include <..\make_win.in>


########################################################################
# Normally, you shouldn't have to change anything below this point     #
########################################################################

LIBOBJS = main.obj scanner.obj symbol.obj include.obj types.obj parms.obj emit.obj newdoc.obj ascii.obj \
          html.obj latex.obj cplus.obj lang.obj hash.obj sstring.obj wrapfunc.obj getopt.obj comment.obj typemap.obj naming.obj

LIBSRCS = main.cxx scanner.cxx symbol.cxx include.cxx types.cxx parms.cxx emit.cxx \
	  newdoc.cxx ascii.cxx html.cxx latex.cxx cplus.cxx lang.cxx hash.cxx \
          sstring.cxx wrapfunc.cxx getopt.cxx comment.cxx typemap.cxx naming.cxx

LIBHEADERS = internal.h $(rootdir)/Include/swig.h latex.h ascii.h html.h nodoc.h
LIBNAME      = $(rootdir)\libswig.lib


#
# Rules for creation of a .obj file from .cxx
.SUFFIXES: .cxx
.cxx.obj:
	$(CC) $(INCFLAGS) $(CFLAGS) -c -o $*.obj $<

all:    $(LIBNAME)

$(LIBNAME): parser.obj $(LIBOBJS)
	@echo "Building library"
	@$(LD) $(LD_FLAGS) -out:$(LIBNAME) $(LIBOBJS) parser.obj

parser.obj: parser.cxx $(LIBHEADERS)
	$(CC) $(INCFLAGS) $(CFLAGS) parser.cxx -c -o parser.obj

parser.cxx: $(PARSER)
	@echo "Must rebuild the parser with yacc"

parser::
	@cp y.tab.c.bison parser.cxx
	@cp y.tab.h.bison parser.h
	@cp y.tab.h.bison y.tab.h
	$(CC) $(CFLAGS) parser.cxx -c -o parser.obj

main.obj: main.cxx
scanner.obj: scanner.cxx
wrapper.obj: wrapper.cxx
include.obj: include.cxx
types.obj: types.cxx
emit.obj: emit.cxx
cplus.obj: cplus.cxx
misc.obj: misc.cxx
hash.obj: hash.cxx
sstring.obj: sstring.cxx
getopt.obj: getopt.cxx
wrapfunc.obj: wrapfunc.cxx
swigmain.obj: swigmain.cxx
symbol.obj: symbol.cxx
parms.obj: parms.cxx
newdoc.obj: newdoc.cxx
lang.obj: lang.cxx
comment.obj: comment.cxx
latex.obj: latex.cxx
ascii.obj: ascii.cxx
html.obj: html.cxx
typemap.obj: typemap.cxx
naming.obj: naming.cxx

clean::
	@del *.obj
	@del $(LIBNAME)



