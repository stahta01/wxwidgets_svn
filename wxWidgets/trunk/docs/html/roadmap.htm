<HTML>
<HEAD>
  <TITLE>wxWindows Roadmap</TITLE>
</HEAD>

<BODY>

<a name="top"></a>

<font face="Arial, Lucida Sans, Helvetica">

<table width=100% border=4 cellpadding=5 cellspacing=0>
<tr>
<td bgcolor="#660000">
<font size=+1 face="Arial, Lucida Sans, Helvetica" color="#FFFFFF">
wxWindows Roadmap
</font>
</td>
</tr>
</table>

<P>

<CENTER>
<a href="#schedule">Schedule</a> | <a href="#todo">To-Do List</a>
</CENTER>

<P>

This page represents current thinking about where wxWindows is going in the near, 
medium and long-term. It also serves as a schedule for new releases so
that both developers and users can know what to expect when, at least approximately.<P>

We are adopting the Linux kernel style of numbering system where odd minor version numbers are development
versions, and even numbers are stable versions. For example, 2.1.x are development releases,
and the next 'stable' or final release of it would be 2.2.<P>

Bug-fix patches to the stable release (if made) then become point
releases of 2.2 (2.2.x) while development continues with wild abandon
on 2.3.x until the end of the next development cycle when it is
released as 2.4.<P>

Development versions that end up on the FTP site or CD-ROM, as opposed to remaining
in the CVS archive, are semi-stable -- i.e. they are checked for compilation and
run-time problems, but not as thoroughly as the stable versions.<P>

Note that since the wxWindows effort is voluntary, these are not hard-and-fast deadlines:
but we will endeavour to follow them as closely as possible.<P>

Note also that the releases described are for wxGTK, wxMSW and wxMotif ports. wxMac currently follows
its own development path but is due to merge with the main code base in November/December.
Also, minor snapshot releases for specific platforms may be
available at dates convenient to the developers.

Finally, this page only shows the things which are still left to do, please
look elsewhere to see the complete list of changes between the releases,
including the things which are already done.
<P>

<CENTER>
<HR> <FONT SIZE=+2><I><B><a name="schedule">Schedule</a></B></I></FONT> <HR>
</CENTER>
<P>

<H4>Release 2.4.0 (stable)</H4>

Release date: Summer 2002?

<p>

Stable version of 2.3.

<ol>
    <li>Very important
        <ul>
            <li>wxMac: make the release together with the other ports
            <li>Fix wxStream::Eof() problems
            <li>wxGTK: GTK+ 2.0 support
        </ul>

    <li>Important
        <ul>
            <li>(Unix) implement <tt>wx-config</tt> as a version and build
            parameters independent script which would just read the
            configuration files
            <li>Finish wxFileName
            <li>Make it possible to process the key strokes portably
            <li>Add wxSemaphor, fix wxCondition
        </ul>

    <li>Nice to have
        <ul>
            <li>support for text in the wxToolBar buttons
            <li>radio buttons in wxToolBar
            <li>possibility to use individual wxUniv controls from the native
            ports
        </ul>
</ol>

<P>

<H4>Release 3.0.0 (stable)</H4>

This release should finally mark the end of support for the antiquated
compilers without decent support of the modern C++ features such as templates,
exceptions and namespaces. wxWindows containers should be replaced with the
corresponding standard library classes and <tt>std::basic_string&lt;&gt;</tt>
should be used instead of <tt>wxString</tt>.

<p>

<CENTER>
<HR> <FONT SIZE=+2><I><B><a name="todo">To-Do List</a></B></I></FONT> <HR>
</CENTER>

<P>

This is just a collection of the various things which it would be nice to
include in wxWindows but which are not actively worked on right now and for
which no schedule is fixed yet. If you're interested in helping with wxWindows
development, one of the small projects below could be a great way to join the
team!

<p>
Developers: please feel free to add to these, and delete them when they are done.

<P>

<B><I>General</I></B><P>

<ul>
<li>A rich text editor similar to GTK+ 2.0 GtkTextView but cross-platform
<li>Extend and unify drag and drop handling (e.g. we need to specify multiple drop targets
that can handle multiple formats).
<li>Support for 'skins', perhaps using a set of alternative control and window classes
written generically in wxWindows.
<li>Serial and parallel port support.
<li>Modem and telephony support.
<li>Book, tutorial.
<li>More examples.
</ul>

<P>

<B><I>wxMSW</I></B><P>

<ul>
<li>Windows CE port.
</ul>

<P>

<B><I>wxGTK</I></B><P>

<ul>
<li>Full Unicode support using GTK+ 2.0
<li>Wrap the new GTK+ 2.0 GtkTextView powerful widget
<li>GNOME/KDE integration libraries.
</ul>

<P>

</BODY>
</HTML>

