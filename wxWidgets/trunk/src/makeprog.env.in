# Make environment for making samples on Unix

# Clears all default suffixes
.SUFFIXES:	.o .cpp .c .cxx

# The binary program extension, if any, including dots (e.g. '.exe')
PROGRAM_EXT = @PROGRAM_EXT@
BIN_PROGRAM = $(PROGRAM)$(PROGRAM_EXT)

.c.o :
	$(CCC) -c $(CFLAGS) -o $@ $<

.cpp.o :
	$(CC) -c $(CPPFLAGS) -o $@ $<

.cxx.o :
	$(CC) -c $(CPPFLAGS) -o $@ $<

# the comment at the end of the next line is needed because otherwise autoconf
# would remove this line completely - it contains a built-in hack to remove
# any VPATH assignment not containing ':'
VPATH = @PATH_IFS@$(top_srcdir)/$(program_dir) # ':' for autoconf

# Set defaults from configure
include $(top_builddir)/src/make.env

all:    $(BIN_PROGRAM) install_dirs install_data

$(BIN_PROGRAM):	$(OBJECTS) $(top_builddir)/lib/@WX_TARGET_LIBRARY@
	$(CC) $(LDFLAGS) -o $(BIN_PROGRAM) $(OBJECTS) $(LDLIBS)

install_dirs:
	@list='$(DATADIRS)'; for p in $$list; do \
	  mkdir -p $(top_builddir)/$(program_dir)/$$p; \
	done
	
install_data:
	@list='$(DATAFILES)'; for p in $$list; do \
	  if test ! -s $(top_builddir)/$(program_dir)/$$p; then \
	     cp -pRf $(top_srcdir)/$(program_dir)/$$p $(top_builddir)/$(program_dir)/$$p; \
	  fi; \
	done

clean:
	rm -f $(OBJECTS) $(BIN_PROGRAM) core
