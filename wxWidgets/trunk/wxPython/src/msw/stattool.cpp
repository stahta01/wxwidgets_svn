/*
 * FILE : src/msw/stattool.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export
#	else
#	    define SWIGEXPORT(a) a
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    initstattoolc

#define SWIG_name    "stattoolc"

#include "helpers.h"
#include <wx/toolbar.h>
#include <wx/tbarsmpl.h>


static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {
        target = o;
    } else if (target == Py_None) {
        Py_DECREF(Py_None);
        target = o;
    } else {
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);
        PyTuple_SetItem(o3, 0, o);

        o2 = target;
        target = PySequence_Concat(o2, o3);
        Py_DECREF(o2);
        Py_DECREF(o3);
    }
    return target;
}

#if PYTHON_API_VERSION >= 1009
    static char* wxStringErrorMsg = "String or Unicode type required";
#else
    static char* wxStringErrorMsg = "string type is required for parameter";
#endif

    static wxString wxPyEmptyStr("");
#ifdef __cplusplus
extern "C" {
#endif
static void *SwigwxStatusBarTowxWindow(void *ptr) {
    wxStatusBar *src;
    wxWindow *dest;
    src = (wxStatusBar *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxStatusBarTowxEvtHandler(void *ptr) {
    wxStatusBar *src;
    wxEvtHandler *dest;
    src = (wxStatusBar *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxStatusBarTowxObject(void *ptr) {
    wxStatusBar *src;
    wxObject *dest;
    src = (wxStatusBar *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxStatusBar(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new wxStatusBar(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_wxStatusBar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxStatusBar * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1;
    wxPoint * _arg2 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg3 = (wxSize *) &wxDefaultSize;
    long  _arg4 = (long ) wxST_SIZEGRIP;
    char * _arg5 = (char *) "statusBar";
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj2 = 0;
    wxSize  temp0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "parent","id","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|OOls:new_wxStatusBar",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxStatusBar. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxPoint_helper(_obj2, &_arg2))
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp0;
    if (! wxSize_helper(_obj3, &_arg3))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxStatusBar *)new_wxStatusBar(_arg0,_arg1,*_arg2,*_arg3,_arg4,_arg5);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxStatusBar_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static wxRect * wxStatusBar_GetFieldRect(wxStatusBar *self,long  item) {
            wxRect* rect= new wxRect;
            self->GetFieldRect(item, *rect);
            return rect;
        }
static PyObject *_wrap_wxStatusBar_GetFieldRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _result;
    wxStatusBar * _arg0;
    long  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","item", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ol:wxStatusBar_GetFieldRect",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxStatusBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxStatusBar_GetFieldRect. Expected _wxStatusBar_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxRect *)wxStatusBar_GetFieldRect(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxRect_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxStatusBar_GetFieldsCount(_swigobj)  (_swigobj->GetFieldsCount())
static PyObject *_wrap_wxStatusBar_GetFieldsCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxStatusBar * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxStatusBar_GetFieldsCount",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxStatusBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxStatusBar_GetFieldsCount. Expected _wxStatusBar_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxStatusBar_GetFieldsCount(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxStatusBar_GetStatusText(_swigobj,_swigarg0)  (_swigobj->GetStatusText(_swigarg0))
static PyObject *_wrap_wxStatusBar_GetStatusText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxStatusBar * _arg0;
    int  _arg1 = (int ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","ir", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:wxStatusBar_GetStatusText",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxStatusBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxStatusBar_GetStatusText. Expected _wxStatusBar_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxString (wxStatusBar_GetStatusText(_arg0,_arg1));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
}
{
    delete _result;
}
    return _resultobj;
}

#define wxStatusBar_GetBorderX(_swigobj)  (_swigobj->GetBorderX())
static PyObject *_wrap_wxStatusBar_GetBorderX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxStatusBar * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxStatusBar_GetBorderX",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxStatusBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxStatusBar_GetBorderX. Expected _wxStatusBar_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxStatusBar_GetBorderX(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxStatusBar_GetBorderY(_swigobj)  (_swigobj->GetBorderY())
static PyObject *_wrap_wxStatusBar_GetBorderY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxStatusBar * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxStatusBar_GetBorderY",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxStatusBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxStatusBar_GetBorderY. Expected _wxStatusBar_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxStatusBar_GetBorderY(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxStatusBar_SetFieldsCount(_swigobj,_swigarg0)  (_swigobj->SetFieldsCount(_swigarg0))
static PyObject *_wrap_wxStatusBar_SetFieldsCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxStatusBar * _arg0;
    int  _arg1 = (int ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","number", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:wxStatusBar_SetFieldsCount",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxStatusBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxStatusBar_SetFieldsCount. Expected _wxStatusBar_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxStatusBar_SetFieldsCount(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxStatusBar_SetStatusText(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetStatusText(_swigarg0,_swigarg1))
static PyObject *_wrap_wxStatusBar_SetStatusText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxStatusBar * _arg0;
    wxString * _arg1;
    int  _arg2 = (int ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text","i", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|i:wxStatusBar_SetStatusText",_kwnames,&_argo0,&_obj1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxStatusBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxStatusBar_SetStatusText. Expected _wxStatusBar_p.");
        return NULL;
        }
    }
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj1) && !PyUnicode_Check(_obj1)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj1, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg1 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj1)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg1 = new wxString(PyString_AS_STRING(_obj1), PyString_GET_SIZE(_obj1));
#endif
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxStatusBar_SetStatusText(_arg0,*_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxStatusBar_SetStatusWidths(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetStatusWidths(_swigarg0,_swigarg1))
static PyObject *_wrap_wxStatusBar_SetStatusWidths(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxStatusBar * _arg0;
    int  _arg1;
    int * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","choices", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxStatusBar_SetStatusWidths",_kwnames,&_argo0,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxStatusBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxStatusBar_SetStatusWidths. Expected _wxStatusBar_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = int_LIST_helper(_obj2);
    if (_arg2 == NULL) {
        return NULL;
    }
}
{
    if (_obj2) {
        _arg1 = PyList_Size(_obj2);
    }
    else {
        _arg1 = 0;
    }
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxStatusBar_SetStatusWidths(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete [] _arg2;
}
    return _resultobj;
}

#define wxStatusBar_SetMinHeight(_swigobj,_swigarg0)  (_swigobj->SetMinHeight(_swigarg0))
static PyObject *_wrap_wxStatusBar_SetMinHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxStatusBar * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","height", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxStatusBar_SetMinHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxStatusBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxStatusBar_SetMinHeight. Expected _wxStatusBar_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxStatusBar_SetMinHeight(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxToolBarToolBaseTowxObject(void *ptr) {
    wxToolBarToolBase *src;
    wxObject *dest;
    src = (wxToolBarToolBase *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

static void  wxToolBarToolBase_Destroy(wxToolBarToolBase *self) { delete self; }
static PyObject *_wrap_wxToolBarToolBase_Destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_Destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_Destroy. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarToolBase_Destroy(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarToolBase_GetId(_swigobj)  (_swigobj->GetId())
static PyObject *_wrap_wxToolBarToolBase_GetId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetId",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetId. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxToolBarToolBase_GetId(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_GetControl(_swigobj)  (_swigobj->GetControl())
static PyObject *_wrap_wxToolBarToolBase_GetControl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxControl * _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetControl",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetControl. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxControl *)wxToolBarToolBase_GetControl(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
    return _resultobj;
}

#define wxToolBarToolBase_GetToolBar(_swigobj)  (_swigobj->GetToolBar())
static PyObject *_wrap_wxToolBarToolBase_GetToolBar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetToolBar",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetToolBar. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarBase *)wxToolBarToolBase_GetToolBar(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
    return _resultobj;
}

#define wxToolBarToolBase_IsButton(_swigobj)  (_swigobj->IsButton())
static PyObject *_wrap_wxToolBarToolBase_IsButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_IsButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_IsButton. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxToolBarToolBase_IsButton(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_IsControl(_swigobj)  (_swigobj->IsControl())
static PyObject *_wrap_wxToolBarToolBase_IsControl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_IsControl",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_IsControl. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxToolBarToolBase_IsControl(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_IsSeparator(_swigobj)  (_swigobj->IsSeparator())
static PyObject *_wrap_wxToolBarToolBase_IsSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_IsSeparator",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_IsSeparator. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxToolBarToolBase_IsSeparator(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_GetStyle(_swigobj)  (_swigobj->GetStyle())
static PyObject *_wrap_wxToolBarToolBase_GetStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetStyle. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxToolBarToolBase_GetStyle(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_IsEnabled(_swigobj)  (_swigobj->IsEnabled())
static PyObject *_wrap_wxToolBarToolBase_IsEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_IsEnabled",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_IsEnabled. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarToolBase_IsEnabled(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_IsToggled(_swigobj)  (_swigobj->IsToggled())
static PyObject *_wrap_wxToolBarToolBase_IsToggled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_IsToggled",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_IsToggled. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarToolBase_IsToggled(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_CanBeToggled(_swigobj)  (_swigobj->CanBeToggled())
static PyObject *_wrap_wxToolBarToolBase_CanBeToggled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_CanBeToggled",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_CanBeToggled. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarToolBase_CanBeToggled(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_GetBitmap1(_swigobj)  (_swigobj->GetBitmap1())
static PyObject *_wrap_wxToolBarToolBase_GetBitmap1(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxBitmap * _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetBitmap1",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetBitmap1. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxBitmap & _result_ref = wxToolBarToolBase_GetBitmap1(_arg0);
    _result = (wxBitmap *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxBitmap_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxToolBarToolBase_GetBitmap2(_swigobj)  (_swigobj->GetBitmap2())
static PyObject *_wrap_wxToolBarToolBase_GetBitmap2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxBitmap * _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetBitmap2",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetBitmap2. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxBitmap & _result_ref = wxToolBarToolBase_GetBitmap2(_arg0);
    _result = (wxBitmap *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxBitmap_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxToolBarToolBase_GetBitmap(_swigobj)  (_swigobj->GetBitmap())
static PyObject *_wrap_wxToolBarToolBase_GetBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxBitmap * _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetBitmap",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetBitmap. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxBitmap & _result_ref = wxToolBarToolBase_GetBitmap(_arg0);
    _result = (wxBitmap *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxBitmap_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxToolBarToolBase_GetShortHelp(_swigobj)  (_swigobj->GetShortHelp())
static PyObject *_wrap_wxToolBarToolBase_GetShortHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetShortHelp",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetShortHelp. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxString (wxToolBarToolBase_GetShortHelp(_arg0));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
}
{
    delete _result;
}
    return _resultobj;
}

#define wxToolBarToolBase_GetLongHelp(_swigobj)  (_swigobj->GetLongHelp())
static PyObject *_wrap_wxToolBarToolBase_GetLongHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetLongHelp",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetLongHelp. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxString (wxToolBarToolBase_GetLongHelp(_arg0));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
}
{
    delete _result;
}
    return _resultobj;
}

#define wxToolBarToolBase_Enable(_swigobj,_swigarg0)  (_swigobj->Enable(_swigarg0))
static PyObject *_wrap_wxToolBarToolBase_Enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarToolBase * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarToolBase_Enable",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_Enable. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarToolBase_Enable(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_Toggle(_swigobj,_swigarg0)  (_swigobj->Toggle(_swigarg0))
static PyObject *_wrap_wxToolBarToolBase_Toggle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarToolBase * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","toggle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarToolBase_Toggle",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_Toggle. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarToolBase_Toggle(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_SetToggle(_swigobj,_swigarg0)  (_swigobj->SetToggle(_swigarg0))
static PyObject *_wrap_wxToolBarToolBase_SetToggle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarToolBase * _arg0;
    bool  _arg1;
    PyObject * _argo0 = 0;
    int tempbool1;
    char *_kwnames[] = { "self","toggle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarToolBase_SetToggle",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_SetToggle. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarToolBase_SetToggle(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarToolBase_SetShortHelp(_swigobj,_swigarg0)  (_swigobj->SetShortHelp(_swigarg0))
static PyObject *_wrap_wxToolBarToolBase_SetShortHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarToolBase * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","help", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxToolBarToolBase_SetShortHelp",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_SetShortHelp. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj1) && !PyUnicode_Check(_obj1)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj1, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg1 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj1)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg1 = new wxString(PyString_AS_STRING(_obj1), PyString_GET_SIZE(_obj1));
#endif
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarToolBase_SetShortHelp(_arg0,*_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxToolBarToolBase_SetLongHelp(_swigobj,_swigarg0)  (_swigobj->SetLongHelp(_swigarg0))
static PyObject *_wrap_wxToolBarToolBase_SetLongHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarToolBase * _arg0;
    wxString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","help", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxToolBarToolBase_SetLongHelp",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_SetLongHelp. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj1) && !PyUnicode_Check(_obj1)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj1, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg1 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj1)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg1 = new wxString(PyString_AS_STRING(_obj1), PyString_GET_SIZE(_obj1));
#endif
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarToolBase_SetLongHelp(_arg0,*_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxToolBarToolBase_SetBitmap1(_swigobj,_swigarg0)  (_swigobj->SetBitmap1(_swigarg0))
static PyObject *_wrap_wxToolBarToolBase_SetBitmap1(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _arg0;
    wxBitmap * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","bmp", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxToolBarToolBase_SetBitmap1",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_SetBitmap1. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxToolBarToolBase_SetBitmap1. Expected _wxBitmap_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarToolBase_SetBitmap1(_arg0,*_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarToolBase_SetBitmap2(_swigobj,_swigarg0)  (_swigobj->SetBitmap2(_swigarg0))
static PyObject *_wrap_wxToolBarToolBase_SetBitmap2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _arg0;
    wxBitmap * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","bmp", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxToolBarToolBase_SetBitmap2",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_SetBitmap2. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxToolBarToolBase_SetBitmap2. Expected _wxBitmap_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarToolBase_SetBitmap2(_arg0,*_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarToolBase_Detach(_swigobj)  (_swigobj->Detach())
static PyObject *_wrap_wxToolBarToolBase_Detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_Detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_Detach. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarToolBase_Detach(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarToolBase_Attach(_swigobj,_swigarg0)  (_swigobj->Attach(_swigarg0))
static PyObject *_wrap_wxToolBarToolBase_Attach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _arg0;
    wxToolBarBase * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","tbar", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxToolBarToolBase_Attach",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_Attach. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxToolBarToolBase_Attach. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarToolBase_Attach(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * wxToolBarToolBase_GetClientData(wxToolBarToolBase *self) {
            wxPyUserData* udata = (wxPyUserData*)self->GetClientData();
            if (udata) {
                Py_INCREF(udata->m_obj);
                return udata->m_obj;
            } else {
                Py_INCREF(Py_None);
                return Py_None;
            }
        }
static PyObject *_wrap_wxToolBarToolBase_GetClientData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    wxToolBarToolBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarToolBase_GetClientData",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_GetClientData. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (PyObject *)wxToolBarToolBase_GetClientData(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{
  _resultobj = _result;
}
    return _resultobj;
}

static void  wxToolBarToolBase_SetClientData(wxToolBarToolBase *self,PyObject * clientData) {
            self->SetClientData(new wxPyUserData(clientData));
        }
static PyObject *_wrap_wxToolBarToolBase_SetClientData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _arg0;
    PyObject * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","clientData", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxToolBarToolBase_SetClientData",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarToolBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarToolBase_SetClientData. Expected _wxToolBarToolBase_p.");
        return NULL;
        }
    }
{
  _arg1 = _obj1;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarToolBase_SetClientData(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxToolBarBaseTowxControl(void *ptr) {
    wxToolBarBase *src;
    wxControl *dest;
    src = (wxToolBarBase *) ptr;
    dest = (wxControl *) src;
    return (void *) dest;
}

static void *SwigwxToolBarBaseTowxWindow(void *ptr) {
    wxToolBarBase *src;
    wxWindow *dest;
    src = (wxToolBarBase *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxToolBarBaseTowxEvtHandler(void *ptr) {
    wxToolBarBase *src;
    wxEvtHandler *dest;
    src = (wxToolBarBase *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxToolBarBaseTowxObject(void *ptr) {
    wxToolBarBase *src;
    wxObject *dest;
    src = (wxToolBarBase *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

static wxToolBarToolBase * wxToolBarBase_AddTool(wxToolBarBase *self,int  id,const wxBitmap & bitmap,const wxBitmap & pushedBitmap,int  isToggle,PyObject * clientData,const wxString & shortHelpString,const wxString & longHelpString) {
            wxPyUserData* udata = NULL;
            if (clientData)
                udata = new wxPyUserData(clientData);
            return self->AddTool(id, bitmap, pushedBitmap, (bool)isToggle,
                                 udata, shortHelpString, longHelpString);
        }
static PyObject *_wrap_wxToolBarBase_AddTool(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarBase * _arg0;
    int  _arg1;
    wxBitmap * _arg2;
    wxBitmap * _arg3 = (wxBitmap *) &wxNullBitmap;
    int  _arg4 = (int ) FALSE;
    PyObject * _arg5 = (PyObject *) NULL;
    wxString * _arg6 = (wxString *) &wxPyEmptyStr;
    wxString * _arg7 = (wxString *) &wxPyEmptyStr;
    PyObject * _argo0 = 0;
    PyObject * _argo2 = 0;
    PyObject * _argo3 = 0;
    PyObject * _obj5 = 0;
    PyObject * _obj6 = 0;
    PyObject * _obj7 = 0;
    char *_kwnames[] = { "self","id","bitmap","pushedBitmap","isToggle","clientData","shortHelpString","longHelpString", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO|OiOOO:wxToolBarBase_AddTool",_kwnames,&_argo0,&_arg1,&_argo2,&_argo3,&_arg4,&_obj5,&_obj6,&_obj7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_AddTool. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of wxToolBarBase_AddTool. Expected _wxBitmap_p.");
        return NULL;
        }
    }
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,"_wxBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of wxToolBarBase_AddTool. Expected _wxBitmap_p.");
        return NULL;
        }
    }
    if (_obj5)
{
  _arg5 = _obj5;
}
    if (_obj6)
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj6) && !PyUnicode_Check(_obj6)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj6, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg6 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj6)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg6 = new wxString(PyString_AS_STRING(_obj6), PyString_GET_SIZE(_obj6));
#endif
}
    if (_obj7)
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj7) && !PyUnicode_Check(_obj7)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj7, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg7 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj7)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg7 = new wxString(PyString_AS_STRING(_obj7), PyString_GET_SIZE(_obj7));
#endif
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarBase_AddTool(_arg0,_arg1,*_arg2,*_arg3,_arg4,_arg5,*_arg6,*_arg7);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
{
    if (_obj6)
        delete _arg6;
}
{
    if (_obj7)
        delete _arg7;
}
    return _resultobj;
}

static wxToolBarToolBase * wxToolBarBase_AddSimpleTool(wxToolBarBase *self,int  id,const wxBitmap & bitmap,const wxString & shortHelpString,const wxString & longHelpString,int  isToggle) {
            return self->AddTool(id, bitmap, wxNullBitmap, isToggle, NULL,
                                 shortHelpString, longHelpString);
        }
static PyObject *_wrap_wxToolBarBase_AddSimpleTool(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarBase * _arg0;
    int  _arg1;
    wxBitmap * _arg2;
    wxString * _arg3 = (wxString *) &wxPyEmptyStr;
    wxString * _arg4 = (wxString *) &wxPyEmptyStr;
    int  _arg5 = (int ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    char *_kwnames[] = { "self","id","bitmap","shortHelpString","longHelpString","isToggle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO|OOi:wxToolBarBase_AddSimpleTool",_kwnames,&_argo0,&_arg1,&_argo2,&_obj3,&_obj4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_AddSimpleTool. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of wxToolBarBase_AddSimpleTool. Expected _wxBitmap_p.");
        return NULL;
        }
    }
    if (_obj3)
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj3) && !PyUnicode_Check(_obj3)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj3, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg3 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj3)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg3 = new wxString(PyString_AS_STRING(_obj3), PyString_GET_SIZE(_obj3));
#endif
}
    if (_obj4)
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj4) && !PyUnicode_Check(_obj4)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj4, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg4 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj4)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg4 = new wxString(PyString_AS_STRING(_obj4), PyString_GET_SIZE(_obj4));
#endif
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarBase_AddSimpleTool(_arg0,_arg1,*_arg2,*_arg3,*_arg4,_arg5);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
{
    if (_obj3)
        delete _arg3;
}
{
    if (_obj4)
        delete _arg4;
}
    return _resultobj;
}

static wxToolBarToolBase * wxToolBarBase_InsertTool(wxToolBarBase *self,size_t  pos,int  id,const wxBitmap & bitmap,const wxBitmap & pushedBitmap,int  isToggle,PyObject * clientData,const wxString & shortHelpString,const wxString & longHelpString) {
            wxPyUserData* udata = NULL;
            if (clientData)
                udata = new wxPyUserData(clientData);
            return self->InsertTool(pos, id, bitmap, pushedBitmap, (bool)isToggle,
                                    udata, shortHelpString, longHelpString);
        }
static PyObject *_wrap_wxToolBarBase_InsertTool(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarBase * _arg0;
    size_t  _arg1;
    int  _arg2;
    wxBitmap * _arg3;
    wxBitmap * _arg4 = (wxBitmap *) &wxNullBitmap;
    int  _arg5 = (int ) FALSE;
    PyObject * _arg6 = (PyObject *) NULL;
    wxString * _arg7 = (wxString *) &wxPyEmptyStr;
    wxString * _arg8 = (wxString *) &wxPyEmptyStr;
    PyObject * _argo0 = 0;
    PyObject * _argo3 = 0;
    PyObject * _argo4 = 0;
    PyObject * _obj6 = 0;
    PyObject * _obj7 = 0;
    PyObject * _obj8 = 0;
    char *_kwnames[] = { "self","pos","id","bitmap","pushedBitmap","isToggle","clientData","shortHelpString","longHelpString", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiiO|OiOOO:wxToolBarBase_InsertTool",_kwnames,&_argo0,&_arg1,&_arg2,&_argo3,&_argo4,&_arg5,&_obj6,&_obj7,&_obj8)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_InsertTool. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,"_wxBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of wxToolBarBase_InsertTool. Expected _wxBitmap_p.");
        return NULL;
        }
    }
    if (_argo4) {
        if (_argo4 == Py_None) { _arg4 = NULL; }
        else if (SWIG_GetPtrObj(_argo4,(void **) &_arg4,"_wxBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of wxToolBarBase_InsertTool. Expected _wxBitmap_p.");
        return NULL;
        }
    }
    if (_obj6)
{
  _arg6 = _obj6;
}
    if (_obj7)
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj7) && !PyUnicode_Check(_obj7)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj7, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg7 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj7)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg7 = new wxString(PyString_AS_STRING(_obj7), PyString_GET_SIZE(_obj7));
#endif
}
    if (_obj8)
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj8) && !PyUnicode_Check(_obj8)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj8, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg8 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj8)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg8 = new wxString(PyString_AS_STRING(_obj8), PyString_GET_SIZE(_obj8));
#endif
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarBase_InsertTool(_arg0,_arg1,_arg2,*_arg3,*_arg4,_arg5,_arg6,*_arg7,*_arg8);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
{
    if (_obj7)
        delete _arg7;
}
{
    if (_obj8)
        delete _arg8;
}
    return _resultobj;
}

static wxToolBarToolBase * wxToolBarBase_InsertSimpleTool(wxToolBarBase *self,size_t  pos,int  id,const wxBitmap & bitmap,const wxString & shortHelpString,const wxString & longHelpString,int  isToggle) {
            return self->InsertTool(pos, id, bitmap, wxNullBitmap, isToggle, NULL,
                                    shortHelpString, longHelpString);
        }
static PyObject *_wrap_wxToolBarBase_InsertSimpleTool(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarBase * _arg0;
    size_t  _arg1;
    int  _arg2;
    wxBitmap * _arg3;
    wxString * _arg4 = (wxString *) &wxPyEmptyStr;
    wxString * _arg5 = (wxString *) &wxPyEmptyStr;
    int  _arg6 = (int ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","pos","id","bitmap","shortHelpString","longHelpString","isToggle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiiO|OOi:wxToolBarBase_InsertSimpleTool",_kwnames,&_argo0,&_arg1,&_arg2,&_argo3,&_obj4,&_obj5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_InsertSimpleTool. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,"_wxBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of wxToolBarBase_InsertSimpleTool. Expected _wxBitmap_p.");
        return NULL;
        }
    }
    if (_obj4)
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj4) && !PyUnicode_Check(_obj4)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj4, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg4 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj4)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg4 = new wxString(PyString_AS_STRING(_obj4), PyString_GET_SIZE(_obj4));
#endif
}
    if (_obj5)
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj5) && !PyUnicode_Check(_obj5)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj5, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg5 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj5)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg5 = new wxString(PyString_AS_STRING(_obj5), PyString_GET_SIZE(_obj5));
#endif
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarBase_InsertSimpleTool(_arg0,_arg1,_arg2,*_arg3,*_arg4,*_arg5,_arg6);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
{
    if (_obj4)
        delete _arg4;
}
{
    if (_obj5)
        delete _arg5;
}
    return _resultobj;
}

#define wxToolBarBase_AddControl(_swigobj,_swigarg0)  (_swigobj->AddControl(_swigarg0))
static PyObject *_wrap_wxToolBarBase_AddControl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarBase * _arg0;
    wxControl * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","control", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxToolBarBase_AddControl",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_AddControl. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxControl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxToolBarBase_AddControl. Expected _wxControl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarBase_AddControl(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
    return _resultobj;
}

#define wxToolBarBase_InsertControl(_swigobj,_swigarg0,_swigarg1)  (_swigobj->InsertControl(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBarBase_InsertControl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarBase * _arg0;
    size_t  _arg1;
    wxControl * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","pos","control", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:wxToolBarBase_InsertControl",_kwnames,&_argo0,&_arg1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_InsertControl. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxControl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of wxToolBarBase_InsertControl. Expected _wxControl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarBase_InsertControl(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
    return _resultobj;
}

#define wxToolBarBase_AddSeparator(_swigobj)  (_swigobj->AddSeparator())
static PyObject *_wrap_wxToolBarBase_AddSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_AddSeparator",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_AddSeparator. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarBase_AddSeparator(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
    return _resultobj;
}

#define wxToolBarBase_InsertSeparator(_swigobj,_swigarg0)  (_swigobj->InsertSeparator(_swigarg0))
static PyObject *_wrap_wxToolBarBase_InsertSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarBase * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_InsertSeparator",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_InsertSeparator. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarBase_InsertSeparator(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
    return _resultobj;
}

#define wxToolBarBase_RemoveTool(_swigobj,_swigarg0)  (_swigobj->RemoveTool(_swigarg0))
static PyObject *_wrap_wxToolBarBase_RemoveTool(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","id", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_RemoveTool",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_RemoveTool. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarBase_RemoveTool(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
    return _resultobj;
}

#define wxToolBarBase_DeleteToolByPos(_swigobj,_swigarg0)  (_swigobj->DeleteToolByPos(_swigarg0))
static PyObject *_wrap_wxToolBarBase_DeleteToolByPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarBase * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_DeleteToolByPos",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_DeleteToolByPos. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarBase_DeleteToolByPos(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarBase_DeleteTool(_swigobj,_swigarg0)  (_swigobj->DeleteTool(_swigarg0))
static PyObject *_wrap_wxToolBarBase_DeleteTool(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","id", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_DeleteTool",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_DeleteTool. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarBase_DeleteTool(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarBase_ClearTools(_swigobj)  (_swigobj->ClearTools())
static PyObject *_wrap_wxToolBarBase_ClearTools(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_ClearTools",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_ClearTools. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_ClearTools(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_Realize(_swigobj)  (_swigobj->Realize())
static PyObject *_wrap_wxToolBarBase_Realize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_Realize",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_Realize. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarBase_Realize(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarBase_EnableTool(_swigobj,_swigarg0,_swigarg1)  (_swigobj->EnableTool(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBarBase_EnableTool(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    bool  _arg2;
    PyObject * _argo0 = 0;
    int tempbool2;
    char *_kwnames[] = { "self","id","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxToolBarBase_EnableTool",_kwnames,&_argo0,&_arg1,&tempbool2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_EnableTool. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_EnableTool(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_ToggleTool(_swigobj,_swigarg0,_swigarg1)  (_swigobj->ToggleTool(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBarBase_ToggleTool(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    bool  _arg2;
    PyObject * _argo0 = 0;
    int tempbool2;
    char *_kwnames[] = { "self","id","toggle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxToolBarBase_ToggleTool",_kwnames,&_argo0,&_arg1,&tempbool2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_ToggleTool. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_ToggleTool(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_SetToggle(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetToggle(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBarBase_SetToggle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    bool  _arg2;
    PyObject * _argo0 = 0;
    int tempbool2;
    char *_kwnames[] = { "self","id","toggle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxToolBarBase_SetToggle",_kwnames,&_argo0,&_arg1,&tempbool2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetToggle. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetToggle(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * wxToolBarBase_GetToolClientData(wxToolBarBase *self,int  index) {
            wxPyUserData* udata = (wxPyUserData*)self->GetToolClientData(index);
            if (udata) {
                Py_INCREF(udata->m_obj);
                return udata->m_obj;
            } else {
                Py_INCREF(Py_None);
                return Py_None;
            }
        }
static PyObject *_wrap_wxToolBarBase_GetToolClientData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_GetToolClientData",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolClientData. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (PyObject *)wxToolBarBase_GetToolClientData(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{
  _resultobj = _result;
}
    return _resultobj;
}

static void  wxToolBarBase_SetToolClientData(wxToolBarBase *self,int  index,PyObject * clientData) {
            self->SetToolClientData(index, new wxPyUserData(clientData));
        }
static PyObject *_wrap_wxToolBarBase_SetToolClientData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","index","clientData", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:wxToolBarBase_SetToolClientData",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetToolClientData. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
  _arg2 = _obj2;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetToolClientData(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_GetToolState(_swigobj,_swigarg0)  (_swigobj->GetToolState(_swigarg0))
static PyObject *_wrap_wxToolBarBase_GetToolState(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","id", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_GetToolState",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolState. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarBase_GetToolState(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarBase_GetToolEnabled(_swigobj,_swigarg0)  (_swigobj->GetToolEnabled(_swigarg0))
static PyObject *_wrap_wxToolBarBase_GetToolEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","id", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_GetToolEnabled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolEnabled. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxToolBarBase_GetToolEnabled(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarBase_SetToolShortHelp(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetToolShortHelp(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBarBase_SetToolShortHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    wxString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","id","helpString", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:wxToolBarBase_SetToolShortHelp",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetToolShortHelp. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj2) && !PyUnicode_Check(_obj2)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj2, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg2 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj2)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg2 = new wxString(PyString_AS_STRING(_obj2), PyString_GET_SIZE(_obj2));
#endif
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetToolShortHelp(_arg0,_arg1,*_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj2)
        delete _arg2;
}
    return _resultobj;
}

#define wxToolBarBase_GetToolShortHelp(_swigobj,_swigarg0)  (_swigobj->GetToolShortHelp(_swigarg0))
static PyObject *_wrap_wxToolBarBase_GetToolShortHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","id", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_GetToolShortHelp",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolShortHelp. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxString (wxToolBarBase_GetToolShortHelp(_arg0,_arg1));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
}
{
    delete _result;
}
    return _resultobj;
}

#define wxToolBarBase_SetToolLongHelp(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetToolLongHelp(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBarBase_SetToolLongHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    wxString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","id","helpString", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:wxToolBarBase_SetToolLongHelp",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetToolLongHelp. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
#if PYTHON_API_VERSION >= 1009
    char* tmpPtr; int tmpSize;
    if (!PyString_Check(_obj2) && !PyUnicode_Check(_obj2)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    if (PyString_AsStringAndSize(_obj2, &tmpPtr, &tmpSize) == -1)
        return NULL;
    _arg2 = new wxString(tmpPtr, tmpSize);
#else
    if (!PyString_Check(_obj2)) {
        PyErr_SetString(PyExc_TypeError, wxStringErrorMsg);
        return NULL;
    }
    _arg2 = new wxString(PyString_AS_STRING(_obj2), PyString_GET_SIZE(_obj2));
#endif
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetToolLongHelp(_arg0,_arg1,*_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    if (_obj2)
        delete _arg2;
}
    return _resultobj;
}

#define wxToolBarBase_GetToolLongHelp(_swigobj,_swigarg0)  (_swigobj->GetToolLongHelp(_swigarg0))
static PyObject *_wrap_wxToolBarBase_GetToolLongHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","id", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_GetToolLongHelp",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolLongHelp. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxString (wxToolBarBase_GetToolLongHelp(_arg0,_arg1));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
}
{
    delete _result;
}
    return _resultobj;
}

#define wxToolBarBase_SetMarginsXY(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetMargins(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBarBase_SetMarginsXY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    int  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxToolBarBase_SetMarginsXY",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetMarginsXY. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetMarginsXY(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_SetMargins(_swigobj,_swigarg0)  (_swigobj->SetMargins(_swigarg0))
static PyObject *_wrap_wxToolBarBase_SetMargins(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    wxSize * _arg1;
    PyObject * _argo0 = 0;
    wxSize  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","size", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxToolBarBase_SetMargins",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetMargins. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxSize_helper(_obj1, &_arg1))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetMargins(_arg0,*_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_SetToolPacking(_swigobj,_swigarg0)  (_swigobj->SetToolPacking(_swigarg0))
static PyObject *_wrap_wxToolBarBase_SetToolPacking(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","packing", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_SetToolPacking",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetToolPacking. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetToolPacking(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_SetToolSeparation(_swigobj,_swigarg0)  (_swigobj->SetToolSeparation(_swigarg0))
static PyObject *_wrap_wxToolBarBase_SetToolSeparation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","separation", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_SetToolSeparation",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetToolSeparation. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetToolSeparation(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_GetToolMargins(_swigobj)  (_swigobj->GetToolMargins())
static PyObject *_wrap_wxToolBarBase_GetToolMargins(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_GetToolMargins",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolMargins. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxSize (wxToolBarBase_GetToolMargins(_arg0));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxSize_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define wxToolBarBase_GetMargins(_swigobj)  (_swigobj->GetMargins())
static PyObject *_wrap_wxToolBarBase_GetMargins(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_GetMargins",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetMargins. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxSize (wxToolBarBase_GetMargins(_arg0));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxSize_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define wxToolBarBase_GetToolPacking(_swigobj)  (_swigobj->GetToolPacking())
static PyObject *_wrap_wxToolBarBase_GetToolPacking(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_GetToolPacking",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolPacking. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxToolBarBase_GetToolPacking(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarBase_GetToolSeparation(_swigobj)  (_swigobj->GetToolSeparation())
static PyObject *_wrap_wxToolBarBase_GetToolSeparation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_GetToolSeparation",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolSeparation. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxToolBarBase_GetToolSeparation(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarBase_SetRows(_swigobj,_swigarg0)  (_swigobj->SetRows(_swigarg0))
static PyObject *_wrap_wxToolBarBase_SetRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","nRows", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxToolBarBase_SetRows",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetRows. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetRows(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_SetMaxRowsCols(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetMaxRowsCols(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBarBase_SetMaxRowsCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    int  _arg1;
    int  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","rows","cols", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxToolBarBase_SetMaxRowsCols",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetMaxRowsCols. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetMaxRowsCols(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_GetMaxRows(_swigobj)  (_swigobj->GetMaxRows())
static PyObject *_wrap_wxToolBarBase_GetMaxRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_GetMaxRows",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetMaxRows. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxToolBarBase_GetMaxRows(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarBase_GetMaxCols(_swigobj)  (_swigobj->GetMaxCols())
static PyObject *_wrap_wxToolBarBase_GetMaxCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_GetMaxCols",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetMaxCols. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (int )wxToolBarBase_GetMaxCols(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxToolBarBase_SetToolBitmapSize(_swigobj,_swigarg0)  (_swigobj->SetToolBitmapSize(_swigarg0))
static PyObject *_wrap_wxToolBarBase_SetToolBitmapSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarBase * _arg0;
    wxSize * _arg1;
    PyObject * _argo0 = 0;
    wxSize  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","size", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxToolBarBase_SetToolBitmapSize",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_SetToolBitmapSize. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxSize_helper(_obj1, &_arg1))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxToolBarBase_SetToolBitmapSize(_arg0,*_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxToolBarBase_GetToolBitmapSize(_swigobj)  (_swigobj->GetToolBitmapSize())
static PyObject *_wrap_wxToolBarBase_GetToolBitmapSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_GetToolBitmapSize",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolBitmapSize. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxSize (wxToolBarBase_GetToolBitmapSize(_arg0));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxSize_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define wxToolBarBase_GetToolSize(_swigobj)  (_swigobj->GetToolSize())
static PyObject *_wrap_wxToolBarBase_GetToolSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _result;
    wxToolBarBase * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxToolBarBase_GetToolSize",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarBase_GetToolSize. Expected _wxToolBarBase_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxSize (wxToolBarBase_GetToolSize(_arg0));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxSize_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigwxToolBarTowxToolBarBase(void *ptr) {
    wxToolBar *src;
    wxToolBarBase *dest;
    src = (wxToolBar *) ptr;
    dest = (wxToolBarBase *) src;
    return (void *) dest;
}

static void *SwigwxToolBarTowxControl(void *ptr) {
    wxToolBar *src;
    wxControl *dest;
    src = (wxToolBar *) ptr;
    dest = (wxControl *) src;
    return (void *) dest;
}

static void *SwigwxToolBarTowxWindow(void *ptr) {
    wxToolBar *src;
    wxWindow *dest;
    src = (wxToolBar *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxToolBarTowxEvtHandler(void *ptr) {
    wxToolBar *src;
    wxEvtHandler *dest;
    src = (wxToolBar *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxToolBarTowxObject(void *ptr) {
    wxToolBar *src;
    wxObject *dest;
    src = (wxToolBar *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxToolBar(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new wxToolBar(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_wxToolBar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBar * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1;
    wxPoint * _arg2 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg3 = (wxSize *) &wxDefaultSize;
    long  _arg4 = (long ) wxNO_BORDER|wxTB_HORIZONTAL;
    char * _arg5 = (char *) wxToolBarNameStr;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj2 = 0;
    wxSize  temp0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "parent","id","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|OOls:new_wxToolBar",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxToolBar. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxPoint_helper(_obj2, &_arg2))
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp0;
    if (! wxSize_helper(_obj3, &_arg3))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBar *)new_wxToolBar(_arg0,_arg1,*_arg2,*_arg3,_arg4,_arg5);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxToolBar_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxToolBar_FindToolForPosition(_swigobj,_swigarg0,_swigarg1)  (_swigobj->FindToolForPosition(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBar_FindToolForPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBar * _arg0;
    wxCoord  _arg1;
    wxCoord  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxToolBar_FindToolForPosition",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBar_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBar_FindToolForPosition. Expected _wxToolBar_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBar_FindToolForPosition(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
    return _resultobj;
}

static void *SwigwxToolBarSimpleTowxToolBarBase(void *ptr) {
    wxToolBarSimple *src;
    wxToolBarBase *dest;
    src = (wxToolBarSimple *) ptr;
    dest = (wxToolBarBase *) src;
    return (void *) dest;
}

static void *SwigwxToolBarSimpleTowxControl(void *ptr) {
    wxToolBarSimple *src;
    wxControl *dest;
    src = (wxToolBarSimple *) ptr;
    dest = (wxControl *) src;
    return (void *) dest;
}

static void *SwigwxToolBarSimpleTowxWindow(void *ptr) {
    wxToolBarSimple *src;
    wxWindow *dest;
    src = (wxToolBarSimple *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxToolBarSimpleTowxEvtHandler(void *ptr) {
    wxToolBarSimple *src;
    wxEvtHandler *dest;
    src = (wxToolBarSimple *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxToolBarSimpleTowxObject(void *ptr) {
    wxToolBarSimple *src;
    wxObject *dest;
    src = (wxToolBarSimple *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxToolBarSimple(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new wxToolBarSimple(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_wxToolBarSimple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarSimple * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1;
    wxPoint * _arg2 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg3 = (wxSize *) &wxDefaultSize;
    long  _arg4 = (long ) wxNO_BORDER|wxTB_HORIZONTAL;
    char * _arg5 = (char *) wxToolBarNameStr;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj2 = 0;
    wxSize  temp0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "parent","id","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|OOls:new_wxToolBarSimple",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxToolBarSimple. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxPoint_helper(_obj2, &_arg2))
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp0;
    if (! wxSize_helper(_obj3, &_arg3))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarSimple *)new_wxToolBarSimple(_arg0,_arg1,*_arg2,*_arg3,_arg4,_arg5);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxToolBarSimple_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxToolBarSimple_FindToolForPosition(_swigobj,_swigarg0,_swigarg1)  (_swigobj->FindToolForPosition(_swigarg0,_swigarg1))
static PyObject *_wrap_wxToolBarSimple_FindToolForPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxToolBarToolBase * _result;
    wxToolBarSimple * _arg0;
    wxCoord  _arg1;
    wxCoord  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxToolBarSimple_FindToolForPosition",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxToolBarSimple_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxToolBarSimple_FindToolForPosition. Expected _wxToolBarSimple_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxToolBarToolBase *)wxToolBarSimple_FindToolForPosition(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}{ _resultobj = wxPyMake_wxObject(_result); }
    return _resultobj;
}

static PyMethodDef stattoolcMethods[] = {
	 { "wxToolBarSimple_FindToolForPosition", (PyCFunction) _wrap_wxToolBarSimple_FindToolForPosition, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxToolBarSimple", (PyCFunction) _wrap_new_wxToolBarSimple, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBar_FindToolForPosition", (PyCFunction) _wrap_wxToolBar_FindToolForPosition, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxToolBar", (PyCFunction) _wrap_new_wxToolBar, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolSize", (PyCFunction) _wrap_wxToolBarBase_GetToolSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolBitmapSize", (PyCFunction) _wrap_wxToolBarBase_GetToolBitmapSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetToolBitmapSize", (PyCFunction) _wrap_wxToolBarBase_SetToolBitmapSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetMaxCols", (PyCFunction) _wrap_wxToolBarBase_GetMaxCols, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetMaxRows", (PyCFunction) _wrap_wxToolBarBase_GetMaxRows, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetMaxRowsCols", (PyCFunction) _wrap_wxToolBarBase_SetMaxRowsCols, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetRows", (PyCFunction) _wrap_wxToolBarBase_SetRows, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolSeparation", (PyCFunction) _wrap_wxToolBarBase_GetToolSeparation, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolPacking", (PyCFunction) _wrap_wxToolBarBase_GetToolPacking, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetMargins", (PyCFunction) _wrap_wxToolBarBase_GetMargins, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolMargins", (PyCFunction) _wrap_wxToolBarBase_GetToolMargins, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetToolSeparation", (PyCFunction) _wrap_wxToolBarBase_SetToolSeparation, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetToolPacking", (PyCFunction) _wrap_wxToolBarBase_SetToolPacking, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetMargins", (PyCFunction) _wrap_wxToolBarBase_SetMargins, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetMarginsXY", (PyCFunction) _wrap_wxToolBarBase_SetMarginsXY, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolLongHelp", (PyCFunction) _wrap_wxToolBarBase_GetToolLongHelp, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetToolLongHelp", (PyCFunction) _wrap_wxToolBarBase_SetToolLongHelp, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolShortHelp", (PyCFunction) _wrap_wxToolBarBase_GetToolShortHelp, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetToolShortHelp", (PyCFunction) _wrap_wxToolBarBase_SetToolShortHelp, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolEnabled", (PyCFunction) _wrap_wxToolBarBase_GetToolEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolState", (PyCFunction) _wrap_wxToolBarBase_GetToolState, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetToolClientData", (PyCFunction) _wrap_wxToolBarBase_SetToolClientData, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_GetToolClientData", (PyCFunction) _wrap_wxToolBarBase_GetToolClientData, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_SetToggle", (PyCFunction) _wrap_wxToolBarBase_SetToggle, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_ToggleTool", (PyCFunction) _wrap_wxToolBarBase_ToggleTool, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_EnableTool", (PyCFunction) _wrap_wxToolBarBase_EnableTool, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_Realize", (PyCFunction) _wrap_wxToolBarBase_Realize, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_ClearTools", (PyCFunction) _wrap_wxToolBarBase_ClearTools, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_DeleteTool", (PyCFunction) _wrap_wxToolBarBase_DeleteTool, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_DeleteToolByPos", (PyCFunction) _wrap_wxToolBarBase_DeleteToolByPos, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_RemoveTool", (PyCFunction) _wrap_wxToolBarBase_RemoveTool, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_InsertSeparator", (PyCFunction) _wrap_wxToolBarBase_InsertSeparator, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_AddSeparator", (PyCFunction) _wrap_wxToolBarBase_AddSeparator, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_InsertControl", (PyCFunction) _wrap_wxToolBarBase_InsertControl, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_AddControl", (PyCFunction) _wrap_wxToolBarBase_AddControl, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_InsertSimpleTool", (PyCFunction) _wrap_wxToolBarBase_InsertSimpleTool, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_InsertTool", (PyCFunction) _wrap_wxToolBarBase_InsertTool, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_AddSimpleTool", (PyCFunction) _wrap_wxToolBarBase_AddSimpleTool, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarBase_AddTool", (PyCFunction) _wrap_wxToolBarBase_AddTool, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_SetClientData", (PyCFunction) _wrap_wxToolBarToolBase_SetClientData, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetClientData", (PyCFunction) _wrap_wxToolBarToolBase_GetClientData, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_Attach", (PyCFunction) _wrap_wxToolBarToolBase_Attach, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_Detach", (PyCFunction) _wrap_wxToolBarToolBase_Detach, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_SetBitmap2", (PyCFunction) _wrap_wxToolBarToolBase_SetBitmap2, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_SetBitmap1", (PyCFunction) _wrap_wxToolBarToolBase_SetBitmap1, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_SetLongHelp", (PyCFunction) _wrap_wxToolBarToolBase_SetLongHelp, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_SetShortHelp", (PyCFunction) _wrap_wxToolBarToolBase_SetShortHelp, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_SetToggle", (PyCFunction) _wrap_wxToolBarToolBase_SetToggle, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_Toggle", (PyCFunction) _wrap_wxToolBarToolBase_Toggle, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_Enable", (PyCFunction) _wrap_wxToolBarToolBase_Enable, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetLongHelp", (PyCFunction) _wrap_wxToolBarToolBase_GetLongHelp, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetShortHelp", (PyCFunction) _wrap_wxToolBarToolBase_GetShortHelp, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetBitmap", (PyCFunction) _wrap_wxToolBarToolBase_GetBitmap, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetBitmap2", (PyCFunction) _wrap_wxToolBarToolBase_GetBitmap2, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetBitmap1", (PyCFunction) _wrap_wxToolBarToolBase_GetBitmap1, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_CanBeToggled", (PyCFunction) _wrap_wxToolBarToolBase_CanBeToggled, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_IsToggled", (PyCFunction) _wrap_wxToolBarToolBase_IsToggled, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_IsEnabled", (PyCFunction) _wrap_wxToolBarToolBase_IsEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetStyle", (PyCFunction) _wrap_wxToolBarToolBase_GetStyle, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_IsSeparator", (PyCFunction) _wrap_wxToolBarToolBase_IsSeparator, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_IsControl", (PyCFunction) _wrap_wxToolBarToolBase_IsControl, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_IsButton", (PyCFunction) _wrap_wxToolBarToolBase_IsButton, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetToolBar", (PyCFunction) _wrap_wxToolBarToolBase_GetToolBar, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetControl", (PyCFunction) _wrap_wxToolBarToolBase_GetControl, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_GetId", (PyCFunction) _wrap_wxToolBarToolBase_GetId, METH_VARARGS | METH_KEYWORDS },
	 { "wxToolBarToolBase_Destroy", (PyCFunction) _wrap_wxToolBarToolBase_Destroy, METH_VARARGS | METH_KEYWORDS },
	 { "wxStatusBar_SetMinHeight", (PyCFunction) _wrap_wxStatusBar_SetMinHeight, METH_VARARGS | METH_KEYWORDS },
	 { "wxStatusBar_SetStatusWidths", (PyCFunction) _wrap_wxStatusBar_SetStatusWidths, METH_VARARGS | METH_KEYWORDS },
	 { "wxStatusBar_SetStatusText", (PyCFunction) _wrap_wxStatusBar_SetStatusText, METH_VARARGS | METH_KEYWORDS },
	 { "wxStatusBar_SetFieldsCount", (PyCFunction) _wrap_wxStatusBar_SetFieldsCount, METH_VARARGS | METH_KEYWORDS },
	 { "wxStatusBar_GetBorderY", (PyCFunction) _wrap_wxStatusBar_GetBorderY, METH_VARARGS | METH_KEYWORDS },
	 { "wxStatusBar_GetBorderX", (PyCFunction) _wrap_wxStatusBar_GetBorderX, METH_VARARGS | METH_KEYWORDS },
	 { "wxStatusBar_GetStatusText", (PyCFunction) _wrap_wxStatusBar_GetStatusText, METH_VARARGS | METH_KEYWORDS },
	 { "wxStatusBar_GetFieldsCount", (PyCFunction) _wrap_wxStatusBar_GetFieldsCount, METH_VARARGS | METH_KEYWORDS },
	 { "wxStatusBar_GetFieldRect", (PyCFunction) _wrap_wxStatusBar_GetFieldRect, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxStatusBar", (PyCFunction) _wrap_new_wxStatusBar, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_signed_long","_long",0},
    { "_wxPrintQuality","_wxCoord",0},
    { "_wxPrintQuality","_int",0},
    { "_wxPrintQuality","_signed_int",0},
    { "_wxPrintQuality","_unsigned_int",0},
    { "_wxPrintQuality","_wxWindowID",0},
    { "_wxPrintQuality","_uint",0},
    { "_wxPrintQuality","_EBool",0},
    { "_wxPrintQuality","_size_t",0},
    { "_wxPrintQuality","_time_t",0},
    { "_byte","_unsigned_char",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_size_t","_wxCoord",0},
    { "_size_t","_wxPrintQuality",0},
    { "_size_t","_time_t",0},
    { "_size_t","_unsigned_int",0},
    { "_size_t","_int",0},
    { "_size_t","_wxWindowID",0},
    { "_size_t","_uint",0},
    { "_uint","_wxCoord",0},
    { "_uint","_wxPrintQuality",0},
    { "_uint","_time_t",0},
    { "_uint","_size_t",0},
    { "_uint","_unsigned_int",0},
    { "_uint","_int",0},
    { "_uint","_wxWindowID",0},
    { "_wxChar","_char",0},
    { "_char","_wxChar",0},
    { "_EBool","_wxCoord",0},
    { "_EBool","_wxPrintQuality",0},
    { "_EBool","_signed_int",0},
    { "_EBool","_int",0},
    { "_EBool","_wxWindowID",0},
    { "_unsigned_long","_long",0},
    { "_signed_int","_wxCoord",0},
    { "_signed_int","_wxPrintQuality",0},
    { "_signed_int","_EBool",0},
    { "_signed_int","_wxWindowID",0},
    { "_signed_int","_int",0},
    { "_WXTYPE","_short",0},
    { "_WXTYPE","_signed_short",0},
    { "_WXTYPE","_unsigned_short",0},
    { "_unsigned_short","_WXTYPE",0},
    { "_unsigned_short","_short",0},
    { "_wxObject","_wxToolBarSimple",SwigwxToolBarSimpleTowxObject},
    { "_wxObject","_wxToolBar",SwigwxToolBarTowxObject},
    { "_wxObject","_wxToolBarBase",SwigwxToolBarBaseTowxObject},
    { "_wxObject","_wxToolBarToolBase",SwigwxToolBarToolBaseTowxObject},
    { "_wxObject","_wxStatusBar",SwigwxStatusBarTowxObject},
    { "_signed_short","_WXTYPE",0},
    { "_signed_short","_short",0},
    { "_unsigned_char","_byte",0},
    { "_wxControl","_wxToolBarSimple",SwigwxToolBarSimpleTowxControl},
    { "_wxControl","_wxToolBar",SwigwxToolBarTowxControl},
    { "_wxControl","_wxToolBarBase",SwigwxToolBarBaseTowxControl},
    { "_unsigned_int","_wxCoord",0},
    { "_unsigned_int","_wxPrintQuality",0},
    { "_unsigned_int","_time_t",0},
    { "_unsigned_int","_size_t",0},
    { "_unsigned_int","_uint",0},
    { "_unsigned_int","_wxWindowID",0},
    { "_unsigned_int","_int",0},
    { "_short","_WXTYPE",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_wxWindowID","_wxCoord",0},
    { "_wxWindowID","_wxPrintQuality",0},
    { "_wxWindowID","_time_t",0},
    { "_wxWindowID","_size_t",0},
    { "_wxWindowID","_EBool",0},
    { "_wxWindowID","_uint",0},
    { "_wxWindowID","_int",0},
    { "_wxWindowID","_signed_int",0},
    { "_wxWindowID","_unsigned_int",0},
    { "_int","_wxCoord",0},
    { "_int","_wxPrintQuality",0},
    { "_int","_time_t",0},
    { "_int","_size_t",0},
    { "_int","_EBool",0},
    { "_int","_uint",0},
    { "_int","_wxWindowID",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_time_t","_wxCoord",0},
    { "_time_t","_wxPrintQuality",0},
    { "_time_t","_unsigned_int",0},
    { "_time_t","_int",0},
    { "_time_t","_wxWindowID",0},
    { "_time_t","_uint",0},
    { "_time_t","_size_t",0},
    { "_wxToolBarBase","_wxToolBarSimple",SwigwxToolBarSimpleTowxToolBarBase},
    { "_wxToolBarBase","_wxToolBar",SwigwxToolBarTowxToolBarBase},
    { "_wxCoord","_int",0},
    { "_wxCoord","_signed_int",0},
    { "_wxCoord","_unsigned_int",0},
    { "_wxCoord","_wxWindowID",0},
    { "_wxCoord","_uint",0},
    { "_wxCoord","_EBool",0},
    { "_wxCoord","_size_t",0},
    { "_wxCoord","_time_t",0},
    { "_wxCoord","_wxPrintQuality",0},
    { "_wxEvtHandler","_wxToolBarSimple",SwigwxToolBarSimpleTowxEvtHandler},
    { "_wxEvtHandler","_wxToolBar",SwigwxToolBarTowxEvtHandler},
    { "_wxEvtHandler","_wxToolBarBase",SwigwxToolBarBaseTowxEvtHandler},
    { "_wxEvtHandler","_wxStatusBar",SwigwxStatusBarTowxEvtHandler},
    { "_wxWindow","_wxToolBarSimple",SwigwxToolBarSimpleTowxWindow},
    { "_wxWindow","_wxToolBar",SwigwxToolBarTowxWindow},
    { "_wxWindow","_wxToolBarBase",SwigwxToolBarBaseTowxWindow},
    { "_wxWindow","_wxStatusBar",SwigwxStatusBarTowxWindow},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) initstattoolc() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("stattoolc", stattoolcMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"wxTOOL_STYLE_BUTTON", PyInt_FromLong((long) wxTOOL_STYLE_BUTTON));
	 PyDict_SetItemString(d,"wxTOOL_STYLE_SEPARATOR", PyInt_FromLong((long) wxTOOL_STYLE_SEPARATOR));
	 PyDict_SetItemString(d,"wxTOOL_STYLE_CONTROL", PyInt_FromLong((long) wxTOOL_STYLE_CONTROL));
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
