/*
 * FILE : src/msw/calendar.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export
#	else
#	    define SWIGEXPORT(a) a
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    initcalendarc

#define SWIG_name    "calendarc"

#include "export.h"
#include <wx/calctrl.h>


static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {
        target = o;
    } else if (target == Py_None) {
        Py_DECREF(Py_None);
        target = o;
    } else {
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);
        PyTuple_SetItem(o3, 0, o);

        o2 = target;
        target = PySequence_Concat(o2, o3);
        Py_DECREF(o2);
        Py_DECREF(o3);
    }
    return target;
}

#if PYTHON_API_VERSION >= 1009
    static char* wxStringErrorMsg = "String or Unicode type required";
#else
    static char* wxStringErrorMsg = "String type required";
#endif
#ifdef __cplusplus
extern "C" {
#endif
static void *SwigwxCalendarEventTowxCommandEvent(void *ptr) {
    wxCalendarEvent *src;
    wxCommandEvent *dest;
    src = (wxCalendarEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxCalendarEventTowxEvent(void *ptr) {
    wxCalendarEvent *src;
    wxEvent *dest;
    src = (wxCalendarEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxCalendarEventTowxObject(void *ptr) {
    wxCalendarEvent *src;
    wxObject *dest;
    src = (wxCalendarEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxCalendarEvent(_swigarg0,_swigarg1) (new wxCalendarEvent(_swigarg0,_swigarg1))
static PyObject *_wrap_new_wxCalendarEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarEvent * _result;
    wxCalendarCtrl * _arg0;
    wxEventType  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "cal","type", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:new_wxCalendarEvent",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxCalendarEvent. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxCalendarEvent *)new_wxCalendarEvent(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxCalendarEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarEvent_GetDate(_swigobj)  (_swigobj->GetDate())
static PyObject *_wrap_wxCalendarEvent_GetDate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxDateTime * _result;
    wxCalendarEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarEvent_GetDate",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarEvent_GetDate. Expected _wxCalendarEvent_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxDateTime & _result_ref = wxCalendarEvent_GetDate(_arg0);
    _result = (wxDateTime *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxDateTime_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarEvent_GetWeekDay(_swigobj)  (_swigobj->GetWeekDay())
static PyObject *_wrap_wxCalendarEvent_GetWeekDay(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxDateTime::WeekDay  _result;
    wxCalendarEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarEvent_GetWeekDay",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarEvent_GetWeekDay. Expected _wxCalendarEvent_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxDateTime::WeekDay )wxCalendarEvent_GetWeekDay(_arg0);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigwxCalendarCtrlTowxControl(void *ptr) {
    wxCalendarCtrl *src;
    wxControl *dest;
    src = (wxCalendarCtrl *) ptr;
    dest = (wxControl *) src;
    return (void *) dest;
}

static void *SwigwxCalendarCtrlTowxWindow(void *ptr) {
    wxCalendarCtrl *src;
    wxWindow *dest;
    src = (wxCalendarCtrl *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxCalendarCtrlTowxEvtHandler(void *ptr) {
    wxCalendarCtrl *src;
    wxEvtHandler *dest;
    src = (wxCalendarCtrl *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxCalendarCtrlTowxObject(void *ptr) {
    wxCalendarCtrl *src;
    wxObject *dest;
    src = (wxCalendarCtrl *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxCalendarCtrl(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new wxCalendarCtrl(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_wxCalendarCtrl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1;
    wxDateTime * _arg2 = (wxDateTime *) &wxDefaultDateTime;
    wxPoint * _arg3 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg4 = (wxSize *) &wxDefaultSize;
    long  _arg5 = (long ) (wxCAL_SHOW_HOLIDAYS)|wxWANTS_CHARS;
    char * _arg6 = (char *) "calendar";
    PyObject * _argo0 = 0;
    PyObject * _argo2 = 0;
    wxPoint  temp;
    PyObject * _obj3 = 0;
    wxSize  temp0;
    PyObject * _obj4 = 0;
    char *_kwnames[] = { "parent","id","date","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|OOOls:new_wxCalendarCtrl",_kwnames,&_argo0,&_arg1,&_argo2,&_obj3,&_obj4,&_arg5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxCalendarCtrl. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxDateTime_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of new_wxCalendarCtrl. Expected _wxDateTime_p.");
        return NULL;
        }
    }
    if (_obj3)
{
    _arg3 = &temp;
    if (! wxPoint_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj4)
{
    _arg4 = &temp0;
    if (! wxSize_helper(_obj4, &_arg4))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxCalendarCtrl *)new_wxCalendarCtrl(_arg0,_arg1,*_arg2,*_arg3,*_arg4,_arg5,_arg6);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxCalendarCtrl_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define new_wxPreCalendarCtrl() (new wxCalendarCtrl())
static PyObject *_wrap_new_wxPreCalendarCtrl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxPreCalendarCtrl",_kwnames)) 
        return NULL;
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxCalendarCtrl *)new_wxPreCalendarCtrl();

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxCalendarCtrl_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_Create(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6)  (_swigobj->Create(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_wxCalendarCtrl_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxCalendarCtrl * _arg0;
    wxWindow * _arg1;
    wxWindowID  _arg2;
    wxDateTime * _arg3 = (wxDateTime *) &wxDefaultDateTime;
    wxPoint * _arg4 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg5 = (wxSize *) &wxDefaultSize;
    long  _arg6 = (long ) (wxCAL_SHOW_HOLIDAYS)|wxWANTS_CHARS;
    char * _arg7 = (char *) "calendar";
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo3 = 0;
    wxPoint  temp;
    PyObject * _obj4 = 0;
    wxSize  temp0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","parent","id","date","pos","size","style","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi|OOOls:wxCalendarCtrl_Create",_kwnames,&_argo0,&_argo1,&_arg2,&_argo3,&_obj4,&_obj5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_Create. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxCalendarCtrl_Create. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,"_wxDateTime_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of wxCalendarCtrl_Create. Expected _wxDateTime_p.");
        return NULL;
        }
    }
    if (_obj4)
{
    _arg4 = &temp;
    if (! wxPoint_helper(_obj4, &_arg4))
        return NULL;
}
    if (_obj5)
{
    _arg5 = &temp0;
    if (! wxSize_helper(_obj5, &_arg5))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxCalendarCtrl_Create(_arg0,_arg1,_arg2,*_arg3,*_arg4,*_arg5,_arg6,_arg7);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxCalendarCtrl_SetDate(_swigobj,_swigarg0)  (_swigobj->SetDate(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_SetDate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    wxDateTime * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","date", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxCalendarCtrl_SetDate",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_SetDate. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxDateTime_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxCalendarCtrl_SetDate. Expected _wxDateTime_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_SetDate(_arg0,*_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_GetDate(_swigobj)  (_swigobj->GetDate())
static PyObject *_wrap_wxCalendarCtrl_GetDate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxDateTime * _result;
    wxCalendarCtrl * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarCtrl_GetDate",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetDate. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxDateTime & _result_ref = wxCalendarCtrl_GetDate(_arg0);
    _result = (wxDateTime *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxDateTime_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_SetLowerDateLimit(_swigobj,_swigarg0)  (_swigobj->SetLowerDateLimit(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_SetLowerDateLimit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxCalendarCtrl * _arg0;
    wxDateTime * _arg1 = (wxDateTime *) &wxDefaultDateTime;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","date", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|O:wxCalendarCtrl_SetLowerDateLimit",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_SetLowerDateLimit. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxDateTime_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxCalendarCtrl_SetLowerDateLimit. Expected _wxDateTime_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxCalendarCtrl_SetLowerDateLimit(_arg0,*_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxCalendarCtrl_GetLowerDateLimit(_swigobj)  (_swigobj->GetLowerDateLimit())
static PyObject *_wrap_wxCalendarCtrl_GetLowerDateLimit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxDateTime * _result;
    wxCalendarCtrl * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarCtrl_GetLowerDateLimit",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetLowerDateLimit. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxDateTime & _result_ref = wxCalendarCtrl_GetLowerDateLimit(_arg0);
    _result = (wxDateTime *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxDateTime_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_SetUpperDateLimit(_swigobj,_swigarg0)  (_swigobj->SetUpperDateLimit(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_SetUpperDateLimit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxCalendarCtrl * _arg0;
    wxDateTime * _arg1 = (wxDateTime *) &wxDefaultDateTime;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","date", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|O:wxCalendarCtrl_SetUpperDateLimit",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_SetUpperDateLimit. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxDateTime_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxCalendarCtrl_SetUpperDateLimit. Expected _wxDateTime_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxCalendarCtrl_SetUpperDateLimit(_arg0,*_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxCalendarCtrl_GetUpperDateLimit(_swigobj)  (_swigobj->GetUpperDateLimit())
static PyObject *_wrap_wxCalendarCtrl_GetUpperDateLimit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxDateTime * _result;
    wxCalendarCtrl * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarCtrl_GetUpperDateLimit",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetUpperDateLimit. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxDateTime & _result_ref = wxCalendarCtrl_GetUpperDateLimit(_arg0);
    _result = (wxDateTime *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxDateTime_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_SetDateRange(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetDateRange(_swigarg0,_swigarg1))
static PyObject *_wrap_wxCalendarCtrl_SetDateRange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxCalendarCtrl * _arg0;
    wxDateTime * _arg1 = (wxDateTime *) &wxDefaultDateTime;
    wxDateTime * _arg2 = (wxDateTime *) &wxDefaultDateTime;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","lowerdate","upperdate", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OO:wxCalendarCtrl_SetDateRange",_kwnames,&_argo0,&_argo1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_SetDateRange. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxDateTime_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxCalendarCtrl_SetDateRange. Expected _wxDateTime_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxDateTime_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of wxCalendarCtrl_SetDateRange. Expected _wxDateTime_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxCalendarCtrl_SetDateRange(_arg0,*_arg1,*_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxCalendarCtrl_EnableYearChange(_swigobj,_swigarg0)  (_swigobj->EnableYearChange(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_EnableYearChange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    bool  _arg1 = (bool ) TRUE;
    PyObject * _argo0 = 0;
    int tempbool1 = (int) TRUE;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:wxCalendarCtrl_EnableYearChange",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_EnableYearChange. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_EnableYearChange(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_EnableMonthChange(_swigobj,_swigarg0)  (_swigobj->EnableMonthChange(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_EnableMonthChange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    bool  _arg1 = (bool ) TRUE;
    PyObject * _argo0 = 0;
    int tempbool1 = (int) TRUE;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:wxCalendarCtrl_EnableMonthChange",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_EnableMonthChange. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_EnableMonthChange(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_EnableHolidayDisplay(_swigobj,_swigarg0)  (_swigobj->EnableHolidayDisplay(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_EnableHolidayDisplay(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    bool  _arg1 = (bool ) TRUE;
    PyObject * _argo0 = 0;
    int tempbool1 = (int) TRUE;
    char *_kwnames[] = { "self","display", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:wxCalendarCtrl_EnableHolidayDisplay",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_EnableHolidayDisplay. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_EnableHolidayDisplay(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_SetHeaderColours(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetHeaderColours(_swigarg0,_swigarg1))
static PyObject *_wrap_wxCalendarCtrl_SetHeaderColours(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    wxColour * _arg1;
    wxColour * _arg2;
    PyObject * _argo0 = 0;
    wxColour  temp;
    PyObject * _obj1 = 0;
    wxColour  temp0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","colFg","colBg", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxCalendarCtrl_SetHeaderColours",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_SetHeaderColours. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxColour_helper(_obj1, &_arg1))
        return NULL;
}
{
    _arg2 = &temp0;
    if (! wxColour_helper(_obj2, &_arg2))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_SetHeaderColours(_arg0,*_arg1,*_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_GetHeaderColourFg(_swigobj)  (_swigobj->GetHeaderColourFg())
static PyObject *_wrap_wxCalendarCtrl_GetHeaderColourFg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxColour * _result;
    wxCalendarCtrl * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarCtrl_GetHeaderColourFg",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetHeaderColourFg. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxColour & _result_ref = wxCalendarCtrl_GetHeaderColourFg(_arg0);
    _result = (wxColour *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxColour_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_GetHeaderColourBg(_swigobj)  (_swigobj->GetHeaderColourBg())
static PyObject *_wrap_wxCalendarCtrl_GetHeaderColourBg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxColour * _result;
    wxCalendarCtrl * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarCtrl_GetHeaderColourBg",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetHeaderColourBg. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxColour & _result_ref = wxCalendarCtrl_GetHeaderColourBg(_arg0);
    _result = (wxColour *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxColour_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_SetHighlightColours(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetHighlightColours(_swigarg0,_swigarg1))
static PyObject *_wrap_wxCalendarCtrl_SetHighlightColours(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    wxColour * _arg1;
    wxColour * _arg2;
    PyObject * _argo0 = 0;
    wxColour  temp;
    PyObject * _obj1 = 0;
    wxColour  temp0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","colFg","colBg", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxCalendarCtrl_SetHighlightColours",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_SetHighlightColours. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxColour_helper(_obj1, &_arg1))
        return NULL;
}
{
    _arg2 = &temp0;
    if (! wxColour_helper(_obj2, &_arg2))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_SetHighlightColours(_arg0,*_arg1,*_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_GetHighlightColourFg(_swigobj)  (_swigobj->GetHighlightColourFg())
static PyObject *_wrap_wxCalendarCtrl_GetHighlightColourFg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxColour * _result;
    wxCalendarCtrl * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarCtrl_GetHighlightColourFg",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetHighlightColourFg. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxColour & _result_ref = wxCalendarCtrl_GetHighlightColourFg(_arg0);
    _result = (wxColour *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxColour_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_GetHighlightColourBg(_swigobj)  (_swigobj->GetHighlightColourBg())
static PyObject *_wrap_wxCalendarCtrl_GetHighlightColourBg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxColour * _result;
    wxCalendarCtrl * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarCtrl_GetHighlightColourBg",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetHighlightColourBg. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxColour & _result_ref = wxCalendarCtrl_GetHighlightColourBg(_arg0);
    _result = (wxColour *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxColour_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_SetHolidayColours(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetHolidayColours(_swigarg0,_swigarg1))
static PyObject *_wrap_wxCalendarCtrl_SetHolidayColours(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    wxColour * _arg1;
    wxColour * _arg2;
    PyObject * _argo0 = 0;
    wxColour  temp;
    PyObject * _obj1 = 0;
    wxColour  temp0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","colFg","colBg", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxCalendarCtrl_SetHolidayColours",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_SetHolidayColours. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxColour_helper(_obj1, &_arg1))
        return NULL;
}
{
    _arg2 = &temp0;
    if (! wxColour_helper(_obj2, &_arg2))
        return NULL;
}
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_SetHolidayColours(_arg0,*_arg1,*_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_GetHolidayColourFg(_swigobj)  (_swigobj->GetHolidayColourFg())
static PyObject *_wrap_wxCalendarCtrl_GetHolidayColourFg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxColour * _result;
    wxCalendarCtrl * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarCtrl_GetHolidayColourFg",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetHolidayColourFg. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxColour & _result_ref = wxCalendarCtrl_GetHolidayColourFg(_arg0);
    _result = (wxColour *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxColour_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_GetHolidayColourBg(_swigobj)  (_swigobj->GetHolidayColourBg())
static PyObject *_wrap_wxCalendarCtrl_GetHolidayColourBg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxColour * _result;
    wxCalendarCtrl * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalendarCtrl_GetHolidayColourBg",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetHolidayColourBg. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        const wxColour & _result_ref = wxCalendarCtrl_GetHolidayColourBg(_arg0);
    _result = (wxColour *) &_result_ref;

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxColour_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_GetAttr(_swigobj,_swigarg0)  (_swigobj->GetAttr(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_GetAttr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarDateAttr * _result;
    wxCalendarCtrl * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","day", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxCalendarCtrl_GetAttr",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_GetAttr. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (wxCalendarDateAttr *)wxCalendarCtrl_GetAttr(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxCalendarDateAttr_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalendarCtrl_SetAttr(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetAttr(_swigarg0,_swigarg1))
static PyObject *_wrap_wxCalendarCtrl_SetAttr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    size_t  _arg1;
    wxCalendarDateAttr * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","day","attr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:wxCalendarCtrl_SetAttr",_kwnames,&_argo0,&_arg1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_SetAttr. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxCalendarDateAttr_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of wxCalendarCtrl_SetAttr. Expected _wxCalendarDateAttr_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_SetAttr(_arg0,_arg1,_arg2);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_SetHoliday(_swigobj,_swigarg0)  (_swigobj->SetHoliday(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_SetHoliday(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","day", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxCalendarCtrl_SetHoliday",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_SetHoliday. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_SetHoliday(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_ResetAttr(_swigobj,_swigarg0)  (_swigobj->ResetAttr(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_ResetAttr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarCtrl * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","day", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxCalendarCtrl_ResetAttr",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_ResetAttr. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        wxCalendarCtrl_ResetAttr(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalendarCtrl_HitTest(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->HitTest(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_wxCalendarCtrl_HitTest(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalendarHitTestResult * _result;
    wxCalendarCtrl * _arg0;
    wxPoint * _arg1;
    wxDateTime * _arg2 = (wxDateTime *) NULL;
    wxDateTime::WeekDay * _arg3 = (wxDateTime::WeekDay *) NULL;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj1 = 0;
    PyObject * _argo2 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","pos","date","wd", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|OO:wxCalendarCtrl_HitTest",_kwnames,&_argo0,&_obj1,&_argo2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_HitTest. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxPoint_helper(_obj1, &_arg1))
        return NULL;
}
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxDateTime_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of wxCalendarCtrl_HitTest. Expected _wxDateTime_p.");
        return NULL;
        }
    }
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,"_wxDateTime::WeekDay_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of wxCalendarCtrl_HitTest. Expected _wxDateTime::WeekDay_p.");
        return NULL;
        }
    }
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = new wxCalendarHitTestResult (wxCalendarCtrl_HitTest(_arg0,*_arg1,_arg2,_arg3));

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxCalendarHitTestResult_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define wxCalendarCtrl_Enable(_swigobj,_swigarg0)  (_swigobj->Enable(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_Enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxCalendarCtrl * _arg0;
    bool  _arg1 = (bool ) TRUE;
    PyObject * _argo0 = 0;
    int tempbool1 = (int) TRUE;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:wxCalendarCtrl_Enable",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_Enable. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxCalendarCtrl_Enable(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxCalendarCtrl_Show(_swigobj,_swigarg0)  (_swigobj->Show(_swigarg0))
static PyObject *_wrap_wxCalendarCtrl_Show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxCalendarCtrl * _arg0;
    bool  _arg1 = (bool ) TRUE;
    PyObject * _argo0 = 0;
    int tempbool1 = (int) TRUE;
    char *_kwnames[] = { "self","show", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:wxCalendarCtrl_Show",_kwnames,&_argo0,&tempbool1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalendarCtrl_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalendarCtrl_Show. Expected _wxCalendarCtrl_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
{
    wxPy_BEGIN_ALLOW_THREADS;
        _result = (bool )wxCalendarCtrl_Show(_arg0,_arg1);

    wxPy_END_ALLOW_THREADS;
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyMethodDef calendarcMethods[] = {
	 { "wxCalendarCtrl_Show", (PyCFunction) _wrap_wxCalendarCtrl_Show, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_Enable", (PyCFunction) _wrap_wxCalendarCtrl_Enable, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_HitTest", (PyCFunction) _wrap_wxCalendarCtrl_HitTest, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_ResetAttr", (PyCFunction) _wrap_wxCalendarCtrl_ResetAttr, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_SetHoliday", (PyCFunction) _wrap_wxCalendarCtrl_SetHoliday, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_SetAttr", (PyCFunction) _wrap_wxCalendarCtrl_SetAttr, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetAttr", (PyCFunction) _wrap_wxCalendarCtrl_GetAttr, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetHolidayColourBg", (PyCFunction) _wrap_wxCalendarCtrl_GetHolidayColourBg, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetHolidayColourFg", (PyCFunction) _wrap_wxCalendarCtrl_GetHolidayColourFg, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_SetHolidayColours", (PyCFunction) _wrap_wxCalendarCtrl_SetHolidayColours, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetHighlightColourBg", (PyCFunction) _wrap_wxCalendarCtrl_GetHighlightColourBg, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetHighlightColourFg", (PyCFunction) _wrap_wxCalendarCtrl_GetHighlightColourFg, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_SetHighlightColours", (PyCFunction) _wrap_wxCalendarCtrl_SetHighlightColours, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetHeaderColourBg", (PyCFunction) _wrap_wxCalendarCtrl_GetHeaderColourBg, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetHeaderColourFg", (PyCFunction) _wrap_wxCalendarCtrl_GetHeaderColourFg, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_SetHeaderColours", (PyCFunction) _wrap_wxCalendarCtrl_SetHeaderColours, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_EnableHolidayDisplay", (PyCFunction) _wrap_wxCalendarCtrl_EnableHolidayDisplay, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_EnableMonthChange", (PyCFunction) _wrap_wxCalendarCtrl_EnableMonthChange, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_EnableYearChange", (PyCFunction) _wrap_wxCalendarCtrl_EnableYearChange, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_SetDateRange", (PyCFunction) _wrap_wxCalendarCtrl_SetDateRange, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetUpperDateLimit", (PyCFunction) _wrap_wxCalendarCtrl_GetUpperDateLimit, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_SetUpperDateLimit", (PyCFunction) _wrap_wxCalendarCtrl_SetUpperDateLimit, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetLowerDateLimit", (PyCFunction) _wrap_wxCalendarCtrl_GetLowerDateLimit, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_SetLowerDateLimit", (PyCFunction) _wrap_wxCalendarCtrl_SetLowerDateLimit, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_GetDate", (PyCFunction) _wrap_wxCalendarCtrl_GetDate, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_SetDate", (PyCFunction) _wrap_wxCalendarCtrl_SetDate, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarCtrl_Create", (PyCFunction) _wrap_wxCalendarCtrl_Create, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPreCalendarCtrl", (PyCFunction) _wrap_new_wxPreCalendarCtrl, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxCalendarCtrl", (PyCFunction) _wrap_new_wxCalendarCtrl, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarEvent_GetWeekDay", (PyCFunction) _wrap_wxCalendarEvent_GetWeekDay, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalendarEvent_GetDate", (PyCFunction) _wrap_wxCalendarEvent_GetDate, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxCalendarEvent", (PyCFunction) _wrap_new_wxCalendarEvent, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_wxEvent","_wxCalendarEvent",SwigwxCalendarEventTowxEvent},
    { "_signed_long","_long",0},
    { "_wxPrintQuality","_wxCoord",0},
    { "_wxPrintQuality","_int",0},
    { "_wxPrintQuality","_signed_int",0},
    { "_wxPrintQuality","_unsigned_int",0},
    { "_wxPrintQuality","_wxWindowID",0},
    { "_wxPrintQuality","_uint",0},
    { "_wxPrintQuality","_EBool",0},
    { "_wxPrintQuality","_size_t",0},
    { "_wxPrintQuality","_time_t",0},
    { "_byte","_unsigned_char",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_size_t","_wxCoord",0},
    { "_size_t","_wxPrintQuality",0},
    { "_size_t","_time_t",0},
    { "_size_t","_unsigned_int",0},
    { "_size_t","_int",0},
    { "_size_t","_wxWindowID",0},
    { "_size_t","_uint",0},
    { "_uint","_wxCoord",0},
    { "_uint","_wxPrintQuality",0},
    { "_uint","_time_t",0},
    { "_uint","_size_t",0},
    { "_uint","_unsigned_int",0},
    { "_uint","_int",0},
    { "_uint","_wxWindowID",0},
    { "_wxChar","_char",0},
    { "_wxCommandEvent","_wxCalendarEvent",SwigwxCalendarEventTowxCommandEvent},
    { "_char","_wxChar",0},
    { "_struct_wxNativeFontInfo","_wxNativeFontInfo",0},
    { "_EBool","_wxCoord",0},
    { "_EBool","_wxPrintQuality",0},
    { "_EBool","_signed_int",0},
    { "_EBool","_int",0},
    { "_EBool","_wxWindowID",0},
    { "_unsigned_long","_long",0},
    { "_wxNativeFontInfo","_struct_wxNativeFontInfo",0},
    { "_signed_int","_wxCoord",0},
    { "_signed_int","_wxPrintQuality",0},
    { "_signed_int","_EBool",0},
    { "_signed_int","_wxWindowID",0},
    { "_signed_int","_int",0},
    { "_WXTYPE","_wxDateTime_t",0},
    { "_WXTYPE","_short",0},
    { "_WXTYPE","_signed_short",0},
    { "_WXTYPE","_unsigned_short",0},
    { "_unsigned_short","_wxDateTime_t",0},
    { "_unsigned_short","_WXTYPE",0},
    { "_unsigned_short","_short",0},
    { "_wxObject","_wxCalendarCtrl",SwigwxCalendarCtrlTowxObject},
    { "_wxObject","_wxCalendarEvent",SwigwxCalendarEventTowxObject},
    { "_signed_short","_WXTYPE",0},
    { "_signed_short","_short",0},
    { "_unsigned_char","_byte",0},
    { "_wxControl","_wxCalendarCtrl",SwigwxCalendarCtrlTowxControl},
    { "_unsigned_int","_wxCoord",0},
    { "_unsigned_int","_wxPrintQuality",0},
    { "_unsigned_int","_time_t",0},
    { "_unsigned_int","_size_t",0},
    { "_unsigned_int","_uint",0},
    { "_unsigned_int","_wxWindowID",0},
    { "_unsigned_int","_int",0},
    { "_short","_wxDateTime_t",0},
    { "_short","_WXTYPE",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_wxWindowID","_wxCoord",0},
    { "_wxWindowID","_wxPrintQuality",0},
    { "_wxWindowID","_time_t",0},
    { "_wxWindowID","_size_t",0},
    { "_wxWindowID","_EBool",0},
    { "_wxWindowID","_uint",0},
    { "_wxWindowID","_int",0},
    { "_wxWindowID","_signed_int",0},
    { "_wxWindowID","_unsigned_int",0},
    { "_int","_wxCoord",0},
    { "_int","_wxPrintQuality",0},
    { "_int","_time_t",0},
    { "_int","_size_t",0},
    { "_int","_EBool",0},
    { "_int","_uint",0},
    { "_int","_wxWindowID",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_wxDateTime_t","_unsigned_short",0},
    { "_wxDateTime_t","_short",0},
    { "_wxDateTime_t","_WXTYPE",0},
    { "_time_t","_wxCoord",0},
    { "_time_t","_wxPrintQuality",0},
    { "_time_t","_unsigned_int",0},
    { "_time_t","_int",0},
    { "_time_t","_wxWindowID",0},
    { "_time_t","_uint",0},
    { "_time_t","_size_t",0},
    { "_wxCoord","_int",0},
    { "_wxCoord","_signed_int",0},
    { "_wxCoord","_unsigned_int",0},
    { "_wxCoord","_wxWindowID",0},
    { "_wxCoord","_uint",0},
    { "_wxCoord","_EBool",0},
    { "_wxCoord","_size_t",0},
    { "_wxCoord","_time_t",0},
    { "_wxCoord","_wxPrintQuality",0},
    { "_wxEvtHandler","_wxCalendarCtrl",SwigwxCalendarCtrlTowxEvtHandler},
    { "_wxWindow","_wxCalendarCtrl",SwigwxCalendarCtrlTowxWindow},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) initcalendarc() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("calendarc", calendarcMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"wxCAL_SUNDAY_FIRST", PyInt_FromLong((long) wxCAL_SUNDAY_FIRST));
	 PyDict_SetItemString(d,"wxCAL_MONDAY_FIRST", PyInt_FromLong((long) wxCAL_MONDAY_FIRST));
	 PyDict_SetItemString(d,"wxCAL_SHOW_HOLIDAYS", PyInt_FromLong((long) wxCAL_SHOW_HOLIDAYS));
	 PyDict_SetItemString(d,"wxCAL_NO_YEAR_CHANGE", PyInt_FromLong((long) wxCAL_NO_YEAR_CHANGE));
	 PyDict_SetItemString(d,"wxCAL_NO_MONTH_CHANGE", PyInt_FromLong((long) wxCAL_NO_MONTH_CHANGE));
	 PyDict_SetItemString(d,"wxCAL_SEQUENTIAL_MONTH_SELECTION", PyInt_FromLong((long) wxCAL_SEQUENTIAL_MONTH_SELECTION));
	 PyDict_SetItemString(d,"wxCAL_SHOW_SURROUNDING_WEEKS", PyInt_FromLong((long) wxCAL_SHOW_SURROUNDING_WEEKS));
	 PyDict_SetItemString(d,"wxCAL_HITTEST_NOWHERE", PyInt_FromLong((long) wxCAL_HITTEST_NOWHERE));
	 PyDict_SetItemString(d,"wxCAL_HITTEST_HEADER", PyInt_FromLong((long) wxCAL_HITTEST_HEADER));
	 PyDict_SetItemString(d,"wxCAL_HITTEST_DAY", PyInt_FromLong((long) wxCAL_HITTEST_DAY));
	 PyDict_SetItemString(d,"wxEVT_CALENDAR_DOUBLECLICKED", PyInt_FromLong((long) wxEVT_CALENDAR_DOUBLECLICKED));
	 PyDict_SetItemString(d,"wxEVT_CALENDAR_SEL_CHANGED", PyInt_FromLong((long) wxEVT_CALENDAR_SEL_CHANGED));
	 PyDict_SetItemString(d,"wxEVT_CALENDAR_DAY_CHANGED", PyInt_FromLong((long) wxEVT_CALENDAR_DAY_CHANGED));
	 PyDict_SetItemString(d,"wxEVT_CALENDAR_MONTH_CHANGED", PyInt_FromLong((long) wxEVT_CALENDAR_MONTH_CHANGED));
	 PyDict_SetItemString(d,"wxEVT_CALENDAR_YEAR_CHANGED", PyInt_FromLong((long) wxEVT_CALENDAR_YEAR_CHANGED));
	 PyDict_SetItemString(d,"wxEVT_CALENDAR_WEEKDAY_CLICKED", PyInt_FromLong((long) wxEVT_CALENDAR_WEEKDAY_CLICKED));

    wxClassInfo::CleanUpClasses();
    wxClassInfo::InitializeClasses();
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
