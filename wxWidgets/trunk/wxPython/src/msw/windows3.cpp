/*
 * FILE : src/msw/windows3.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include "Python.h"

#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export
#	else
#	    define SWIGEXPORT(a) a
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a
#endif

#ifdef __cplusplus
extern "C" {
#endif
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    initwindows3c

#define SWIG_name    "windows3c"

#include "helpers.h"
#include <wx/sashwin.h>
#include <wx/laywin.h>
#include <wx/popupwin.h>
#include <wx/tipwin.h>


static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {
        target = o;
    } else if (target == Py_None) {
        Py_DECREF(Py_None);
        target = o;
    } else {
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);
        PyTuple_SetItem(o3, 0, o);

        o2 = target;
        target = PySequence_Concat(o2, o3);
        Py_DECREF(o2);
        Py_DECREF(o3);
    }
    return target;
}

    // Put some wx default wxChar* values into wxStrings.
    static const wxChar* wxSashNameStr = wxT("sashWindow");
    DECLARE_DEF_STRING(SashNameStr);
    static const wxChar* wxSashLayoutNameStr = wxT("layoutWindow");
    DECLARE_DEF_STRING(SashLayoutNameStr);

class wxPyPopupTransientWindow : public wxPopupTransientWindow
{
public:
    wxPyPopupTransientWindow() : wxPopupTransientWindow() {}
    wxPyPopupTransientWindow(wxWindow* parent, int style = wxBORDER_NONE)
        : wxPopupTransientWindow(parent, style) {}

    DEC_PYCALLBACK_BOOL_ME(ProcessLeftDown);
    DEC_PYCALLBACK__(OnDismiss);
    DEC_PYCALLBACK_BOOL_(CanDismiss);
    PYPRIVATE;
};

IMP_PYCALLBACK_BOOL_ME(wxPyPopupTransientWindow, wxPopupTransientWindow, ProcessLeftDown);
IMP_PYCALLBACK__(wxPyPopupTransientWindow, wxPopupTransientWindow, OnDismiss);
IMP_PYCALLBACK_BOOL_(wxPyPopupTransientWindow, wxPopupTransientWindow, CanDismiss);

#include <wx/vscroll.h>
DECLARE_DEF_STRING(PanelNameStr);

class wxPyVScrolledWindow  : public wxVScrolledWindow
{
    DECLARE_ABSTRACT_CLASS(wxPyVScrolledWindow);
public:
    wxPyVScrolledWindow() : wxVScrolledWindow() {}

    wxPyVScrolledWindow(wxWindow *parent,
                        wxWindowID id = wxID_ANY,
                        const wxPoint& pos = wxDefaultPosition,
                        const wxSize& size = wxDefaultSize,
                        long style = 0,
                        const wxString& name = wxPyPanelNameStr)
        : wxVScrolledWindow(parent, id, pos, size, style, name)
    {}

    // Overridable virtuals

    // this function must be overridden in the derived class and it should
    // return the height of the given line in pixels
    DEC_PYCALLBACK_COORD_SIZET_constpure(OnGetLineHeight);


    // this function doesn't have to be overridden but it may be useful to do
    // it if calculating the lines heights is a relatively expensive operation
    // as it gives the user code a possibility to calculate several of them at
    // once
    //
    // OnGetLinesHint() is normally called just before OnGetLineHeight() but you
    // shouldn't rely on the latter being called for all lines in the interval
    // specified here. It is also possible that OnGetLineHeight() will be
    // called for the lines outside of this interval, so this is really just a
    // hint, not a promise.
    //
    // finally note that lineMin is inclusive, while lineMax is exclusive, as
    // usual
    DEC_PYCALLBACK_VOID_SIZETSIZET_const(OnGetLinesHint);


    // when the number of lines changes, we try to estimate the total height
    // of all lines which is a rather expensive operation in terms of lines
    // access, so if the user code may estimate the average height
    // better/faster than we do, it should override this function to implement
    // its own logic
    //
    // this function should return the best guess for the total height it may
    // make
    DEC_PYCALLBACK_COORD_const(EstimateTotalHeight);


    // Also expose some other interesting protected methods


    // find the index of the line we need to show at the top of the window such
    // that the last (fully or partially) visible line is the given one
    size_t FindFirstFromBottom(size_t lineLast, bool fullyVisible = false)
    { return wxVScrolledWindow::FindFirstFromBottom(lineLast, fullyVisible); }

    // get the total height of the lines between lineMin (inclusive) and
    // lineMax (exclusive)
    wxCoord GetLinesHeight(size_t lineMin, size_t lineMax) const
    { return wxVScrolledWindow::GetLinesHeight(lineMin, lineMax); }


    PYPRIVATE;
};

IMPLEMENT_ABSTRACT_CLASS(wxPyVScrolledWindow, wxVScrolledWindow);

IMP_PYCALLBACK_COORD_SIZET_constpure(wxPyVScrolledWindow, wxVScrolledWindow, OnGetLineHeight);
IMP_PYCALLBACK_VOID_SIZETSIZET_const(wxPyVScrolledWindow, wxVScrolledWindow, OnGetLinesHint);
IMP_PYCALLBACK_COORD_const          (wxPyVScrolledWindow, wxVScrolledWindow, EstimateTotalHeight);

#include <wx/vlbox.h>
DECLARE_DEF_STRING(VListBoxNameStr);

class wxPyVListBox  : public wxVListBox
{
    DECLARE_ABSTRACT_CLASS(wxPyVListBox);
public:
    wxPyVListBox() : wxVListBox() {}

    wxPyVListBox(wxWindow *parent,
                 wxWindowID id = wxID_ANY,
                 const wxPoint& pos = wxDefaultPosition,
                 const wxSize& size = wxDefaultSize,
                 long style = 0,
                 const wxString& name = wxPyVListBoxNameStr)
        : wxVListBox(parent, id, pos, size, style, name)
    {}

    // Overridable virtuals

    // the derived class must implement this function to actually draw the item
    // with the given index on the provided DC
    // virtual void OnDrawItem(wxDC& dc, const wxRect& rect, size_t n) const = 0;
    DEC_PYCALLBACK__DCRECTSIZET_constpure(OnDrawItem);


    // the derived class must implement this method to return the height of the
    // specified item
    // virtual wxCoord OnMeasureItem(size_t n) const = 0;
    DEC_PYCALLBACK_COORD_SIZET_constpure(OnMeasureItem);


    // this method may be used to draw separators between the lines; note that
    // the rectangle may be modified, typically to deflate it a bit before
    // passing to OnDrawItem()
    //
    // the base class version doesn't do anything
    //    virtual void OnDrawSeparator(wxDC& dc, wxRect& rect, size_t n) const;
    DEC_PYCALLBACK__DCRECTSIZET_constpure(OnDrawSeparator);


    // this method is used to draw the items background and, maybe, a border
    // around it
    //
    // the base class version implements a reasonable default behaviour which
    // consists in drawing the selected item with the standard background
    // colour and drawing a border around the item if it is either selected or
    // current
    //     virtual void OnDrawBackground(wxDC& dc, const wxRect& rect, size_t n) const;
    DEC_PYCALLBACK__DCRECTSIZET_const(OnDrawBackground);


    PYPRIVATE;
};

IMPLEMENT_ABSTRACT_CLASS(wxPyVListBox, wxVListBox);

IMP_PYCALLBACK__DCRECTSIZET_constpure(wxPyVListBox, wxVListBox, OnDrawItem);
IMP_PYCALLBACK_COORD_SIZET_constpure (wxPyVListBox, wxVListBox, OnMeasureItem);
IMP_PYCALLBACK__DCRECTSIZET_constpure(wxPyVListBox, wxVListBox, OnDrawSeparator);
IMP_PYCALLBACK__DCRECTSIZET_const    (wxPyVListBox, wxVListBox, OnDrawBackground);


#include <wx/htmllbox.h>

class wxPyHtmlListBox  : public wxHtmlListBox
{
    DECLARE_ABSTRACT_CLASS(wxPyHtmlListBox);
public:
    wxPyHtmlListBox() : wxHtmlListBox() {}

    wxPyHtmlListBox(wxWindow *parent,
                    wxWindowID id = wxID_ANY,
                    const wxPoint& pos = wxDefaultPosition,
                    const wxSize& size = wxDefaultSize,
                    long style = 0,
                    const wxString& name = wxPyVListBoxNameStr)
        : wxHtmlListBox(parent, id, pos, size, style, name)
    {}

    // Overridable virtuals

    // this method must be implemented in the derived class and should return
    // the body (i.e. without <html>) of the HTML for the given item
    DEC_PYCALLBACK_STRING_SIZET_pure(OnGetItem);

    // this function may be overridden to decorate HTML returned by OnGetItem()
    DEC_PYCALLBACK_STRING_SIZET(OnGetItemMarkup);

// TODO:
//     // this method allows to customize the selection appearance: it may be used
//     // to specify the colour of the text which normally has the given colour
//     // colFg when it is inside the selection
//     //
//     // by default, the original colour is not used at all and all text has the
//     // same (default for this system) colour inside selection
//     virtual wxColour GetSelectedTextColour(const wxColour& colFg) const;

//     // this is the same as GetSelectedTextColour() but allows to customize the
//     // background colour -- this is even more rarely used as you can change it
//     // globally using SetSelectionBackground()
//     virtual wxColour GetSelectedTextBgColour(const wxColour& colBg) const;


    PYPRIVATE;
};


IMPLEMENT_ABSTRACT_CLASS(wxPyHtmlListBox, wxHtmlListBox)

IMP_PYCALLBACK_STRING_SIZET_pure(wxPyHtmlListBox, wxHtmlListBox, OnGetItem);
IMP_PYCALLBACK_STRING_SIZET     (wxPyHtmlListBox, wxHtmlListBox, OnGetItemMarkup);

#ifdef __cplusplus
extern "C" {
#endif
static void *SwigwxSashEventTowxCommandEvent(void *ptr) {
    wxSashEvent *src;
    wxCommandEvent *dest;
    src = (wxSashEvent *) ptr;
    dest = (wxCommandEvent *) src;
    return (void *) dest;
}

static void *SwigwxSashEventTowxEvent(void *ptr) {
    wxSashEvent *src;
    wxEvent *dest;
    src = (wxSashEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxSashEventTowxObject(void *ptr) {
    wxSashEvent *src;
    wxObject *dest;
    src = (wxSashEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxSashEvent(_swigarg0,_swigarg1) (new wxSashEvent(_swigarg0,_swigarg1))
static PyObject *_wrap_new_wxSashEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashEvent * _result;
    int  _arg0 = (int ) 0;
    wxSashEdgePosition  _arg1 = (wxSashEdgePosition ) (wxSASH_NONE);
    char *_kwnames[] = { "id","edge", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|ii:new_wxSashEvent",_kwnames,&_arg0,&_arg1)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxSashEvent *)new_wxSashEvent(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxSashEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxSashEvent_SetEdge(_swigobj,_swigarg0)  (_swigobj->SetEdge(_swigarg0))
static PyObject *_wrap_wxSashEvent_SetEdge(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashEvent * _arg0;
    wxSashEdgePosition  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","edge", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashEvent_SetEdge",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashEvent_SetEdge. Expected _wxSashEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashEvent_SetEdge(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashEvent_GetEdge(_swigobj)  (_swigobj->GetEdge())
static PyObject *_wrap_wxSashEvent_GetEdge(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashEdgePosition  _result;
    wxSashEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashEvent_GetEdge",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashEvent_GetEdge. Expected _wxSashEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxSashEdgePosition )wxSashEvent_GetEdge(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashEvent_SetDragRect(_swigobj,_swigarg0)  (_swigobj->SetDragRect(_swigarg0))
static PyObject *_wrap_wxSashEvent_SetDragRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashEvent * _arg0;
    wxRect * _arg1;
    PyObject * _argo0 = 0;
    wxRect  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","rect", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxSashEvent_SetDragRect",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashEvent_SetDragRect. Expected _wxSashEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxRect_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashEvent_SetDragRect(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashEvent_GetDragRect(_swigobj)  (_swigobj->GetDragRect())
static PyObject *_wrap_wxSashEvent_GetDragRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _result;
    wxSashEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashEvent_GetDragRect",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashEvent_GetDragRect. Expected _wxSashEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxRect (wxSashEvent_GetDragRect(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxRect_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define wxSashEvent_SetDragStatus(_swigobj,_swigarg0)  (_swigobj->SetDragStatus(_swigarg0))
static PyObject *_wrap_wxSashEvent_SetDragStatus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashEvent * _arg0;
    wxSashDragStatus  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","status", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashEvent_SetDragStatus",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashEvent_SetDragStatus. Expected _wxSashEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashEvent_SetDragStatus(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashEvent_GetDragStatus(_swigobj)  (_swigobj->GetDragStatus())
static PyObject *_wrap_wxSashEvent_GetDragStatus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashDragStatus  _result;
    wxSashEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashEvent_GetDragStatus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashEvent_GetDragStatus. Expected _wxSashEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxSashDragStatus )wxSashEvent_GetDragStatus(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigwxSashWindowTowxWindow(void *ptr) {
    wxSashWindow *src;
    wxWindow *dest;
    src = (wxSashWindow *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxSashWindowTowxEvtHandler(void *ptr) {
    wxSashWindow *src;
    wxEvtHandler *dest;
    src = (wxSashWindow *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxSashWindowTowxObject(void *ptr) {
    wxSashWindow *src;
    wxObject *dest;
    src = (wxSashWindow *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxSashWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new wxSashWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_wxSashWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1;
    wxPoint * _arg2 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg3 = (wxSize *) &wxDefaultSize;
    long  _arg4 = (long ) wxCLIP_CHILDREN|(wxSW_3D);
    wxString * _arg5 = (wxString *) &wxPySashNameStr;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj2 = 0;
    wxSize  temp0;
    PyObject * _obj3 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "parent","id","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|OOlO:new_wxSashWindow",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_arg4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxSashWindow. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxPoint_helper(_obj2, &_arg2))
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp0;
    if (! wxSize_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj5)
{
    _arg5 = wxString_in_helper(_obj5);
    if (_arg5 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxSashWindow *)new_wxSashWindow(_arg0,_arg1,*_arg2,*_arg3,_arg4,*_arg5);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxSashWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    if (_obj5)
        delete _arg5;
}
    return _resultobj;
}

#define new_wxPreSashWindow() (new wxSashWindow())
static PyObject *_wrap_new_wxPreSashWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxPreSashWindow",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxSashWindow *)new_wxPreSashWindow();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxSashWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxSashWindow_Create(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->Create(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_wxSashWindow_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxSashWindow * _arg0;
    wxWindow * _arg1;
    wxWindowID  _arg2;
    wxPoint * _arg3 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg4 = (wxSize *) &wxDefaultSize;
    long  _arg5 = (long ) wxCLIP_CHILDREN|(wxSW_3D);
    wxString * _arg6 = (wxString *) &wxPySashNameStr;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    wxPoint  temp;
    PyObject * _obj3 = 0;
    wxSize  temp0;
    PyObject * _obj4 = 0;
    PyObject * _obj6 = 0;
    char *_kwnames[] = { "self","parent","id","pos","size","style","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi|OOlO:wxSashWindow_Create",_kwnames,&_argo0,&_argo1,&_arg2,&_obj3,&_obj4,&_arg5,&_obj6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_Create. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxSashWindow_Create. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj3)
{
    _arg3 = &temp;
    if (! wxPoint_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj4)
{
    _arg4 = &temp0;
    if (! wxSize_helper(_obj4, &_arg4))
        return NULL;
}
    if (_obj6)
{
    _arg6 = wxString_in_helper(_obj6);
    if (_arg6 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxSashWindow_Create(_arg0,_arg1,_arg2,*_arg3,*_arg4,_arg5,*_arg6);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj6)
        delete _arg6;
}
    return _resultobj;
}

#define wxSashWindow_GetSashVisible(_swigobj,_swigarg0)  (_swigobj->GetSashVisible(_swigarg0))
static PyObject *_wrap_wxSashWindow_GetSashVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxSashWindow * _arg0;
    wxSashEdgePosition  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","edge", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashWindow_GetSashVisible",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_GetSashVisible. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxSashWindow_GetSashVisible(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashWindow_GetDefaultBorderSize(_swigobj)  (_swigobj->GetDefaultBorderSize())
static PyObject *_wrap_wxSashWindow_GetDefaultBorderSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxSashWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashWindow_GetDefaultBorderSize",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_GetDefaultBorderSize. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxSashWindow_GetDefaultBorderSize(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashWindow_GetEdgeMargin(_swigobj,_swigarg0)  (_swigobj->GetEdgeMargin(_swigarg0))
static PyObject *_wrap_wxSashWindow_GetEdgeMargin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxSashWindow * _arg0;
    wxSashEdgePosition  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","edge", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashWindow_GetEdgeMargin",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_GetEdgeMargin. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxSashWindow_GetEdgeMargin(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashWindow_GetExtraBorderSize(_swigobj)  (_swigobj->GetExtraBorderSize())
static PyObject *_wrap_wxSashWindow_GetExtraBorderSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxSashWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashWindow_GetExtraBorderSize",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_GetExtraBorderSize. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxSashWindow_GetExtraBorderSize(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashWindow_GetMaximumSizeX(_swigobj)  (_swigobj->GetMaximumSizeX())
static PyObject *_wrap_wxSashWindow_GetMaximumSizeX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxSashWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashWindow_GetMaximumSizeX",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_GetMaximumSizeX. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxSashWindow_GetMaximumSizeX(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashWindow_GetMaximumSizeY(_swigobj)  (_swigobj->GetMaximumSizeY())
static PyObject *_wrap_wxSashWindow_GetMaximumSizeY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxSashWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashWindow_GetMaximumSizeY",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_GetMaximumSizeY. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxSashWindow_GetMaximumSizeY(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashWindow_GetMinimumSizeX(_swigobj)  (_swigobj->GetMinimumSizeX())
static PyObject *_wrap_wxSashWindow_GetMinimumSizeX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxSashWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashWindow_GetMinimumSizeX",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_GetMinimumSizeX. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxSashWindow_GetMinimumSizeX(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashWindow_GetMinimumSizeY(_swigobj)  (_swigobj->GetMinimumSizeY())
static PyObject *_wrap_wxSashWindow_GetMinimumSizeY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxSashWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashWindow_GetMinimumSizeY",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_GetMinimumSizeY. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxSashWindow_GetMinimumSizeY(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashWindow_HasBorder(_swigobj,_swigarg0)  (_swigobj->HasBorder(_swigarg0))
static PyObject *_wrap_wxSashWindow_HasBorder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxSashWindow * _arg0;
    wxSashEdgePosition  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","edge", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashWindow_HasBorder",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_HasBorder. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxSashWindow_HasBorder(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashWindow_SetDefaultBorderSize(_swigobj,_swigarg0)  (_swigobj->SetDefaultBorderSize(_swigarg0))
static PyObject *_wrap_wxSashWindow_SetDefaultBorderSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","width", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashWindow_SetDefaultBorderSize",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_SetDefaultBorderSize. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashWindow_SetDefaultBorderSize(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashWindow_SetExtraBorderSize(_swigobj,_swigarg0)  (_swigobj->SetExtraBorderSize(_swigarg0))
static PyObject *_wrap_wxSashWindow_SetExtraBorderSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","width", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashWindow_SetExtraBorderSize",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_SetExtraBorderSize. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashWindow_SetExtraBorderSize(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashWindow_SetMaximumSizeX(_swigobj,_swigarg0)  (_swigobj->SetMaximumSizeX(_swigarg0))
static PyObject *_wrap_wxSashWindow_SetMaximumSizeX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","min", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashWindow_SetMaximumSizeX",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_SetMaximumSizeX. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashWindow_SetMaximumSizeX(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashWindow_SetMaximumSizeY(_swigobj,_swigarg0)  (_swigobj->SetMaximumSizeY(_swigarg0))
static PyObject *_wrap_wxSashWindow_SetMaximumSizeY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","min", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashWindow_SetMaximumSizeY",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_SetMaximumSizeY. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashWindow_SetMaximumSizeY(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashWindow_SetMinimumSizeX(_swigobj,_swigarg0)  (_swigobj->SetMinimumSizeX(_swigarg0))
static PyObject *_wrap_wxSashWindow_SetMinimumSizeX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","min", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashWindow_SetMinimumSizeX",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_SetMinimumSizeX. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashWindow_SetMinimumSizeX(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashWindow_SetMinimumSizeY(_swigobj,_swigarg0)  (_swigobj->SetMinimumSizeY(_swigarg0))
static PyObject *_wrap_wxSashWindow_SetMinimumSizeY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","min", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashWindow_SetMinimumSizeY",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_SetMinimumSizeY. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashWindow_SetMinimumSizeY(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashWindow_SetSashVisible(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetSashVisible(_swigarg0,_swigarg1))
static PyObject *_wrap_wxSashWindow_SetSashVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _arg0;
    wxSashEdgePosition  _arg1;
    bool  _arg2;
    PyObject * _argo0 = 0;
    int tempbool2;
    char *_kwnames[] = { "self","edge","visible", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxSashWindow_SetSashVisible",_kwnames,&_argo0,&_arg1,&tempbool2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_SetSashVisible. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashWindow_SetSashVisible(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashWindow_SetSashBorder(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetSashBorder(_swigarg0,_swigarg1))
static PyObject *_wrap_wxSashWindow_SetSashBorder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashWindow * _arg0;
    wxSashEdgePosition  _arg1;
    bool  _arg2;
    PyObject * _argo0 = 0;
    int tempbool2;
    char *_kwnames[] = { "self","edge","hasBorder", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxSashWindow_SetSashBorder",_kwnames,&_argo0,&_arg1,&tempbool2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashWindow_SetSashBorder. Expected _wxSashWindow_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashWindow_SetSashBorder(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxQueryLayoutInfoEventTowxEvent(void *ptr) {
    wxQueryLayoutInfoEvent *src;
    wxEvent *dest;
    src = (wxQueryLayoutInfoEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxQueryLayoutInfoEventTowxObject(void *ptr) {
    wxQueryLayoutInfoEvent *src;
    wxObject *dest;
    src = (wxQueryLayoutInfoEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxQueryLayoutInfoEvent(_swigarg0) (new wxQueryLayoutInfoEvent(_swigarg0))
static PyObject *_wrap_new_wxQueryLayoutInfoEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxQueryLayoutInfoEvent * _result;
    wxWindowID  _arg0 = (wxWindowID ) 0;
    char *_kwnames[] = { "id", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|i:new_wxQueryLayoutInfoEvent",_kwnames,&_arg0)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxQueryLayoutInfoEvent *)new_wxQueryLayoutInfoEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxQueryLayoutInfoEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_SetRequestedLength(_swigobj,_swigarg0)  (_swigobj->SetRequestedLength(_swigarg0))
static PyObject *_wrap_wxQueryLayoutInfoEvent_SetRequestedLength(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxQueryLayoutInfoEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","length", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxQueryLayoutInfoEvent_SetRequestedLength",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_SetRequestedLength. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxQueryLayoutInfoEvent_SetRequestedLength(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_GetRequestedLength(_swigobj)  (_swigobj->GetRequestedLength())
static PyObject *_wrap_wxQueryLayoutInfoEvent_GetRequestedLength(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxQueryLayoutInfoEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxQueryLayoutInfoEvent_GetRequestedLength",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_GetRequestedLength. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxQueryLayoutInfoEvent_GetRequestedLength(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_SetFlags(_swigobj,_swigarg0)  (_swigobj->SetFlags(_swigarg0))
static PyObject *_wrap_wxQueryLayoutInfoEvent_SetFlags(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxQueryLayoutInfoEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","flags", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxQueryLayoutInfoEvent_SetFlags",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_SetFlags. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxQueryLayoutInfoEvent_SetFlags(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_GetFlags(_swigobj)  (_swigobj->GetFlags())
static PyObject *_wrap_wxQueryLayoutInfoEvent_GetFlags(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxQueryLayoutInfoEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxQueryLayoutInfoEvent_GetFlags",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_GetFlags. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxQueryLayoutInfoEvent_GetFlags(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_SetSize(_swigobj,_swigarg0)  (_swigobj->SetSize(_swigarg0))
static PyObject *_wrap_wxQueryLayoutInfoEvent_SetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxQueryLayoutInfoEvent * _arg0;
    wxSize * _arg1;
    PyObject * _argo0 = 0;
    wxSize  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","size", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxQueryLayoutInfoEvent_SetSize",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_SetSize. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxSize_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxQueryLayoutInfoEvent_SetSize(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_GetSize(_swigobj)  (_swigobj->GetSize())
static PyObject *_wrap_wxQueryLayoutInfoEvent_GetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _result;
    wxQueryLayoutInfoEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxQueryLayoutInfoEvent_GetSize",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_GetSize. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxSize (wxQueryLayoutInfoEvent_GetSize(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxSize_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_SetOrientation(_swigobj,_swigarg0)  (_swigobj->SetOrientation(_swigarg0))
static PyObject *_wrap_wxQueryLayoutInfoEvent_SetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxQueryLayoutInfoEvent * _arg0;
    wxLayoutOrientation  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","orient", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxQueryLayoutInfoEvent_SetOrientation",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_SetOrientation. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxQueryLayoutInfoEvent_SetOrientation(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_GetOrientation(_swigobj)  (_swigobj->GetOrientation())
static PyObject *_wrap_wxQueryLayoutInfoEvent_GetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxLayoutOrientation  _result;
    wxQueryLayoutInfoEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxQueryLayoutInfoEvent_GetOrientation",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_GetOrientation. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxLayoutOrientation )wxQueryLayoutInfoEvent_GetOrientation(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_SetAlignment(_swigobj,_swigarg0)  (_swigobj->SetAlignment(_swigarg0))
static PyObject *_wrap_wxQueryLayoutInfoEvent_SetAlignment(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxQueryLayoutInfoEvent * _arg0;
    wxLayoutAlignment  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","align", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxQueryLayoutInfoEvent_SetAlignment",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_SetAlignment. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxQueryLayoutInfoEvent_SetAlignment(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxQueryLayoutInfoEvent_GetAlignment(_swigobj)  (_swigobj->GetAlignment())
static PyObject *_wrap_wxQueryLayoutInfoEvent_GetAlignment(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxLayoutAlignment  _result;
    wxQueryLayoutInfoEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxQueryLayoutInfoEvent_GetAlignment",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxQueryLayoutInfoEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxQueryLayoutInfoEvent_GetAlignment. Expected _wxQueryLayoutInfoEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxLayoutAlignment )wxQueryLayoutInfoEvent_GetAlignment(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigwxCalculateLayoutEventTowxEvent(void *ptr) {
    wxCalculateLayoutEvent *src;
    wxEvent *dest;
    src = (wxCalculateLayoutEvent *) ptr;
    dest = (wxEvent *) src;
    return (void *) dest;
}

static void *SwigwxCalculateLayoutEventTowxObject(void *ptr) {
    wxCalculateLayoutEvent *src;
    wxObject *dest;
    src = (wxCalculateLayoutEvent *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxCalculateLayoutEvent(_swigarg0) (new wxCalculateLayoutEvent(_swigarg0))
static PyObject *_wrap_new_wxCalculateLayoutEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalculateLayoutEvent * _result;
    wxWindowID  _arg0 = (wxWindowID ) 0;
    char *_kwnames[] = { "id", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|i:new_wxCalculateLayoutEvent",_kwnames,&_arg0)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxCalculateLayoutEvent *)new_wxCalculateLayoutEvent(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxCalculateLayoutEvent_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxCalculateLayoutEvent_SetFlags(_swigobj,_swigarg0)  (_swigobj->SetFlags(_swigarg0))
static PyObject *_wrap_wxCalculateLayoutEvent_SetFlags(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalculateLayoutEvent * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","flags", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxCalculateLayoutEvent_SetFlags",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalculateLayoutEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalculateLayoutEvent_SetFlags. Expected _wxCalculateLayoutEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxCalculateLayoutEvent_SetFlags(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalculateLayoutEvent_GetFlags(_swigobj)  (_swigobj->GetFlags())
static PyObject *_wrap_wxCalculateLayoutEvent_GetFlags(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxCalculateLayoutEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalculateLayoutEvent_GetFlags",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalculateLayoutEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalculateLayoutEvent_GetFlags. Expected _wxCalculateLayoutEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxCalculateLayoutEvent_GetFlags(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxCalculateLayoutEvent_SetRect(_swigobj,_swigarg0)  (_swigobj->SetRect(_swigarg0))
static PyObject *_wrap_wxCalculateLayoutEvent_SetRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxCalculateLayoutEvent * _arg0;
    wxRect * _arg1;
    PyObject * _argo0 = 0;
    wxRect  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","rect", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxCalculateLayoutEvent_SetRect",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalculateLayoutEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalculateLayoutEvent_SetRect. Expected _wxCalculateLayoutEvent_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxRect_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxCalculateLayoutEvent_SetRect(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxCalculateLayoutEvent_GetRect(_swigobj)  (_swigobj->GetRect())
static PyObject *_wrap_wxCalculateLayoutEvent_GetRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _result;
    wxCalculateLayoutEvent * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxCalculateLayoutEvent_GetRect",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxCalculateLayoutEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxCalculateLayoutEvent_GetRect. Expected _wxCalculateLayoutEvent_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxRect (wxCalculateLayoutEvent_GetRect(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxRect_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigwxSashLayoutWindowTowxSashWindow(void *ptr) {
    wxSashLayoutWindow *src;
    wxSashWindow *dest;
    src = (wxSashLayoutWindow *) ptr;
    dest = (wxSashWindow *) src;
    return (void *) dest;
}

static void *SwigwxSashLayoutWindowTowxWindow(void *ptr) {
    wxSashLayoutWindow *src;
    wxWindow *dest;
    src = (wxSashLayoutWindow *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxSashLayoutWindowTowxEvtHandler(void *ptr) {
    wxSashLayoutWindow *src;
    wxEvtHandler *dest;
    src = (wxSashLayoutWindow *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxSashLayoutWindowTowxObject(void *ptr) {
    wxSashLayoutWindow *src;
    wxObject *dest;
    src = (wxSashLayoutWindow *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxSashLayoutWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new wxSashLayoutWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_wxSashLayoutWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashLayoutWindow * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1;
    wxPoint * _arg2 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg3 = (wxSize *) &wxDefaultSize;
    long  _arg4 = (long ) wxCLIP_CHILDREN|(wxSW_3D);
    wxString * _arg5 = (wxString *) &wxPySashLayoutNameStr;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj2 = 0;
    wxSize  temp0;
    PyObject * _obj3 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "parent","id","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|OOlO:new_wxSashLayoutWindow",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_arg4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxSashLayoutWindow. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxPoint_helper(_obj2, &_arg2))
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp0;
    if (! wxSize_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj5)
{
    _arg5 = wxString_in_helper(_obj5);
    if (_arg5 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxSashLayoutWindow *)new_wxSashLayoutWindow(_arg0,_arg1,*_arg2,*_arg3,_arg4,*_arg5);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxSashLayoutWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    if (_obj5)
        delete _arg5;
}
    return _resultobj;
}

#define new_wxPreSashLayoutWindow() (new wxSashLayoutWindow())
static PyObject *_wrap_new_wxPreSashLayoutWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashLayoutWindow * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxPreSashLayoutWindow",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxSashLayoutWindow *)new_wxPreSashLayoutWindow();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxSashLayoutWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxSashLayoutWindow_Create(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->Create(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_wxSashLayoutWindow_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxSashLayoutWindow * _arg0;
    wxWindow * _arg1;
    wxWindowID  _arg2;
    wxPoint * _arg3 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg4 = (wxSize *) &wxDefaultSize;
    long  _arg5 = (long ) wxCLIP_CHILDREN|(wxSW_3D);
    wxString * _arg6 = (wxString *) &wxPySashLayoutNameStr;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    wxPoint  temp;
    PyObject * _obj3 = 0;
    wxSize  temp0;
    PyObject * _obj4 = 0;
    PyObject * _obj6 = 0;
    char *_kwnames[] = { "self","parent","id","pos","size","style","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi|OOlO:wxSashLayoutWindow_Create",_kwnames,&_argo0,&_argo1,&_arg2,&_obj3,&_obj4,&_arg5,&_obj6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashLayoutWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashLayoutWindow_Create. Expected _wxSashLayoutWindow_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxSashLayoutWindow_Create. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj3)
{
    _arg3 = &temp;
    if (! wxPoint_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj4)
{
    _arg4 = &temp0;
    if (! wxSize_helper(_obj4, &_arg4))
        return NULL;
}
    if (_obj6)
{
    _arg6 = wxString_in_helper(_obj6);
    if (_arg6 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxSashLayoutWindow_Create(_arg0,_arg1,_arg2,*_arg3,*_arg4,_arg5,*_arg6);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj6)
        delete _arg6;
}
    return _resultobj;
}

#define wxSashLayoutWindow_GetAlignment(_swigobj)  (_swigobj->GetAlignment())
static PyObject *_wrap_wxSashLayoutWindow_GetAlignment(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxLayoutAlignment  _result;
    wxSashLayoutWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashLayoutWindow_GetAlignment",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashLayoutWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashLayoutWindow_GetAlignment. Expected _wxSashLayoutWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxLayoutAlignment )wxSashLayoutWindow_GetAlignment(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashLayoutWindow_GetOrientation(_swigobj)  (_swigobj->GetOrientation())
static PyObject *_wrap_wxSashLayoutWindow_GetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxLayoutOrientation  _result;
    wxSashLayoutWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSashLayoutWindow_GetOrientation",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashLayoutWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashLayoutWindow_GetOrientation. Expected _wxSashLayoutWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxLayoutOrientation )wxSashLayoutWindow_GetOrientation(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxSashLayoutWindow_SetAlignment(_swigobj,_swigarg0)  (_swigobj->SetAlignment(_swigarg0))
static PyObject *_wrap_wxSashLayoutWindow_SetAlignment(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashLayoutWindow * _arg0;
    wxLayoutAlignment  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","alignment", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashLayoutWindow_SetAlignment",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashLayoutWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashLayoutWindow_SetAlignment. Expected _wxSashLayoutWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashLayoutWindow_SetAlignment(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashLayoutWindow_SetDefaultSize(_swigobj,_swigarg0)  (_swigobj->SetDefaultSize(_swigarg0))
static PyObject *_wrap_wxSashLayoutWindow_SetDefaultSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashLayoutWindow * _arg0;
    wxSize * _arg1;
    PyObject * _argo0 = 0;
    wxSize  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","size", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxSashLayoutWindow_SetDefaultSize",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashLayoutWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashLayoutWindow_SetDefaultSize. Expected _wxSashLayoutWindow_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxSize_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashLayoutWindow_SetDefaultSize(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSashLayoutWindow_SetOrientation(_swigobj,_swigarg0)  (_swigobj->SetOrientation(_swigarg0))
static PyObject *_wrap_wxSashLayoutWindow_SetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSashLayoutWindow * _arg0;
    wxLayoutOrientation  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","orientation", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxSashLayoutWindow_SetOrientation",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxSashLayoutWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxSashLayoutWindow_SetOrientation. Expected _wxSashLayoutWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSashLayoutWindow_SetOrientation(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxLayoutAlgorithmTowxObject(void *ptr) {
    wxLayoutAlgorithm *src;
    wxObject *dest;
    src = (wxLayoutAlgorithm *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxLayoutAlgorithm() (new wxLayoutAlgorithm())
static PyObject *_wrap_new_wxLayoutAlgorithm(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxLayoutAlgorithm * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxLayoutAlgorithm",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxLayoutAlgorithm *)new_wxLayoutAlgorithm();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxLayoutAlgorithm_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define delete_wxLayoutAlgorithm(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_wxLayoutAlgorithm(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxLayoutAlgorithm * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_wxLayoutAlgorithm",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutAlgorithm_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_wxLayoutAlgorithm. Expected _wxLayoutAlgorithm_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete_wxLayoutAlgorithm(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxLayoutAlgorithm_LayoutMDIFrame(_swigobj,_swigarg0,_swigarg1)  (_swigobj->LayoutMDIFrame(_swigarg0,_swigarg1))
static PyObject *_wrap_wxLayoutAlgorithm_LayoutMDIFrame(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxLayoutAlgorithm * _arg0;
    wxMDIParentFrame * _arg1;
    wxRect * _arg2 = (wxRect *) NULL;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    wxRect  temp;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","frame","rect", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|O:wxLayoutAlgorithm_LayoutMDIFrame",_kwnames,&_argo0,&_argo1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutAlgorithm_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutAlgorithm_LayoutMDIFrame. Expected _wxLayoutAlgorithm_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxMDIParentFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxLayoutAlgorithm_LayoutMDIFrame. Expected _wxMDIParentFrame_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxRect_helper(_obj2, &_arg2))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxLayoutAlgorithm_LayoutMDIFrame(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxLayoutAlgorithm_LayoutFrame(_swigobj,_swigarg0,_swigarg1)  (_swigobj->LayoutFrame(_swigarg0,_swigarg1))
static PyObject *_wrap_wxLayoutAlgorithm_LayoutFrame(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxLayoutAlgorithm * _arg0;
    wxFrame * _arg1;
    wxWindow * _arg2 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","frame","mainWindow", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|O:wxLayoutAlgorithm_LayoutFrame",_kwnames,&_argo0,&_argo1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutAlgorithm_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutAlgorithm_LayoutFrame. Expected _wxLayoutAlgorithm_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxLayoutAlgorithm_LayoutFrame. Expected _wxFrame_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of wxLayoutAlgorithm_LayoutFrame. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxLayoutAlgorithm_LayoutFrame(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxLayoutAlgorithm_LayoutWindow(_swigobj,_swigarg0,_swigarg1)  (_swigobj->LayoutWindow(_swigarg0,_swigarg1))
static PyObject *_wrap_wxLayoutAlgorithm_LayoutWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxLayoutAlgorithm * _arg0;
    wxWindow * _arg1;
    wxWindow * _arg2 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","parent","mainWindow", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|O:wxLayoutAlgorithm_LayoutWindow",_kwnames,&_argo0,&_argo1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutAlgorithm_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutAlgorithm_LayoutWindow. Expected _wxLayoutAlgorithm_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxLayoutAlgorithm_LayoutWindow. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of wxLayoutAlgorithm_LayoutWindow. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxLayoutAlgorithm_LayoutWindow(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigwxPopupWindowTowxWindow(void *ptr) {
    wxPopupWindow *src;
    wxWindow *dest;
    src = (wxPopupWindow *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxPopupWindowTowxEvtHandler(void *ptr) {
    wxPopupWindow *src;
    wxEvtHandler *dest;
    src = (wxPopupWindow *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxPopupWindowTowxObject(void *ptr) {
    wxPopupWindow *src;
    wxObject *dest;
    src = (wxPopupWindow *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxPopupWindow(_swigarg0,_swigarg1) (new wxPopupWindow(_swigarg0,_swigarg1))
static PyObject *_wrap_new_wxPopupWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPopupWindow * _result;
    wxWindow * _arg0;
    int  _arg1 = (int ) wxBORDER_NONE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "parent","flags", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:new_wxPopupWindow",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxPopupWindow. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPopupWindow *)new_wxPopupWindow(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPopupWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define new_wxPrePopupWindow() (new wxPopupWindow())
static PyObject *_wrap_new_wxPrePopupWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPopupWindow * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxPrePopupWindow",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPopupWindow *)new_wxPrePopupWindow();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPopupWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxPopupWindow_Create(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Create(_swigarg0,_swigarg1))
static PyObject *_wrap_wxPopupWindow_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPopupWindow * _arg0;
    wxWindow * _arg1;
    int  _arg2 = (int ) wxBORDER_NONE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","parent","flags", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|i:wxPopupWindow_Create",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPopupWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxPopupWindow_Create. Expected _wxPopupWindow_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxPopupWindow_Create. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxPopupWindow_Create(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxPopupWindow_Position(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Position(_swigarg0,_swigarg1))
static PyObject *_wrap_wxPopupWindow_Position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPopupWindow * _arg0;
    wxPoint * _arg1;
    wxSize * _arg2;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj1 = 0;
    wxSize  temp0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","ptOrigin","size", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxPopupWindow_Position",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPopupWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxPopupWindow_Position. Expected _wxPopupWindow_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxPoint_helper(_obj1, &_arg1))
        return NULL;
}
{
    _arg2 = &temp0;
    if (! wxSize_helper(_obj2, &_arg2))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPopupWindow_Position(_arg0,*_arg1,*_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxPyPopupTransientWindowTowxPopupWindow(void *ptr) {
    wxPyPopupTransientWindow *src;
    wxPopupWindow *dest;
    src = (wxPyPopupTransientWindow *) ptr;
    dest = (wxPopupWindow *) src;
    return (void *) dest;
}

static void *SwigwxPyPopupTransientWindowTowxWindow(void *ptr) {
    wxPyPopupTransientWindow *src;
    wxWindow *dest;
    src = (wxPyPopupTransientWindow *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxPyPopupTransientWindowTowxEvtHandler(void *ptr) {
    wxPyPopupTransientWindow *src;
    wxEvtHandler *dest;
    src = (wxPyPopupTransientWindow *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxPyPopupTransientWindowTowxObject(void *ptr) {
    wxPyPopupTransientWindow *src;
    wxObject *dest;
    src = (wxPyPopupTransientWindow *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxPopupTransientWindow(_swigarg0,_swigarg1) (new wxPyPopupTransientWindow(_swigarg0,_swigarg1))
static PyObject *_wrap_new_wxPopupTransientWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyPopupTransientWindow * _result;
    wxWindow * _arg0;
    int  _arg1 = (int ) wxBORDER_NONE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "parent","style", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:new_wxPopupTransientWindow",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxPopupTransientWindow. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPyPopupTransientWindow *)new_wxPopupTransientWindow(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPyPopupTransientWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define new_wxPrePopupTransientWindow() (new wxPyPopupTransientWindow())
static PyObject *_wrap_new_wxPrePopupTransientWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyPopupTransientWindow * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxPrePopupTransientWindow",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPyPopupTransientWindow *)new_wxPrePopupTransientWindow();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPyPopupTransientWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxPopupTransientWindow__setCallbackInfo(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_setCallbackInfo(_swigarg0,_swigarg1))
static PyObject *_wrap_wxPopupTransientWindow__setCallbackInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyPopupTransientWindow * _arg0;
    PyObject * _arg1;
    PyObject * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","self","_class", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxPopupTransientWindow__setCallbackInfo",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyPopupTransientWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxPopupTransientWindow__setCallbackInfo. Expected _wxPyPopupTransientWindow_p.");
        return NULL;
        }
    }
{
  _arg1 = _obj1;
}
{
  _arg2 = _obj2;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPopupTransientWindow__setCallbackInfo(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxPopupTransientWindow_Popup(_swigobj,_swigarg0)  (_swigobj->Popup(_swigarg0))
static PyObject *_wrap_wxPopupTransientWindow_Popup(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyPopupTransientWindow * _arg0;
    wxWindow * _arg1 = (wxWindow *) NULL;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","focus", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|O:wxPopupTransientWindow_Popup",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyPopupTransientWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxPopupTransientWindow_Popup. Expected _wxPyPopupTransientWindow_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxPopupTransientWindow_Popup. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPopupTransientWindow_Popup(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxPopupTransientWindow_Dismiss(_swigobj)  (_swigobj->Dismiss())
static PyObject *_wrap_wxPopupTransientWindow_Dismiss(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyPopupTransientWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxPopupTransientWindow_Dismiss",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyPopupTransientWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxPopupTransientWindow_Dismiss. Expected _wxPyPopupTransientWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPopupTransientWindow_Dismiss(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxTipWindowTowxPyPopupTransientWindow(void *ptr) {
    wxTipWindow *src;
    wxPyPopupTransientWindow *dest;
    src = (wxTipWindow *) ptr;
    dest = (wxPyPopupTransientWindow *) src;
    return (void *) dest;
}

static void *SwigwxTipWindowTowxPopupWindow(void *ptr) {
    wxTipWindow *src;
    wxPopupWindow *dest;
    src = (wxTipWindow *) ptr;
    dest = (wxPopupWindow *) src;
    return (void *) dest;
}

static void *SwigwxTipWindowTowxWindow(void *ptr) {
    wxTipWindow *src;
    wxWindow *dest;
    src = (wxTipWindow *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxTipWindowTowxEvtHandler(void *ptr) {
    wxTipWindow *src;
    wxEvtHandler *dest;
    src = (wxTipWindow *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxTipWindowTowxObject(void *ptr) {
    wxTipWindow *src;
    wxObject *dest;
    src = (wxTipWindow *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

static wxTipWindow *new_wxTipWindow(wxWindow *parent,const wxString *text,wxCoord maxLength,wxRect *rectBound) {
            wxString tmp = *text;
            return new wxTipWindow(parent, tmp, maxLength, NULL, rectBound);
        }

static PyObject *_wrap_new_wxTipWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxTipWindow * _result;
    wxWindow * _arg0;
    wxString * _arg1;
    wxCoord  _arg2 = (wxCoord ) 100;
    wxRect * _arg3 = (wxRect *) NULL;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    wxRect  temp;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "parent","text","maxLength","rectBound", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iO:new_wxTipWindow",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxTipWindow. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp;
    if (! wxRect_helper(_obj3, &_arg3))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxTipWindow *)new_wxTipWindow(_arg0,_arg1,_arg2,_arg3);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxTipWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    if (_obj1)
        delete _arg1;
}
    return _resultobj;
}

#define wxTipWindow_SetBoundingRect(_swigobj,_swigarg0)  (_swigobj->SetBoundingRect(_swigarg0))
static PyObject *_wrap_wxTipWindow_SetBoundingRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxTipWindow * _arg0;
    wxRect * _arg1;
    PyObject * _argo0 = 0;
    wxRect  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","rectBound", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxTipWindow_SetBoundingRect",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxTipWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxTipWindow_SetBoundingRect. Expected _wxTipWindow_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxRect_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxTipWindow_SetBoundingRect(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxTipWindow_Close(_swigobj)  (_swigobj->Close())
static PyObject *_wrap_wxTipWindow_Close(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxTipWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxTipWindow_Close",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxTipWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxTipWindow_Close. Expected _wxTipWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxTipWindow_Close(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxPyVScrolledWindowTowxPanel(void *ptr) {
    wxPyVScrolledWindow *src;
    wxPanel *dest;
    src = (wxPyVScrolledWindow *) ptr;
    dest = (wxPanel *) src;
    return (void *) dest;
}

static void *SwigwxPyVScrolledWindowTowxWindow(void *ptr) {
    wxPyVScrolledWindow *src;
    wxWindow *dest;
    src = (wxPyVScrolledWindow *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxPyVScrolledWindowTowxEvtHandler(void *ptr) {
    wxPyVScrolledWindow *src;
    wxEvtHandler *dest;
    src = (wxPyVScrolledWindow *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxPyVScrolledWindowTowxObject(void *ptr) {
    wxPyVScrolledWindow *src;
    wxObject *dest;
    src = (wxPyVScrolledWindow *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxVScrolledWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new wxPyVScrolledWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_wxVScrolledWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVScrolledWindow * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1 = (wxWindowID ) wxID_ANY;
    wxPoint * _arg2 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg3 = (wxSize *) &wxDefaultSize;
    long  _arg4 = (long ) 0;
    wxString * _arg5 = (wxString *) &wxPyPanelNameStr;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj2 = 0;
    wxSize  temp0;
    PyObject * _obj3 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "parent","id","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iOOlO:new_wxVScrolledWindow",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_arg4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxVScrolledWindow. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxPoint_helper(_obj2, &_arg2))
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp0;
    if (! wxSize_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj5)
{
    _arg5 = wxString_in_helper(_obj5);
    if (_arg5 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPyVScrolledWindow *)new_wxVScrolledWindow(_arg0,_arg1,*_arg2,*_arg3,_arg4,*_arg5);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPyVScrolledWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    if (_obj5)
        delete _arg5;
}
    return _resultobj;
}

#define new_wxPreVScrolledWindow() (new wxPyVScrolledWindow())
static PyObject *_wrap_new_wxPreVScrolledWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVScrolledWindow * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxPreVScrolledWindow",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPyVScrolledWindow *)new_wxPreVScrolledWindow();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPyVScrolledWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxVScrolledWindow__setCallbackInfo(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_setCallbackInfo(_swigarg0,_swigarg1))
static PyObject *_wrap_wxVScrolledWindow__setCallbackInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVScrolledWindow * _arg0;
    PyObject * _arg1;
    PyObject * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","self","_class", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxVScrolledWindow__setCallbackInfo",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow__setCallbackInfo. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
  _arg1 = _obj1;
}
{
  _arg2 = _obj2;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVScrolledWindow__setCallbackInfo(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVScrolledWindow_Create(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->Create(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_wxVScrolledWindow_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVScrolledWindow * _arg0;
    wxWindow * _arg1;
    wxWindowID  _arg2 = (wxWindowID ) wxID_ANY;
    wxPoint * _arg3 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg4 = (wxSize *) &wxDefaultSize;
    long  _arg5 = (long ) 0;
    wxString * _arg6 = (wxString *) &wxPyPanelNameStr;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    wxPoint  temp;
    PyObject * _obj3 = 0;
    wxSize  temp0;
    PyObject * _obj4 = 0;
    PyObject * _obj6 = 0;
    char *_kwnames[] = { "self","parent","id","pos","size","style","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iOOlO:wxVScrolledWindow_Create",_kwnames,&_argo0,&_argo1,&_arg2,&_obj3,&_obj4,&_arg5,&_obj6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_Create. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxVScrolledWindow_Create. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj3)
{
    _arg3 = &temp;
    if (! wxPoint_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj4)
{
    _arg4 = &temp0;
    if (! wxSize_helper(_obj4, &_arg4))
        return NULL;
}
    if (_obj6)
{
    _arg6 = wxString_in_helper(_obj6);
    if (_arg6 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVScrolledWindow_Create(_arg0,_arg1,_arg2,*_arg3,*_arg4,_arg5,*_arg6);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj6)
        delete _arg6;
}
    return _resultobj;
}

#define wxVScrolledWindow_SetLineCount(_swigobj,_swigarg0)  (_swigobj->SetLineCount(_swigarg0))
static PyObject *_wrap_wxVScrolledWindow_SetLineCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVScrolledWindow * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","count", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVScrolledWindow_SetLineCount",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_SetLineCount. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVScrolledWindow_SetLineCount(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVScrolledWindow_ScrollToLine(_swigobj,_swigarg0)  (_swigobj->ScrollToLine(_swigarg0))
static PyObject *_wrap_wxVScrolledWindow_ScrollToLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVScrolledWindow * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","line", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVScrolledWindow_ScrollToLine",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_ScrollToLine. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVScrolledWindow_ScrollToLine(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVScrolledWindow_ScrollLines(_swigobj,_swigarg0)  (_swigobj->ScrollLines(_swigarg0))
static PyObject *_wrap_wxVScrolledWindow_ScrollLines(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVScrolledWindow * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","lines", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVScrolledWindow_ScrollLines",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_ScrollLines. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVScrolledWindow_ScrollLines(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVScrolledWindow_ScrollPages(_swigobj,_swigarg0)  (_swigobj->ScrollPages(_swigarg0))
static PyObject *_wrap_wxVScrolledWindow_ScrollPages(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVScrolledWindow * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pages", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVScrolledWindow_ScrollPages",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_ScrollPages. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVScrolledWindow_ScrollPages(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVScrolledWindow_RefreshLine(_swigobj,_swigarg0)  (_swigobj->RefreshLine(_swigarg0))
static PyObject *_wrap_wxVScrolledWindow_RefreshLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVScrolledWindow * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","line", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVScrolledWindow_RefreshLine",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_RefreshLine. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVScrolledWindow_RefreshLine(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVScrolledWindow_RefreshLines(_swigobj,_swigarg0,_swigarg1)  (_swigobj->RefreshLines(_swigarg0,_swigarg1))
static PyObject *_wrap_wxVScrolledWindow_RefreshLines(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVScrolledWindow * _arg0;
    size_t  _arg1;
    size_t  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","from","to", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxVScrolledWindow_RefreshLines",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_RefreshLines. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVScrolledWindow_RefreshLines(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVScrolledWindow_HitTestXT(_swigobj,_swigarg0,_swigarg1)  (_swigobj->HitTest(_swigarg0,_swigarg1))
static PyObject *_wrap_wxVScrolledWindow_HitTestXT(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxPyVScrolledWindow * _arg0;
    wxCoord  _arg1;
    wxCoord  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxVScrolledWindow_HitTestXT",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_HitTestXT. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxVScrolledWindow_HitTestXT(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVScrolledWindow_HitTest(_swigobj,_swigarg0)  (_swigobj->HitTest(_swigarg0))
static PyObject *_wrap_wxVScrolledWindow_HitTest(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxPyVScrolledWindow * _arg0;
    wxPoint * _arg1;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","pt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxVScrolledWindow_HitTest",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_HitTest. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxPoint_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxVScrolledWindow_HitTest(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVScrolledWindow_RefreshAll(_swigobj)  (_swigobj->RefreshAll())
static PyObject *_wrap_wxVScrolledWindow_RefreshAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVScrolledWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVScrolledWindow_RefreshAll",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_RefreshAll. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVScrolledWindow_RefreshAll(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVScrolledWindow_GetLineCount(_swigobj)  (_swigobj->GetLineCount())
static PyObject *_wrap_wxVScrolledWindow_GetLineCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    size_t  _result;
    wxPyVScrolledWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVScrolledWindow_GetLineCount",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_GetLineCount. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (size_t )wxVScrolledWindow_GetLineCount(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVScrolledWindow_GetFirstVisibleLine(_swigobj)  (_swigobj->GetFirstVisibleLine())
static PyObject *_wrap_wxVScrolledWindow_GetFirstVisibleLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    size_t  _result;
    wxPyVScrolledWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVScrolledWindow_GetFirstVisibleLine",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_GetFirstVisibleLine. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (size_t )wxVScrolledWindow_GetFirstVisibleLine(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVScrolledWindow_GetLastVisibleLine(_swigobj)  (_swigobj->GetLastVisibleLine())
static PyObject *_wrap_wxVScrolledWindow_GetLastVisibleLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    size_t  _result;
    wxPyVScrolledWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVScrolledWindow_GetLastVisibleLine",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_GetLastVisibleLine. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (size_t )wxVScrolledWindow_GetLastVisibleLine(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVScrolledWindow_IsVisible(_swigobj,_swigarg0)  (_swigobj->IsVisible(_swigarg0))
static PyObject *_wrap_wxVScrolledWindow_IsVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVScrolledWindow * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","line", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVScrolledWindow_IsVisible",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVScrolledWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVScrolledWindow_IsVisible. Expected _wxPyVScrolledWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVScrolledWindow_IsVisible(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigwxPyVListBoxTowxPyVScrolledWindow(void *ptr) {
    wxPyVListBox *src;
    wxPyVScrolledWindow *dest;
    src = (wxPyVListBox *) ptr;
    dest = (wxPyVScrolledWindow *) src;
    return (void *) dest;
}

static void *SwigwxPyVListBoxTowxPanel(void *ptr) {
    wxPyVListBox *src;
    wxPanel *dest;
    src = (wxPyVListBox *) ptr;
    dest = (wxPanel *) src;
    return (void *) dest;
}

static void *SwigwxPyVListBoxTowxWindow(void *ptr) {
    wxPyVListBox *src;
    wxWindow *dest;
    src = (wxPyVListBox *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxPyVListBoxTowxEvtHandler(void *ptr) {
    wxPyVListBox *src;
    wxEvtHandler *dest;
    src = (wxPyVListBox *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxPyVListBoxTowxObject(void *ptr) {
    wxPyVListBox *src;
    wxObject *dest;
    src = (wxPyVListBox *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxVListBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new wxPyVListBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_wxVListBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1 = (wxWindowID ) wxID_ANY;
    wxPoint * _arg2 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg3 = (wxSize *) &wxDefaultSize;
    long  _arg4 = (long ) 0;
    wxString * _arg5 = (wxString *) &wxPyVListBoxNameStr;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj2 = 0;
    wxSize  temp0;
    PyObject * _obj3 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "parent","id","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iOOlO:new_wxVListBox",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_arg4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxVListBox. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxPoint_helper(_obj2, &_arg2))
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp0;
    if (! wxSize_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj5)
{
    _arg5 = wxString_in_helper(_obj5);
    if (_arg5 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPyVListBox *)new_wxVListBox(_arg0,_arg1,*_arg2,*_arg3,_arg4,*_arg5);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPyVListBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    if (_obj5)
        delete _arg5;
}
    return _resultobj;
}

#define new_wxPreVListBox() (new wxPyVListBox())
static PyObject *_wrap_new_wxPreVListBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxPreVListBox",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPyVListBox *)new_wxPreVListBox();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPyVListBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxVListBox__setCallbackInfo(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_setCallbackInfo(_swigarg0,_swigarg1))
static PyObject *_wrap_wxVListBox__setCallbackInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _arg0;
    PyObject * _arg1;
    PyObject * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","self","_class", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxVListBox__setCallbackInfo",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox__setCallbackInfo. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
  _arg1 = _obj1;
}
{
  _arg2 = _obj2;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVListBox__setCallbackInfo(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVListBox_Create(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->Create(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_wxVListBox_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVListBox * _arg0;
    wxWindow * _arg1;
    wxWindowID  _arg2 = (wxWindowID ) wxID_ANY;
    wxPoint * _arg3 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg4 = (wxSize *) &wxDefaultSize;
    long  _arg5 = (long ) 0;
    wxString * _arg6 = (wxString *) &wxPyVListBoxNameStr;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    wxPoint  temp;
    PyObject * _obj3 = 0;
    wxSize  temp0;
    PyObject * _obj4 = 0;
    PyObject * _obj6 = 0;
    char *_kwnames[] = { "self","parent","id","pos","size","style","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iOOlO:wxVListBox_Create",_kwnames,&_argo0,&_argo1,&_arg2,&_obj3,&_obj4,&_arg5,&_obj6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_Create. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxVListBox_Create. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj3)
{
    _arg3 = &temp;
    if (! wxPoint_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj4)
{
    _arg4 = &temp0;
    if (! wxSize_helper(_obj4, &_arg4))
        return NULL;
}
    if (_obj6)
{
    _arg6 = wxString_in_helper(_obj6);
    if (_arg6 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVListBox_Create(_arg0,_arg1,_arg2,*_arg3,*_arg4,_arg5,*_arg6);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj6)
        delete _arg6;
}
    return _resultobj;
}

#define wxVListBox_GetItemCount(_swigobj)  (_swigobj->GetItemCount())
static PyObject *_wrap_wxVListBox_GetItemCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    size_t  _result;
    wxPyVListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVListBox_GetItemCount",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_GetItemCount. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (size_t )wxVListBox_GetItemCount(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_HasMultipleSelection(_swigobj)  (_swigobj->HasMultipleSelection())
static PyObject *_wrap_wxVListBox_HasMultipleSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVListBox_HasMultipleSelection",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_HasMultipleSelection. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVListBox_HasMultipleSelection(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_GetSelection(_swigobj)  (_swigobj->GetSelection())
static PyObject *_wrap_wxVListBox_GetSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxPyVListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVListBox_GetSelection",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_GetSelection. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxVListBox_GetSelection(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_IsCurrent(_swigobj,_swigarg0)  (_swigobj->IsCurrent(_swigarg0))
static PyObject *_wrap_wxVListBox_IsCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVListBox * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVListBox_IsCurrent",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_IsCurrent. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVListBox_IsCurrent(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_IsSelected(_swigobj,_swigarg0)  (_swigobj->IsSelected(_swigarg0))
static PyObject *_wrap_wxVListBox_IsSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVListBox * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVListBox_IsSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_IsSelected. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVListBox_IsSelected(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_GetSelectedCount(_swigobj)  (_swigobj->GetSelectedCount())
static PyObject *_wrap_wxVListBox_GetSelectedCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    size_t  _result;
    wxPyVListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVListBox_GetSelectedCount",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_GetSelectedCount. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (size_t )wxVListBox_GetSelectedCount(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_GetFirstSelected(_swigobj,_swigarg0)  (_swigobj->GetFirstSelected(_swigarg0))
static PyObject *_wrap_wxVListBox_GetFirstSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxPyVListBox * _arg0;
    unsigned long * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","cookie", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxVListBox_GetFirstSelected",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_GetFirstSelected. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_unsigned_long_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxVListBox_GetFirstSelected. Expected _unsigned_long_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxVListBox_GetFirstSelected(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_GetNextSelected(_swigobj,_swigarg0)  (_swigobj->GetNextSelected(_swigarg0))
static PyObject *_wrap_wxVListBox_GetNextSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxPyVListBox * _arg0;
    unsigned long * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","cookie", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxVListBox_GetNextSelected",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_GetNextSelected. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_unsigned_long_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxVListBox_GetNextSelected. Expected _unsigned_long_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxVListBox_GetNextSelected(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_GetMargins(_swigobj)  (_swigobj->GetMargins())
static PyObject *_wrap_wxVListBox_GetMargins(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPoint * _result;
    wxPyVListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVListBox_GetMargins",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_GetMargins. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxPoint (wxVListBox_GetMargins(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxPoint_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define wxVListBox_GetSelectionBackground(_swigobj)  (_swigobj->GetSelectionBackground())
static PyObject *_wrap_wxVListBox_GetSelectionBackground(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxColour * _result;
    wxPyVListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVListBox_GetSelectionBackground",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_GetSelectionBackground. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    const wxColour & _result_ref = wxVListBox_GetSelectionBackground(_arg0);
    _result = (wxColour *) &_result_ref;

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxColour_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxVListBox_SetItemCount(_swigobj,_swigarg0)  (_swigobj->SetItemCount(_swigarg0))
static PyObject *_wrap_wxVListBox_SetItemCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","count", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVListBox_SetItemCount",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_SetItemCount. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVListBox_SetItemCount(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVListBox_Clear(_swigobj)  (_swigobj->Clear())
static PyObject *_wrap_wxVListBox_Clear(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVListBox_Clear",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_Clear. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVListBox_Clear(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVListBox_SetSelection(_swigobj,_swigarg0)  (_swigobj->SetSelection(_swigarg0))
static PyObject *_wrap_wxVListBox_SetSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selection", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVListBox_SetSelection",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_SetSelection. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVListBox_SetSelection(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVListBox_Select(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Select(_swigarg0,_swigarg1))
static PyObject *_wrap_wxVListBox_Select(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVListBox * _arg0;
    size_t  _arg1;
    bool  _arg2 = (bool ) true;
    PyObject * _argo0 = 0;
    int tempbool2 = (int) true;
    char *_kwnames[] = { "self","item","select", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|i:wxVListBox_Select",_kwnames,&_argo0,&_arg1,&tempbool2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_Select. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVListBox_Select(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_SelectRange(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SelectRange(_swigarg0,_swigarg1))
static PyObject *_wrap_wxVListBox_SelectRange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVListBox * _arg0;
    size_t  _arg1;
    size_t  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","from","to", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxVListBox_SelectRange",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_SelectRange. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVListBox_SelectRange(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_Toggle(_swigobj,_swigarg0)  (_swigobj->Toggle(_swigarg0))
static PyObject *_wrap_wxVListBox_Toggle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxVListBox_Toggle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_Toggle. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVListBox_Toggle(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVListBox_SelectAll(_swigobj)  (_swigobj->SelectAll())
static PyObject *_wrap_wxVListBox_SelectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVListBox_SelectAll",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_SelectAll. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVListBox_SelectAll(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_DeselectAll(_swigobj)  (_swigobj->DeselectAll())
static PyObject *_wrap_wxVListBox_DeselectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyVListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxVListBox_DeselectAll",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_DeselectAll. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxVListBox_DeselectAll(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxVListBox_SetMargins(_swigobj,_swigarg0)  (_swigobj->SetMargins(_swigarg0))
static PyObject *_wrap_wxVListBox_SetMargins(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _arg0;
    wxPoint * _arg1;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","pt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxVListBox_SetMargins",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_SetMargins. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxPoint_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVListBox_SetMargins(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVListBox_SetMarginsXY(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetMargins(_swigarg0,_swigarg1))
static PyObject *_wrap_wxVListBox_SetMarginsXY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _arg0;
    wxCoord  _arg1;
    wxCoord  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxVListBox_SetMarginsXY",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_SetMarginsXY. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVListBox_SetMarginsXY(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxVListBox_SetSelectionBackground(_swigobj,_swigarg0)  (_swigobj->SetSelectionBackground(_swigarg0))
static PyObject *_wrap_wxVListBox_SetSelectionBackground(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyVListBox * _arg0;
    wxColour * _arg1;
    PyObject * _argo0 = 0;
    wxColour  temp;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","col", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxVListBox_SetSelectionBackground",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyVListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxVListBox_SetSelectionBackground. Expected _wxPyVListBox_p.");
        return NULL;
        }
    }
{
    _arg1 = &temp;
    if (! wxColour_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxVListBox_SetSelectionBackground(_arg0,*_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxPyHtmlListBoxTowxPyVListBox(void *ptr) {
    wxPyHtmlListBox *src;
    wxPyVListBox *dest;
    src = (wxPyHtmlListBox *) ptr;
    dest = (wxPyVListBox *) src;
    return (void *) dest;
}

static void *SwigwxPyHtmlListBoxTowxPyVScrolledWindow(void *ptr) {
    wxPyHtmlListBox *src;
    wxPyVScrolledWindow *dest;
    src = (wxPyHtmlListBox *) ptr;
    dest = (wxPyVScrolledWindow *) src;
    return (void *) dest;
}

static void *SwigwxPyHtmlListBoxTowxPanel(void *ptr) {
    wxPyHtmlListBox *src;
    wxPanel *dest;
    src = (wxPyHtmlListBox *) ptr;
    dest = (wxPanel *) src;
    return (void *) dest;
}

static void *SwigwxPyHtmlListBoxTowxWindow(void *ptr) {
    wxPyHtmlListBox *src;
    wxWindow *dest;
    src = (wxPyHtmlListBox *) ptr;
    dest = (wxWindow *) src;
    return (void *) dest;
}

static void *SwigwxPyHtmlListBoxTowxEvtHandler(void *ptr) {
    wxPyHtmlListBox *src;
    wxEvtHandler *dest;
    src = (wxPyHtmlListBox *) ptr;
    dest = (wxEvtHandler *) src;
    return (void *) dest;
}

static void *SwigwxPyHtmlListBoxTowxObject(void *ptr) {
    wxPyHtmlListBox *src;
    wxObject *dest;
    src = (wxPyHtmlListBox *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxHtmlListBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new wxPyHtmlListBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_wxHtmlListBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyHtmlListBox * _result;
    wxWindow * _arg0;
    wxWindowID  _arg1 = (wxWindowID ) wxID_ANY;
    wxPoint * _arg2 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg3 = (wxSize *) &wxDefaultSize;
    long  _arg4 = (long ) 0;
    wxString * _arg5 = (wxString *) &wxPyVListBoxNameStr;
    PyObject * _argo0 = 0;
    wxPoint  temp;
    PyObject * _obj2 = 0;
    wxSize  temp0;
    PyObject * _obj3 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "parent","id","pos","size","style","name", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iOOlO:new_wxHtmlListBox",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_arg4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_wxHtmlListBox. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    _arg2 = &temp;
    if (! wxPoint_helper(_obj2, &_arg2))
        return NULL;
}
    if (_obj3)
{
    _arg3 = &temp0;
    if (! wxSize_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj5)
{
    _arg5 = wxString_in_helper(_obj5);
    if (_arg5 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPyHtmlListBox *)new_wxHtmlListBox(_arg0,_arg1,*_arg2,*_arg3,_arg4,*_arg5);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPyHtmlListBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    if (_obj5)
        delete _arg5;
}
    return _resultobj;
}

#define new_wxPreHtmlListBox() (new wxPyHtmlListBox())
static PyObject *_wrap_new_wxPreHtmlListBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyHtmlListBox * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxPreHtmlListBox",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPyHtmlListBox *)new_wxPreHtmlListBox();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPyHtmlListBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxHtmlListBox__setCallbackInfo(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_setCallbackInfo(_swigarg0,_swigarg1))
static PyObject *_wrap_wxHtmlListBox__setCallbackInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyHtmlListBox * _arg0;
    PyObject * _arg1;
    PyObject * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","self","_class", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:wxHtmlListBox__setCallbackInfo",_kwnames,&_argo0,&_obj1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyHtmlListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxHtmlListBox__setCallbackInfo. Expected _wxPyHtmlListBox_p.");
        return NULL;
        }
    }
{
  _arg1 = _obj1;
}
{
  _arg2 = _obj2;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxHtmlListBox__setCallbackInfo(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxHtmlListBox_Create(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->Create(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_wxHtmlListBox_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxPyHtmlListBox * _arg0;
    wxWindow * _arg1;
    wxWindowID  _arg2 = (wxWindowID ) wxID_ANY;
    wxPoint * _arg3 = (wxPoint *) &wxDefaultPosition;
    wxSize * _arg4 = (wxSize *) &wxDefaultSize;
    long  _arg5 = (long ) 0;
    wxString * _arg6 = (wxString *) &wxPyVListBoxNameStr;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    wxPoint  temp;
    PyObject * _obj3 = 0;
    wxSize  temp0;
    PyObject * _obj4 = 0;
    PyObject * _obj6 = 0;
    char *_kwnames[] = { "self","parent","id","pos","size","style","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iOOlO:wxHtmlListBox_Create",_kwnames,&_argo0,&_argo1,&_arg2,&_obj3,&_obj4,&_arg5,&_obj6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyHtmlListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxHtmlListBox_Create. Expected _wxPyHtmlListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxHtmlListBox_Create. Expected _wxWindow_p.");
        return NULL;
        }
    }
    if (_obj3)
{
    _arg3 = &temp;
    if (! wxPoint_helper(_obj3, &_arg3))
        return NULL;
}
    if (_obj4)
{
    _arg4 = &temp0;
    if (! wxSize_helper(_obj4, &_arg4))
        return NULL;
}
    if (_obj6)
{
    _arg6 = wxString_in_helper(_obj6);
    if (_arg6 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxHtmlListBox_Create(_arg0,_arg1,_arg2,*_arg3,*_arg4,_arg5,*_arg6);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj6)
        delete _arg6;
}
    return _resultobj;
}

#define wxHtmlListBox_RefreshAll(_swigobj)  (_swigobj->RefreshAll())
static PyObject *_wrap_wxHtmlListBox_RefreshAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyHtmlListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxHtmlListBox_RefreshAll",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyHtmlListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxHtmlListBox_RefreshAll. Expected _wxPyHtmlListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxHtmlListBox_RefreshAll(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxHtmlListBox_SetItemCount(_swigobj,_swigarg0)  (_swigobj->SetItemCount(_swigarg0))
static PyObject *_wrap_wxHtmlListBox_SetItemCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPyHtmlListBox * _arg0;
    size_t  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","count", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxHtmlListBox_SetItemCount",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxPyHtmlListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxHtmlListBox_SetItemCount. Expected _wxPyHtmlListBox_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxHtmlListBox_SetItemCount(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyMethodDef windows3cMethods[] = {
	 { "wxHtmlListBox_SetItemCount", (PyCFunction) _wrap_wxHtmlListBox_SetItemCount, METH_VARARGS | METH_KEYWORDS },
	 { "wxHtmlListBox_RefreshAll", (PyCFunction) _wrap_wxHtmlListBox_RefreshAll, METH_VARARGS | METH_KEYWORDS },
	 { "wxHtmlListBox_Create", (PyCFunction) _wrap_wxHtmlListBox_Create, METH_VARARGS | METH_KEYWORDS },
	 { "wxHtmlListBox__setCallbackInfo", (PyCFunction) _wrap_wxHtmlListBox__setCallbackInfo, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPreHtmlListBox", (PyCFunction) _wrap_new_wxPreHtmlListBox, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxHtmlListBox", (PyCFunction) _wrap_new_wxHtmlListBox, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_SetSelectionBackground", (PyCFunction) _wrap_wxVListBox_SetSelectionBackground, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_SetMarginsXY", (PyCFunction) _wrap_wxVListBox_SetMarginsXY, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_SetMargins", (PyCFunction) _wrap_wxVListBox_SetMargins, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_DeselectAll", (PyCFunction) _wrap_wxVListBox_DeselectAll, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_SelectAll", (PyCFunction) _wrap_wxVListBox_SelectAll, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_Toggle", (PyCFunction) _wrap_wxVListBox_Toggle, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_SelectRange", (PyCFunction) _wrap_wxVListBox_SelectRange, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_Select", (PyCFunction) _wrap_wxVListBox_Select, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_SetSelection", (PyCFunction) _wrap_wxVListBox_SetSelection, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_Clear", (PyCFunction) _wrap_wxVListBox_Clear, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_SetItemCount", (PyCFunction) _wrap_wxVListBox_SetItemCount, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_GetSelectionBackground", (PyCFunction) _wrap_wxVListBox_GetSelectionBackground, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_GetMargins", (PyCFunction) _wrap_wxVListBox_GetMargins, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_GetNextSelected", (PyCFunction) _wrap_wxVListBox_GetNextSelected, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_GetFirstSelected", (PyCFunction) _wrap_wxVListBox_GetFirstSelected, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_GetSelectedCount", (PyCFunction) _wrap_wxVListBox_GetSelectedCount, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_IsSelected", (PyCFunction) _wrap_wxVListBox_IsSelected, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_IsCurrent", (PyCFunction) _wrap_wxVListBox_IsCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_GetSelection", (PyCFunction) _wrap_wxVListBox_GetSelection, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_HasMultipleSelection", (PyCFunction) _wrap_wxVListBox_HasMultipleSelection, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_GetItemCount", (PyCFunction) _wrap_wxVListBox_GetItemCount, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox_Create", (PyCFunction) _wrap_wxVListBox_Create, METH_VARARGS | METH_KEYWORDS },
	 { "wxVListBox__setCallbackInfo", (PyCFunction) _wrap_wxVListBox__setCallbackInfo, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPreVListBox", (PyCFunction) _wrap_new_wxPreVListBox, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxVListBox", (PyCFunction) _wrap_new_wxVListBox, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_IsVisible", (PyCFunction) _wrap_wxVScrolledWindow_IsVisible, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_GetLastVisibleLine", (PyCFunction) _wrap_wxVScrolledWindow_GetLastVisibleLine, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_GetFirstVisibleLine", (PyCFunction) _wrap_wxVScrolledWindow_GetFirstVisibleLine, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_GetLineCount", (PyCFunction) _wrap_wxVScrolledWindow_GetLineCount, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_RefreshAll", (PyCFunction) _wrap_wxVScrolledWindow_RefreshAll, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_HitTest", (PyCFunction) _wrap_wxVScrolledWindow_HitTest, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_HitTestXT", (PyCFunction) _wrap_wxVScrolledWindow_HitTestXT, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_RefreshLines", (PyCFunction) _wrap_wxVScrolledWindow_RefreshLines, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_RefreshLine", (PyCFunction) _wrap_wxVScrolledWindow_RefreshLine, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_ScrollPages", (PyCFunction) _wrap_wxVScrolledWindow_ScrollPages, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_ScrollLines", (PyCFunction) _wrap_wxVScrolledWindow_ScrollLines, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_ScrollToLine", (PyCFunction) _wrap_wxVScrolledWindow_ScrollToLine, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_SetLineCount", (PyCFunction) _wrap_wxVScrolledWindow_SetLineCount, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow_Create", (PyCFunction) _wrap_wxVScrolledWindow_Create, METH_VARARGS | METH_KEYWORDS },
	 { "wxVScrolledWindow__setCallbackInfo", (PyCFunction) _wrap_wxVScrolledWindow__setCallbackInfo, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPreVScrolledWindow", (PyCFunction) _wrap_new_wxPreVScrolledWindow, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxVScrolledWindow", (PyCFunction) _wrap_new_wxVScrolledWindow, METH_VARARGS | METH_KEYWORDS },
	 { "wxTipWindow_Close", (PyCFunction) _wrap_wxTipWindow_Close, METH_VARARGS | METH_KEYWORDS },
	 { "wxTipWindow_SetBoundingRect", (PyCFunction) _wrap_wxTipWindow_SetBoundingRect, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxTipWindow", (PyCFunction) _wrap_new_wxTipWindow, METH_VARARGS | METH_KEYWORDS },
	 { "wxPopupTransientWindow_Dismiss", (PyCFunction) _wrap_wxPopupTransientWindow_Dismiss, METH_VARARGS | METH_KEYWORDS },
	 { "wxPopupTransientWindow_Popup", (PyCFunction) _wrap_wxPopupTransientWindow_Popup, METH_VARARGS | METH_KEYWORDS },
	 { "wxPopupTransientWindow__setCallbackInfo", (PyCFunction) _wrap_wxPopupTransientWindow__setCallbackInfo, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPrePopupTransientWindow", (PyCFunction) _wrap_new_wxPrePopupTransientWindow, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPopupTransientWindow", (PyCFunction) _wrap_new_wxPopupTransientWindow, METH_VARARGS | METH_KEYWORDS },
	 { "wxPopupWindow_Position", (PyCFunction) _wrap_wxPopupWindow_Position, METH_VARARGS | METH_KEYWORDS },
	 { "wxPopupWindow_Create", (PyCFunction) _wrap_wxPopupWindow_Create, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPrePopupWindow", (PyCFunction) _wrap_new_wxPrePopupWindow, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPopupWindow", (PyCFunction) _wrap_new_wxPopupWindow, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutAlgorithm_LayoutWindow", (PyCFunction) _wrap_wxLayoutAlgorithm_LayoutWindow, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutAlgorithm_LayoutFrame", (PyCFunction) _wrap_wxLayoutAlgorithm_LayoutFrame, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutAlgorithm_LayoutMDIFrame", (PyCFunction) _wrap_wxLayoutAlgorithm_LayoutMDIFrame, METH_VARARGS | METH_KEYWORDS },
	 { "delete_wxLayoutAlgorithm", (PyCFunction) _wrap_delete_wxLayoutAlgorithm, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxLayoutAlgorithm", (PyCFunction) _wrap_new_wxLayoutAlgorithm, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashLayoutWindow_SetOrientation", (PyCFunction) _wrap_wxSashLayoutWindow_SetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashLayoutWindow_SetDefaultSize", (PyCFunction) _wrap_wxSashLayoutWindow_SetDefaultSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashLayoutWindow_SetAlignment", (PyCFunction) _wrap_wxSashLayoutWindow_SetAlignment, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashLayoutWindow_GetOrientation", (PyCFunction) _wrap_wxSashLayoutWindow_GetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashLayoutWindow_GetAlignment", (PyCFunction) _wrap_wxSashLayoutWindow_GetAlignment, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashLayoutWindow_Create", (PyCFunction) _wrap_wxSashLayoutWindow_Create, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPreSashLayoutWindow", (PyCFunction) _wrap_new_wxPreSashLayoutWindow, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxSashLayoutWindow", (PyCFunction) _wrap_new_wxSashLayoutWindow, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalculateLayoutEvent_GetRect", (PyCFunction) _wrap_wxCalculateLayoutEvent_GetRect, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalculateLayoutEvent_SetRect", (PyCFunction) _wrap_wxCalculateLayoutEvent_SetRect, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalculateLayoutEvent_GetFlags", (PyCFunction) _wrap_wxCalculateLayoutEvent_GetFlags, METH_VARARGS | METH_KEYWORDS },
	 { "wxCalculateLayoutEvent_SetFlags", (PyCFunction) _wrap_wxCalculateLayoutEvent_SetFlags, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxCalculateLayoutEvent", (PyCFunction) _wrap_new_wxCalculateLayoutEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_GetAlignment", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_GetAlignment, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_SetAlignment", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_SetAlignment, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_GetOrientation", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_GetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_SetOrientation", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_SetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_GetSize", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_GetSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_SetSize", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_SetSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_GetFlags", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_GetFlags, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_SetFlags", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_SetFlags, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_GetRequestedLength", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_GetRequestedLength, METH_VARARGS | METH_KEYWORDS },
	 { "wxQueryLayoutInfoEvent_SetRequestedLength", (PyCFunction) _wrap_wxQueryLayoutInfoEvent_SetRequestedLength, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxQueryLayoutInfoEvent", (PyCFunction) _wrap_new_wxQueryLayoutInfoEvent, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_SetSashBorder", (PyCFunction) _wrap_wxSashWindow_SetSashBorder, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_SetSashVisible", (PyCFunction) _wrap_wxSashWindow_SetSashVisible, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_SetMinimumSizeY", (PyCFunction) _wrap_wxSashWindow_SetMinimumSizeY, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_SetMinimumSizeX", (PyCFunction) _wrap_wxSashWindow_SetMinimumSizeX, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_SetMaximumSizeY", (PyCFunction) _wrap_wxSashWindow_SetMaximumSizeY, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_SetMaximumSizeX", (PyCFunction) _wrap_wxSashWindow_SetMaximumSizeX, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_SetExtraBorderSize", (PyCFunction) _wrap_wxSashWindow_SetExtraBorderSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_SetDefaultBorderSize", (PyCFunction) _wrap_wxSashWindow_SetDefaultBorderSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_HasBorder", (PyCFunction) _wrap_wxSashWindow_HasBorder, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_GetMinimumSizeY", (PyCFunction) _wrap_wxSashWindow_GetMinimumSizeY, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_GetMinimumSizeX", (PyCFunction) _wrap_wxSashWindow_GetMinimumSizeX, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_GetMaximumSizeY", (PyCFunction) _wrap_wxSashWindow_GetMaximumSizeY, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_GetMaximumSizeX", (PyCFunction) _wrap_wxSashWindow_GetMaximumSizeX, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_GetExtraBorderSize", (PyCFunction) _wrap_wxSashWindow_GetExtraBorderSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_GetEdgeMargin", (PyCFunction) _wrap_wxSashWindow_GetEdgeMargin, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_GetDefaultBorderSize", (PyCFunction) _wrap_wxSashWindow_GetDefaultBorderSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_GetSashVisible", (PyCFunction) _wrap_wxSashWindow_GetSashVisible, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashWindow_Create", (PyCFunction) _wrap_wxSashWindow_Create, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPreSashWindow", (PyCFunction) _wrap_new_wxPreSashWindow, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxSashWindow", (PyCFunction) _wrap_new_wxSashWindow, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashEvent_GetDragStatus", (PyCFunction) _wrap_wxSashEvent_GetDragStatus, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashEvent_SetDragStatus", (PyCFunction) _wrap_wxSashEvent_SetDragStatus, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashEvent_GetDragRect", (PyCFunction) _wrap_wxSashEvent_GetDragRect, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashEvent_SetDragRect", (PyCFunction) _wrap_wxSashEvent_SetDragRect, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashEvent_GetEdge", (PyCFunction) _wrap_wxSashEvent_GetEdge, METH_VARARGS | METH_KEYWORDS },
	 { "wxSashEvent_SetEdge", (PyCFunction) _wrap_wxSashEvent_SetEdge, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxSashEvent", (PyCFunction) _wrap_new_wxSashEvent, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_wxEvent","_wxCalculateLayoutEvent",SwigwxCalculateLayoutEventTowxEvent},
    { "_wxEvent","_wxQueryLayoutInfoEvent",SwigwxQueryLayoutInfoEventTowxEvent},
    { "_wxEvent","_wxSashEvent",SwigwxSashEventTowxEvent},
    { "_signed_long","_long",0},
    { "_wxPrintQuality","_wxCoord",0},
    { "_wxPrintQuality","_int",0},
    { "_wxPrintQuality","_signed_int",0},
    { "_wxPrintQuality","_unsigned_int",0},
    { "_wxPrintQuality","_wxWindowID",0},
    { "_wxPrintQuality","_uint",0},
    { "_wxPrintQuality","_EBool",0},
    { "_wxPrintQuality","_size_t",0},
    { "_wxPrintQuality","_time_t",0},
    { "_wxPyPopupTransientWindow","_wxTipWindow",SwigwxTipWindowTowxPyPopupTransientWindow},
    { "_byte","_unsigned_char",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_wxSashWindow","_wxSashLayoutWindow",SwigwxSashLayoutWindowTowxSashWindow},
    { "_size_t","_wxCoord",0},
    { "_size_t","_wxPrintQuality",0},
    { "_size_t","_time_t",0},
    { "_size_t","_unsigned_int",0},
    { "_size_t","_int",0},
    { "_size_t","_wxWindowID",0},
    { "_size_t","_uint",0},
    { "_wxPopupWindow","_wxTipWindow",SwigwxTipWindowTowxPopupWindow},
    { "_wxPopupWindow","_wxPyPopupTransientWindow",SwigwxPyPopupTransientWindowTowxPopupWindow},
    { "_wxPanel","_wxPyHtmlListBox",SwigwxPyHtmlListBoxTowxPanel},
    { "_wxPanel","_wxPyVListBox",SwigwxPyVListBoxTowxPanel},
    { "_wxPanel","_wxPyVScrolledWindow",SwigwxPyVScrolledWindowTowxPanel},
    { "_uint","_wxCoord",0},
    { "_uint","_wxPrintQuality",0},
    { "_uint","_time_t",0},
    { "_uint","_size_t",0},
    { "_uint","_unsigned_int",0},
    { "_uint","_int",0},
    { "_uint","_wxWindowID",0},
    { "_wxChar","_char",0},
    { "_wxCommandEvent","_wxSashEvent",SwigwxSashEventTowxCommandEvent},
    { "_char","_wxChar",0},
    { "_struct_wxNativeFontInfo","_wxNativeFontInfo",0},
    { "_EBool","_wxCoord",0},
    { "_EBool","_wxPrintQuality",0},
    { "_EBool","_signed_int",0},
    { "_EBool","_int",0},
    { "_EBool","_wxWindowID",0},
    { "_unsigned_long","_long",0},
    { "_wxNativeFontInfo","_struct_wxNativeFontInfo",0},
    { "_signed_int","_wxCoord",0},
    { "_signed_int","_wxPrintQuality",0},
    { "_signed_int","_EBool",0},
    { "_signed_int","_wxWindowID",0},
    { "_signed_int","_int",0},
    { "_WXTYPE","_short",0},
    { "_WXTYPE","_signed_short",0},
    { "_WXTYPE","_unsigned_short",0},
    { "_unsigned_short","_WXTYPE",0},
    { "_unsigned_short","_short",0},
    { "_wxObject","_wxPyHtmlListBox",SwigwxPyHtmlListBoxTowxObject},
    { "_wxObject","_wxPyVListBox",SwigwxPyVListBoxTowxObject},
    { "_wxObject","_wxPyVScrolledWindow",SwigwxPyVScrolledWindowTowxObject},
    { "_wxObject","_wxTipWindow",SwigwxTipWindowTowxObject},
    { "_wxObject","_wxPyPopupTransientWindow",SwigwxPyPopupTransientWindowTowxObject},
    { "_wxObject","_wxPopupWindow",SwigwxPopupWindowTowxObject},
    { "_wxObject","_wxLayoutAlgorithm",SwigwxLayoutAlgorithmTowxObject},
    { "_wxObject","_wxSashLayoutWindow",SwigwxSashLayoutWindowTowxObject},
    { "_wxObject","_wxCalculateLayoutEvent",SwigwxCalculateLayoutEventTowxObject},
    { "_wxObject","_wxQueryLayoutInfoEvent",SwigwxQueryLayoutInfoEventTowxObject},
    { "_wxObject","_wxSashWindow",SwigwxSashWindowTowxObject},
    { "_wxObject","_wxSashEvent",SwigwxSashEventTowxObject},
    { "_wxPyVScrolledWindow","_wxPyHtmlListBox",SwigwxPyHtmlListBoxTowxPyVScrolledWindow},
    { "_wxPyVScrolledWindow","_wxPyVListBox",SwigwxPyVListBoxTowxPyVScrolledWindow},
    { "_signed_short","_WXTYPE",0},
    { "_signed_short","_short",0},
    { "_unsigned_char","_byte",0},
    { "_unsigned_int","_wxCoord",0},
    { "_unsigned_int","_wxPrintQuality",0},
    { "_unsigned_int","_time_t",0},
    { "_unsigned_int","_size_t",0},
    { "_unsigned_int","_uint",0},
    { "_unsigned_int","_wxWindowID",0},
    { "_unsigned_int","_int",0},
    { "_short","_WXTYPE",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_wxWindowID","_wxCoord",0},
    { "_wxWindowID","_wxPrintQuality",0},
    { "_wxWindowID","_time_t",0},
    { "_wxWindowID","_size_t",0},
    { "_wxWindowID","_EBool",0},
    { "_wxWindowID","_uint",0},
    { "_wxWindowID","_int",0},
    { "_wxWindowID","_signed_int",0},
    { "_wxWindowID","_unsigned_int",0},
    { "_int","_wxCoord",0},
    { "_int","_wxPrintQuality",0},
    { "_int","_time_t",0},
    { "_int","_size_t",0},
    { "_int","_EBool",0},
    { "_int","_uint",0},
    { "_int","_wxWindowID",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_time_t","_wxCoord",0},
    { "_time_t","_wxPrintQuality",0},
    { "_time_t","_unsigned_int",0},
    { "_time_t","_int",0},
    { "_time_t","_wxWindowID",0},
    { "_time_t","_uint",0},
    { "_time_t","_size_t",0},
    { "_wxCoord","_int",0},
    { "_wxCoord","_signed_int",0},
    { "_wxCoord","_unsigned_int",0},
    { "_wxCoord","_wxWindowID",0},
    { "_wxCoord","_uint",0},
    { "_wxCoord","_EBool",0},
    { "_wxCoord","_size_t",0},
    { "_wxCoord","_time_t",0},
    { "_wxCoord","_wxPrintQuality",0},
    { "_wxEvtHandler","_wxPyHtmlListBox",SwigwxPyHtmlListBoxTowxEvtHandler},
    { "_wxEvtHandler","_wxPyVListBox",SwigwxPyVListBoxTowxEvtHandler},
    { "_wxEvtHandler","_wxPyVScrolledWindow",SwigwxPyVScrolledWindowTowxEvtHandler},
    { "_wxEvtHandler","_wxTipWindow",SwigwxTipWindowTowxEvtHandler},
    { "_wxEvtHandler","_wxPyPopupTransientWindow",SwigwxPyPopupTransientWindowTowxEvtHandler},
    { "_wxEvtHandler","_wxPopupWindow",SwigwxPopupWindowTowxEvtHandler},
    { "_wxEvtHandler","_wxSashLayoutWindow",SwigwxSashLayoutWindowTowxEvtHandler},
    { "_wxEvtHandler","_wxSashWindow",SwigwxSashWindowTowxEvtHandler},
    { "_wxWindow","_wxPyHtmlListBox",SwigwxPyHtmlListBoxTowxWindow},
    { "_wxWindow","_wxPyVListBox",SwigwxPyVListBoxTowxWindow},
    { "_wxWindow","_wxPyVScrolledWindow",SwigwxPyVScrolledWindowTowxWindow},
    { "_wxWindow","_wxTipWindow",SwigwxTipWindowTowxWindow},
    { "_wxWindow","_wxPyPopupTransientWindow",SwigwxPyPopupTransientWindowTowxWindow},
    { "_wxWindow","_wxPopupWindow",SwigwxPopupWindowTowxWindow},
    { "_wxWindow","_wxSashLayoutWindow",SwigwxSashLayoutWindowTowxWindow},
    { "_wxWindow","_wxSashWindow",SwigwxSashWindowTowxWindow},
    { "_wxPyVListBox","_wxPyHtmlListBox",SwigwxPyHtmlListBoxTowxPyVListBox},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) initwindows3c() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("windows3c", windows3cMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"wxSASH_TOP", PyInt_FromLong((long) wxSASH_TOP));
	 PyDict_SetItemString(d,"wxSASH_RIGHT", PyInt_FromLong((long) wxSASH_RIGHT));
	 PyDict_SetItemString(d,"wxSASH_BOTTOM", PyInt_FromLong((long) wxSASH_BOTTOM));
	 PyDict_SetItemString(d,"wxSASH_LEFT", PyInt_FromLong((long) wxSASH_LEFT));
	 PyDict_SetItemString(d,"wxSASH_NONE", PyInt_FromLong((long) wxSASH_NONE));
	 PyDict_SetItemString(d,"wxEVT_SASH_DRAGGED", PyInt_FromLong((long) wxEVT_SASH_DRAGGED));
	 PyDict_SetItemString(d,"wxSW_3D", PyInt_FromLong((long) wxSW_3D));
	 PyDict_SetItemString(d,"wxSW_3DSASH", PyInt_FromLong((long) wxSW_3DSASH));
	 PyDict_SetItemString(d,"wxSW_3DBORDER", PyInt_FromLong((long) wxSW_3DBORDER));
	 PyDict_SetItemString(d,"wxSW_BORDER", PyInt_FromLong((long) wxSW_BORDER));
	 PyDict_SetItemString(d,"wxSASH_STATUS_OK", PyInt_FromLong((long) wxSASH_STATUS_OK));
	 PyDict_SetItemString(d,"wxSASH_STATUS_OUT_OF_RANGE", PyInt_FromLong((long) wxSASH_STATUS_OUT_OF_RANGE));
	 PyDict_SetItemString(d,"wxLAYOUT_HORIZONTAL", PyInt_FromLong((long) wxLAYOUT_HORIZONTAL));
	 PyDict_SetItemString(d,"wxLAYOUT_VERTICAL", PyInt_FromLong((long) wxLAYOUT_VERTICAL));
	 PyDict_SetItemString(d,"wxLAYOUT_NONE", PyInt_FromLong((long) wxLAYOUT_NONE));
	 PyDict_SetItemString(d,"wxLAYOUT_TOP", PyInt_FromLong((long) wxLAYOUT_TOP));
	 PyDict_SetItemString(d,"wxLAYOUT_LEFT", PyInt_FromLong((long) wxLAYOUT_LEFT));
	 PyDict_SetItemString(d,"wxLAYOUT_RIGHT", PyInt_FromLong((long) wxLAYOUT_RIGHT));
	 PyDict_SetItemString(d,"wxLAYOUT_BOTTOM", PyInt_FromLong((long) wxLAYOUT_BOTTOM));
	 PyDict_SetItemString(d,"wxEVT_QUERY_LAYOUT_INFO", PyInt_FromLong((long) wxEVT_QUERY_LAYOUT_INFO));
	 PyDict_SetItemString(d,"wxEVT_CALCULATE_LAYOUT", PyInt_FromLong((long) wxEVT_CALCULATE_LAYOUT));

    // Map renamed classes back to their common name for OOR
    wxPyPtrTypeMap_Add("wxHtmlListBox", "wxPyHtmlListBox");
    wxPyPtrTypeMap_Add("wxVListBox", "wxPyVListBox");
    wxPyPtrTypeMap_Add("wxVScrolledWindow", "wxPyVScrolledWindow");
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
