/*
 * FILE : src/gtk/misc.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export
#	else
#	    define SWIGEXPORT(a) a
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    initmiscc

#define SWIG_name    "miscc"

#include "helpers.h"
#include <wx/resource.h>
#include <wx/tooltip.h>
#include <wx/busyinfo.h>


static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {
        target = o;
    } else if (target == Py_None) {
        Py_DECREF(Py_None);
        target = o;
    } else {
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);
        PyTuple_SetItem(o3, 0, o);

        o2 = target;
        target = PySequence_Concat(o2, o3);
        Py_DECREF(o2);
        Py_DECREF(o3);
    }
    return target;
}

    // Put some wx default wxChar* values into wxStrings.
    static const wxString wxPyEmptyString(wxT(""));

    PyObject* wxIntersectRect(wxRect* r1, wxRect* r2) {
        wxRegion  reg1(*r1);
        wxRegion  reg2(*r2);
        wxRect    dest(0,0,0,0);
        PyObject* obj;

        reg1.Intersect(reg2);
        dest = reg1.GetBox();

        if (dest != wxRect(0,0,0,0)) {
            wxPyBeginBlockThreads();
            wxRect* newRect = new wxRect(dest);
            obj = wxPyConstructObject((void*)newRect, "wxRect");
            PyObject* one = PyInt_FromLong(1);
            PyObject_SetAttrString(obj, "thisown", one);
            Py_DECREF(one);
            wxPyEndBlockThreads();
            return obj;
        }
        Py_INCREF(Py_None);
        return Py_None;
    }

    wxString wxGetResource(const wxString& section, const wxString& entry,
                           const wxString& file = wxPyEmptyString) {
        wxChar * retval;
        wxGetResource(section, entry, &retval, file);
        return retval;
    }

#if 0  // we want to use the definition from the header, not the
       // one SWIG will generate.
extern wxAcceleratorTable  wxNullAcceleratorTable; 

#endif
#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_wxIntersectRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    wxRect * _arg0;
    wxRect * _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    wxRect  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "r1","r2", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxIntersectRect",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxRect_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (PyObject *)wxIntersectRect(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
  _resultobj = _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxNewId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxNewId",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxNewId();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static PyObject *_wrap_wxRegisterId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _arg0;
    char *_kwnames[] = { "id", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"l:wxRegisterId",_kwnames,&_arg0)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRegisterId(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_NewId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":NewId",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxNewId();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static PyObject *_wrap_RegisterId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _arg0;
    char *_kwnames[] = { "id", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"l:RegisterId",_kwnames,&_arg0)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRegisterId(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_wxGetCurrentId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetCurrentId",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxGetCurrentId();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static PyObject *_wrap_wxBell(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxBell",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxBell();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_wxEndBusyCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxEndBusyCursor",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxEndBusyCursor();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_wxGetElapsedTime(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    bool  _arg0 = (bool ) TRUE;
    int tempbool0 = (int) TRUE;
    char *_kwnames[] = { "resetTimer", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|i:wxGetElapsedTime",_kwnames,&tempbool0)) 
        return NULL;
    _arg0 = (bool ) tempbool0;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxGetElapsedTime(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static PyObject *_wrap_wxGetMousePosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int * _arg0;
    int  temp;
    int * _arg1;
    int  temp0;
    char *_kwnames[] = {  NULL };

    self = self;
{
  _arg0 = &temp;
}
{
  _arg1 = &temp0;
}
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetMousePosition",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxGetMousePosition(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    PyObject *o;
    o = PyInt_FromLong((long) (*_arg0));
    _resultobj = t_output_helper(_resultobj, o);
}
{
    PyObject *o;
    o = PyInt_FromLong((long) (*_arg1));
    _resultobj = t_output_helper(_resultobj, o);
}
    return _resultobj;
}

static PyObject *_wrap_wxIsBusy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxIsBusy",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxIsBusy();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_wxNow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxNow",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxNow());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxShell(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxString * _arg0 = (wxString *) &wxPyEmptyString;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "command", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:wxShell",_kwnames,&_obj0)) 
        return NULL;
    if (_obj0)
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxShell(*_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    if (_obj0)
        delete _arg0;
}
    return _resultobj;
}

static PyObject *_wrap_wxStartTimer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxStartTimer",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxStartTimer();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_wxGetOsVersion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    int * _arg0;
    int  temp;
    int * _arg1;
    int  temp0;
    char *_kwnames[] = {  NULL };

    self = self;
{
  _arg0 = &temp;
}
{
  _arg1 = &temp0;
}
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetOsVersion",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxGetOsVersion(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
{
    PyObject *o;
    o = PyInt_FromLong((long) (*_arg0));
    _resultobj = t_output_helper(_resultobj, o);
}
{
    PyObject *o;
    o = PyInt_FromLong((long) (*_arg1));
    _resultobj = t_output_helper(_resultobj, o);
}
    return _resultobj;
}

static PyObject *_wrap_wxGetOsDescription(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetOsDescription",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxGetOsDescription());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxShutdown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxShutdownFlags  _arg0;
    char *_kwnames[] = { "wFlags", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"i:wxShutdown",_kwnames,&_arg0)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxShutdown(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_wxSleep(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _arg0;
    char *_kwnames[] = { "secs", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"i:wxSleep",_kwnames,&_arg0)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSleep(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_wxUsleep(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    unsigned long  _arg0;
    char *_kwnames[] = { "milliseconds", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"l:wxUsleep",_kwnames,&_arg0)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxUsleep(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_wxYield(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxYield",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxYield();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_wxYieldIfNeeded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxYieldIfNeeded",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxYieldIfNeeded();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_wxEnableTopLevelWindows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _arg0;
    int tempbool0;
    char *_kwnames[] = { "enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"i:wxEnableTopLevelWindows",_kwnames,&tempbool0)) 
        return NULL;
    _arg0 = (bool ) tempbool0;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxEnableTopLevelWindows(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_wxGetResource(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxString * _arg0;
    wxString * _arg1;
    wxString * _arg2 = (wxString *) &wxPyEmptyString;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "section","entry","file", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|O:wxGetResource",_kwnames,&_obj0,&_obj1,&_obj2)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    _arg1 = wxString_in_helper(_obj1);
    if (_arg1 == NULL)
        return NULL;
}
    if (_obj2)
{
    _arg2 = wxString_in_helper(_obj2);
    if (_arg2 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxGetResource(*_arg0,*_arg1,*_arg2));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    if (_obj0)
        delete _arg0;
}
{
    if (_obj1)
        delete _arg1;
}
{
    if (_obj2)
        delete _arg2;
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxStripMenuCodes(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxString * _arg0;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "in", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxStripMenuCodes",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxStripMenuCodes(*_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    if (_obj0)
        delete _arg0;
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxGetEmailAddress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetEmailAddress",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxGetEmailAddress());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxGetHostName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetHostName",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxGetHostName());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxGetFullHostName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetFullHostName",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxGetFullHostName());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxGetUserId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetUserId",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxGetUserId());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxGetUserName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetUserName",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxGetUserName());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxGetHomeDir(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetHomeDir",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxGetHomeDir());

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxGetUserHome(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxString * _arg0 = (wxString *) &wxPyEmptyString;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "user", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|O:wxGetUserHome",_kwnames,&_obj0)) 
        return NULL;
    if (_obj0)
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxGetUserHome(*_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    if (_obj0)
        delete _arg0;
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_wxGetProcessId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    unsigned long  _result;
    char *_kwnames[] = {  NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":wxGetProcessId",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (unsigned long )wxGetProcessId();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static PyObject *_wrap_wxGetAccelFromString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxAcceleratorEntry * _result;
    wxString * _arg0;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "label", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxGetAccelFromString",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxAcceleratorEntry *)wxGetAccelFromString(*_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxAcceleratorEntry_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    if (_obj0)
        delete _arg0;
}
    return _resultobj;
}

static int _wrap_wxNullAcceleratorTable_set(PyObject *val) {

    PyErr_SetString(PyExc_TypeError,"Variable wxNullAcceleratorTable is read-only.");
    return 1;
}

static PyObject *_wrap_wxNullAcceleratorTable_get() {
    PyObject * pyobj;
    char ptemp[128];

    SWIG_MakePtr(ptemp,(char *) &wxNullAcceleratorTable,"_wxAcceleratorTable_p");
    pyobj = PyString_FromString(ptemp);
    return pyobj;
}

static wxString  wxObject_GetClassName(wxObject *self) {
            return self->GetClassInfo()->GetClassName();
        }
static PyObject *_wrap_wxObject_GetClassName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxString * _result;
    wxObject * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxObject_GetClassName",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxObject_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxObject_GetClassName. Expected _wxObject_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxString (wxObject_GetClassName(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
#if wxUSE_UNICODE
    _resultobj = PyUnicode_FromUnicode(_result->c_str(), _result->Len());
#else
    _resultobj = PyString_FromStringAndSize(_result->c_str(), _result->Len());
#endif
}
{
    delete _result;
}
    return _resultobj;
}

static void  wxObject_Destroy(wxObject *self) {
            delete self;
        }
static PyObject *_wrap_wxObject_Destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxObject * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxObject_Destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxObject_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxObject_Destroy. Expected _wxObject_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxObject_Destroy(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSize_x_set(_swigobj,_swigval) (_swigobj->x = _swigval,_swigval)
static PyObject *_wrap_wxSize_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxSize * _arg0;
    long  _arg1;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","x", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ol:wxSize_x_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxSize_x_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxSize_x_get(_swigobj) ((long ) _swigobj->x)
static PyObject *_wrap_wxSize_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxSize * _arg0;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSize_x_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxSize_x_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxSize_y_set(_swigobj,_swigval) (_swigobj->y = _swigval,_swigval)
static PyObject *_wrap_wxSize_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxSize * _arg0;
    long  _arg1;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ol:wxSize_y_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxSize_y_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxSize_y_get(_swigobj) ((long ) _swigobj->y)
static PyObject *_wrap_wxSize_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxSize * _arg0;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSize_y_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxSize_y_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_wxSize(_swigarg0,_swigarg1) (new wxSize(_swigarg0,_swigarg1))
static PyObject *_wrap_new_wxSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _result;
    long  _arg0 = (long ) 0;
    long  _arg1 = (long ) 0;
    char *_kwnames[] = { "w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|ll:new_wxSize",_kwnames,&_arg0,&_arg1)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxSize *)new_wxSize(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxSize_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define delete_wxSize(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_wxSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _arg0;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_wxSize",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete_wxSize(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSize_Set(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Set(_swigarg0,_swigarg1))
static PyObject *_wrap_wxSize_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _arg0;
    long  _arg1;
    long  _arg2;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oll:wxSize_Set",_kwnames,&_obj0,&_arg1,&_arg2)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSize_Set(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSize_GetX(_swigobj)  (_swigobj->GetX())
static PyObject *_wrap_wxSize_GetX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxSize * _arg0;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSize_GetX",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxSize_GetX(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxSize_GetY(_swigobj)  (_swigobj->GetY())
static PyObject *_wrap_wxSize_GetY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxSize * _arg0;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSize_GetY",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxSize_GetY(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxSize_GetWidth(_swigobj)  (_swigobj->GetWidth())
static PyObject *_wrap_wxSize_GetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxSize * _arg0;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSize_GetWidth",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxSize_GetWidth(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxSize_GetHeight(_swigobj)  (_swigobj->GetHeight())
static PyObject *_wrap_wxSize_GetHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxSize * _arg0;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSize_GetHeight",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxSize_GetHeight(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxSize_SetWidth(_swigobj,_swigarg0)  (_swigobj->SetWidth(_swigarg0))
static PyObject *_wrap_wxSize_SetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _arg0;
    long  _arg1;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ol:wxSize_SetWidth",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSize_SetWidth(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxSize_SetHeight(_swigobj,_swigarg0)  (_swigobj->SetHeight(_swigarg0))
static PyObject *_wrap_wxSize_SetHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _arg0;
    long  _arg1;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ol:wxSize_SetHeight",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxSize_SetHeight(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * wxSize_asTuple(wxSize *self) {
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, PyInt_FromLong(self->x));
            PyTuple_SET_ITEM(tup, 1, PyInt_FromLong(self->y));
            wxPyEndBlockThreads();
            return tup;
        }
static PyObject *_wrap_wxSize_asTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    wxSize * _arg0;
    wxSize  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxSize_asTuple",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (PyObject *)wxSize_asTuple(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
  _resultobj = _result;
}
    return _resultobj;
}

static int  wxSize___cmp__(wxSize *self,const wxSize * sz) {
            if (! sz) return 1;
            if (*self == *sz) return 0;
            return -1;
        }
static PyObject *_wrap_wxSize___cmp__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxSize * _arg0;
    wxSize * _arg1;
    wxSize  temp;
    PyObject * _obj0 = 0;
    wxSize  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","sz", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxSize___cmp__",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxSize_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxSize_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxSize___cmp__(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRealPoint_x_set(_swigobj,_swigval) (_swigobj->x = _swigval,_swigval)
static PyObject *_wrap_wxRealPoint_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    double  _result;
    wxRealPoint * _arg0;
    double  _arg1;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","x", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Od:wxRealPoint_x_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (double )wxRealPoint_x_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("d",_result);
    return _resultobj;
}

#define wxRealPoint_x_get(_swigobj) ((double ) _swigobj->x)
static PyObject *_wrap_wxRealPoint_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    double  _result;
    wxRealPoint * _arg0;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRealPoint_x_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (double )wxRealPoint_x_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("d",_result);
    return _resultobj;
}

#define wxRealPoint_y_set(_swigobj,_swigval) (_swigobj->y = _swigval,_swigval)
static PyObject *_wrap_wxRealPoint_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    double  _result;
    wxRealPoint * _arg0;
    double  _arg1;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Od:wxRealPoint_y_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (double )wxRealPoint_y_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("d",_result);
    return _resultobj;
}

#define wxRealPoint_y_get(_swigobj) ((double ) _swigobj->y)
static PyObject *_wrap_wxRealPoint_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    double  _result;
    wxRealPoint * _arg0;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRealPoint_y_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (double )wxRealPoint_y_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("d",_result);
    return _resultobj;
}

#define new_wxRealPoint(_swigarg0,_swigarg1) (new wxRealPoint(_swigarg0,_swigarg1))
static PyObject *_wrap_new_wxRealPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRealPoint * _result;
    double  _arg0 = (double ) 0.0;
    double  _arg1 = (double ) 0.0;
    char *_kwnames[] = { "x","y", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|dd:new_wxRealPoint",_kwnames,&_arg0,&_arg1)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxRealPoint *)new_wxRealPoint(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxRealPoint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define delete_wxRealPoint(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_wxRealPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRealPoint * _arg0;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_wxRealPoint",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete_wxRealPoint(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  wxRealPoint_Set(wxRealPoint *self,double  x,double  y) {
            self->x = x;
            self->y = y;
        }
static PyObject *_wrap_wxRealPoint_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRealPoint * _arg0;
    double  _arg1;
    double  _arg2;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Odd:wxRealPoint_Set",_kwnames,&_obj0,&_arg1,&_arg2)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRealPoint_Set(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * wxRealPoint_asTuple(wxRealPoint *self) {
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, PyFloat_FromDouble(self->x));
            PyTuple_SET_ITEM(tup, 1, PyFloat_FromDouble(self->y));
            wxPyEndBlockThreads();
            return tup;
        }
static PyObject *_wrap_wxRealPoint_asTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    wxRealPoint * _arg0;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRealPoint_asTuple",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (PyObject *)wxRealPoint_asTuple(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
  _resultobj = _result;
}
    return _resultobj;
}

static wxRealPoint  wxRealPoint___add__(wxRealPoint *self,const wxRealPoint * p) {
            if (! p) return *self;
            return *self + *p;
        }
static PyObject *_wrap_wxRealPoint___add__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRealPoint * _result;
    wxRealPoint * _arg0;
    wxRealPoint * _arg1;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    wxRealPoint  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","p", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxRealPoint___add__",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxRealPoint_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxRealPoint (wxRealPoint___add__(_arg0,_arg1));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxRealPoint_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static wxRealPoint  wxRealPoint___sub__(wxRealPoint *self,const wxRealPoint * p) {
            if (! p) return *self;
            return *self - *p;
        }
static PyObject *_wrap_wxRealPoint___sub__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRealPoint * _result;
    wxRealPoint * _arg0;
    wxRealPoint * _arg1;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    wxRealPoint  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","p", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxRealPoint___sub__",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxRealPoint_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxRealPoint (wxRealPoint___sub__(_arg0,_arg1));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxRealPoint_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static int  wxRealPoint___cmp__(wxRealPoint *self,const wxRealPoint * p) {
            if (! p) return 1;
            if (*self == *p) return 0;
            return -1;
        }
static PyObject *_wrap_wxRealPoint___cmp__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRealPoint * _arg0;
    wxRealPoint * _arg1;
    wxRealPoint  temp;
    PyObject * _obj0 = 0;
    wxRealPoint  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","p", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxRealPoint___cmp__",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRealPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxRealPoint_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRealPoint___cmp__(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxPoint_x_set(_swigobj,_swigval) (_swigobj->x = _swigval,_swigval)
static PyObject *_wrap_wxPoint_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxPoint * _arg0;
    long  _arg1;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","x", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ol:wxPoint_x_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxPoint_x_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxPoint_x_get(_swigobj) ((long ) _swigobj->x)
static PyObject *_wrap_wxPoint_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxPoint * _arg0;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxPoint_x_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxPoint_x_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxPoint_y_set(_swigobj,_swigval) (_swigobj->y = _swigval,_swigval)
static PyObject *_wrap_wxPoint_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxPoint * _arg0;
    long  _arg1;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ol:wxPoint_y_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxPoint_y_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define wxPoint_y_get(_swigobj) ((long ) _swigobj->y)
static PyObject *_wrap_wxPoint_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    wxPoint * _arg0;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxPoint_y_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (long )wxPoint_y_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_wxPoint(_swigarg0,_swigarg1) (new wxPoint(_swigarg0,_swigarg1))
static PyObject *_wrap_new_wxPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPoint * _result;
    long  _arg0 = (long ) 0;
    long  _arg1 = (long ) 0;
    char *_kwnames[] = { "x","y", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|ll:new_wxPoint",_kwnames,&_arg0,&_arg1)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxPoint *)new_wxPoint(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxPoint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define delete_wxPoint(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_wxPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPoint * _arg0;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_wxPoint",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete_wxPoint(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  wxPoint_Set(wxPoint *self,long  x,long  y) {
            self->x = x;
            self->y = y;
        }
static PyObject *_wrap_wxPoint_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPoint * _arg0;
    long  _arg1;
    long  _arg2;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oll:wxPoint_Set",_kwnames,&_obj0,&_arg1,&_arg2)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPoint_Set(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * wxPoint_asTuple(wxPoint *self) {
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, PyInt_FromLong(self->x));
            PyTuple_SET_ITEM(tup, 1, PyInt_FromLong(self->y));
            wxPyEndBlockThreads();
            return tup;
        }
static PyObject *_wrap_wxPoint_asTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    wxPoint * _arg0;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxPoint_asTuple",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (PyObject *)wxPoint_asTuple(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
  _resultobj = _result;
}
    return _resultobj;
}

static wxPoint  wxPoint___add__(wxPoint *self,const wxPoint * p) {
            if (! p) return *self;
            return *self + *p;
        }
static PyObject *_wrap_wxPoint___add__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPoint * _result;
    wxPoint * _arg0;
    wxPoint * _arg1;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    wxPoint  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","p", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxPoint___add__",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxPoint_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxPoint (wxPoint___add__(_arg0,_arg1));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxPoint_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static wxPoint  wxPoint___sub__(wxPoint *self,const wxPoint * p) {
            if (! p) return *self;
            return *self - *p;
        }
static PyObject *_wrap_wxPoint___sub__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPoint * _result;
    wxPoint * _arg0;
    wxPoint * _arg1;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    wxPoint  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","p", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxPoint___sub__",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxPoint_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxPoint (wxPoint___sub__(_arg0,_arg1));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxPoint_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static int  wxPoint___cmp__(wxPoint *self,const wxPoint * p) {
            if (! p) return 1;
            if (*self == *p) return 0;
            return -1;
        }
static PyObject *_wrap_wxPoint___cmp__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxPoint * _arg0;
    wxPoint * _arg1;
    wxPoint  temp;
    PyObject * _obj0 = 0;
    wxPoint  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","p", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxPoint___cmp__",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxPoint_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxPoint_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxPoint___cmp__(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define new_wxRect(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new wxRect(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_wxRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _result;
    int  _arg0 = (int ) 0;
    int  _arg1 = (int ) 0;
    int  _arg2 = (int ) 0;
    int  _arg3 = (int ) 0;
    char *_kwnames[] = { "x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|iiii:new_wxRect",_kwnames,&_arg0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxRect *)new_wxRect(_arg0,_arg1,_arg2,_arg3);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxRect_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define delete_wxRect(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_wxRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_wxRect",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete_wxRect(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_GetX(_swigobj)  (_swigobj->GetX())
static PyObject *_wrap_wxRect_GetX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetX",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_GetX(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_SetX(_swigobj,_swigarg0)  (_swigobj->SetX(_swigarg0))
static PyObject *_wrap_wxRect_SetX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","X", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_SetX",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRect_SetX(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_GetY(_swigobj)  (_swigobj->GetY())
static PyObject *_wrap_wxRect_GetY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetY",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_GetY(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_SetY(_swigobj,_swigarg0)  (_swigobj->SetY(_swigarg0))
static PyObject *_wrap_wxRect_SetY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","Y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_SetY",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRect_SetY(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_GetWidth(_swigobj)  (_swigobj->GetWidth())
static PyObject *_wrap_wxRect_GetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetWidth",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_GetWidth(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_SetWidth(_swigobj,_swigarg0)  (_swigobj->SetWidth(_swigarg0))
static PyObject *_wrap_wxRect_SetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_SetWidth",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRect_SetWidth(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_GetHeight(_swigobj)  (_swigobj->GetHeight())
static PyObject *_wrap_wxRect_GetHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetHeight",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_GetHeight(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_SetHeight(_swigobj,_swigarg0)  (_swigobj->SetHeight(_swigarg0))
static PyObject *_wrap_wxRect_SetHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_SetHeight",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRect_SetHeight(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_GetPosition(_swigobj)  (_swigobj->GetPosition())
static PyObject *_wrap_wxRect_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxPoint * _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetPosition",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxPoint (wxRect_GetPosition(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxPoint_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define wxRect_GetSize(_swigobj)  (_swigobj->GetSize())
static PyObject *_wrap_wxRect_GetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxSize * _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetSize",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxSize (wxRect_GetSize(_arg0));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxSize_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define wxRect_GetLeft(_swigobj)  (_swigobj->GetLeft())
static PyObject *_wrap_wxRect_GetLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetLeft",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_GetLeft(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_GetTop(_swigobj)  (_swigobj->GetTop())
static PyObject *_wrap_wxRect_GetTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetTop",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_GetTop(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_GetBottom(_swigobj)  (_swigobj->GetBottom())
static PyObject *_wrap_wxRect_GetBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetBottom",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_GetBottom(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_GetRight(_swigobj)  (_swigobj->GetRight())
static PyObject *_wrap_wxRect_GetRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_GetRight",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_GetRight(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_SetLeft(_swigobj,_swigarg0)  (_swigobj->SetLeft(_swigarg0))
static PyObject *_wrap_wxRect_SetLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","left", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_SetLeft",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRect_SetLeft(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_SetRight(_swigobj,_swigarg0)  (_swigobj->SetRight(_swigarg0))
static PyObject *_wrap_wxRect_SetRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","right", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_SetRight",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRect_SetRight(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_SetTop(_swigobj,_swigarg0)  (_swigobj->SetTop(_swigarg0))
static PyObject *_wrap_wxRect_SetTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","top", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_SetTop",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRect_SetTop(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_SetBottom(_swigobj,_swigarg0)  (_swigobj->SetBottom(_swigarg0))
static PyObject *_wrap_wxRect_SetBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","bottom", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_SetBottom",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRect_SetBottom(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_Inflate(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Inflate(_swigarg0,_swigarg1))
static PyObject *_wrap_wxRect_Inflate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _arg0;
    int  _arg1;
    int  _arg2;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxRect_Inflate",_kwnames,&_obj0,&_arg1,&_arg2)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxRect_Inflate(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxRect_Inside(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Inside(_swigarg0,_swigarg1))
static PyObject *_wrap_wxRect_Inside(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    bool  _result;
    wxRect * _arg0;
    int  _arg1;
    int  _arg2;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","cx","cy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:wxRect_Inside",_kwnames,&_obj0,&_arg1,&_arg2)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (bool )wxRect_Inside(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_x_set(_swigobj,_swigval) (_swigobj->x = _swigval,_swigval)
static PyObject *_wrap_wxRect_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","x", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_x_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_x_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_x_get(_swigobj) ((int ) _swigobj->x)
static PyObject *_wrap_wxRect_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_x_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_x_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_y_set(_swigobj,_swigval) (_swigobj->y = _swigval,_swigval)
static PyObject *_wrap_wxRect_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_y_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_y_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_y_get(_swigobj) ((int ) _swigobj->y)
static PyObject *_wrap_wxRect_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_y_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_y_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_width_set(_swigobj,_swigval) (_swigobj->width = _swigval,_swigval)
static PyObject *_wrap_wxRect_width_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","width", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_width_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_width_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_width_get(_swigobj) ((int ) _swigobj->width)
static PyObject *_wrap_wxRect_width_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_width_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_width_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_height_set(_swigobj,_swigval) (_swigobj->height = _swigval,_swigval)
static PyObject *_wrap_wxRect_height_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    int  _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self","height", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxRect_height_set",_kwnames,&_obj0,&_arg1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_height_set(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxRect_height_get(_swigobj) ((int ) _swigobj->height)
static PyObject *_wrap_wxRect_height_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_height_get",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect_height_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject * wxRect_asTuple(wxRect *self) {
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(4);
            PyTuple_SET_ITEM(tup, 0, PyInt_FromLong(self->x));
            PyTuple_SET_ITEM(tup, 1, PyInt_FromLong(self->y));
            PyTuple_SET_ITEM(tup, 2, PyInt_FromLong(self->width));
            PyTuple_SET_ITEM(tup, 3, PyInt_FromLong(self->height));
            wxPyEndBlockThreads();
            return tup;
        }
static PyObject *_wrap_wxRect_asTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    wxRect * _arg0;
    wxRect  temp;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxRect_asTuple",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (PyObject *)wxRect_asTuple(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}{
  _resultobj = _result;
}
    return _resultobj;
}

static wxRect  wxRect___add__(wxRect *self,const wxRect * rect) {
            if (! rect) return *self;
            return *self + *rect;
        }
static PyObject *_wrap_wxRect___add__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxRect * _result;
    wxRect * _arg0;
    wxRect * _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    wxRect  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","rect", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxRect___add__",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxRect_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = new wxRect (wxRect___add__(_arg0,_arg1));

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    SWIG_MakePtr(_ptemp, (void *) _result,"_wxRect_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static int  wxRect___cmp__(wxRect *self,const wxRect * rect) {
            if (! rect) return 1;
            if (*self == *rect) return 0;
            return -1;
        }
static PyObject *_wrap_wxRect___cmp__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxRect * _arg0;
    wxRect * _arg1;
    wxRect  temp;
    PyObject * _obj0 = 0;
    wxRect  temp0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","rect", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:wxRect___cmp__",_kwnames,&_obj0,&_obj1)) 
        return NULL;
{
    _arg0 = &temp;
    if (! wxRect_helper(_obj0, &_arg0))
        return NULL;
}
{
    _arg1 = &temp0;
    if (! wxRect_helper(_obj1, &_arg1))
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxRect___cmp__(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigwxIndividualLayoutConstraintTowxObject(void *ptr) {
    wxIndividualLayoutConstraint *src;
    wxObject *dest;
    src = (wxIndividualLayoutConstraint *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define wxIndividualLayoutConstraint_Above(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Above(_swigarg0,_swigarg1))
static PyObject *_wrap_wxIndividualLayoutConstraint_Above(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    wxWindow * _arg1;
    int  _arg2 = (int ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","otherWin","margin", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|i:wxIndividualLayoutConstraint_Above",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_Above. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxIndividualLayoutConstraint_Above. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_Above(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxIndividualLayoutConstraint_Absolute(_swigobj,_swigarg0)  (_swigobj->Absolute(_swigarg0))
static PyObject *_wrap_wxIndividualLayoutConstraint_Absolute(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    int  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","value", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:wxIndividualLayoutConstraint_Absolute",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_Absolute. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_Absolute(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxIndividualLayoutConstraint_AsIs(_swigobj)  (_swigobj->AsIs())
static PyObject *_wrap_wxIndividualLayoutConstraint_AsIs(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxIndividualLayoutConstraint_AsIs",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_AsIs. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_AsIs(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxIndividualLayoutConstraint_Below(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Below(_swigarg0,_swigarg1))
static PyObject *_wrap_wxIndividualLayoutConstraint_Below(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    wxWindow * _arg1;
    int  _arg2 = (int ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","otherWin","margin", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|i:wxIndividualLayoutConstraint_Below",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_Below. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxIndividualLayoutConstraint_Below. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_Below(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxIndividualLayoutConstraint_Unconstrained(_swigobj)  (_swigobj->Unconstrained())
static PyObject *_wrap_wxIndividualLayoutConstraint_Unconstrained(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxIndividualLayoutConstraint_Unconstrained",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_Unconstrained. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_Unconstrained(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxIndividualLayoutConstraint_LeftOf(_swigobj,_swigarg0,_swigarg1)  (_swigobj->LeftOf(_swigarg0,_swigarg1))
static PyObject *_wrap_wxIndividualLayoutConstraint_LeftOf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    wxWindow * _arg1;
    int  _arg2 = (int ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","otherWin","margin", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|i:wxIndividualLayoutConstraint_LeftOf",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_LeftOf. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxIndividualLayoutConstraint_LeftOf. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_LeftOf(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxIndividualLayoutConstraint_PercentOf(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->PercentOf(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_wxIndividualLayoutConstraint_PercentOf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    wxWindow * _arg1;
    wxEdge  _arg2;
    int  _arg3;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","otherWin","edge","percent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOii:wxIndividualLayoutConstraint_PercentOf",_kwnames,&_argo0,&_argo1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_PercentOf. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxIndividualLayoutConstraint_PercentOf. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_PercentOf(_arg0,_arg1,_arg2,_arg3);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxIndividualLayoutConstraint_RightOf(_swigobj,_swigarg0,_swigarg1)  (_swigobj->RightOf(_swigarg0,_swigarg1))
static PyObject *_wrap_wxIndividualLayoutConstraint_RightOf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    wxWindow * _arg1;
    int  _arg2 = (int ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","otherWin","margin", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|i:wxIndividualLayoutConstraint_RightOf",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_RightOf. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxIndividualLayoutConstraint_RightOf. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_RightOf(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxIndividualLayoutConstraint_SameAs(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->SameAs(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_wxIndividualLayoutConstraint_SameAs(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    wxWindow * _arg1;
    wxEdge  _arg2;
    int  _arg3 = (int ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","otherWin","edge","margin", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi|i:wxIndividualLayoutConstraint_SameAs",_kwnames,&_argo0,&_argo1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_SameAs. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of wxIndividualLayoutConstraint_SameAs. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_SameAs(_arg0,_arg1,_arg2,_arg3);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxIndividualLayoutConstraint_Set(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->Set(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_wxIndividualLayoutConstraint_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _arg0;
    wxRelationship  _arg1;
    wxWindow * _arg2;
    wxEdge  _arg3;
    int  _arg4 = (int ) 0;
    int  _arg5 = (int ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","rel","otherWin","otherEdge","value","margin", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiOi|ii:wxIndividualLayoutConstraint_Set",_kwnames,&_argo0,&_arg1,&_argo2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxIndividualLayoutConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxIndividualLayoutConstraint_Set. Expected _wxIndividualLayoutConstraint_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_wxWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of wxIndividualLayoutConstraint_Set. Expected _wxWindow_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxIndividualLayoutConstraint_Set(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxLayoutConstraintsTowxObject(void *ptr) {
    wxLayoutConstraints *src;
    wxObject *dest;
    src = (wxLayoutConstraints *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxLayoutConstraints() (new wxLayoutConstraints())
static PyObject *_wrap_new_wxLayoutConstraints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxLayoutConstraints * _result;
    char *_kwnames[] = {  NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,":new_wxLayoutConstraints",_kwnames)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxLayoutConstraints *)new_wxLayoutConstraints();

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxLayoutConstraints_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxLayoutConstraints_bottom_get(_swigobj) (&_swigobj->bottom)
static PyObject *_wrap_wxLayoutConstraints_bottom_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _result;
    wxLayoutConstraints * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxLayoutConstraints_bottom_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutConstraints_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutConstraints_bottom_get. Expected _wxLayoutConstraints_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxIndividualLayoutConstraint *)wxLayoutConstraints_bottom_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxIndividualLayoutConstraint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxLayoutConstraints_centreX_get(_swigobj) (&_swigobj->centreX)
static PyObject *_wrap_wxLayoutConstraints_centreX_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _result;
    wxLayoutConstraints * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxLayoutConstraints_centreX_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutConstraints_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutConstraints_centreX_get. Expected _wxLayoutConstraints_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxIndividualLayoutConstraint *)wxLayoutConstraints_centreX_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxIndividualLayoutConstraint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxLayoutConstraints_centreY_get(_swigobj) (&_swigobj->centreY)
static PyObject *_wrap_wxLayoutConstraints_centreY_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _result;
    wxLayoutConstraints * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxLayoutConstraints_centreY_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutConstraints_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutConstraints_centreY_get. Expected _wxLayoutConstraints_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxIndividualLayoutConstraint *)wxLayoutConstraints_centreY_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxIndividualLayoutConstraint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxLayoutConstraints_height_get(_swigobj) (&_swigobj->height)
static PyObject *_wrap_wxLayoutConstraints_height_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _result;
    wxLayoutConstraints * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxLayoutConstraints_height_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutConstraints_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutConstraints_height_get. Expected _wxLayoutConstraints_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxIndividualLayoutConstraint *)wxLayoutConstraints_height_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxIndividualLayoutConstraint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxLayoutConstraints_left_get(_swigobj) (&_swigobj->left)
static PyObject *_wrap_wxLayoutConstraints_left_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _result;
    wxLayoutConstraints * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxLayoutConstraints_left_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutConstraints_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutConstraints_left_get. Expected _wxLayoutConstraints_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxIndividualLayoutConstraint *)wxLayoutConstraints_left_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxIndividualLayoutConstraint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxLayoutConstraints_right_get(_swigobj) (&_swigobj->right)
static PyObject *_wrap_wxLayoutConstraints_right_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _result;
    wxLayoutConstraints * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxLayoutConstraints_right_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutConstraints_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutConstraints_right_get. Expected _wxLayoutConstraints_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxIndividualLayoutConstraint *)wxLayoutConstraints_right_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxIndividualLayoutConstraint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxLayoutConstraints_top_get(_swigobj) (&_swigobj->top)
static PyObject *_wrap_wxLayoutConstraints_top_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _result;
    wxLayoutConstraints * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxLayoutConstraints_top_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutConstraints_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutConstraints_top_get. Expected _wxLayoutConstraints_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxIndividualLayoutConstraint *)wxLayoutConstraints_top_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxIndividualLayoutConstraint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define wxLayoutConstraints_width_get(_swigobj) (&_swigobj->width)
static PyObject *_wrap_wxLayoutConstraints_width_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxIndividualLayoutConstraint * _result;
    wxLayoutConstraints * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxLayoutConstraints_width_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxLayoutConstraints_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxLayoutConstraints_width_get. Expected _wxLayoutConstraints_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxIndividualLayoutConstraint *)wxLayoutConstraints_width_get(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxIndividualLayoutConstraint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define new_wxAcceleratorEntry(_swigarg0,_swigarg1,_swigarg2) (new wxAcceleratorEntry(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_new_wxAcceleratorEntry(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxAcceleratorEntry * _result;
    int  _arg0 = (int ) 0;
    int  _arg1 = (int ) 0;
    int  _arg2 = (int ) 0;
    char *_kwnames[] = { "flags","keyCode","cmd", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"|iii:new_wxAcceleratorEntry",_kwnames,&_arg0,&_arg1,&_arg2)) 
        return NULL;
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxAcceleratorEntry *)new_wxAcceleratorEntry(_arg0,_arg1,_arg2);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxAcceleratorEntry_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define delete_wxAcceleratorEntry(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_wxAcceleratorEntry(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxAcceleratorEntry * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_wxAcceleratorEntry",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxAcceleratorEntry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_wxAcceleratorEntry. Expected _wxAcceleratorEntry_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete_wxAcceleratorEntry(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxAcceleratorEntry_Set(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->Set(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_wxAcceleratorEntry_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxAcceleratorEntry * _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","flags","keyCode","Cmd", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiii:wxAcceleratorEntry_Set",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxAcceleratorEntry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxAcceleratorEntry_Set. Expected _wxAcceleratorEntry_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxAcceleratorEntry_Set(_arg0,_arg1,_arg2,_arg3);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define wxAcceleratorEntry_GetFlags(_swigobj)  (_swigobj->GetFlags())
static PyObject *_wrap_wxAcceleratorEntry_GetFlags(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxAcceleratorEntry * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxAcceleratorEntry_GetFlags",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxAcceleratorEntry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxAcceleratorEntry_GetFlags. Expected _wxAcceleratorEntry_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxAcceleratorEntry_GetFlags(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxAcceleratorEntry_GetKeyCode(_swigobj)  (_swigobj->GetKeyCode())
static PyObject *_wrap_wxAcceleratorEntry_GetKeyCode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxAcceleratorEntry * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxAcceleratorEntry_GetKeyCode",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxAcceleratorEntry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxAcceleratorEntry_GetKeyCode. Expected _wxAcceleratorEntry_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxAcceleratorEntry_GetKeyCode(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define wxAcceleratorEntry_GetCommand(_swigobj)  (_swigobj->GetCommand())
static PyObject *_wrap_wxAcceleratorEntry_GetCommand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    int  _result;
    wxAcceleratorEntry * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:wxAcceleratorEntry_GetCommand",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxAcceleratorEntry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of wxAcceleratorEntry_GetCommand. Expected _wxAcceleratorEntry_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (int )wxAcceleratorEntry_GetCommand(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigwxAcceleratorTableTowxObject(void *ptr) {
    wxAcceleratorTable *src;
    wxObject *dest;
    src = (wxAcceleratorTable *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxAcceleratorTable(_swigarg0,_swigarg1) (new wxAcceleratorTable(_swigarg0,_swigarg1))
static PyObject *_wrap_new_wxAcceleratorTable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxAcceleratorTable * _result;
    int  _arg0;
    wxAcceleratorEntry * _arg1;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "choices", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_wxAcceleratorTable",_kwnames,&_obj1)) 
        return NULL;
    if (_obj1)
{
    _arg1 = wxAcceleratorEntry_LIST_helper(_obj1);
    if (_arg1 == NULL) {
        return NULL;
    }
}
{
    if (_obj1) {
        _arg0 = PyList_Size(_obj1);
    }
    else {
        _arg0 = 0;
    }
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxAcceleratorTable *)new_wxAcceleratorTable(_arg0,_arg1);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxAcceleratorTable_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete [] _arg1;
}
    return _resultobj;
}

#define delete_wxAcceleratorTable(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_wxAcceleratorTable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxAcceleratorTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_wxAcceleratorTable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxAcceleratorTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_wxAcceleratorTable. Expected _wxAcceleratorTable_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete_wxAcceleratorTable(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigwxBusyInfoTowxObject(void *ptr) {
    wxBusyInfo *src;
    wxObject *dest;
    src = (wxBusyInfo *) ptr;
    dest = (wxObject *) src;
    return (void *) dest;
}

#define new_wxBusyInfo(_swigarg0) (new wxBusyInfo(_swigarg0))
static PyObject *_wrap_new_wxBusyInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxBusyInfo * _result;
    wxString * _arg0;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "message", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_wxBusyInfo",_kwnames,&_obj0)) 
        return NULL;
{
    _arg0 = wxString_in_helper(_obj0);
    if (_arg0 == NULL)
        return NULL;
}
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    _result = (wxBusyInfo *)new_wxBusyInfo(*_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_wxBusyInfo_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    if (_obj0)
        delete _arg0;
}
    return _resultobj;
}

#define delete_wxBusyInfo(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_wxBusyInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    wxBusyInfo * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_wxBusyInfo",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_wxBusyInfo_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_wxBusyInfo. Expected _wxBusyInfo_p.");
        return NULL;
        }
    }
{
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete_wxBusyInfo(_arg0);

    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) return NULL;
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyMethodDef misccMethods[] = {
	 { "delete_wxBusyInfo", (PyCFunction) _wrap_delete_wxBusyInfo, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxBusyInfo", (PyCFunction) _wrap_new_wxBusyInfo, METH_VARARGS | METH_KEYWORDS },
	 { "delete_wxAcceleratorTable", (PyCFunction) _wrap_delete_wxAcceleratorTable, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxAcceleratorTable", (PyCFunction) _wrap_new_wxAcceleratorTable, METH_VARARGS | METH_KEYWORDS },
	 { "wxAcceleratorEntry_GetCommand", (PyCFunction) _wrap_wxAcceleratorEntry_GetCommand, METH_VARARGS | METH_KEYWORDS },
	 { "wxAcceleratorEntry_GetKeyCode", (PyCFunction) _wrap_wxAcceleratorEntry_GetKeyCode, METH_VARARGS | METH_KEYWORDS },
	 { "wxAcceleratorEntry_GetFlags", (PyCFunction) _wrap_wxAcceleratorEntry_GetFlags, METH_VARARGS | METH_KEYWORDS },
	 { "wxAcceleratorEntry_Set", (PyCFunction) _wrap_wxAcceleratorEntry_Set, METH_VARARGS | METH_KEYWORDS },
	 { "delete_wxAcceleratorEntry", (PyCFunction) _wrap_delete_wxAcceleratorEntry, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxAcceleratorEntry", (PyCFunction) _wrap_new_wxAcceleratorEntry, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutConstraints_width_get", (PyCFunction) _wrap_wxLayoutConstraints_width_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutConstraints_top_get", (PyCFunction) _wrap_wxLayoutConstraints_top_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutConstraints_right_get", (PyCFunction) _wrap_wxLayoutConstraints_right_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutConstraints_left_get", (PyCFunction) _wrap_wxLayoutConstraints_left_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutConstraints_height_get", (PyCFunction) _wrap_wxLayoutConstraints_height_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutConstraints_centreY_get", (PyCFunction) _wrap_wxLayoutConstraints_centreY_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutConstraints_centreX_get", (PyCFunction) _wrap_wxLayoutConstraints_centreX_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxLayoutConstraints_bottom_get", (PyCFunction) _wrap_wxLayoutConstraints_bottom_get, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxLayoutConstraints", (PyCFunction) _wrap_new_wxLayoutConstraints, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_Set", (PyCFunction) _wrap_wxIndividualLayoutConstraint_Set, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_SameAs", (PyCFunction) _wrap_wxIndividualLayoutConstraint_SameAs, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_RightOf", (PyCFunction) _wrap_wxIndividualLayoutConstraint_RightOf, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_PercentOf", (PyCFunction) _wrap_wxIndividualLayoutConstraint_PercentOf, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_LeftOf", (PyCFunction) _wrap_wxIndividualLayoutConstraint_LeftOf, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_Unconstrained", (PyCFunction) _wrap_wxIndividualLayoutConstraint_Unconstrained, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_Below", (PyCFunction) _wrap_wxIndividualLayoutConstraint_Below, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_AsIs", (PyCFunction) _wrap_wxIndividualLayoutConstraint_AsIs, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_Absolute", (PyCFunction) _wrap_wxIndividualLayoutConstraint_Absolute, METH_VARARGS | METH_KEYWORDS },
	 { "wxIndividualLayoutConstraint_Above", (PyCFunction) _wrap_wxIndividualLayoutConstraint_Above, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect___cmp__", (PyCFunction) _wrap_wxRect___cmp__, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect___add__", (PyCFunction) _wrap_wxRect___add__, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_asTuple", (PyCFunction) _wrap_wxRect_asTuple, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_height_get", (PyCFunction) _wrap_wxRect_height_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_height_set", (PyCFunction) _wrap_wxRect_height_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_width_get", (PyCFunction) _wrap_wxRect_width_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_width_set", (PyCFunction) _wrap_wxRect_width_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_y_get", (PyCFunction) _wrap_wxRect_y_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_y_set", (PyCFunction) _wrap_wxRect_y_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_x_get", (PyCFunction) _wrap_wxRect_x_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_x_set", (PyCFunction) _wrap_wxRect_x_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_Inside", (PyCFunction) _wrap_wxRect_Inside, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_Inflate", (PyCFunction) _wrap_wxRect_Inflate, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_SetBottom", (PyCFunction) _wrap_wxRect_SetBottom, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_SetTop", (PyCFunction) _wrap_wxRect_SetTop, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_SetRight", (PyCFunction) _wrap_wxRect_SetRight, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_SetLeft", (PyCFunction) _wrap_wxRect_SetLeft, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetRight", (PyCFunction) _wrap_wxRect_GetRight, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetBottom", (PyCFunction) _wrap_wxRect_GetBottom, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetTop", (PyCFunction) _wrap_wxRect_GetTop, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetLeft", (PyCFunction) _wrap_wxRect_GetLeft, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetSize", (PyCFunction) _wrap_wxRect_GetSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetPosition", (PyCFunction) _wrap_wxRect_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_SetHeight", (PyCFunction) _wrap_wxRect_SetHeight, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetHeight", (PyCFunction) _wrap_wxRect_GetHeight, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_SetWidth", (PyCFunction) _wrap_wxRect_SetWidth, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetWidth", (PyCFunction) _wrap_wxRect_GetWidth, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_SetY", (PyCFunction) _wrap_wxRect_SetY, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetY", (PyCFunction) _wrap_wxRect_GetY, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_SetX", (PyCFunction) _wrap_wxRect_SetX, METH_VARARGS | METH_KEYWORDS },
	 { "wxRect_GetX", (PyCFunction) _wrap_wxRect_GetX, METH_VARARGS | METH_KEYWORDS },
	 { "delete_wxRect", (PyCFunction) _wrap_delete_wxRect, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxRect", (PyCFunction) _wrap_new_wxRect, METH_VARARGS | METH_KEYWORDS },
	 { "wxPoint___cmp__", (PyCFunction) _wrap_wxPoint___cmp__, METH_VARARGS | METH_KEYWORDS },
	 { "wxPoint___sub__", (PyCFunction) _wrap_wxPoint___sub__, METH_VARARGS | METH_KEYWORDS },
	 { "wxPoint___add__", (PyCFunction) _wrap_wxPoint___add__, METH_VARARGS | METH_KEYWORDS },
	 { "wxPoint_asTuple", (PyCFunction) _wrap_wxPoint_asTuple, METH_VARARGS | METH_KEYWORDS },
	 { "wxPoint_Set", (PyCFunction) _wrap_wxPoint_Set, METH_VARARGS | METH_KEYWORDS },
	 { "delete_wxPoint", (PyCFunction) _wrap_delete_wxPoint, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxPoint", (PyCFunction) _wrap_new_wxPoint, METH_VARARGS | METH_KEYWORDS },
	 { "wxPoint_y_get", (PyCFunction) _wrap_wxPoint_y_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxPoint_y_set", (PyCFunction) _wrap_wxPoint_y_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxPoint_x_get", (PyCFunction) _wrap_wxPoint_x_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxPoint_x_set", (PyCFunction) _wrap_wxPoint_x_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxRealPoint___cmp__", (PyCFunction) _wrap_wxRealPoint___cmp__, METH_VARARGS | METH_KEYWORDS },
	 { "wxRealPoint___sub__", (PyCFunction) _wrap_wxRealPoint___sub__, METH_VARARGS | METH_KEYWORDS },
	 { "wxRealPoint___add__", (PyCFunction) _wrap_wxRealPoint___add__, METH_VARARGS | METH_KEYWORDS },
	 { "wxRealPoint_asTuple", (PyCFunction) _wrap_wxRealPoint_asTuple, METH_VARARGS | METH_KEYWORDS },
	 { "wxRealPoint_Set", (PyCFunction) _wrap_wxRealPoint_Set, METH_VARARGS | METH_KEYWORDS },
	 { "delete_wxRealPoint", (PyCFunction) _wrap_delete_wxRealPoint, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxRealPoint", (PyCFunction) _wrap_new_wxRealPoint, METH_VARARGS | METH_KEYWORDS },
	 { "wxRealPoint_y_get", (PyCFunction) _wrap_wxRealPoint_y_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxRealPoint_y_set", (PyCFunction) _wrap_wxRealPoint_y_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxRealPoint_x_get", (PyCFunction) _wrap_wxRealPoint_x_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxRealPoint_x_set", (PyCFunction) _wrap_wxRealPoint_x_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize___cmp__", (PyCFunction) _wrap_wxSize___cmp__, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_asTuple", (PyCFunction) _wrap_wxSize_asTuple, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_SetHeight", (PyCFunction) _wrap_wxSize_SetHeight, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_SetWidth", (PyCFunction) _wrap_wxSize_SetWidth, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_GetHeight", (PyCFunction) _wrap_wxSize_GetHeight, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_GetWidth", (PyCFunction) _wrap_wxSize_GetWidth, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_GetY", (PyCFunction) _wrap_wxSize_GetY, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_GetX", (PyCFunction) _wrap_wxSize_GetX, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_Set", (PyCFunction) _wrap_wxSize_Set, METH_VARARGS | METH_KEYWORDS },
	 { "delete_wxSize", (PyCFunction) _wrap_delete_wxSize, METH_VARARGS | METH_KEYWORDS },
	 { "new_wxSize", (PyCFunction) _wrap_new_wxSize, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_height_get", (PyCFunction) _wrap_wxSize_y_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_height_set", (PyCFunction) _wrap_wxSize_y_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_width_get", (PyCFunction) _wrap_wxSize_x_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_width_set", (PyCFunction) _wrap_wxSize_x_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_y_get", (PyCFunction) _wrap_wxSize_y_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_y_set", (PyCFunction) _wrap_wxSize_y_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_x_get", (PyCFunction) _wrap_wxSize_x_get, METH_VARARGS | METH_KEYWORDS },
	 { "wxSize_x_set", (PyCFunction) _wrap_wxSize_x_set, METH_VARARGS | METH_KEYWORDS },
	 { "wxObject_Destroy", (PyCFunction) _wrap_wxObject_Destroy, METH_VARARGS | METH_KEYWORDS },
	 { "wxObject_GetClassName", (PyCFunction) _wrap_wxObject_GetClassName, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetAccelFromString", (PyCFunction) _wrap_wxGetAccelFromString, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetProcessId", (PyCFunction) _wrap_wxGetProcessId, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetUserHome", (PyCFunction) _wrap_wxGetUserHome, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetHomeDir", (PyCFunction) _wrap_wxGetHomeDir, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetUserName", (PyCFunction) _wrap_wxGetUserName, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetUserId", (PyCFunction) _wrap_wxGetUserId, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetFullHostName", (PyCFunction) _wrap_wxGetFullHostName, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetHostName", (PyCFunction) _wrap_wxGetHostName, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetEmailAddress", (PyCFunction) _wrap_wxGetEmailAddress, METH_VARARGS | METH_KEYWORDS },
	 { "wxStripMenuCodes", (PyCFunction) _wrap_wxStripMenuCodes, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetResource", (PyCFunction) _wrap_wxGetResource, METH_VARARGS | METH_KEYWORDS },
	 { "wxEnableTopLevelWindows", (PyCFunction) _wrap_wxEnableTopLevelWindows, METH_VARARGS | METH_KEYWORDS },
	 { "wxYieldIfNeeded", (PyCFunction) _wrap_wxYieldIfNeeded, METH_VARARGS | METH_KEYWORDS },
	 { "wxYield", (PyCFunction) _wrap_wxYield, METH_VARARGS | METH_KEYWORDS },
	 { "wxUsleep", (PyCFunction) _wrap_wxUsleep, METH_VARARGS | METH_KEYWORDS },
	 { "wxSleep", (PyCFunction) _wrap_wxSleep, METH_VARARGS | METH_KEYWORDS },
	 { "wxShutdown", (PyCFunction) _wrap_wxShutdown, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetOsDescription", (PyCFunction) _wrap_wxGetOsDescription, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetOsVersion", (PyCFunction) _wrap_wxGetOsVersion, METH_VARARGS | METH_KEYWORDS },
	 { "wxStartTimer", (PyCFunction) _wrap_wxStartTimer, METH_VARARGS | METH_KEYWORDS },
	 { "wxShell", (PyCFunction) _wrap_wxShell, METH_VARARGS | METH_KEYWORDS },
	 { "wxNow", (PyCFunction) _wrap_wxNow, METH_VARARGS | METH_KEYWORDS },
	 { "wxIsBusy", (PyCFunction) _wrap_wxIsBusy, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetMousePosition", (PyCFunction) _wrap_wxGetMousePosition, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetElapsedTime", (PyCFunction) _wrap_wxGetElapsedTime, METH_VARARGS | METH_KEYWORDS },
	 { "wxEndBusyCursor", (PyCFunction) _wrap_wxEndBusyCursor, METH_VARARGS | METH_KEYWORDS },
	 { "wxBell", (PyCFunction) _wrap_wxBell, METH_VARARGS | METH_KEYWORDS },
	 { "wxGetCurrentId", (PyCFunction) _wrap_wxGetCurrentId, METH_VARARGS | METH_KEYWORDS },
	 { "RegisterId", (PyCFunction) _wrap_RegisterId, METH_VARARGS | METH_KEYWORDS },
	 { "NewId", (PyCFunction) _wrap_NewId, METH_VARARGS | METH_KEYWORDS },
	 { "wxRegisterId", (PyCFunction) _wrap_wxRegisterId, METH_VARARGS | METH_KEYWORDS },
	 { "wxNewId", (PyCFunction) _wrap_wxNewId, METH_VARARGS | METH_KEYWORDS },
	 { "wxIntersectRect", (PyCFunction) _wrap_wxIntersectRect, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_signed_long","_long",0},
    { "_wxPrintQuality","_wxCoord",0},
    { "_wxPrintQuality","_int",0},
    { "_wxPrintQuality","_signed_int",0},
    { "_wxPrintQuality","_unsigned_int",0},
    { "_wxPrintQuality","_wxWindowID",0},
    { "_wxPrintQuality","_uint",0},
    { "_wxPrintQuality","_EBool",0},
    { "_wxPrintQuality","_size_t",0},
    { "_wxPrintQuality","_time_t",0},
    { "_byte","_unsigned_char",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_size_t","_wxCoord",0},
    { "_size_t","_wxPrintQuality",0},
    { "_size_t","_time_t",0},
    { "_size_t","_unsigned_int",0},
    { "_size_t","_int",0},
    { "_size_t","_wxWindowID",0},
    { "_size_t","_uint",0},
    { "_uint","_wxCoord",0},
    { "_uint","_wxPrintQuality",0},
    { "_uint","_time_t",0},
    { "_uint","_size_t",0},
    { "_uint","_unsigned_int",0},
    { "_uint","_int",0},
    { "_uint","_wxWindowID",0},
    { "_wxChar","_char",0},
    { "_char","_wxChar",0},
    { "_EBool","_wxCoord",0},
    { "_EBool","_wxPrintQuality",0},
    { "_EBool","_signed_int",0},
    { "_EBool","_int",0},
    { "_EBool","_wxWindowID",0},
    { "_unsigned_long","_long",0},
    { "_signed_int","_wxCoord",0},
    { "_signed_int","_wxPrintQuality",0},
    { "_signed_int","_EBool",0},
    { "_signed_int","_wxWindowID",0},
    { "_signed_int","_int",0},
    { "_WXTYPE","_short",0},
    { "_WXTYPE","_signed_short",0},
    { "_WXTYPE","_unsigned_short",0},
    { "_unsigned_short","_WXTYPE",0},
    { "_unsigned_short","_short",0},
    { "_wxObject","_wxBusyInfo",SwigwxBusyInfoTowxObject},
    { "_wxObject","_wxAcceleratorTable",SwigwxAcceleratorTableTowxObject},
    { "_wxObject","_wxLayoutConstraints",SwigwxLayoutConstraintsTowxObject},
    { "_wxObject","_wxIndividualLayoutConstraint",SwigwxIndividualLayoutConstraintTowxObject},
    { "_signed_short","_WXTYPE",0},
    { "_signed_short","_short",0},
    { "_unsigned_char","_byte",0},
    { "_unsigned_int","_wxCoord",0},
    { "_unsigned_int","_wxPrintQuality",0},
    { "_unsigned_int","_time_t",0},
    { "_unsigned_int","_size_t",0},
    { "_unsigned_int","_uint",0},
    { "_unsigned_int","_wxWindowID",0},
    { "_unsigned_int","_int",0},
    { "_short","_WXTYPE",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_wxWindowID","_wxCoord",0},
    { "_wxWindowID","_wxPrintQuality",0},
    { "_wxWindowID","_time_t",0},
    { "_wxWindowID","_size_t",0},
    { "_wxWindowID","_EBool",0},
    { "_wxWindowID","_uint",0},
    { "_wxWindowID","_int",0},
    { "_wxWindowID","_signed_int",0},
    { "_wxWindowID","_unsigned_int",0},
    { "_int","_wxCoord",0},
    { "_int","_wxPrintQuality",0},
    { "_int","_time_t",0},
    { "_int","_size_t",0},
    { "_int","_EBool",0},
    { "_int","_uint",0},
    { "_int","_wxWindowID",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_time_t","_wxCoord",0},
    { "_time_t","_wxPrintQuality",0},
    { "_time_t","_unsigned_int",0},
    { "_time_t","_int",0},
    { "_time_t","_wxWindowID",0},
    { "_time_t","_uint",0},
    { "_time_t","_size_t",0},
    { "_wxCoord","_int",0},
    { "_wxCoord","_signed_int",0},
    { "_wxCoord","_unsigned_int",0},
    { "_wxCoord","_wxWindowID",0},
    { "_wxCoord","_uint",0},
    { "_wxCoord","_EBool",0},
    { "_wxCoord","_size_t",0},
    { "_wxCoord","_time_t",0},
    { "_wxCoord","_wxPrintQuality",0},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) initmiscc() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("miscc", misccMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"wxSHUTDOWN_POWEROFF", PyInt_FromLong((long) wxSHUTDOWN_POWEROFF));
	 PyDict_SetItemString(d,"wxSHUTDOWN_REBOOT", PyInt_FromLong((long) wxSHUTDOWN_REBOOT));
	 PyDict_SetItemString(d,"wxLeft", PyInt_FromLong((long) wxLeft));
	 PyDict_SetItemString(d,"wxTop", PyInt_FromLong((long) wxTop));
	 PyDict_SetItemString(d,"wxRight", PyInt_FromLong((long) wxRight));
	 PyDict_SetItemString(d,"wxBottom", PyInt_FromLong((long) wxBottom));
	 PyDict_SetItemString(d,"wxWidth", PyInt_FromLong((long) wxWidth));
	 PyDict_SetItemString(d,"wxHeight", PyInt_FromLong((long) wxHeight));
	 PyDict_SetItemString(d,"wxCentre", PyInt_FromLong((long) wxCentre));
	 PyDict_SetItemString(d,"wxCenter", PyInt_FromLong((long) wxCenter));
	 PyDict_SetItemString(d,"wxCentreX", PyInt_FromLong((long) wxCentreX));
	 PyDict_SetItemString(d,"wxCentreY", PyInt_FromLong((long) wxCentreY));
	 PyDict_SetItemString(d,"wxUnconstrained", PyInt_FromLong((long) wxUnconstrained));
	 PyDict_SetItemString(d,"wxAsIs", PyInt_FromLong((long) wxAsIs));
	 PyDict_SetItemString(d,"wxPercentOf", PyInt_FromLong((long) wxPercentOf));
	 PyDict_SetItemString(d,"wxAbove", PyInt_FromLong((long) wxAbove));
	 PyDict_SetItemString(d,"wxBelow", PyInt_FromLong((long) wxBelow));
	 PyDict_SetItemString(d,"wxLeftOf", PyInt_FromLong((long) wxLeftOf));
	 PyDict_SetItemString(d,"wxRightOf", PyInt_FromLong((long) wxRightOf));
	 PyDict_SetItemString(d,"wxSameAs", PyInt_FromLong((long) wxSameAs));
	 PyDict_SetItemString(d,"wxAbsolute", PyInt_FromLong((long) wxAbsolute));
	 PyDict_SetItemString(d,"cvar", SWIG_globals);
	 SWIG_addvarlink(SWIG_globals,"wxNullAcceleratorTable",_wrap_wxNullAcceleratorTable_get, _wrap_wxNullAcceleratorTable_set);
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
