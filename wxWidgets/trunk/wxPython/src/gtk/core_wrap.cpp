/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.22
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_NOINCLUDE

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};                                                    
#endif


#include "Python.h"

/*************************************************************** -*- c -*-
 * python/precommon.swg
 *
 * Rename all exported symbols from common.swg, to avoid symbol
 * clashes if multiple interpreters are included
 *
 ************************************************************************/

#define SWIG_TypeRegister    SWIG_Python_TypeRegister
#define SWIG_TypeCheck       SWIG_Python_TypeCheck
#define SWIG_TypeCast        SWIG_Python_TypeCast
#define SWIG_TypeDynamicCast SWIG_Python_TypeDynamicCast
#define SWIG_TypeName        SWIG_Python_TypeName
#define SWIG_TypeQuery       SWIG_Python_TypeQuery
#define SWIG_TypeClientData  SWIG_Python_TypeClientData
#define SWIG_PackData        SWIG_Python_PackData 
#define SWIG_UnpackData      SWIG_Python_UnpackData 


/***********************************************************************
 * common.swg for wxPython
 *
 * Include only the function prototypes and such from SWIG's common.swg,
 * but not the runtime functions themselves.  This helps keep the
 * wrapper files clean of unnecessary stuff that is in the libpy.c file
 * anyway.
 *
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  if defined(_MSC_VER) || defined(__GNUC__)
#    if defined(STATIC_LINKED)
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) extern a
#    else
#      define SWIGEXPORT(a) __declspec(dllexport) a
#      define SWIGIMPORT(a) extern a
#    endif
#  else
#    if defined(__BORLANDC__)
#      define SWIGEXPORT(a) a _export
#      define SWIGIMPORT(a) a _export
#    else
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) a
#    endif
#  endif
#else
#  define SWIGEXPORT(a) a
#  define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#  define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#  define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;


SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);
SWIGIMPORT(char *)           SWIG_PackData(char *, void *, int);
SWIGIMPORT(char *)           SWIG_UnpackData(char *, void *, int);


#ifdef __cplusplus
}
#endif


/***********************************************************************
 * pyrun.swg for wxPython
 *
 * Include only the function prototypes and such from SWIG's pyrun.swg,
 * but not the runtime functions themselves.  This helps keep the
 * wrapper files clean of unnecessary stuff that is in the libpy.c file
 * anyway.
 *
 ************************************************************************/

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags) \
  SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags) \
  SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags) \
  SWIG_Python_MustGetPtr(p, type, argnum, flags)
 
/* Python-specific SWIG API */
#define SWIG_newvarlink() \
  SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr) \
  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags) \
  SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type) \
  SWIG_Python_NewPackedObj(ptr, sz, type)
#define SWIG_InstallConstants(d, constants) \
  SWIG_Python_InstallConstants(d, constants)

typedef double (*py_objasdbl_conv)(PyObject *obj);

SWIGIMPORT(int)               SWIG_Python_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPointerObj(void *, swig_type_info *,int own);
SWIGIMPORT(void *)            SWIG_Python_MustGetPtr(PyObject *, swig_type_info *, int, int);
SWIGIMPORT(PyObject *)        SWIG_Python_newvarlink(void);
SWIGIMPORT(void)              SWIG_Python_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGIMPORT(int)               SWIG_Python_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPackedObj(void *, int sz, swig_type_info *);
SWIGIMPORT(void)              SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]);

/* -----------------------------------------------------------------------------
 *  the needed conversions between C++ and python
 * ----------------------------------------------------------------------------- */
/* basic types */
/*
  utilities
*/
SWIGIMPORT(char* )         SWIG_PyObj_AsCharPtr(PyObject *obj, swig_type_info* pchar_info);
SWIGIMPORT(PyObject *)     SWIG_PyObj_FromCharPtr(const char* cptr);
SWIGIMPORT(unsigned long)  SWIG_PyObj_AsUnsignedLong(PyObject * obj);
SWIGIMPORT(long)           SWIG_PyObj_AsLongInRange(PyObject * obj, const char* type,
						    long min_value, long max_value);
SWIGIMPORT(unsigned long)  SWIG_PyObj_AsUnsignedLongInRange(PyObject *obj, const char* type,
							    unsigned long max_value);
SWIGIMPORT(char *)         SWIG_PyObj_AsNewCharPtr(PyObject *obj, swig_type_info* pchar_info);
SWIGIMPORT(void)           SWIG_PyObj_AsCharPtrAndSize(PyObject *obj, swig_type_info* pchar_info,
						       char** cptr, size_t* size);
SWIGIMPORT(void)           SWIG_PyObj_AsCharArray(PyObject *obj, swig_type_info* pchar_info,
						  char* carray, size_t size);
SWIGIMPORT(PyObject *)     SWIG_PyObj_FromCharArray(const char* carray, size_t size);
SWIGIMPORT(float)          SWIG_PyObj_AsFloatConv(PyObject *obj,  py_objasdbl_conv pyconv);


/* Contract support */

#define SWIG_contract_assert(expr, msg) if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

#ifdef __cplusplus
}
#endif



/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_wxLayoutConstraints swig_types[0] 
#define  SWIGTYPE_p_wxRealPoint swig_types[1] 
#define  SWIGTYPE_p_wxSizerItem swig_types[2] 
#define  SWIGTYPE_p_wxGBSizerItem swig_types[3] 
#define  SWIGTYPE_p_wxScrollEvent swig_types[4] 
#define  SWIGTYPE_p_wxIndividualLayoutConstraint swig_types[5] 
#define  SWIGTYPE_p_wxSizer swig_types[6] 
#define  SWIGTYPE_p_wxBoxSizer swig_types[7] 
#define  SWIGTYPE_p_wxStaticBoxSizer swig_types[8] 
#define  SWIGTYPE_p_wxGridBagSizer swig_types[9] 
#define  SWIGTYPE_p_wxAcceleratorEntry swig_types[10] 
#define  SWIGTYPE_p_wxUpdateUIEvent swig_types[11] 
#define  SWIGTYPE_p_wxMenu swig_types[12] 
#define  SWIGTYPE_p_wxEvent swig_types[13] 
#define  SWIGTYPE_p_wxGridSizer swig_types[14] 
#define  SWIGTYPE_p_wxFlexGridSizer swig_types[15] 
#define  SWIGTYPE_p_wxInitDialogEvent swig_types[16] 
#define  SWIGTYPE_p_wxItemContainer swig_types[17] 
#define  SWIGTYPE_p_wxNcPaintEvent swig_types[18] 
#define  SWIGTYPE_p_wxPaintEvent swig_types[19] 
#define  SWIGTYPE_p_wxSysColourChangedEvent swig_types[20] 
#define  SWIGTYPE_p_wxMouseCaptureChangedEvent swig_types[21] 
#define  SWIGTYPE_p_wxDisplayChangedEvent swig_types[22] 
#define  SWIGTYPE_p_wxPaletteChangedEvent swig_types[23] 
#define  SWIGTYPE_p_wxControl swig_types[24] 
#define  SWIGTYPE_p_wxFont swig_types[25] 
#define  SWIGTYPE_p_wxMenuBarBase swig_types[26] 
#define  SWIGTYPE_p_wxSetCursorEvent swig_types[27] 
#define  SWIGTYPE_p_wxFSFile swig_types[28] 
#define  SWIGTYPE_p_wxCaret swig_types[29] 
#define  SWIGTYPE_p_wxRegion swig_types[30] 
#define  SWIGTYPE_p_wxPoint2D swig_types[31] 
#define  SWIGTYPE_p_int swig_types[32] 
#define  SWIGTYPE_p_wxSize swig_types[33] 
#define  SWIGTYPE_p_wxDC swig_types[34] 
#define  SWIGTYPE_p_wxPySizer swig_types[35] 
#define  SWIGTYPE_p_wxNotifyEvent swig_types[36] 
#define  SWIGTYPE_p_wxPyEvent swig_types[37] 
#define  SWIGTYPE_p_wxPropagationDisabler swig_types[38] 
#define  SWIGTYPE_p_wxAppTraits swig_types[39] 
#define  SWIGTYPE_p_wxArrayString swig_types[40] 
#define  SWIGTYPE_p_wxShowEvent swig_types[41] 
#define  SWIGTYPE_p_wxToolTip swig_types[42] 
#define  SWIGTYPE_p_wxMaximizeEvent swig_types[43] 
#define  SWIGTYPE_p_wxIconizeEvent swig_types[44] 
#define  SWIGTYPE_p_wxActivateEvent swig_types[45] 
#define  SWIGTYPE_p_wxMoveEvent swig_types[46] 
#define  SWIGTYPE_p_wxSizeEvent swig_types[47] 
#define  SWIGTYPE_p_wxQueryNewPaletteEvent swig_types[48] 
#define  SWIGTYPE_p_wxWindowCreateEvent swig_types[49] 
#define  SWIGTYPE_p_wxIdleEvent swig_types[50] 
#define  SWIGTYPE_p_wxMenuItem swig_types[51] 
#define  SWIGTYPE_p_wxStaticBox swig_types[52] 
#define  SWIGTYPE_p_long swig_types[53] 
#define  SWIGTYPE_p_wxTIFFHandler swig_types[54] 
#define  SWIGTYPE_p_wxXPMHandler swig_types[55] 
#define  SWIGTYPE_p_wxPNMHandler swig_types[56] 
#define  SWIGTYPE_p_wxJPEGHandler swig_types[57] 
#define  SWIGTYPE_p_wxPCXHandler swig_types[58] 
#define  SWIGTYPE_p_wxGIFHandler swig_types[59] 
#define  SWIGTYPE_p_wxPNGHandler swig_types[60] 
#define  SWIGTYPE_p_wxANIHandler swig_types[61] 
#define  SWIGTYPE_p_wxMemoryFSHandler swig_types[62] 
#define  SWIGTYPE_p_wxEvtHandler swig_types[63] 
#define  SWIGTYPE_p_wxCURHandler swig_types[64] 
#define  SWIGTYPE_p_wxICOHandler swig_types[65] 
#define  SWIGTYPE_p_wxBMPHandler swig_types[66] 
#define  SWIGTYPE_p_wxImageHandler swig_types[67] 
#define  SWIGTYPE_p_wxFileSystemHandler swig_types[68] 
#define  SWIGTYPE_p_wxPyFileSystemHandler swig_types[69] 
#define  SWIGTYPE_p_wxInternetFSHandler swig_types[70] 
#define  SWIGTYPE_p_wxZipFSHandler swig_types[71] 
#define  SWIGTYPE_p_wxRect swig_types[72] 
#define  SWIGTYPE_p_wxGBSpan swig_types[73] 
#define  SWIGTYPE_p_wxPropagateOnce swig_types[74] 
#define  SWIGTYPE_p_wxAcceleratorTable swig_types[75] 
#define  SWIGTYPE_p_char swig_types[76] 
#define  SWIGTYPE_p_wxGBPosition swig_types[77] 
#define  SWIGTYPE_p_wxImage swig_types[78] 
#define  SWIGTYPE_p_wxFrame swig_types[79] 
#define  SWIGTYPE_p_wxScrollWinEvent swig_types[80] 
#define  SWIGTYPE_p_wxImageHistogram swig_types[81] 
#define  SWIGTYPE_p_byte swig_types[82] 
#define  SWIGTYPE_p_wxPoint swig_types[83] 
#define  SWIGTYPE_p_wxCursor swig_types[84] 
#define  SWIGTYPE_p_wxObject swig_types[85] 
#define  SWIGTYPE_p_wxPyInputStream swig_types[86] 
#define  SWIGTYPE_p_wxOutputStream swig_types[87] 
#define  SWIGTYPE_p_wxInputStream swig_types[88] 
#define  SWIGTYPE_p_wxDateTime swig_types[89] 
#define  SWIGTYPE_p_wxKeyEvent swig_types[90] 
#define  SWIGTYPE_p_wxNavigationKeyEvent swig_types[91] 
#define  SWIGTYPE_p_wxWindowDestroyEvent swig_types[92] 
#define  SWIGTYPE_p_wxWindow swig_types[93] 
#define  SWIGTYPE_p_wxMenuBar swig_types[94] 
#define  SWIGTYPE_p_wxFileSystem swig_types[95] 
#define  SWIGTYPE_p_wxBitmap swig_types[96] 
#define  SWIGTYPE_p_wxMenuEvent swig_types[97] 
#define  SWIGTYPE_p_wxContextMenuEvent swig_types[98] 
#define  SWIGTYPE_p_unsigned_char swig_types[99] 
#define  SWIGTYPE_p_wxCloseEvent swig_types[100] 
#define  SWIGTYPE_p_wxEraseEvent swig_types[101] 
#define  SWIGTYPE_p_wxMouseEvent swig_types[102] 
#define  SWIGTYPE_p_wxPyApp swig_types[103] 
#define  SWIGTYPE_p_wxCommandEvent swig_types[104] 
#define  SWIGTYPE_p_wxPyCommandEvent swig_types[105] 
#define  SWIGTYPE_p_wxPyDropTarget swig_types[106] 
#define  SWIGTYPE_p_wxChildFocusEvent swig_types[107] 
#define  SWIGTYPE_p_wxFocusEvent swig_types[108] 
#define  SWIGTYPE_p_wxDropFilesEvent swig_types[109] 
#define  SWIGTYPE_p_wxControlWithItems swig_types[110] 
#define  SWIGTYPE_p_wxColour swig_types[111] 
#define  SWIGTYPE_p_wxValidator swig_types[112] 
#define  SWIGTYPE_p_wxPyValidator swig_types[113] 
static swig_type_info *swig_types[115];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _core.so
  ------------------------------------------------*/
#define SWIG_init    init_core

#define SWIG_name    "_core"

#include <limits.h>
#include <float.h>
#include <string.h>

#ifndef SWIGSTATIC
#ifdef __cplusplus
#define SWIGSTATIC(a) static inline a
#else
#define SWIGSTATIC(a) static a
#endif
#endif

#ifndef numeric_cast
#ifdef __cplusplus
#ifdef HAVE_NUMERIC_CAST
#define numeric_cast(type,a) numeric_cast<type>(a)
#else
#define numeric_cast(type,a) static_cast<type>(a)
#endif
#else
#define numeric_cast(type,a) (type)(a)
#endif
#endif



#define SWIG_PyObj_FromSignedChar     PyInt_FromLong
#define SWIG_PyObj_FromUnsignedChar   PyInt_FromLong
#define SWIG_PyObj_FromShort         PyInt_FromLong
#define SWIG_PyObj_FromUnsignedShort  PyInt_FromLong
#define SWIG_PyObj_FromInt           PyInt_FromLong
#define SWIG_PyObj_FromLong          PyInt_FromLong
#define SWIG_PyObj_FromFloat         PyFloat_FromDouble
#define SWIG_PyObj_FromDouble        PyFloat_FromDouble
#define SWIG_PyObj_FromFloat         PyFloat_FromDouble
#define SWIG_PyObj_FromDouble        PyFloat_FromDouble


#include "wx/wxPython/wxPython_int.h"
#include "wx/wxPython/pyclasses.h"


#ifndef wxPyUSE_EXPORT
// Helper functions for dealing with SWIG objects and such.  These are
// located here so they know about the SWIG types and functions declared
// in the wrapper code.

#include <wx/hashmap.h>
WX_DECLARE_STRING_HASH_MAP( swig_type_info*, wxPyTypeInfoHashMap );


// Maintains a hashmap of className to swig_type_info pointers.  Given the
// name of a class either looks up the type info in the cache, or scans the
// SWIG tables for it.
extern PyObject* wxPyPtrTypeMap; 
static
swig_type_info* wxPyFindSwigType(const wxChar* className) {

    static wxPyTypeInfoHashMap* typeInfoCache = NULL;

    if (typeInfoCache == NULL)
        typeInfoCache = new wxPyTypeInfoHashMap;

    wxString name(className);
    swig_type_info* swigType = (*typeInfoCache)[name];

    if (! swigType) {
        // it wasn't in the cache, so look it up from SWIG
        name.Append(wxT(" *"));
        swigType = SWIG_Python_TypeQuery(name.mb_str());
        
        // if it still wasn't found, try looking for a mapped name
        if (!swigType) {
            PyObject* item;
            name = className;
            
            if ((item = PyDict_GetItemString(wxPyPtrTypeMap,
                               (char*)(const char*)name.mbc_str())) != NULL) {
                name = wxString(PyString_AsString(item), *wxConvCurrent);
                name.Append(wxT(" *"));
                swigType = SWIG_Python_TypeQuery(name.mb_str());
            }
        }
        if (swigType) {
            // and add it to the map if found
            (*typeInfoCache)[className] = swigType;
        }
    }
    return swigType;    
}


// Check if a class name is a type known to SWIG
bool wxPyCheckSwigType(const wxChar* className) {

    swig_type_info* swigType = wxPyFindSwigType(className);
    return swigType != NULL;
}
 
    
// Given a pointer to a C++ object and a class name, construct a Python proxy
// object for it.    
PyObject* wxPyConstructObject(void* ptr,
                              const wxChar* className,
                              int setThisOwn) {

    swig_type_info* swigType = wxPyFindSwigType(className);
    wxCHECK_MSG(swigType != NULL, NULL, wxT("Unknown type in wxPyConstructObject"));

    return SWIG_Python_NewPointerObj(ptr, swigType, setThisOwn);
}


// Extract a pointer to the wrapped C++ object from a Python proxy object.
// Ensures that the proxy object is of the specified (or derived) type.  If
// not able to perform the conversion then a Python exception is set and the
// error should be handled properly in the caller.  Returns True on success.
bool wxPyConvertSwigPtr(PyObject* obj, void **ptr,
                        const wxChar* className) {

    swig_type_info* swigType = wxPyFindSwigType(className);
    wxCHECK_MSG(swigType != NULL, False, wxT("Unknown type in wxPyConvertSwigPtr"));

    return SWIG_Python_ConvertPtr(obj, ptr, swigType, SWIG_POINTER_EXCEPTION) != -1;
}


// Make a SWIGified pointer object suitable for a .this attribute
PyObject* wxPyMakeSwigPtr(void* ptr, const wxChar* className) {
    
    PyObject* robj = NULL;

    swig_type_info* swigType = wxPyFindSwigType(className);
    wxCHECK_MSG(swigType != NULL, NULL, wxT("Unknown type in wxPyConvertSwigPtr"));

#ifdef SWIG_COBJECT_TYPES
    robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) swigType->name, NULL);
#else
    {
        char result[1024];
        char *r = result;
        *(r++) = '_';
        r = SWIG_Python_PackData(r, &ptr, sizeof(void *));
        strcpy(r, swigType->name);
        robj = PyString_FromString(result);
    }     
#endif

    return robj;
}




// Export a C API in a struct.  Other modules will be able to load this from
// the wx.core module and will then have safe access to these functions, even if
// they are located in another shared library.
static wxPyCoreAPI API = {

    (p_SWIG_Python_TypeRegister_t)SWIG_Python_TypeRegister,
    (p_SWIG_Python_TypeCheck_t)SWIG_Python_TypeCheck,
    (p_SWIG_Python_TypeCast_t)SWIG_Python_TypeCast,
    (p_SWIG_Python_TypeDynamicCast_t)SWIG_Python_TypeDynamicCast,
    (p_SWIG_Python_TypeName_t)SWIG_Python_TypeName,
    (p_SWIG_Python_TypeQuery_t)SWIG_Python_TypeQuery,
    (p_SWIG_Python_TypeClientData_t)SWIG_Python_TypeClientData,
    (p_SWIG_Python_newvarlink_t)SWIG_Python_newvarlink,
    (p_SWIG_Python_addvarlink_t)SWIG_Python_addvarlink,
    (p_SWIG_Python_ConvertPtr_t)SWIG_Python_ConvertPtr,
    (p_SWIG_Python_ConvertPacked_t)SWIG_Python_ConvertPacked,
    (p_SWIG_Python_PackData_t)SWIG_Python_PackData,
    (p_SWIG_Python_UnpackData_t)SWIG_Python_UnpackData,
    (p_SWIG_Python_NewPointerObj_t)SWIG_Python_NewPointerObj,
    (p_SWIG_Python_NewPackedObj_t)SWIG_Python_NewPackedObj,
    (p_SWIG_Python_InstallConstants_t)SWIG_Python_InstallConstants,
    (p_SWIG_Python_MustGetPtr_t)SWIG_Python_MustGetPtr,

    (p_SWIG_PyObj_AsCharPtr_t)SWIG_PyObj_AsCharPtr,
    (p_SWIG_PyObj_FromCharPtr_t)SWIG_PyObj_FromCharPtr,
    (p_SWIG_PyObj_AsUnsignedLong_t)SWIG_PyObj_AsUnsignedLong,
    (p_SWIG_PyObj_AsLongInRange_t)SWIG_PyObj_AsLongInRange,
    (p_SWIG_PyObj_AsUnsignedLongInRange_t)SWIG_PyObj_AsUnsignedLongInRange,
    (p_SWIG_PyObj_AsNewCharPtr_t)SWIG_PyObj_AsNewCharPtr,
    (p_SWIG_PyObj_AsCharPtrAndSize_t)SWIG_PyObj_AsCharPtrAndSize,
    (p_SWIG_PyObj_AsCharArray_t)SWIG_PyObj_AsCharArray,
    (p_SWIG_PyObj_FromCharArray_t)SWIG_PyObj_FromCharArray,
    (p_SWIG_PyObj_AsFloatConv_t)SWIG_PyObj_AsFloatConv,
        
    wxPyCheckSwigType,
    wxPyConstructObject,
    wxPyConvertSwigPtr,
    wxPyMakeSwigPtr,
                                             
    wxPyBeginAllowThreads,
    wxPyEndAllowThreads,
    wxPyBeginBlockThreads,
    wxPyEndBlockThreads,
                                             
    wxPy_ConvertList,
                                             
    wxString_in_helper,
    Py2wxString,
    wx2PyString,
                                             
    byte_LIST_helper,
    int_LIST_helper,
    long_LIST_helper,
    string_LIST_helper,
    wxPoint_LIST_helper,
    wxBitmap_LIST_helper,
    wxString_LIST_helper,
    wxAcceleratorEntry_LIST_helper,
                                             
    wxSize_helper,
    wxPoint_helper,
    wxRealPoint_helper,
    wxRect_helper,
    wxColour_helper,
    wxPoint2D_helper,
                                             
    wxPySimple_typecheck,
    wxColour_typecheck,

    wxPyCBH_setCallbackInfo,
    wxPyCBH_findCallback,
    wxPyCBH_callCallback,
    wxPyCBH_callCallbackObj,
    wxPyCBH_delete,
                                             
    wxPyMake_wxObject,
    wxPyMake_wxSizer,
    wxPyPtrTypeMap_Add,
    wxPy2int_seq_helper,
    wxPy4int_seq_helper,
    wxArrayString2PyList_helper,
    wxArrayInt2PyList_helper,
                                             
    wxPyClientData_dtor,
    wxPyUserData_dtor,
    wxPyOORClientData_dtor,
                                             
    wxPyCBInputStream_create,

    wxPyInstance_Check,
    wxPySwigInstance_Check

};

#endif


#if ! wxUSE_HOTKEY
enum wxHotkeyModifier
{
    wxMOD_NONE = 0,
    wxMOD_ALT = 1,
    wxMOD_CONTROL = 2,
    wxMOD_SHIFT = 4,
    wxMOD_WIN = 8
};
#define wxEVT_HOTKEY 9999
#endif

 static const wxString wxPyEmptyString(wxEmptyString); 
wxString wxObject_GetClassName(wxObject *self){
            return self->GetClassInfo()->GetClassName();
        }
void wxObject_Destroy(wxObject *self){
            delete self;
        }

#ifndef __WXMAC__
#define wxCURSOR_COPY_ARROW wxCURSOR_ARROW
#endif


SWIGSTATIC(int)
SWIG_PyObj_AsInt(PyObject *obj)
{ 
  return numeric_cast(int,
    SWIG_PyObj_AsLongInRange(obj, "int", INT_MIN, INT_MAX));
}

PyObject *wxSize_Get(wxSize *self){
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, PyInt_FromLong(self->x));
            PyTuple_SET_ITEM(tup, 1, PyInt_FromLong(self->y));
            wxPyEndBlockThreads();
            return tup;
        }

SWIGSTATIC(double)
SWIG_PyObj_AsDouble(PyObject *obj)
{
  return (PyFloat_Check(obj)) ? PyFloat_AsDouble(obj) :
#if HAVE_LONG_LONG
    (double)((PyInt_Check(obj)) ? PyInt_AsLong(obj) : PyLong_AsLongLong(obj));
#else
    (double)((PyInt_Check(obj)) ? PyInt_AsLong(obj) : PyLong_AsLong(obj));
#endif
  if (PyErr_Occurred()) {
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError, "a double is expected");
  }
}

void wxRealPoint_Set(wxRealPoint *self,double x,double y){
            self->x = x;
            self->y = y;
        }
PyObject *wxRealPoint_Get(wxRealPoint *self){
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, PyFloat_FromDouble(self->x));
            PyTuple_SET_ITEM(tup, 1, PyFloat_FromDouble(self->y));
            wxPyEndBlockThreads();
            return tup;
        }

SWIGSTATIC(long)
SWIG_PyObj_AsLong(PyObject * obj)
{
  return PyInt_Check(obj) ? PyInt_AsLong(obj) : PyLong_AsLong(obj);
}

void wxPoint_Set(wxPoint *self,long x,long y){
            self->x = x;
            self->y = y;
        }
PyObject *wxPoint_Get(wxPoint *self){
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, PyInt_FromLong(self->x));
            PyTuple_SET_ITEM(tup, 1, PyInt_FromLong(self->y));
            wxPyEndBlockThreads();
            return tup;
        }
void wxRect_Set(wxRect *self,int x,int y,int width,int height){
            self->x = x;
            self->y = y;
            self->width = width;
            self->height = height;
        }
PyObject *wxRect_Get(wxRect *self){
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(4);
            PyTuple_SET_ITEM(tup, 0, PyInt_FromLong(self->x));
            PyTuple_SET_ITEM(tup, 1, PyInt_FromLong(self->y));
            PyTuple_SET_ITEM(tup, 2, PyInt_FromLong(self->width));
            PyTuple_SET_ITEM(tup, 3, PyInt_FromLong(self->height));
            wxPyEndBlockThreads();
            return tup;
        }

    PyObject* wxIntersectRect(wxRect* r1, wxRect* r2) {
        wxRegion  reg1(*r1);
        wxRegion  reg2(*r2);
        wxRect    dest(0,0,0,0);
        PyObject* obj;

        reg1.Intersect(reg2);
        dest = reg1.GetBox();

        if (dest != wxRect(0,0,0,0)) {
            wxPyBeginBlockThreads();
            wxRect* newRect = new wxRect(dest);
            obj = wxPyConstructObject((void*)newRect, wxT("wxRect"), True);
            wxPyEndBlockThreads();
            return obj;
        }
        Py_INCREF(Py_None);
        return Py_None;
    }


static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}

void wxPoint2D_Set(wxPoint2D *self,double x,double y){
            self->m_x = x;
            self->m_y = y;
        }
PyObject *wxPoint2D_Get(wxPoint2D *self){
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, PyFloat_FromDouble(self->m_x));
            PyTuple_SET_ITEM(tup, 1, PyFloat_FromDouble(self->m_y));
            wxPyEndBlockThreads();
            return tup;
        }

#include "wx/wxPython/pyistream.h"

wxPyInputStream *new_wxPyInputStream(PyObject *p){
            wxInputStream* wxis = wxPyCBInputStream::create(p);
            if (wxis)
                return new wxPyInputStream(wxis);
            else
                return NULL;
        }

SWIGSTATIC(PyObject*)
SWIG_PyObj_FromChar(char c) 
{ 
  return PyString_FromStringAndSize(&c,1);
}


SWIGSTATIC(PyObject* )
SWIG_PyObj_FromUnsignedLong(unsigned long value)
{
  return (value > (unsigned long)(LONG_MAX)) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong((long)value); 
}


SWIGSTATIC(char)
SWIG_PyObj_AsChar(PyObject *obj)
{ 
  char c = 0;
  if (PyInt_Check(obj) || PyLong_Check(obj)) {
    c = numeric_cast(char,
          SWIG_PyObj_AsLongInRange(obj, "char",CHAR_MIN, CHAR_MAX));
  } else {  
    char* cptr; size_t csize;
    SWIG_PyObj_AsCharPtrAndSize(obj, 0, &cptr, &csize);
    if (csize == 1) {
      c = cptr[0];
    } else {
      PyErr_SetString(PyExc_TypeError, "a char is expected");
    }
  }
  return c;
}

void wxOutputStream_write(wxOutputStream *self,PyObject *obj){
            // We use only strings for the streams, not unicode
            PyObject* str = PyObject_Str(obj);
            if (! str) {
                PyErr_SetString(PyExc_TypeError, "Unable to convert to string");
                return;
            }
            self->Write(PyString_AS_STRING(str),
                        PyString_GET_SIZE(str));
            Py_DECREF(str);
        }

#include "wx/wxPython/pyistream.h"


class wxPyFileSystemHandler : public wxFileSystemHandler
{
public:
    wxPyFileSystemHandler() : wxFileSystemHandler() {}

    DEC_PYCALLBACK_BOOL_STRING_pure(CanOpen);
    DEC_PYCALLBACK_FSF_FSSTRING_pure(OpenFile);
    DEC_PYCALLBACK_STRING_STRINGINT_pure(FindFirst);
    DEC_PYCALLBACK_STRING__pure(FindNext);

    wxString GetProtocol(const wxString& location) {
        return wxFileSystemHandler::GetProtocol(location);
    }

    wxString GetLeftLocation(const wxString& location) {
        return wxFileSystemHandler::GetLeftLocation(location);
    }

    wxString GetAnchor(const wxString& location) {
        return wxFileSystemHandler::GetAnchor(location);
    }

    wxString GetRightLocation(const wxString& location) {
        return wxFileSystemHandler::GetRightLocation(location);
    }

    wxString GetMimeTypeFromExt(const wxString& location) {
        return wxFileSystemHandler::GetMimeTypeFromExt(location);
    }

    PYPRIVATE;
};


IMP_PYCALLBACK_BOOL_STRING_pure(wxPyFileSystemHandler, wxFileSystemHandler, CanOpen);
IMP_PYCALLBACK_FSF_FSSTRING_pure(wxPyFileSystemHandler, wxFileSystemHandler, OpenFile);
IMP_PYCALLBACK_STRING_STRINGINT_pure(wxPyFileSystemHandler, wxFileSystemHandler, FindFirst);
IMP_PYCALLBACK_STRING__pure(wxPyFileSystemHandler, wxFileSystemHandler, FindNext);


SWIGSTATIC(bool)
SWIG_PyObj_AsBool(PyObject *obj)
{
  return PyObject_IsTrue(obj) ? true : false;
}


    wxString wxFileSystem_URLToFileName(const wxString& url) {
        wxFileName fname = wxFileSystem::URLToFileName(url);
        return fname.GetFullPath();
    }


    void __wxMemoryFSHandler_AddFile_wxImage(const wxString& filename,
                                             wxImage& image,
                                             long type) {
        wxMemoryFSHandler::AddFile(filename, image, type);
    }

    void __wxMemoryFSHandler_AddFile_wxBitmap(const wxString& filename,
                                              const wxBitmap& bitmap,
                                              long type) {
        wxMemoryFSHandler::AddFile(filename, bitmap, type);
    }

    void __wxMemoryFSHandler_AddFile_Data(const wxString& filename,
                                          PyObject* data) {
        wxMemoryFSHandler::AddFile(filename,
                                   // TODO:  Verify data type
                                   (void*)PyString_AsString(data),
                                   (size_t)PyString_Size(data));
    }


#include "wx/wxPython/pyistream.h"


SWIGSTATIC(unsigned char)
SWIG_PyObj_AsUnsignedChar(PyObject *obj)
{ 
  return numeric_cast(unsigned char,
    SWIG_PyObj_AsUnsignedLongInRange(obj, "unsigned char", UCHAR_MAX));
}

wxImage *new_wxImage(int width,int height,bool clear){
            if (width > 0 && height > 0)
                return new wxImage(width, height, clear);
            else
                return new wxImage;
        }
wxImage *new_wxImage(wxBitmap const &bitmap){
            return new wxImage(bitmap.ConvertToImage());
        }
wxImage *new_wxImage(int width,int height,unsigned char *data){
            // Copy the source data so the wxImage can clean it up later
            unsigned char* copy = (unsigned char*)malloc(width*height*3);
            if (copy == NULL) {
                PyErr_NoMemory();
                return NULL;
            }
            memcpy(copy, data, width*height*3);
            return new wxImage(width, height, copy, False);
        }
PyObject *wxImage_GetData(wxImage *self){
            unsigned char* data = self->GetData();
            int len = self->GetWidth() * self->GetHeight() * 3;
            PyObject* rv;
            wxPyBLOCK_THREADS( rv = PyString_FromStringAndSize((char*)data, len));
            return rv;
        }
void wxImage_SetData(wxImage *self,PyObject *data){
            unsigned char* dataPtr;

            if (! PyString_Check(data)) {
                PyErr_SetString(PyExc_TypeError, "Expected string object");
                return /* NULL */ ;
            }

            size_t len = self->GetWidth() * self->GetHeight() * 3;
            dataPtr = (unsigned char*) malloc(len);
            wxPyBLOCK_THREADS( memcpy(dataPtr, PyString_AsString(data), len) );
            self->SetData(dataPtr);
            // wxImage takes ownership of dataPtr...
        }
PyObject *wxImage_GetDataBuffer(wxImage *self){
            unsigned char* data = self->GetData();
            int len = self->GetWidth() * self->GetHeight() * 3;
            PyObject* rv;
            wxPyBLOCK_THREADS( rv = PyBuffer_FromReadWriteMemory(data, len) );
            return rv;
        }
void wxImage_SetDataBuffer(wxImage *self,PyObject *data){
            unsigned char* buffer;
            int size;

            wxPyBeginBlockThreads();
            if (!PyArg_Parse(data, "t#", &buffer, &size))
                goto done;

            if (size != self->GetWidth() * self->GetHeight() * 3) {
                PyErr_SetString(PyExc_TypeError, "Incorrect buffer size");
                goto done;
            }
            self->SetData(buffer);
        done:
            wxPyEndBlockThreads();
        }
PyObject *wxImage_GetAlphaData(wxImage *self){
            unsigned char* data = self->GetAlpha();
            if (! data) {
                RETURN_NONE();
            } else {
                int len = self->GetWidth() * self->GetHeight();
                PyObject* rv;
                wxPyBLOCK_THREADS( rv = PyString_FromStringAndSize((char*)data, len) );
                return rv;
            }
        }
void wxImage_SetAlphaData(wxImage *self,PyObject *data){
            unsigned char* dataPtr;

            if (! PyString_Check(data)) {
                PyErr_SetString(PyExc_TypeError, "Expected string object");
                return /* NULL */ ;
            }

            size_t len = self->GetWidth() * self->GetHeight();
            dataPtr = (unsigned char*) malloc(len);
            wxPyBLOCK_THREADS( memcpy(dataPtr, PyString_AsString(data), len) );
            self->SetAlpha(dataPtr);
            // wxImage takes ownership of dataPtr...
        }
PyObject *wxImage_GetAlphaBuffer(wxImage *self){
            unsigned char* data = self->GetAlpha();
            int len = self->GetWidth() * self->GetHeight();
            PyObject* rv;
            wxPyBLOCK_THREADS( rv = PyBuffer_FromReadWriteMemory(data, len) );
            return rv;
        }
void wxImage_SetAlphaBuffer(wxImage *self,PyObject *data){
            unsigned char* buffer;
            int size;

            wxPyBeginBlockThreads();
            if (!PyArg_Parse(data, "t#", &buffer, &size))
                goto done;

            if (size != self->GetWidth() * self->GetHeight()) {
                PyErr_SetString(PyExc_TypeError, "Incorrect buffer size");
                goto done;
            }
            self->SetAlpha(buffer);
        done:
            wxPyEndBlockThreads();
        }
wxBitmap wxImage_ConvertToBitmap(wxImage *self){
            wxBitmap bitmap(*self);
            return bitmap;
        }
wxBitmap wxImage_ConvertToMonoBitmap(wxImage *self,unsigned char red,unsigned char green,unsigned char blue){
            wxImage mono = self->ConvertToMono( red, green, blue );
            wxBitmap bitmap( mono, 1 );
            return bitmap;
        }
 static const wxString wxPyIMAGE_OPTION_BMP_FORMAT(wxIMAGE_OPTION_BMP_FORMAT); 
 static const wxString wxPyIMAGE_OPTION_CUR_HOTSPOT_X(wxIMAGE_OPTION_CUR_HOTSPOT_X); 
 static const wxString wxPyIMAGE_OPTION_CUR_HOTSPOT_Y(wxIMAGE_OPTION_CUR_HOTSPOT_Y); 
 static const wxString wxPyIMAGE_OPTION_RESOLUTION(wxIMAGE_OPTION_RESOLUTION); 
 static const wxString wxPyIMAGE_OPTION_RESOLUTIONUNIT(wxIMAGE_OPTION_RESOLUTIONUNIT); 
void wxEvtHandler_Connect(wxEvtHandler *self,int id,int lastId,int eventType,PyObject *func){
            if (PyCallable_Check(func)) {
                self->Connect(id, lastId, eventType,
                          (wxObjectEventFunction) &wxPyCallback::EventThunker,
                          new wxPyCallback(func));
            }
            else if (func == Py_None) {
                self->Disconnect(id, lastId, eventType,
                                 (wxObjectEventFunction)
                                 &wxPyCallback::EventThunker);
            }
            else {
                PyErr_SetString(PyExc_TypeError, "Expected callable object or None.");
            }
        }
bool wxEvtHandler_Disconnect(wxEvtHandler *self,int id,int lastId,wxEventType eventType){
            return self->Disconnect(id, lastId, eventType,
                                   (wxObjectEventFunction)
                                    &wxPyCallback::EventThunker);
        }
void wxEvtHandler__setOORInfo(wxEvtHandler *self,PyObject *_self){
            if (_self && _self != Py_None) {
                self->SetClientObject(new wxPyOORClientData(_self));
            }
            else {
                wxPyOORClientData* data = (wxPyOORClientData*)self->GetClientObject();
                if (data) {
                    self->SetClientObject(NULL);  // This will delete it too
                }
            }
        }
int wxKeyEvent_GetUniChar(wxKeyEvent *self){
        #if wxUSE_UNICODE
            return self->m_uniChar;
        #else
            return 0;
        #endif
        }

#define SWIG_PyObj_FromUnsignedInt    SWIG_PyObj_FromUnsignedLong  


SWIGSTATIC(unsigned int)
SWIG_PyObj_AsUnsignedInt(PyObject *obj)
{ 
  return numeric_cast(unsigned int,
    SWIG_PyObj_AsUnsignedLongInRange(obj, "unsigned int", UINT_MAX));
}

void wxSizeEvent_SetSize(wxSizeEvent *self,wxSize size){
            self->m_size = size;
        }
void wxMoveEvent_SetPosition(wxMoveEvent *self,wxPoint pos){
            self->m_pos = pos;
        }
PyObject *wxDropFilesEvent_GetFiles(wxDropFilesEvent *self){
            int         count = self->GetNumberOfFiles();
            wxString*   files = self->GetFiles();
            PyObject*   list  = PyList_New(count);

            if (!list) {
                PyErr_SetString(PyExc_MemoryError, "Can't allocate list of files!");
                return NULL;
            }

            for (int i=0; i<count; i++) {
                PyList_SetItem(list, i, wx2PyString(files[i]));
            }
            return list;
        }


wxPyApp *new_wxPyApp(){
            wxPythonApp = new wxPyApp();
            return wxPythonApp;
        }
int PyApp_GetComCtl32Version(){ wxPyRaiseNotImplemented(); return 0; }

    void wxApp_CleanUp() {
        __wxPyCleanup();
    }


    wxPyApp* wxGetApp() {
        return (wxPyApp*)wxTheApp;
    }



 static const wxString wxPyPanelNameStr(wxPanelNameStr); 
PyObject *wxWindow_GetChildren(wxWindow *self){
            wxWindowList& list = self->GetChildren();
            return wxPy_ConvertList(&list);
        }
bool wxWindow_RegisterHotKey(wxWindow *self,int hotkeyId,int modifiers,int keycode){
        


            return False;
        
        }
bool wxWindow_UnregisterHotKey(wxWindow *self,int hotkeyId){
        


            return False;
        
        }
long wxWindow_GetHandle(wxWindow *self){
            return wxPyGetWinHandle(self);
        }

wxWindow* wxFindWindowById( long id, const wxWindow *parent = NULL ) {
    return wxWindow::FindWindowById(id, parent);
}

wxWindow* wxFindWindowByName( const wxString& name,
                              const wxWindow *parent = NULL ) {
     return wxWindow::FindWindowByName(name, parent);
}

wxWindow* wxFindWindowByLabel( const wxString& label,
                               const wxWindow *parent = NULL ) {
    return wxWindow::FindWindowByLabel(label, parent);
}


    wxWindow* wxWindow_FromHWND(unsigned long hWnd) {
#ifdef __WXMSW__
        wxWindow* win = new wxWindow;
        win->SetHWND(hWnd);
        win->SubclassWin(hWnd);
        return win;
#else
        wxPyRaiseNotImplemented();
        return NULL;
#endif
    }


IMP_PYCALLBACK_BOOL_WXWIN(wxPyValidator, wxValidator, Validate);
IMP_PYCALLBACK_BOOL_(wxPyValidator, wxValidator, TransferToWindow);
IMP_PYCALLBACK_BOOL_(wxPyValidator, wxValidator, TransferFromWindow);

IMPLEMENT_DYNAMIC_CLASS(wxPyValidator, wxValidator);

void wxMenu_Destroy(wxMenu *self){ delete self; }
PyObject *wxMenu_GetMenuItems(wxMenu *self){
            wxMenuItemList& list = self->GetMenuItems();
            return wxPy_ConvertList(&list);
        }
int MenuItem_GetDefaultMarginWidth(){ return 0; }
 static const wxString wxPyControlNameStr(wxControlNameStr); 
int wxItemContainer_Append(wxItemContainer *self,wxString const &item,PyObject *clientData){
            if (clientData) {
                wxPyClientData* data = new wxPyClientData(clientData);
                return self->Append(item, data);
            } else
                return self->Append(item);
        }
int wxItemContainer_Insert(wxItemContainer *self,wxString const &item,int pos,PyObject *clientData){
            if (clientData) {
                wxPyClientData* data = new wxPyClientData(clientData);
                return self->Insert(item, pos, data);
            } else
                return self->Insert(item, pos);
        }
PyObject *wxItemContainer_GetClientData(wxItemContainer *self,int n){
            wxPyClientData* data = (wxPyClientData*)self->GetClientObject(n);
            if (data) {
                Py_INCREF(data->m_obj);
                return data->m_obj;
            } else {
                Py_INCREF(Py_None);
                return Py_None;
            }
        }
void wxItemContainer_SetClientData(wxItemContainer *self,int n,PyObject *clientData){
            wxPyClientData* data = new wxPyClientData(clientData);
            self->SetClientObject(n, data);
        }



SWIGSTATIC(float)
SWIG_PyObj_AsFloat(PyObject *obj)
{
  return SWIG_PyObj_AsFloatConv(obj, SWIG_PyObj_AsDouble);
}

PyObject *wxSizerItem_GetUserData(wxSizerItem *self){
            wxPyUserData* data = (wxPyUserData*)self->GetUserData();
            if (data) {
                Py_INCREF(data->m_obj);
                return data->m_obj;
            } else {
                Py_INCREF(Py_None);
                return Py_None;
            }
        }

// Figure out the type of the sizer item

struct wxPySizerItemInfo {
    wxPySizerItemInfo()
        : window(NULL), sizer(NULL), gotSize(False),
          size(wxDefaultSize), gotPos(False), pos(-1)
    {}
    
    wxWindow* window;
    wxSizer*  sizer;
    bool      gotSize;
    wxSize    size;
    bool      gotPos;
    int       pos;
};
 
static wxPySizerItemInfo wxPySizerItemTypeHelper(PyObject* item, bool checkSize, bool checkIdx ) {

    wxPySizerItemInfo info;
    wxSize  size;
    wxSize* sizePtr = &size;

    // Find out what the type of the item is
    // try wxWindow
    if ( ! wxPyConvertSwigPtr(item, (void**)&info.window, wxT("wxWindow")) ) {
        PyErr_Clear();
        info.window = NULL;
                
        // try wxSizer
        if ( ! wxPyConvertSwigPtr(item, (void**)&info.sizer, wxT("wxSizer")) ) {
            PyErr_Clear();
            info.sizer = NULL;
            
            // try wxSize or (w,h)
            if ( checkSize && wxSize_helper(item, &sizePtr)) {
                info.size = *sizePtr;
                info.gotSize = True;
            }

            // or a single int
            if (checkIdx && PyInt_Check(item)) {
                info.pos = PyInt_AsLong(item);
                info.gotPos = True;
            }
        }
    }

    if ( !(info.window || info.sizer || (checkSize && info.gotSize) || (checkIdx && info.gotPos)) ) {
        // no expected type, figure out what kind of error message to generate
        if ( !checkSize && !checkIdx )
            PyErr_SetString(PyExc_TypeError, "wxWindow or wxSizer expected for item");
        else if ( checkSize && !checkIdx )
            PyErr_SetString(PyExc_TypeError, "wxWindow, wxSizer, wxSize, or (w,h) expected for item");
        else if ( !checkSize && checkIdx)
            PyErr_SetString(PyExc_TypeError, "wxWindow, wxSizer or int (position) expected for item");
        else
            // can this one happen?
            PyErr_SetString(PyExc_TypeError, "wxWindow, wxSizer, wxSize, or (w,h) or int (position) expected for item");
    }

    return info;
}

void wxSizer__setOORInfo(wxSizer *self,PyObject *_self){
            self->SetClientObject(new wxPyOORClientData(_self));
        }
void wxSizer_Add(wxSizer *self,PyObject *item,int proportion,int flag,int border,PyObject *userData){
            
            wxPyUserData* data = NULL;
            wxPyBeginBlockThreads();
            wxPySizerItemInfo info = wxPySizerItemTypeHelper(item, True, False);
            if ( userData && (info.window || info.sizer || info.gotSize) )
                data = new wxPyUserData(userData);
            wxPyEndBlockThreads();
            
            // Now call the real Add method if a valid item type was found
            if ( info.window )
                self->Add(info.window, proportion, flag, border, data);
            else if ( info.sizer )
                self->Add(info.sizer, proportion, flag, border, data);
            else if (info.gotSize)
                self->Add(info.size.GetWidth(), info.size.GetHeight(),
                          proportion, flag, border, data);
        }
void wxSizer_Insert(wxSizer *self,int before,PyObject *item,int proportion,int flag,int border,PyObject *userData){

            wxPyUserData* data = NULL;
            wxPyBeginBlockThreads();
            wxPySizerItemInfo info = wxPySizerItemTypeHelper(item, True, False);
            if ( userData && (info.window || info.sizer || info.gotSize) )
                data = new wxPyUserData(userData);
            wxPyEndBlockThreads();
            
            // Now call the real Insert method if a valid item type was found
            if ( info.window )
                self->Insert(before, info.window, proportion, flag, border, data);
            else if ( info.sizer )
                self->Insert(before, info.sizer, proportion, flag, border, data);
            else if (info.gotSize)
                self->Insert(before, info.size.GetWidth(), info.size.GetHeight(),
                             proportion, flag, border, data);
        }
void wxSizer_Prepend(wxSizer *self,PyObject *item,int proportion,int flag,int border,PyObject *userData){

            wxPyUserData* data = NULL;
            wxPyBeginBlockThreads();
            wxPySizerItemInfo info = wxPySizerItemTypeHelper(item, True, False);
            if ( userData && (info.window || info.sizer || info.gotSize) )
                data = new wxPyUserData(userData);
            wxPyEndBlockThreads();
            
            // Now call the real Prepend method if a valid item type was found
            if ( info.window )
                self->Prepend(info.window, proportion, flag, border, data);
            else if ( info.sizer )
                self->Prepend(info.sizer, proportion, flag, border, data);
            else if (info.gotSize)
                self->Prepend(info.size.GetWidth(), info.size.GetHeight(),
                              proportion, flag, border, data);
        }
bool wxSizer_Remove(wxSizer *self,PyObject *item){
            wxPyBeginBlockThreads();
            wxPySizerItemInfo info = wxPySizerItemTypeHelper(item, False, True);
            wxPyEndBlockThreads();
            if ( info.window )
                return self->Remove(info.window);
            else if ( info.sizer )
                return self->Remove(info.sizer);
            else if ( info.gotPos )
                return self->Remove(info.pos);
            else 
                return False;
        }
void wxSizer__SetItemMinSize(wxSizer *self,PyObject *item,wxSize const &size){
            wxPyBeginBlockThreads();
            wxPySizerItemInfo info = wxPySizerItemTypeHelper(item, False, True);
            wxPyEndBlockThreads();
            if ( info.window )
                self->SetItemMinSize(info.window, size);
            else if ( info.sizer )
                self->SetItemMinSize(info.sizer, size);
            else if ( info.gotPos )
                self->SetItemMinSize(info.pos, size);
        }
PyObject *wxSizer_GetChildren(wxSizer *self){
            wxSizerItemList& list = self->GetChildren();
            return wxPy_ConvertList(&list);
        }
void wxSizer_Show(wxSizer *self,PyObject *item,bool show){
            wxPySizerItemInfo info = wxPySizerItemTypeHelper(item, False, False);
            if ( info.window )
                self->Show(info.window, show);
            else if ( info.sizer )
                self->Show(info.sizer, show);
        }
void wxSizer_Hide(wxSizer *self,PyObject *item){
            wxPySizerItemInfo info = wxPySizerItemTypeHelper(item, False, False);
            if ( info.window )
                self->Hide(info.window);
            else if ( info.sizer )
                self->Hide(info.sizer);
        }
bool wxSizer_IsShown(wxSizer *self,PyObject *item){
            wxPySizerItemInfo info = wxPySizerItemTypeHelper(item, False, False);
            if ( info.window ) 
                return self->IsShown(info.window);
            else if ( info.sizer ) 
                return self->IsShown(info.sizer);
            else
                return False;
        }

// See pyclasses.h    
IMP_PYCALLBACK___pure(wxPySizer, wxSizer, RecalcSizes);
IMP_PYCALLBACK_wxSize__pure(wxPySizer, wxSizer, CalcMin);
IMPLEMENT_DYNAMIC_CLASS(wxPySizer, wxSizer);




bool wxGBPosition_helper(PyObject* source, wxGBPosition** obj)
{
    return wxPyTwoIntItem_helper(source, obj, wxT("wxGBPosition"));
}

bool wxGBSpan_helper(PyObject* source, wxGBSpan** obj)
{
    return wxPyTwoIntItem_helper(source, obj, wxT("wxGBSpan"));
}


void wxGBPosition_Set(wxGBPosition *self,int row,int col){
            self->SetRow(row);
            self->SetCol(col);
        }
PyObject *wxGBPosition_Get(wxGBPosition *self){
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, PyInt_FromLong(self->GetRow()));
            PyTuple_SET_ITEM(tup, 1, PyInt_FromLong(self->GetCol()));
            wxPyEndBlockThreads();
            return tup;
        }
void wxGBSpan_Set(wxGBSpan *self,int rowspan,int colspan){
            self->SetRowspan(rowspan);
            self->SetColspan(colspan);
        }
PyObject *wxGBSpan_Get(wxGBSpan *self){
            wxPyBeginBlockThreads();
            PyObject* tup = PyTuple_New(2);
            PyTuple_SET_ITEM(tup, 0, PyInt_FromLong(self->GetRowspan()));
            PyTuple_SET_ITEM(tup, 1, PyInt_FromLong(self->GetColspan()));
            wxPyEndBlockThreads();
            return tup;
        }
bool wxGridBagSizer_Add(wxGridBagSizer *self,PyObject *item,wxGBPosition const &pos,wxGBSpan const &span,int flag,int border,PyObject *userData){

            wxPyUserData* data = NULL;
            wxPyBeginBlockThreads();
            wxPySizerItemInfo info = wxPySizerItemTypeHelper(item, True, False);
            if ( userData && (info.window || info.sizer || info.gotSize) )
                data = new wxPyUserData(userData);
            wxPyEndBlockThreads();
            
            // Now call the real Add method if a valid item type was found
            if ( info.window )
                return self->Add(info.window, pos, span, flag, border, data);
            else if ( info.sizer )
                return self->Add(info.sizer, pos, span, flag, border, data);
            else if (info.gotSize)
                return self->Add(info.size.GetWidth(), info.size.GetHeight(),
                                 pos, span, flag, border, data);
            return False;
        }


#ifdef __cplusplus
extern "C" {
#endif
static int _wrap_EmptyString_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable EmptyString is read-only.");
    return 1;
}


static PyObject *_wrap_EmptyString_get() {
    PyObject *pyobj;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyEmptyString)->c_str(), (&wxPyEmptyString)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyEmptyString)->c_str(), (&wxPyEmptyString)->Len());
#endif
    }
    return pyobj;
}


static PyObject *_wrap_Object_GetClassName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxObject *arg1 = (wxObject *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Object_GetClassName",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = wxObject_GetClassName(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Object_Destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxObject *arg1 = (wxObject *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Object_Destroy",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxObject_Destroy(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Object_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxObject, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Size_width_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size_width_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_width_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Size_width_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->x);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_height_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size_height_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_height_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Size_height_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->y);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Size(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    int arg2 = (int) 0 ;
    wxSize *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_Size",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSize *)new wxSize(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSize, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Size(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_Size",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size___eq__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    wxSize *arg2 = 0 ;
    bool result;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size___eq__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->operator ==((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size___ne__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    wxSize *arg2 = 0 ;
    bool result;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size___ne__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->operator !=((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size___add__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize result;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size___add__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->operator +((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size___sub__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize result;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size___sub__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->operator -((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_IncTo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size_IncTo",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->IncTo((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_DecTo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size_DecTo",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DecTo((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Size_Set",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Set(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_SetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size_SetWidth",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWidth(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_SetHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Size_SetHeight",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHeight(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_GetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Size_GetWidth",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxSize const *)arg1)->GetWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_GetHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Size_GetHeight",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxSize const *)arg1)->GetHeight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Size_Get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize *arg1 = (wxSize *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Size_Get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxSize_Get(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Size_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxSize, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_RealPoint_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RealPoint_x_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealPoint_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:RealPoint_x_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double) ((arg1)->x);
    
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealPoint_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RealPoint_y_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealPoint_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:RealPoint_y_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double) ((arg1)->y);
    
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    double arg1 = (double) 0.0 ;
    double arg2 = (double) 0.0 ;
    wxRealPoint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_RealPoint",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (double) SWIG_PyObj_AsDouble(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxRealPoint *)new wxRealPoint(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRealPoint, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_RealPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_RealPoint",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealPoint___eq__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    wxRealPoint *arg2 = 0 ;
    bool result;
    wxRealPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RealPoint___eq__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRealPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->operator ==((wxRealPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealPoint___ne__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    wxRealPoint *arg2 = 0 ;
    bool result;
    wxRealPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RealPoint___ne__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRealPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->operator !=((wxRealPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealPoint___add__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    wxRealPoint *arg2 = 0 ;
    wxRealPoint result;
    wxRealPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RealPoint___add__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRealPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->operator +((wxRealPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRealPoint * resultptr;
        resultptr = new wxRealPoint((wxRealPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxRealPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealPoint___sub__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    wxRealPoint *arg2 = 0 ;
    wxRealPoint result;
    wxRealPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RealPoint___sub__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRealPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->operator -((wxRealPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRealPoint * resultptr;
        resultptr = new wxRealPoint((wxRealPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxRealPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealPoint_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:RealPoint_Set",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (double) SWIG_PyObj_AsDouble(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxRealPoint_Set(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealPoint_Get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRealPoint *arg1 = (wxRealPoint *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:RealPoint_Get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRealPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxRealPoint_Get(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RealPoint_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxRealPoint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Point_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point_x_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point_x_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->x);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point_y_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point_y_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->y);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Point(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    int arg2 = (int) 0 ;
    wxPoint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_Point",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPoint *)new wxPoint(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Point(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_Point",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point___eq__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    wxPoint *arg2 = 0 ;
    bool result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point___eq__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->operator ==((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point___ne__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    wxPoint *arg2 = 0 ;
    bool result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point___ne__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->operator !=((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point___add__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point___add__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->operator +((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point___sub__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point___sub__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->operator -((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point___iadd__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint *result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point___iadd__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxPoint &_result_ref = (arg1)->operator +=((wxPoint const &)*arg2);
            result = (wxPoint *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point___isub__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint *result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point___isub__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxPoint &_result_ref = (arg1)->operator -=((wxPoint const &)*arg2);
            result = (wxPoint *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    long arg2 ;
    long arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Point_Set",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (long) SWIG_PyObj_AsLong(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPoint_Set(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point_Get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = (wxPoint *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point_Get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPoint_Get(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Point_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPoint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Rect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    int arg2 = (int) 0 ;
    int arg3 = (int) 0 ;
    int arg4 = (int) 0 ;
    wxRect *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "x",(char *) "y",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOO:new_Rect",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxRect *)new wxRect(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RectPP(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = 0 ;
    wxPoint *arg2 = 0 ;
    wxRect *result;
    wxPoint temp1 ;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "topLeft",(char *) "bottomRight", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:new_RectPP",kwnames,&obj0,&obj1)) goto fail;
    {
        arg1 = &temp1;
        if ( ! wxPoint_helper(obj0, &arg1)) SWIG_fail;
    }
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxRect *)new wxRect((wxPoint const &)*arg1,(wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RectPS(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = 0 ;
    wxSize *arg2 = 0 ;
    wxRect *result;
    wxPoint temp1 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "pos",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:new_RectPS",kwnames,&obj0,&obj1)) goto fail;
    {
        arg1 = &temp1;
        if ( ! wxPoint_helper(obj0, &arg1)) SWIG_fail;
    }
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxRect *)new wxRect((wxPoint const &)*arg1,(wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Rect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_Rect",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetX",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxRect const *)arg1)->GetX();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetX",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetX(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetY",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetY();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetY",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetY(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetWidth",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxRect const *)arg1)->GetWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetWidth",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWidth(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetHeight",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxRect const *)arg1)->GetHeight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetHeight",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHeight(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxRect const *)arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "p", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetPosition",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPosition((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxRect const *)arg1)->GetSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "s", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetSize",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSize((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetTopLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetTopLeft",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxRect const *)arg1)->GetTopLeft();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetTopLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "p", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetTopLeft",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTopLeft((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetBottomRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetBottomRight",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxRect const *)arg1)->GetBottomRight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetBottomRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "p", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetBottomRight",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBottomRight((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetLeft",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxRect const *)arg1)->GetLeft();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetTop",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxRect const *)arg1)->GetTop();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetBottom",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxRect const *)arg1)->GetBottom();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_GetRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_GetRight",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxRect const *)arg1)->GetRight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "left", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetLeft",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLeft(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "right", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetRight",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRight(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "top", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetTop",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTop(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_SetBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bottom", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_SetBottom",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBottom(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_Inflate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    int arg3 ;
    wxRect *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dx",(char *) "dy", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Rect_Inflate",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxRect &_result_ref = (arg1)->Inflate(arg2,arg3);
            result = (wxRect *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_Deflate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    int arg3 ;
    wxRect *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dx",(char *) "dy", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Rect_Deflate",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxRect &_result_ref = (arg1)->Deflate(arg2,arg3);
            result = (wxRect *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_OffsetXY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dx",(char *) "dy", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Rect_OffsetXY",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Offset(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_Offset(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_Offset",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Offset((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_Intersect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect *result;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_Intersect",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxRect &_result_ref = (arg1)->Intersect((wxRect const &)*arg2);
            result = (wxRect *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect___add__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect result;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect___add__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxRect const *)arg1)->operator +((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRect * resultptr;
        resultptr = new wxRect((wxRect &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxRect, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect___iadd__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect *result;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect___iadd__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxRect &_result_ref = (arg1)->operator +=((wxRect const &)*arg2);
            result = (wxRect *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect___eq__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxRect *arg2 = 0 ;
    bool result;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect___eq__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxRect const *)arg1)->operator ==((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect___ne__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxRect *arg2 = 0 ;
    bool result;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect___ne__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxRect const *)arg1)->operator !=((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_InsideXY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Rect_InsideXY",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxRect const *)arg1)->Inside(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_Inside(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxPoint *arg2 = 0 ;
    bool result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_Inside",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxRect const *)arg1)->Inside((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_Intersects(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxRect *arg2 = 0 ;
    bool result;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_Intersects",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxRect const *)arg1)->Intersects((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_x_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_x_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->x);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_y_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_y_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->y);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_width_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "width", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_width_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->width = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_width_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_width_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->width);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_height_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Rect_height_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->height = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_height_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_height_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->height);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    int arg2 = (int) 0 ;
    int arg3 = (int) 0 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOO:Rect_Set",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxRect_Set(arg1,arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_Get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Rect_Get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxRect_Get(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Rect_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxRect, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_IntersectRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxRect *arg1 = (wxRect *) 0 ;
    wxRect *arg2 = (wxRect *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "r1",(char *) "r2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IntersectRect",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxIntersectRect(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Point2D(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    double arg1 = (double) 0.0 ;
    double arg2 = (double) 0.0 ;
    wxPoint2D *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_Point2D",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (double) SWIG_PyObj_AsDouble(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPoint2D *)new wxPoint2D(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint2D, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Point2DCopy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = 0 ;
    wxPoint2D *result;
    wxPoint2D temp1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:new_Point2DCopy",kwnames,&obj0)) goto fail;
    {
        arg1 = &temp1;
        if ( ! wxPoint2D_helper(obj0, &arg1)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPoint2D *)new wxPoint2D((wxPoint2D const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint2D, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Point2DFromPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint *arg1 = 0 ;
    wxPoint2D *result;
    wxPoint temp1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:new_Point2DFromPoint",kwnames,&obj0)) goto fail;
    {
        arg1 = &temp1;
        if ( ! wxPoint_helper(obj0, &arg1)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPoint2D *)new wxPoint2D((wxPoint const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint2D, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_GetFloor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point2D_GetFloor",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        ((wxPoint2D const *)arg1)->GetFloor(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_GetRounded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point2D_GetRounded",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        ((wxPoint2D const *)arg1)->GetRounded(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_GetVectorLength(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point2D_GetVectorLength",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)((wxPoint2D const *)arg1)->GetVectorLength();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_GetVectorAngle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point2D_GetVectorAngle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)((wxPoint2D const *)arg1)->GetVectorAngle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_SetVectorLength(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "length", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D_SetVectorLength",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVectorLength(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_SetVectorAngle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "degrees", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D_SetVectorAngle",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVectorAngle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_GetDistance(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    double result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D_GetDistance",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)((wxPoint2D const *)arg1)->GetDistance((wxPoint2D const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_GetDistanceSquare(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    double result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D_GetDistanceSquare",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)((wxPoint2D const *)arg1)->GetDistanceSquare((wxPoint2D const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_GetDotProduct(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    double result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "vec", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D_GetDotProduct",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)((wxPoint2D const *)arg1)->GetDotProduct((wxPoint2D const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_GetCrossProduct(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    double result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "vec", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D_GetCrossProduct",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)((wxPoint2D const *)arg1)->GetCrossProduct((wxPoint2D const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D___neg__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point2D___neg__",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->operator -();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint2D * resultptr;
        resultptr = new wxPoint2D((wxPoint2D &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint2D, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D___iadd__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    wxPoint2D *result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D___iadd__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxPoint2D &_result_ref = (arg1)->operator +=((wxPoint2D const &)*arg2);
            result = (wxPoint2D *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D___isub__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    wxPoint2D *result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D___isub__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxPoint2D &_result_ref = (arg1)->operator -=((wxPoint2D const &)*arg2);
            result = (wxPoint2D *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D___imul__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    wxPoint2D *result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D___imul__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxPoint2D &_result_ref = (arg1)->operator *=((wxPoint2D const &)*arg2);
            result = (wxPoint2D *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D___idiv__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    wxPoint2D *result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D___idiv__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxPoint2D &_result_ref = (arg1)->operator /=((wxPoint2D const &)*arg2);
            result = (wxPoint2D *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D___eq__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    bool result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D___eq__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPoint2D const *)arg1)->operator ==((wxPoint2D const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D___ne__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    wxPoint2D *arg2 = 0 ;
    bool result;
    wxPoint2D temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D___ne__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint2D_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPoint2D const *)arg1)->operator !=((wxPoint2D const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D_x_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point2D_x_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double) ((arg1)->m_x);
    
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Point2D_y_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point2D_y_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double) ((arg1)->m_y);
    
    resultobj = SWIG_PyObj_FromDouble((double)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    double arg2 = (double) 0 ;
    double arg3 = (double) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:Point2D_Set",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (double) SWIG_PyObj_AsDouble(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPoint2D_Set(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2D_Get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint2D *arg1 = (wxPoint2D *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Point2D_Get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPoint2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPoint2D_Get(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Point2D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPoint2D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_DefaultPosition_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable DefaultPosition is read-only.");
    return 1;
}


static PyObject *_wrap_DefaultPosition_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) &wxDefaultPosition, SWIGTYPE_p_wxPoint, 0);
    return pyobj;
}


static int _wrap_DefaultSize_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable DefaultSize is read-only.");
    return 1;
}


static PyObject *_wrap_DefaultSize_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) &wxDefaultSize, SWIGTYPE_p_wxSize, 0);
    return pyobj;
}


static PyObject *_wrap_new_InputStream(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    PyObject *arg1 = (PyObject *) 0 ;
    wxPyInputStream *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "p", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:new_InputStream",kwnames,&obj0)) goto fail;
    arg1 = obj0;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyInputStream *)new_wxPyInputStream(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPyInputStream, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_close(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_close",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->close();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_flush(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_flush",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->flush();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_eof(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_eof",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->eof();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_read(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    int arg2 = (int) -1 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:InputStream_read",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)(arg1)->read(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_readline(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    int arg2 = (int) -1 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:InputStream_readline",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)(arg1)->readline(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_readlines(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    int arg2 = (int) -1 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sizehint", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:InputStream_readlines",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)(arg1)->readlines(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_seek(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    int arg2 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "offset",(char *) "whence", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:InputStream_seek",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->seek(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_tell(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_tell",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->tell();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_Peek(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    char result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_Peek",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (char)(arg1)->Peek();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromChar((char)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_GetC(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    char result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_GetC",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (char)(arg1)->GetC();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromChar((char)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_LastRead(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_LastRead",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (size_t)(arg1)->LastRead();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedLong((unsigned long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_CanRead(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_CanRead",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CanRead();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_Eof(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_Eof",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Eof();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_Ungetch(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    char arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "c", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:InputStream_Ungetch",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (char) SWIG_PyObj_AsChar(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Ungetch(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_SeekI(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    long arg2 ;
    int arg3 = (int) wxFromStart ;
    long result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:InputStream_SeekI",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (wxSeekMode) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)(arg1)->SeekI(arg2,(wxSeekMode )arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InputStream_TellI(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyInputStream *arg1 = (wxPyInputStream *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:InputStream_TellI",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyInputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)(arg1)->TellI();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * InputStream_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyInputStream, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_OutputStream_write(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxOutputStream *arg1 = (wxOutputStream *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "obj", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:OutputStream_write",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxOutputStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxOutputStream_write(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OutputStream_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxOutputStream, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_FSFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxInputStream *arg1 = (wxInputStream *) 0 ;
    wxString *arg2 = 0 ;
    wxString *arg3 = 0 ;
    wxString *arg4 = 0 ;
    wxDateTime arg5 ;
    wxFSFile *result;
    wxPyInputStream *temp1 ;
    bool created1 ;
    bool temp2 = False ;
    bool temp3 = False ;
    bool temp4 = False ;
    wxDateTime *argp5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "stream",(char *) "loc",(char *) "mimetype",(char *) "anchor",(char *) "modif", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:new_FSFile",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    {
        if (wxPyConvertSwigPtr(obj0, (void **)&temp1, wxT("wxPyInputStream"))) {
            arg1 = temp1->m_wxis;
            created1 = False;
        } else {
            PyErr_Clear();  // clear the failure of the wxPyConvert above
            arg1 = wxPyCBInputStream_create(obj0, False);
            if (arg1 == NULL) {
                PyErr_SetString(PyExc_TypeError, "Expected wxInputStream or Python file-like object.");
                SWIG_fail;
            }
            created1 = True;
        }
    }
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = True;
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &argp5, SWIGTYPE_p_wxDateTime,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg5 = *argp5; 
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFSFile *)new wxFSFile(arg1,(wxString const &)*arg2,(wxString const &)*arg3,(wxString const &)*arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (created1)
        delete arg1;
    }
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (created1)
        delete arg1;
    }
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_delete_FSFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFSFile *arg1 = (wxFSFile *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_FSFile",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFSFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FSFile_GetStream(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFSFile *arg1 = (wxFSFile *) 0 ;
    wxInputStream *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FSFile_GetStream",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFSFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxInputStream *)(arg1)->GetStream();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPyInputStream * _ptr = NULL;
        
        if (result) {
            _ptr = new wxPyInputStream(result);
        }
        resultobj = wxPyConstructObject(_ptr, wxT("wxPyInputStream"), True);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FSFile_GetMimeType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFSFile *arg1 = (wxFSFile *) 0 ;
    wxString *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FSFile_GetMimeType",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFSFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxString const &_result_ref = (arg1)->GetMimeType();
            result = (wxString *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
        resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FSFile_GetLocation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFSFile *arg1 = (wxFSFile *) 0 ;
    wxString *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FSFile_GetLocation",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFSFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxString const &_result_ref = (arg1)->GetLocation();
            result = (wxString *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
        resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FSFile_GetAnchor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFSFile *arg1 = (wxFSFile *) 0 ;
    wxString *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FSFile_GetAnchor",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFSFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxString const &_result_ref = (arg1)->GetAnchor();
            result = (wxString *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
        resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FSFile_GetModificationTime(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFSFile *arg1 = (wxFSFile *) 0 ;
    wxDateTime result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FSFile_GetModificationTime",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFSFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetModificationTime();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxDateTime * resultptr;
        resultptr = new wxDateTime((wxDateTime &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxDateTime, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * FSFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxFSFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject * CPPFileSystemHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxFileSystemHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_FileSystemHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_FileSystemHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyFileSystemHandler *)new wxPyFileSystemHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPyFileSystemHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileSystemHandler__setCallbackInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:FileSystemHandler__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileSystemHandler_CanOpen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileSystemHandler_CanOpen",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CanOpen((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_FileSystemHandler_OpenFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    wxFileSystem *arg2 = 0 ;
    wxString *arg3 = 0 ;
    wxFSFile *result;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "fs",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:FileSystemHandler_OpenFile",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFSFile *)(arg1)->OpenFile(*arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_FileSystemHandler_FindFirst(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 = (int) 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "spec",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:FileSystemHandler_FindFirst",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->FindFirst((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_FileSystemHandler_FindNext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FileSystemHandler_FindNext",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->FindNext();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileSystemHandler_GetProtocol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    wxString *arg2 = 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileSystemHandler_GetProtocol",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetProtocol((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_FileSystemHandler_GetLeftLocation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    wxString *arg2 = 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileSystemHandler_GetLeftLocation",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetLeftLocation((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_FileSystemHandler_GetAnchor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    wxString *arg2 = 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileSystemHandler_GetAnchor",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetAnchor((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_FileSystemHandler_GetRightLocation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    wxString *arg2 = 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileSystemHandler_GetRightLocation",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetRightLocation((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_FileSystemHandler_GetMimeTypeFromExt(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyFileSystemHandler *arg1 = (wxPyFileSystemHandler *) 0 ;
    wxString *arg2 = 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileSystemHandler_GetMimeTypeFromExt",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetMimeTypeFromExt((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject * FileSystemHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyFileSystemHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_FileSystem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFileSystem *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_FileSystem",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFileSystem *)new wxFileSystem();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_FileSystem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFileSystem *arg1 = (wxFileSystem *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_FileSystem",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileSystem_ChangePathTo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFileSystem *arg1 = (wxFileSystem *) 0 ;
    wxString *arg2 = 0 ;
    bool arg3 = (bool) False ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location",(char *) "is_dir", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:FileSystem_ChangePathTo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        {
            arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ChangePathTo((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_FileSystem_GetPath(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFileSystem *arg1 = (wxFileSystem *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FileSystem_GetPath",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetPath();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileSystem_OpenFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFileSystem *arg1 = (wxFileSystem *) 0 ;
    wxString *arg2 = 0 ;
    wxFSFile *result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileSystem_OpenFile",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFSFile *)(arg1)->OpenFile((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_FileSystem_FindFirst(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFileSystem *arg1 = (wxFileSystem *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 = (int) 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "spec",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:FileSystem_FindFirst",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->FindFirst((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_FileSystem_FindNext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFileSystem *arg1 = (wxFileSystem *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FileSystem_FindNext",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->FindNext();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileSystem_AddHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFileSystemHandler *arg1 = (wxFileSystemHandler *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FileSystem_AddHandler",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFileSystemHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxFileSystem::AddHandler(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileSystem_CleanUpHandlers(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":FileSystem_CleanUpHandlers",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxFileSystem::CleanUpHandlers();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileSystem_FileNameToURL(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    wxString result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "filename", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FileSystem_FileNameToURL",kwnames,&obj0)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = wxFileSystem::FileNameToURL((wxString const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject * FileSystem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxFileSystem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_FileSystem_URLToFileName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    wxString result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "url", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FileSystem_URLToFileName",kwnames,&obj0)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = wxFileSystem_URLToFileName((wxString const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_new_InternetFSHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxInternetFSHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_InternetFSHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxInternetFSHandler *)new wxInternetFSHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxInternetFSHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_InternetFSHandler_CanOpen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxInternetFSHandler *arg1 = (wxInternetFSHandler *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:InternetFSHandler_CanOpen",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxInternetFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CanOpen((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_InternetFSHandler_OpenFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxInternetFSHandler *arg1 = (wxInternetFSHandler *) 0 ;
    wxFileSystem *arg2 = 0 ;
    wxString *arg3 = 0 ;
    wxFSFile *result;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "fs",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:InternetFSHandler_OpenFile",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxInternetFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFSFile *)(arg1)->OpenFile(*arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject * InternetFSHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxInternetFSHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ZipFSHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxZipFSHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_ZipFSHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxZipFSHandler *)new wxZipFSHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxZipFSHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ZipFSHandler_CanOpen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxZipFSHandler *arg1 = (wxZipFSHandler *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ZipFSHandler_CanOpen",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxZipFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CanOpen((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ZipFSHandler_OpenFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxZipFSHandler *arg1 = (wxZipFSHandler *) 0 ;
    wxFileSystem *arg2 = 0 ;
    wxString *arg3 = 0 ;
    wxFSFile *result;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "fs",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ZipFSHandler_OpenFile",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxZipFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFSFile *)(arg1)->OpenFile(*arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_ZipFSHandler_FindFirst(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxZipFSHandler *arg1 = (wxZipFSHandler *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 = (int) 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "spec",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:ZipFSHandler_FindFirst",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxZipFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->FindFirst((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ZipFSHandler_FindNext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxZipFSHandler *arg1 = (wxZipFSHandler *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ZipFSHandler_FindNext",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxZipFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->FindNext();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ZipFSHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxZipFSHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap___wxMemoryFSHandler_AddFile_wxImage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    wxImage *arg2 = 0 ;
    long arg3 ;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "filename",(char *) "image",(char *) "type", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:__wxMemoryFSHandler_AddFile_wxImage",kwnames,&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        arg3 = (long) SWIG_PyObj_AsLong(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        __wxMemoryFSHandler_AddFile_wxImage((wxString const &)*arg1,*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap___wxMemoryFSHandler_AddFile_wxBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    wxBitmap *arg2 = 0 ;
    long arg3 ;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "filename",(char *) "bitmap",(char *) "type", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:__wxMemoryFSHandler_AddFile_wxBitmap",kwnames,&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxBitmap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        arg3 = (long) SWIG_PyObj_AsLong(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        __wxMemoryFSHandler_AddFile_wxBitmap((wxString const &)*arg1,(wxBitmap const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap___wxMemoryFSHandler_AddFile_Data(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "filename",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:__wxMemoryFSHandler_AddFile_Data",kwnames,&obj0,&obj1)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        __wxMemoryFSHandler_AddFile_Data((wxString const &)*arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_new_MemoryFSHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMemoryFSHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_MemoryFSHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMemoryFSHandler *)new wxMemoryFSHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxMemoryFSHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MemoryFSHandler_RemoveFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "filename", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MemoryFSHandler_RemoveFile",kwnames,&obj0)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxMemoryFSHandler::RemoveFile((wxString const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_MemoryFSHandler_CanOpen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMemoryFSHandler *arg1 = (wxMemoryFSHandler *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MemoryFSHandler_CanOpen",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMemoryFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CanOpen((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_MemoryFSHandler_OpenFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMemoryFSHandler *arg1 = (wxMemoryFSHandler *) 0 ;
    wxFileSystem *arg2 = 0 ;
    wxString *arg3 = 0 ;
    wxFSFile *result;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "fs",(char *) "location", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MemoryFSHandler_OpenFile",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMemoryFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxFileSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFSFile *)(arg1)->OpenFile(*arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_MemoryFSHandler_FindFirst(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMemoryFSHandler *arg1 = (wxMemoryFSHandler *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 = (int) 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "spec",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:MemoryFSHandler_FindFirst",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMemoryFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->FindFirst((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_MemoryFSHandler_FindNext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMemoryFSHandler *arg1 = (wxMemoryFSHandler *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MemoryFSHandler_FindNext",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMemoryFSHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->FindNext();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MemoryFSHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMemoryFSHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ImageHandler_GetName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ImageHandler_GetName",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetName();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ImageHandler_GetExtension(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ImageHandler_GetExtension",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetExtension();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ImageHandler_GetType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ImageHandler_GetType",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)(arg1)->GetType();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ImageHandler_GetMimeType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ImageHandler_GetMimeType",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetMimeType();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ImageHandler_CanRead(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ImageHandler_CanRead",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CanRead((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ImageHandler_SetName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ImageHandler_SetName",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetName((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ImageHandler_SetExtension(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "extension", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ImageHandler_SetExtension",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetExtension((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ImageHandler_SetType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "type", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ImageHandler_SetType",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetType(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ImageHandler_SetMimeType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mimetype", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ImageHandler_SetMimeType",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMimeType((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject * ImageHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxImageHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ImageHistogram(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHistogram *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_ImageHistogram",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImageHistogram *)new wxImageHistogram();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxImageHistogram, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ImageHistogram_MakeKey(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    unsigned char arg1 ;
    unsigned char arg2 ;
    unsigned char arg3 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "r",(char *) "g",(char *) "b", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ImageHistogram_MakeKey",kwnames,&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg2 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned long)wxImageHistogram::MakeKey(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedLong((unsigned long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ImageHistogram_FindFirstUnusedColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHistogram *arg1 = (wxImageHistogram *) 0 ;
    unsigned char *arg2 = (unsigned char *) 0 ;
    unsigned char *arg3 = (unsigned char *) 0 ;
    unsigned char *arg4 = (unsigned char *) 0 ;
    unsigned char arg5 = (unsigned char) 1 ;
    unsigned char arg6 = (unsigned char) 0 ;
    unsigned char arg7 = (unsigned char) 0 ;
    bool result;
    unsigned char temp2 ;
    unsigned char temp3 ;
    unsigned char temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "startR",(char *) "startG",(char *) "startB", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOO:ImageHistogram_FindFirstUnusedColour",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHistogram,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg5 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg6 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg7 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxImageHistogram const *)arg1)->FindFirstUnusedColour(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ImageHistogram_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxImageHistogram, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Image(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    long arg2 = (long) wxBITMAP_TYPE_ANY ;
    int arg3 = (int) -1 ;
    wxImage *result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "name",(char *) "type",(char *) "index", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:new_Image",kwnames,&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    if (obj1) {
        {
            arg2 = (long) SWIG_PyObj_AsLong(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImage *)new wxImage((wxString const &)*arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxImage, 1);
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_delete_Image(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_Image",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageFromMime(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    wxString *arg2 = 0 ;
    int arg3 = (int) -1 ;
    wxImage *result;
    bool temp1 = False ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "name",(char *) "mimetype",(char *) "index", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:new_ImageFromMime",kwnames,&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImage *)new wxImage((wxString const &)*arg1,(wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxImage, 1);
    {
        if (temp1)
        delete arg1;
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_new_ImageFromStream(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxInputStream *arg1 = 0 ;
    long arg2 = (long) wxBITMAP_TYPE_ANY ;
    int arg3 = (int) -1 ;
    wxImage *result;
    wxPyInputStream *temp1 ;
    bool created1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "stream",(char *) "type",(char *) "index", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:new_ImageFromStream",kwnames,&obj0,&obj1,&obj2)) goto fail;
    {
        if (wxPyConvertSwigPtr(obj0, (void **)&temp1, wxT("wxPyInputStream"))) {
            arg1 = temp1->m_wxis;
            created1 = False;
        } else {
            PyErr_Clear();  // clear the failure of the wxPyConvert above
            arg1 = wxPyCBInputStream_create(obj0, False);
            if (arg1 == NULL) {
                PyErr_SetString(PyExc_TypeError, "Expected wxInputStream or Python file-like object.");
                SWIG_fail;
            }
            created1 = True;
        }
    }
    if (obj1) {
        {
            arg2 = (long) SWIG_PyObj_AsLong(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImage *)new wxImage(*arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxImage, 1);
    {
        if (created1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (created1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_new_ImageFromStreamMime(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxInputStream *arg1 = 0 ;
    wxString *arg2 = 0 ;
    int arg3 = (int) -1 ;
    wxImage *result;
    wxPyInputStream *temp1 ;
    bool created1 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "stream",(char *) "mimetype",(char *) "index", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:new_ImageFromStreamMime",kwnames,&obj0,&obj1,&obj2)) goto fail;
    {
        if (wxPyConvertSwigPtr(obj0, (void **)&temp1, wxT("wxPyInputStream"))) {
            arg1 = temp1->m_wxis;
            created1 = False;
        } else {
            PyErr_Clear();  // clear the failure of the wxPyConvert above
            arg1 = wxPyCBInputStream_create(obj0, False);
            if (arg1 == NULL) {
                PyErr_SetString(PyExc_TypeError, "Expected wxInputStream or Python file-like object.");
                SWIG_fail;
            }
            created1 = True;
        }
    }
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImage *)new wxImage(*arg1,(wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxImage, 1);
    {
        if (created1)
        delete arg1;
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (created1)
        delete arg1;
    }
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_new_EmptyImage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    int arg2 = (int) 0 ;
    bool arg3 = (bool) True ;
    wxImage *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "width",(char *) "height",(char *) "clear", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_EmptyImage",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImage *)new_wxImage(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxImage, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageFromBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxBitmap *arg1 = 0 ;
    wxImage *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "bitmap", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:new_ImageFromBitmap",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxBitmap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImage *)new_wxImage((wxBitmap const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxImage, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageFromData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    unsigned char *arg3 = (unsigned char *) 0 ;
    wxImage *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "width",(char *) "height",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:new_ImageFromData",kwnames,&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = (int) SWIG_PyObj_AsInt(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_unsigned_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxImage *)new_wxImage(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxImage, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_Create",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Create(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_Destroy",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Destroy();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Scale(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    SwigValueWrapper< wxImage > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_Scale",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->Scale(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxImage * resultptr;
        resultptr = new wxImage((wxImage &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxImage, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_ShrinkBy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    SwigValueWrapper< wxImage > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "xFactor",(char *) "yFactor", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_ShrinkBy",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxImage const *)arg1)->ShrinkBy(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxImage * resultptr;
        resultptr = new wxImage((wxImage &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxImage, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Rescale(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    wxImage *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_Rescale",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxImage &_result_ref = (arg1)->Rescale(arg2,arg3);
            result = (wxImage *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxImage, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetRGB(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    unsigned char arg4 ;
    unsigned char arg5 ;
    unsigned char arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "r",(char *) "g",(char *) "b", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:Image_SetRGB",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg5 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg6 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj5);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRGB(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetRed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_GetRed",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned char)(arg1)->GetRed(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedChar((unsigned char)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetGreen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_GetGreen",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned char)(arg1)->GetGreen(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedChar((unsigned char)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetBlue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_GetBlue",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned char)(arg1)->GetBlue(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedChar((unsigned char)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetAlpha(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    unsigned char arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "alpha", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:Image_SetAlpha",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAlpha(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetAlpha(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int arg2 ;
    int arg3 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_GetAlpha",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned char)(arg1)->GetAlpha(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedChar((unsigned char)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_HasAlpha(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_HasAlpha",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->HasAlpha();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_FindFirstUnusedColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    byte *arg2 = (byte *) 0 ;
    byte *arg3 = (byte *) 0 ;
    byte *arg4 = (byte *) 0 ;
    byte arg5 = (byte) 0 ;
    byte arg6 = (byte) 0 ;
    byte arg7 = (byte) 0 ;
    bool result;
    byte temp2 ;
    byte temp3 ;
    byte temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "startR",(char *) "startG",(char *) "startB", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOO:Image_FindFirstUnusedColour",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg5 = (byte) SWIG_PyObj_AsUnsignedChar(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg6 = (byte) SWIG_PyObj_AsUnsignedChar(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg7 = (byte) SWIG_PyObj_AsUnsignedChar(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxImage const *)arg1)->FindFirstUnusedColour(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetMaskFromImage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxImage *arg2 = 0 ;
    byte arg3 ;
    byte arg4 ;
    byte arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mask",(char *) "mr",(char *) "mg",(char *) "mb", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:Image_SetMaskFromImage",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        arg3 = (byte) SWIG_PyObj_AsUnsignedChar(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (byte) SWIG_PyObj_AsUnsignedChar(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg5 = (byte) SWIG_PyObj_AsUnsignedChar(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetMaskFromImage((wxImage const &)*arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_CanRead(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    bool result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_CanRead",kwnames,&obj0)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxImage::CanRead((wxString const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_Image_GetImageCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    long arg2 = (long) wxBITMAP_TYPE_ANY ;
    int result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "name",(char *) "type", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Image_GetImageCount",kwnames,&obj0,&obj1)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    if (obj1) {
        {
            arg2 = (long) SWIG_PyObj_AsLong(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxImage::GetImageCount((wxString const &)*arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_Image_LoadFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxString *arg2 = 0 ;
    long arg3 = (long) wxBITMAP_TYPE_ANY ;
    int arg4 = (int) -1 ;
    bool result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name",(char *) "type",(char *) "index", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:Image_LoadFile",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        {
            arg3 = (long) SWIG_PyObj_AsLong(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LoadFile((wxString const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Image_LoadMimeFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxString *arg2 = 0 ;
    wxString *arg3 = 0 ;
    int arg4 = (int) -1 ;
    bool result;
    bool temp2 = False ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name",(char *) "mimetype",(char *) "index", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:Image_LoadMimeFile",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LoadFile((wxString const &)*arg2,(wxString const &)*arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_Image_SaveFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 ;
    bool result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name",(char *) "type", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_SaveFile",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SaveFile((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Image_SaveMimeFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxString *arg2 = 0 ;
    wxString *arg3 = 0 ;
    bool result;
    bool temp2 = False ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name",(char *) "mimetype", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_SaveMimeFile",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SaveFile((wxString const &)*arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_Image_CanReadStream(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxInputStream *arg1 = 0 ;
    bool result;
    wxPyInputStream *temp1 ;
    bool created1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "stream", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_CanReadStream",kwnames,&obj0)) goto fail;
    {
        if (wxPyConvertSwigPtr(obj0, (void **)&temp1, wxT("wxPyInputStream"))) {
            arg1 = temp1->m_wxis;
            created1 = False;
        } else {
            PyErr_Clear();  // clear the failure of the wxPyConvert above
            arg1 = wxPyCBInputStream_create(obj0, False);
            if (arg1 == NULL) {
                PyErr_SetString(PyExc_TypeError, "Expected wxInputStream or Python file-like object.");
                SWIG_fail;
            }
            created1 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxImage::CanRead(*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (created1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (created1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_Image_LoadStream(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxInputStream *arg2 = 0 ;
    long arg3 = (long) wxBITMAP_TYPE_ANY ;
    int arg4 = (int) -1 ;
    bool result;
    wxPyInputStream *temp2 ;
    bool created2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "stream",(char *) "type",(char *) "index", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:Image_LoadStream",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (wxPyConvertSwigPtr(obj1, (void **)&temp2, wxT("wxPyInputStream"))) {
            arg2 = temp2->m_wxis;
            created2 = False;
        } else {
            PyErr_Clear();  // clear the failure of the wxPyConvert above
            arg2 = wxPyCBInputStream_create(obj1, False);
            if (arg2 == NULL) {
                PyErr_SetString(PyExc_TypeError, "Expected wxInputStream or Python file-like object.");
                SWIG_fail;
            }
            created2 = True;
        }
    }
    if (obj2) {
        {
            arg3 = (long) SWIG_PyObj_AsLong(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LoadFile(*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (created2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (created2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Image_LoadMimeStream(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxInputStream *arg2 = 0 ;
    wxString *arg3 = 0 ;
    int arg4 = (int) -1 ;
    bool result;
    wxPyInputStream *temp2 ;
    bool created2 ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "stream",(char *) "mimetype",(char *) "index", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:Image_LoadMimeStream",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (wxPyConvertSwigPtr(obj1, (void **)&temp2, wxT("wxPyInputStream"))) {
            arg2 = temp2->m_wxis;
            created2 = False;
        } else {
            PyErr_Clear();  // clear the failure of the wxPyConvert above
            arg2 = wxPyCBInputStream_create(obj1, False);
            if (arg2 == NULL) {
                PyErr_SetString(PyExc_TypeError, "Expected wxInputStream or Python file-like object.");
                SWIG_fail;
            }
            created2 = True;
        }
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LoadFile(*arg2,(wxString const &)*arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (created2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (created2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_Image_Ok(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_Ok",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Ok();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_GetWidth",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_GetHeight",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetHeight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetSubImage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxRect *arg2 = 0 ;
    SwigValueWrapper< wxImage > result;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Image_GetSubImage",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetSubImage((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxImage * resultptr;
        resultptr = new wxImage((wxImage &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxImage, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Copy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    SwigValueWrapper< wxImage > result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_Copy",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->Copy();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxImage * resultptr;
        resultptr = new wxImage((wxImage &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxImage, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Paste(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxImage *arg2 = 0 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "image",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:Image_Paste",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Paste((wxImage const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_GetData",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxImage_GetData(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Image_SetData",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxImage_SetData(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetDataBuffer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_GetDataBuffer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxImage_GetDataBuffer(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetDataBuffer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Image_SetDataBuffer",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxImage_SetDataBuffer(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetAlphaData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_GetAlphaData",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxImage_GetAlphaData(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetAlphaData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Image_SetAlphaData",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxImage_SetAlphaData(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetAlphaBuffer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_GetAlphaBuffer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxImage_GetAlphaBuffer(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetAlphaBuffer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Image_SetAlphaBuffer",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxImage_SetAlphaBuffer(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetMaskColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    unsigned char arg2 ;
    unsigned char arg3 ;
    unsigned char arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "r",(char *) "g",(char *) "b", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:Image_SetMaskColour",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMaskColour(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetMaskRed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_GetMaskRed",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned char)(arg1)->GetMaskRed();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedChar((unsigned char)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetMaskGreen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_GetMaskGreen",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned char)(arg1)->GetMaskGreen();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedChar((unsigned char)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_GetMaskBlue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_GetMaskBlue",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned char)(arg1)->GetMaskBlue();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedChar((unsigned char)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetMask(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    bool arg2 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mask", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Image_SetMask",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMask(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_HasMask(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_HasMask",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->HasMask();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Rotate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    double arg2 ;
    wxPoint *arg3 = 0 ;
    bool arg4 = (bool) True ;
    wxPoint *arg5 = (wxPoint *) NULL ;
    SwigValueWrapper< wxImage > result;
    wxPoint temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "angle",(char *) "centre_of_rotation",(char *) "interpolating",(char *) "offset_after_rotation", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:Image_Rotate",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (double) SWIG_PyObj_AsDouble(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (bool) SWIG_PyObj_AsBool(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxImage const *)arg1)->Rotate(arg2,(wxPoint const &)*arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxImage * resultptr;
        resultptr = new wxImage((wxImage &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxImage, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Rotate90(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    bool arg2 = (bool) True ;
    SwigValueWrapper< wxImage > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "clockwise", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Image_Rotate90",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->Rotate90(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxImage * resultptr;
        resultptr = new wxImage((wxImage &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxImage, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Mirror(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    bool arg2 = (bool) True ;
    SwigValueWrapper< wxImage > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "horizontally", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Image_Mirror",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->Mirror(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxImage * resultptr;
        resultptr = new wxImage((wxImage &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxImage, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_Replace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    unsigned char arg2 ;
    unsigned char arg3 ;
    unsigned char arg4 ;
    unsigned char arg5 ;
    unsigned char arg6 ;
    unsigned char arg7 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "r1",(char *) "g1",(char *) "b1",(char *) "r2",(char *) "g2",(char *) "b2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOOO:Image_Replace",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg5 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg6 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj5);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg7 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj6);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Replace(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_ConvertToMono(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    unsigned char arg2 ;
    unsigned char arg3 ;
    unsigned char arg4 ;
    SwigValueWrapper< wxImage > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "r",(char *) "g",(char *) "b", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:Image_ConvertToMono",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxImage const *)arg1)->ConvertToMono(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxImage * resultptr;
        resultptr = new wxImage((wxImage &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxImage, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_SetOption(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxString *arg2 = 0 ;
    wxString *arg3 = 0 ;
    bool temp2 = False ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name",(char *) "value", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_SetOption",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOption((wxString const &)*arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_Image_SetOptionInt(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name",(char *) "value", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Image_SetOptionInt",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOption((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Image_GetOption(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxString *arg2 = 0 ;
    wxString result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Image_GetOption",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxImage const *)arg1)->GetOption((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Image_GetOptionInt(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxString *arg2 = 0 ;
    int result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Image_GetOptionInt",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxImage const *)arg1)->GetOptionInt((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Image_HasOption(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Image_HasOption",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxImage const *)arg1)->HasOption((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Image_CountColours(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    unsigned long arg2 = (unsigned long) (unsigned long) -1 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "stopafter", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Image_CountColours",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (unsigned long) SWIG_PyObj_AsUnsignedLong(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned long)(arg1)->CountColours(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedLong((unsigned long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_ComputeHistogram(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxImageHistogram *arg2 = 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Image_ComputeHistogram",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxImageHistogram,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned long)(arg1)->ComputeHistogram(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedLong((unsigned long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_AddHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_AddHandler",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxImage::AddHandler(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_InsertHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImageHandler *arg1 = (wxImageHandler *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_InsertHandler",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImageHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxImage::InsertHandler(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_RemoveHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    bool result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_RemoveHandler",kwnames,&obj0)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxImage::RemoveHandler((wxString const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_Image_GetImageExtWildcard(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":Image_GetImageExtWildcard",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = wxImage::GetImageExtWildcard();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_ConvertToBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    wxBitmap result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Image_ConvertToBitmap",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = wxImage_ConvertToBitmap(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxBitmap * resultptr;
        resultptr = new wxBitmap((wxBitmap &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxBitmap, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Image_ConvertToMonoBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxImage *arg1 = (wxImage *) 0 ;
    unsigned char arg2 ;
    unsigned char arg3 ;
    unsigned char arg4 ;
    wxBitmap result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "red",(char *) "green",(char *) "blue", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:Image_ConvertToMonoBitmap",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (unsigned char) SWIG_PyObj_AsUnsignedChar(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = wxImage_ConvertToMonoBitmap(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxBitmap * resultptr;
        resultptr = new wxBitmap((wxBitmap &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxBitmap, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Image_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxImage, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_InitAllImageHandlers(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":InitAllImageHandlers",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxInitAllImageHandlers();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static int _wrap_NullImage_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable NullImage is read-only.");
    return 1;
}


static PyObject *_wrap_NullImage_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) &wxNullImage, SWIGTYPE_p_wxImage, 0);
    return pyobj;
}


static int _wrap_IMAGE_OPTION_BMP_FORMAT_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable IMAGE_OPTION_BMP_FORMAT is read-only.");
    return 1;
}


static PyObject *_wrap_IMAGE_OPTION_BMP_FORMAT_get() {
    PyObject *pyobj;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyIMAGE_OPTION_BMP_FORMAT)->c_str(), (&wxPyIMAGE_OPTION_BMP_FORMAT)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyIMAGE_OPTION_BMP_FORMAT)->c_str(), (&wxPyIMAGE_OPTION_BMP_FORMAT)->Len());
#endif
    }
    return pyobj;
}


static int _wrap_IMAGE_OPTION_CUR_HOTSPOT_X_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable IMAGE_OPTION_CUR_HOTSPOT_X is read-only.");
    return 1;
}


static PyObject *_wrap_IMAGE_OPTION_CUR_HOTSPOT_X_get() {
    PyObject *pyobj;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyIMAGE_OPTION_CUR_HOTSPOT_X)->c_str(), (&wxPyIMAGE_OPTION_CUR_HOTSPOT_X)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyIMAGE_OPTION_CUR_HOTSPOT_X)->c_str(), (&wxPyIMAGE_OPTION_CUR_HOTSPOT_X)->Len());
#endif
    }
    return pyobj;
}


static int _wrap_IMAGE_OPTION_CUR_HOTSPOT_Y_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable IMAGE_OPTION_CUR_HOTSPOT_Y is read-only.");
    return 1;
}


static PyObject *_wrap_IMAGE_OPTION_CUR_HOTSPOT_Y_get() {
    PyObject *pyobj;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyIMAGE_OPTION_CUR_HOTSPOT_Y)->c_str(), (&wxPyIMAGE_OPTION_CUR_HOTSPOT_Y)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyIMAGE_OPTION_CUR_HOTSPOT_Y)->c_str(), (&wxPyIMAGE_OPTION_CUR_HOTSPOT_Y)->Len());
#endif
    }
    return pyobj;
}


static int _wrap_IMAGE_OPTION_RESOLUTION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable IMAGE_OPTION_RESOLUTION is read-only.");
    return 1;
}


static PyObject *_wrap_IMAGE_OPTION_RESOLUTION_get() {
    PyObject *pyobj;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyIMAGE_OPTION_RESOLUTION)->c_str(), (&wxPyIMAGE_OPTION_RESOLUTION)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyIMAGE_OPTION_RESOLUTION)->c_str(), (&wxPyIMAGE_OPTION_RESOLUTION)->Len());
#endif
    }
    return pyobj;
}


static int _wrap_IMAGE_OPTION_RESOLUTIONUNIT_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable IMAGE_OPTION_RESOLUTIONUNIT is read-only.");
    return 1;
}


static PyObject *_wrap_IMAGE_OPTION_RESOLUTIONUNIT_get() {
    PyObject *pyobj;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyIMAGE_OPTION_RESOLUTIONUNIT)->c_str(), (&wxPyIMAGE_OPTION_RESOLUTIONUNIT)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyIMAGE_OPTION_RESOLUTIONUNIT)->c_str(), (&wxPyIMAGE_OPTION_RESOLUTIONUNIT)->Len());
#endif
    }
    return pyobj;
}


static PyObject *_wrap_new_BMPHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxBMPHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_BMPHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxBMPHandler *)new wxBMPHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxBMPHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BMPHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxBMPHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ICOHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxICOHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_ICOHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxICOHandler *)new wxICOHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxICOHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ICOHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxICOHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CURHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCURHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_CURHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCURHandler *)new wxCURHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCURHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CURHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxCURHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ANIHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxANIHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_ANIHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxANIHandler *)new wxANIHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxANIHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ANIHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxANIHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PNGHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPNGHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PNGHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPNGHandler *)new wxPNGHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPNGHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PNGHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPNGHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_GIFHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGIFHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_GIFHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGIFHandler *)new wxGIFHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGIFHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * GIFHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxGIFHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PCXHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPCXHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PCXHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPCXHandler *)new wxPCXHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPCXHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PCXHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPCXHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_JPEGHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxJPEGHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_JPEGHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxJPEGHandler *)new wxJPEGHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxJPEGHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * JPEGHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxJPEGHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PNMHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPNMHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PNMHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPNMHandler *)new wxPNMHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPNMHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PNMHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPNMHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_XPMHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxXPMHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_XPMHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxXPMHandler *)new wxXPMHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxXPMHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * XPMHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxXPMHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_TIFFHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxTIFFHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_TIFFHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxTIFFHandler *)new wxTIFFHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxTIFFHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * TIFFHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxTIFFHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_EvtHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_EvtHandler",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEvtHandler *)new wxEvtHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_GetNextHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    wxEvtHandler *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EvtHandler_GetNextHandler",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEvtHandler *)(arg1)->GetNextHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_GetPreviousHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    wxEvtHandler *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EvtHandler_GetPreviousHandler",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEvtHandler *)(arg1)->GetPreviousHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_SetNextHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    wxEvtHandler *arg2 = (wxEvtHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:EvtHandler_SetNextHandler",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetNextHandler(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_SetPreviousHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    wxEvtHandler *arg2 = (wxEvtHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:EvtHandler_SetPreviousHandler",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPreviousHandler(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_GetEvtHandlerEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EvtHandler_GetEvtHandlerEnabled",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetEvtHandlerEnabled();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_SetEvtHandlerEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "enabled", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:EvtHandler_SetEvtHandlerEnabled",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEvtHandlerEnabled(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_ProcessEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    wxEvent *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "event", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:EvtHandler_ProcessEvent",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->ProcessEvent(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_AddPendingEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    wxEvent *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "event", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:EvtHandler_AddPendingEvent",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddPendingEvent(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_ProcessPendingEvents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EvtHandler_ProcessPendingEvents",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ProcessPendingEvents();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_Connect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject *arg5 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "lastId",(char *) "eventType",(char *) "func", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:EvtHandler_Connect",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    arg5 = obj4;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxEvtHandler_Connect(arg1,arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler_Disconnect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    int arg2 ;
    int arg3 = (int) -1 ;
    wxEventType arg4 = (wxEventType) wxEVT_NULL ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "lastId",(char *) "eventType", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:EvtHandler_Disconnect",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (wxEventType) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxEvtHandler_Disconnect(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EvtHandler__setOORInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "_self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:EvtHandler__setOORInfo",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxEvtHandler__setOORInfo(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * EvtHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxEvtHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_NewEventType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":NewEventType",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEventType)wxNewEventType();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Event(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_Event",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_SetEventType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    wxEventType arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "typ", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Event_SetEventType",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (wxEventType) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEventType(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_GetEventType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    wxEventType result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Event_GetEventType",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEventType)((wxEvent const *)arg1)->GetEventType();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_GetEventObject(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    wxObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Event_GetEventObject",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxObject *)((wxEvent const *)arg1)->GetEventObject();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_SetEventObject(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    wxObject *arg2 = (wxObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "obj", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Event_SetEventObject",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEventObject(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_GetTimestamp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Event_GetTimestamp",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)((wxEvent const *)arg1)->GetTimestamp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_SetTimestamp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    long arg2 = (long) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "ts", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Event_SetTimestamp",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (long) SWIG_PyObj_AsLong(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTimestamp(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_GetId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Event_GetId",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxEvent const *)arg1)->GetId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_SetId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "Id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Event_SetId",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetId(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_IsCommandEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Event_IsCommandEvent",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxEvent const *)arg1)->IsCommandEvent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_Skip(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    bool arg2 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "skip", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Event_Skip",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Skip(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_GetSkipped(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Event_GetSkipped",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxEvent const *)arg1)->GetSkipped();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_ShouldPropagate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Event_ShouldPropagate",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxEvent const *)arg1)->ShouldPropagate();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_StopPropagation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Event_StopPropagation",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->StopPropagation();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_ResumePropagation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "propagationLevel", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Event_ResumePropagation",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ResumePropagation(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Event_Clone(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = (wxEvent *) 0 ;
    wxEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Event_Clone",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEvent *)(arg1)->Clone();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxEvent, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Event_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PropagationDisabler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = 0 ;
    wxPropagationDisabler *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "event", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:new_PropagationDisabler",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPropagationDisabler *)new wxPropagationDisabler(*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPropagationDisabler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PropagationDisabler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPropagationDisabler *arg1 = (wxPropagationDisabler *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_PropagationDisabler",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPropagationDisabler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PropagationDisabler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPropagationDisabler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PropagateOnce(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvent *arg1 = 0 ;
    wxPropagateOnce *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "event", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:new_PropagateOnce",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPropagateOnce *)new wxPropagateOnce(*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPropagateOnce, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PropagateOnce(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPropagateOnce *arg1 = (wxPropagateOnce *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_PropagateOnce",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPropagateOnce,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PropagateOnce_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPropagateOnce, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CommandEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    wxCommandEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "commandType",(char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_CommandEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCommandEvent *)new wxCommandEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCommandEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CommandEvent_GetSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CommandEvent_GetSelection",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxCommandEvent const *)arg1)->GetSelection();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CommandEvent_SetString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "s", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CommandEvent_SetString",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetString((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_CommandEvent_GetString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CommandEvent_GetString",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCommandEvent const *)arg1)->GetString();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CommandEvent_IsChecked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CommandEvent_IsChecked",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCommandEvent const *)arg1)->IsChecked();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CommandEvent_IsSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CommandEvent_IsSelection",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCommandEvent const *)arg1)->IsSelection();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CommandEvent_SetExtraLong(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "extraLong", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CommandEvent_SetExtraLong",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetExtraLong(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CommandEvent_GetExtraLong(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CommandEvent_GetExtraLong",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)((wxCommandEvent const *)arg1)->GetExtraLong();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CommandEvent_SetInt(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "i", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CommandEvent_SetInt",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetInt(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CommandEvent_GetInt(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CommandEvent_GetInt",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)((wxCommandEvent const *)arg1)->GetInt();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CommandEvent_Clone(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCommandEvent *arg1 = (wxCommandEvent *) 0 ;
    wxEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CommandEvent_Clone",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEvent *)((wxCommandEvent const *)arg1)->Clone();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxEvent, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CommandEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxCommandEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_NotifyEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    wxNotifyEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "commandType",(char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_NotifyEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxNotifyEvent *)new wxNotifyEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxNotifyEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_NotifyEvent_Veto(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNotifyEvent *arg1 = (wxNotifyEvent *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:NotifyEvent_Veto",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxNotifyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Veto();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_NotifyEvent_Allow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNotifyEvent *arg1 = (wxNotifyEvent *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:NotifyEvent_Allow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxNotifyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Allow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_NotifyEvent_IsAllowed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNotifyEvent *arg1 = (wxNotifyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:NotifyEvent_IsAllowed",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxNotifyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsAllowed();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * NotifyEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxNotifyEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ScrollEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    int arg3 = (int) 0 ;
    int arg4 = (int) 0 ;
    wxScrollEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "commandType",(char *) "winid",(char *) "pos",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOO:new_ScrollEvent",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxScrollEvent *)new wxScrollEvent(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxScrollEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScrollEvent_GetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxScrollEvent *arg1 = (wxScrollEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ScrollEvent_GetOrientation",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxScrollEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxScrollEvent const *)arg1)->GetOrientation();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScrollEvent_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxScrollEvent *arg1 = (wxScrollEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ScrollEvent_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxScrollEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxScrollEvent const *)arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScrollEvent_SetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxScrollEvent *arg1 = (wxScrollEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ScrollEvent_SetOrientation",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxScrollEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOrientation(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScrollEvent_SetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxScrollEvent *arg1 = (wxScrollEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ScrollEvent_SetPosition",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxScrollEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ScrollEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxScrollEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ScrollWinEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    int arg3 = (int) 0 ;
    wxScrollWinEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "commandType",(char *) "pos",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_ScrollWinEvent",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxScrollWinEvent *)new wxScrollWinEvent(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxScrollWinEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScrollWinEvent_GetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxScrollWinEvent *arg1 = (wxScrollWinEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ScrollWinEvent_GetOrientation",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxScrollWinEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxScrollWinEvent const *)arg1)->GetOrientation();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScrollWinEvent_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxScrollWinEvent *arg1 = (wxScrollWinEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ScrollWinEvent_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxScrollWinEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxScrollWinEvent const *)arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScrollWinEvent_SetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxScrollWinEvent *arg1 = (wxScrollWinEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ScrollWinEvent_SetOrientation",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxScrollWinEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOrientation(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScrollWinEvent_SetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxScrollWinEvent *arg1 = (wxScrollWinEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ScrollWinEvent_SetPosition",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxScrollWinEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ScrollWinEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxScrollWinEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MouseEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    wxMouseEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "mouseType", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_MouseEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMouseEvent *)new wxMouseEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_IsButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_IsButton",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->IsButton();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_ButtonDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 = (int) wxMOUSE_BTN_ANY ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "but", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:MouseEvent_ButtonDown",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->ButtonDown(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_ButtonDClick(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 = (int) wxMOUSE_BTN_ANY ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "but", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:MouseEvent_ButtonDClick",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->ButtonDClick(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_ButtonUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 = (int) wxMOUSE_BTN_ANY ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "but", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:MouseEvent_ButtonUp",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->ButtonUp(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_Button(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "but", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_Button",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->Button(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_ButtonIsDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "but", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_ButtonIsDown",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->ButtonIsDown(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_GetButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_GetButton",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMouseEvent const *)arg1)->GetButton();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_ControlDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_ControlDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->ControlDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_MetaDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_MetaDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->MetaDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_AltDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_AltDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->AltDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_ShiftDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_ShiftDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->ShiftDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_LeftDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_LeftDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->LeftDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_MiddleDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_MiddleDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->MiddleDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_RightDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_RightDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->RightDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_LeftUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_LeftUp",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->LeftUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_MiddleUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_MiddleUp",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->MiddleUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_RightUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_RightUp",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->RightUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_LeftDClick(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_LeftDClick",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->LeftDClick();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_MiddleDClick(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_MiddleDClick",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->MiddleDClick();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_RightDClick(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_RightDClick",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->RightDClick();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_LeftIsDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_LeftIsDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LeftIsDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_MiddleIsDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_MiddleIsDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->MiddleIsDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_RightIsDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_RightIsDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->RightIsDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_Dragging(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_Dragging",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->Dragging();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_Moving(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_Moving",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->Moving();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_Entering(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_Entering",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->Entering();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_Leaving(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_Leaving",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->Leaving();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_GetPositionTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    long *arg2 = (long *) 0 ;
    long *arg3 = (long *) 0 ;
    long temp2 ;
    long temp3 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_GetPositionTuple",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetPosition(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_GetLogicalPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    wxDC *arg2 = 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_GetLogicalPosition",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxDC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMouseEvent const *)arg1)->GetLogicalPosition((wxDC const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_GetX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_GetX",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMouseEvent const *)arg1)->GetX();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_GetY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_GetY",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMouseEvent const *)arg1)->GetY();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_GetWheelRotation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_GetWheelRotation",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMouseEvent const *)arg1)->GetWheelRotation();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_GetWheelDelta(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_GetWheelDelta",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMouseEvent const *)arg1)->GetWheelDelta();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_GetLinesPerAction(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_GetLinesPerAction",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMouseEvent const *)arg1)->GetLinesPerAction();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_IsPageScroll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_IsPageScroll",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMouseEvent const *)arg1)->IsPageScroll();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_x_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_x_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->m_x);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_y_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_y_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->m_y);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_leftDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_leftDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_leftDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_leftDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_leftDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_leftDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_leftDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_middleDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_middleDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_middleDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_middleDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_middleDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_middleDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_middleDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_rightDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_rightDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_rightDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_rightDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_rightDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_rightDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_rightDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_controlDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_controlDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_controlDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_controlDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_controlDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_controlDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_controlDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_shiftDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_shiftDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_shiftDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_shiftDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_shiftDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_shiftDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_shiftDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_altDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_altDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_altDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_altDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_altDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_altDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_altDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_metaDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_metaDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_metaDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_metaDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_metaDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_metaDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_metaDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_wheelRotation_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_wheelRotation", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_wheelRotation_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_wheelRotation = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_wheelRotation_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_wheelRotation_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->m_wheelRotation);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_wheelDelta_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_wheelDelta", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_wheelDelta_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_wheelDelta = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_wheelDelta_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_wheelDelta_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->m_wheelDelta);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_linesPerAction_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_linesPerAction", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MouseEvent_m_linesPerAction_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_linesPerAction = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseEvent_m_linesPerAction_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseEvent *arg1 = (wxMouseEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseEvent_m_linesPerAction_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->m_linesPerAction);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MouseEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMouseEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_SetCursorEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    int arg2 = (int) 0 ;
    wxSetCursorEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_SetCursorEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSetCursorEvent *)new wxSetCursorEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSetCursorEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SetCursorEvent_GetX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSetCursorEvent *arg1 = (wxSetCursorEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SetCursorEvent_GetX",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSetCursorEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxSetCursorEvent const *)arg1)->GetX();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SetCursorEvent_GetY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSetCursorEvent *arg1 = (wxSetCursorEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SetCursorEvent_GetY",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSetCursorEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxSetCursorEvent const *)arg1)->GetY();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SetCursorEvent_SetCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSetCursorEvent *arg1 = (wxSetCursorEvent *) 0 ;
    wxCursor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "cursor", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SetCursorEvent_SetCursor",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSetCursorEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxCursor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCursor((wxCursor const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SetCursorEvent_GetCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSetCursorEvent *arg1 = (wxSetCursorEvent *) 0 ;
    wxCursor *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SetCursorEvent_GetCursor",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSetCursorEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxCursor const &_result_ref = ((wxSetCursorEvent const *)arg1)->GetCursor();
            result = (wxCursor *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCursor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SetCursorEvent_HasCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSetCursorEvent *arg1 = (wxSetCursorEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SetCursorEvent_HasCursor",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSetCursorEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxSetCursorEvent const *)arg1)->HasCursor();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SetCursorEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxSetCursorEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_KeyEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    wxKeyEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "keyType", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_KeyEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxKeyEvent *)new wxKeyEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxKeyEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_ControlDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_ControlDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxKeyEvent const *)arg1)->ControlDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_MetaDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_MetaDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxKeyEvent const *)arg1)->MetaDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_AltDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_AltDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxKeyEvent const *)arg1)->AltDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_ShiftDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_ShiftDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxKeyEvent const *)arg1)->ShiftDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_HasModifiers(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_HasModifiers",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxKeyEvent const *)arg1)->HasModifiers();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_GetKeyCode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_GetKeyCode",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxKeyEvent const *)arg1)->GetKeyCode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_GetUniChar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_GetUniChar",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxKeyEvent_GetUniChar(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_GetRawKeyCode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_GetRawKeyCode",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned int)((wxKeyEvent const *)arg1)->GetRawKeyCode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedInt((unsigned int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_GetRawKeyFlags(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_GetRawKeyFlags",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (unsigned int)((wxKeyEvent const *)arg1)->GetRawKeyFlags();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedInt((unsigned int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_GetPositionTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    long *arg2 = (long *) 0 ;
    long *arg3 = (long *) 0 ;
    long temp2 ;
    long temp3 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_GetPositionTuple",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetPosition(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_GetX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_GetX",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxKeyEvent const *)arg1)->GetX();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_GetY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_GetY",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxKeyEvent const *)arg1)->GetY();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_x_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_x_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->m_x);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_y_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_y_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->m_y);
    
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_keyCode_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_keyCode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_keyCode_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_keyCode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_keyCode_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_keyCode_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long) ((arg1)->m_keyCode);
    
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_controlDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_controlDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_controlDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_controlDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_controlDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_controlDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_controlDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_shiftDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_shiftDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_shiftDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_shiftDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_shiftDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_shiftDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_shiftDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_altDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_altDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_altDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_altDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_altDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_altDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_altDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_metaDown_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_metaDown", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_metaDown_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_metaDown = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_metaDown_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_metaDown_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_metaDown);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_scanCode_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_scanCode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_scanCode_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_scanCode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_scanCode_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_scanCode_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->m_scanCode);
    
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_rawCode_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_rawCode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_rawCode_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (unsigned int) SWIG_PyObj_AsUnsignedInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_rawCode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_rawCode_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_rawCode_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->m_rawCode);
    
    resultobj = SWIG_PyObj_FromUnsignedInt((unsigned int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_rawFlags_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_rawFlags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:KeyEvent_m_rawFlags_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (unsigned int) SWIG_PyObj_AsUnsignedInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (arg1) (arg1)->m_rawFlags = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_KeyEvent_m_rawFlags_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxKeyEvent *arg1 = (wxKeyEvent *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:KeyEvent_m_rawFlags_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->m_rawFlags);
    
    resultobj = SWIG_PyObj_FromUnsignedInt((unsigned int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * KeyEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxKeyEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_SizeEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSize const &arg1_defvalue = wxDefaultSize ;
    wxSize *arg1 = (wxSize *) &arg1_defvalue ;
    int arg2 = (int) 0 ;
    wxSizeEvent *result;
    wxSize temp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "sz",(char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_SizeEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = &temp1;
            if ( ! wxSize_helper(obj0, &arg1)) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSizeEvent *)new wxSizeEvent((wxSize const &)*arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSizeEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizeEvent_GetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizeEvent *arg1 = (wxSizeEvent *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizeEvent_GetSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxSizeEvent const *)arg1)->GetSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizeEvent_GetRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizeEvent *arg1 = (wxSizeEvent *) 0 ;
    wxRect result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizeEvent_GetRect",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxSizeEvent const *)arg1)->GetRect();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRect * resultptr;
        resultptr = new wxRect((wxRect &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxRect, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizeEvent_SetRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizeEvent *arg1 = (wxSizeEvent *) 0 ;
    wxRect arg2 ;
    wxRect *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizeEvent_SetRect",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRect(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizeEvent_SetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizeEvent *arg1 = (wxSizeEvent *) 0 ;
    wxSize arg2 ;
    wxSize *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizeEvent_SetSize",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxSizeEvent_SetSize(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizeEvent_m_size_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizeEvent *arg1 = (wxSizeEvent *) 0 ;
    wxSize *arg2 = (wxSize *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizeEvent_m_size_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m_size = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizeEvent_m_size_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizeEvent *arg1 = (wxSizeEvent *) 0 ;
    wxSize *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizeEvent_m_size_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxSize *)& ((arg1)->m_size);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSize, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizeEvent_m_rect_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizeEvent *arg1 = (wxSizeEvent *) 0 ;
    wxRect *arg2 = (wxRect *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizeEvent_m_rect_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m_rect = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizeEvent_m_rect_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizeEvent *arg1 = (wxSizeEvent *) 0 ;
    wxRect *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizeEvent_m_rect_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxRect *)& ((arg1)->m_rect);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SizeEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxSizeEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MoveEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPoint const &arg1_defvalue = wxDefaultPosition ;
    wxPoint *arg1 = (wxPoint *) &arg1_defvalue ;
    int arg2 = (int) 0 ;
    wxMoveEvent *result;
    wxPoint temp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "pos",(char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_MoveEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = &temp1;
            if ( ! wxPoint_helper(obj0, &arg1)) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMoveEvent *)new wxMoveEvent((wxPoint const &)*arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxMoveEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MoveEvent_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMoveEvent *arg1 = (wxMoveEvent *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MoveEvent_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMoveEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMoveEvent const *)arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MoveEvent_GetRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMoveEvent *arg1 = (wxMoveEvent *) 0 ;
    wxRect result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MoveEvent_GetRect",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMoveEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMoveEvent const *)arg1)->GetRect();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRect * resultptr;
        resultptr = new wxRect((wxRect &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxRect, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MoveEvent_SetRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMoveEvent *arg1 = (wxMoveEvent *) 0 ;
    wxRect arg2 ;
    wxRect *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MoveEvent_SetRect",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMoveEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRect(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MoveEvent_SetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMoveEvent *arg1 = (wxMoveEvent *) 0 ;
    wxPoint arg2 ;
    wxPoint *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MoveEvent_SetPosition",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMoveEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxMoveEvent_SetPosition(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MoveEvent_m_pos_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMoveEvent *arg1 = (wxMoveEvent *) 0 ;
    wxPoint *arg2 = (wxPoint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MoveEvent_m_pos_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMoveEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m_pos = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MoveEvent_m_pos_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMoveEvent *arg1 = (wxMoveEvent *) 0 ;
    wxPoint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MoveEvent_m_pos_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMoveEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxPoint *)& ((arg1)->m_pos);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MoveEvent_m_rect_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMoveEvent *arg1 = (wxMoveEvent *) 0 ;
    wxRect *arg2 = (wxRect *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MoveEvent_m_rect_set",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMoveEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m_rect = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MoveEvent_m_rect_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMoveEvent *arg1 = (wxMoveEvent *) 0 ;
    wxRect *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MoveEvent_m_rect_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMoveEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxRect *)& ((arg1)->m_rect);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MoveEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMoveEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PaintEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxPaintEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "Id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_PaintEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPaintEvent *)new wxPaintEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPaintEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PaintEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPaintEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_NcPaintEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxNcPaintEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_NcPaintEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxNcPaintEvent *)new wxNcPaintEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxNcPaintEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * NcPaintEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxNcPaintEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_EraseEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxDC *arg2 = (wxDC *) (wxDC *) NULL ;
    wxEraseEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "Id",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_EraseEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxDC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEraseEvent *)new wxEraseEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxEraseEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EraseEvent_GetDC(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEraseEvent *arg1 = (wxEraseEvent *) 0 ;
    wxDC *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:EraseEvent_GetDC",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEraseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDC *)((wxEraseEvent const *)arg1)->GetDC();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * EraseEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxEraseEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_FocusEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    wxFocusEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "type",(char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_FocusEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFocusEvent *)new wxFocusEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxFocusEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FocusEvent_GetWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFocusEvent *arg1 = (wxFocusEvent *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FocusEvent_GetWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFocusEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxFocusEvent const *)arg1)->GetWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FocusEvent_SetWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFocusEvent *arg1 = (wxFocusEvent *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FocusEvent_SetWindow",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFocusEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWindow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * FocusEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxFocusEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ChildFocusEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) NULL ;
    wxChildFocusEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_ChildFocusEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxChildFocusEvent *)new wxChildFocusEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxChildFocusEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ChildFocusEvent_GetWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxChildFocusEvent *arg1 = (wxChildFocusEvent *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ChildFocusEvent_GetWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxChildFocusEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxChildFocusEvent const *)arg1)->GetWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ChildFocusEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxChildFocusEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ActivateEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    bool arg2 = (bool) True ;
    int arg3 = (int) 0 ;
    wxActivateEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "type",(char *) "active",(char *) "Id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_ActivateEvent",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxActivateEvent *)new wxActivateEvent(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxActivateEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ActivateEvent_GetActive(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxActivateEvent *arg1 = (wxActivateEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ActivateEvent_GetActive",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxActivateEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxActivateEvent const *)arg1)->GetActive();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ActivateEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxActivateEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_InitDialogEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxInitDialogEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "Id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_InitDialogEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxInitDialogEvent *)new wxInitDialogEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxInitDialogEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * InitDialogEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxInitDialogEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MenuEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    wxMenu *arg3 = (wxMenu *) NULL ;
    wxMenuEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "type",(char *) "winid",(char *) "menu", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_MenuEvent",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuEvent *)new wxMenuEvent(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxMenuEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuEvent_GetMenuId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuEvent *arg1 = (wxMenuEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuEvent_GetMenuId",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMenuEvent const *)arg1)->GetMenuId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuEvent_IsPopup(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuEvent *arg1 = (wxMenuEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuEvent_IsPopup",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuEvent const *)arg1)->IsPopup();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuEvent_GetMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuEvent *arg1 = (wxMenuEvent *) 0 ;
    wxMenu *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuEvent_GetMenu",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenu *)((wxMenuEvent const *)arg1)->GetMenu();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MenuEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMenuEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CloseEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    wxCloseEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "type",(char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_CloseEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCloseEvent *)new wxCloseEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCloseEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CloseEvent_SetLoggingOff(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCloseEvent *arg1 = (wxCloseEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "logOff", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CloseEvent_SetLoggingOff",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCloseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLoggingOff(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CloseEvent_GetLoggingOff(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCloseEvent *arg1 = (wxCloseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CloseEvent_GetLoggingOff",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCloseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCloseEvent const *)arg1)->GetLoggingOff();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CloseEvent_Veto(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCloseEvent *arg1 = (wxCloseEvent *) 0 ;
    bool arg2 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "veto", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:CloseEvent_Veto",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCloseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Veto(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CloseEvent_SetCanVeto(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCloseEvent *arg1 = (wxCloseEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "canVeto", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CloseEvent_SetCanVeto",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCloseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCanVeto(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CloseEvent_CanVeto(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCloseEvent *arg1 = (wxCloseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CloseEvent_CanVeto",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCloseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCloseEvent const *)arg1)->CanVeto();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CloseEvent_GetVeto(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCloseEvent *arg1 = (wxCloseEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CloseEvent_GetVeto",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCloseEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCloseEvent const *)arg1)->GetVeto();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CloseEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxCloseEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ShowEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    bool arg2 = (bool) False ;
    wxShowEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "winid",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_ShowEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxShowEvent *)new wxShowEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxShowEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShowEvent_SetShow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShowEvent *arg1 = (wxShowEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ShowEvent_SetShow",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxShowEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetShow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShowEvent_GetShow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShowEvent *arg1 = (wxShowEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShowEvent_GetShow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxShowEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxShowEvent const *)arg1)->GetShow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ShowEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxShowEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_IconizeEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    bool arg2 = (bool) True ;
    wxIconizeEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "id",(char *) "iconized", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_IconizeEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxIconizeEvent *)new wxIconizeEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIconizeEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IconizeEvent_Iconized(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIconizeEvent *arg1 = (wxIconizeEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IconizeEvent_Iconized",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIconizeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Iconized();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * IconizeEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxIconizeEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MaximizeEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxMaximizeEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_MaximizeEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMaximizeEvent *)new wxMaximizeEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxMaximizeEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MaximizeEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMaximizeEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_DropFilesEvent_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDropFilesEvent *arg1 = (wxDropFilesEvent *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:DropFilesEvent_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxDropFilesEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DropFilesEvent_GetNumberOfFiles(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDropFilesEvent *arg1 = (wxDropFilesEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:DropFilesEvent_GetNumberOfFiles",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxDropFilesEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetNumberOfFiles();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DropFilesEvent_GetFiles(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDropFilesEvent *arg1 = (wxDropFilesEvent *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:DropFilesEvent_GetFiles",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxDropFilesEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxDropFilesEvent_GetFiles(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DropFilesEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxDropFilesEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_UpdateUIEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxUpdateUIEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "commandId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_UpdateUIEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxUpdateUIEvent *)new wxUpdateUIEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxUpdateUIEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_GetChecked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxUpdateUIEvent *arg1 = (wxUpdateUIEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:UpdateUIEvent_GetChecked",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxUpdateUIEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxUpdateUIEvent const *)arg1)->GetChecked();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_GetEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxUpdateUIEvent *arg1 = (wxUpdateUIEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:UpdateUIEvent_GetEnabled",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxUpdateUIEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxUpdateUIEvent const *)arg1)->GetEnabled();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_GetText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxUpdateUIEvent *arg1 = (wxUpdateUIEvent *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:UpdateUIEvent_GetText",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxUpdateUIEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxUpdateUIEvent const *)arg1)->GetText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_GetSetText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxUpdateUIEvent *arg1 = (wxUpdateUIEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:UpdateUIEvent_GetSetText",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxUpdateUIEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxUpdateUIEvent const *)arg1)->GetSetText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_GetSetChecked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxUpdateUIEvent *arg1 = (wxUpdateUIEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:UpdateUIEvent_GetSetChecked",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxUpdateUIEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxUpdateUIEvent const *)arg1)->GetSetChecked();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_GetSetEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxUpdateUIEvent *arg1 = (wxUpdateUIEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:UpdateUIEvent_GetSetEnabled",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxUpdateUIEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxUpdateUIEvent const *)arg1)->GetSetEnabled();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_Check(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxUpdateUIEvent *arg1 = (wxUpdateUIEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "check", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:UpdateUIEvent_Check",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxUpdateUIEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Check(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_Enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxUpdateUIEvent *arg1 = (wxUpdateUIEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "enable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:UpdateUIEvent_Enable",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxUpdateUIEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Enable(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_SetText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxUpdateUIEvent *arg1 = (wxUpdateUIEvent *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:UpdateUIEvent_SetText",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxUpdateUIEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_SetUpdateInterval(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long arg1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "updateInterval", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:UpdateUIEvent_SetUpdateInterval",kwnames,&obj0)) goto fail;
    {
        arg1 = (long) SWIG_PyObj_AsLong(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxUpdateUIEvent::SetUpdateInterval(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_GetUpdateInterval(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":UpdateUIEvent_GetUpdateInterval",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)wxUpdateUIEvent::GetUpdateInterval();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_CanUpdate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:UpdateUIEvent_CanUpdate",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxUpdateUIEvent::CanUpdate(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_ResetUpdateTime(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":UpdateUIEvent_ResetUpdateTime",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxUpdateUIEvent::ResetUpdateTime();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_SetMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:UpdateUIEvent_SetMode",kwnames,&obj0)) goto fail;
    {
        arg1 = (wxUpdateUIMode) SWIG_PyObj_AsInt(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxUpdateUIEvent::SetMode((wxUpdateUIMode )arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpdateUIEvent_GetMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":UpdateUIEvent_GetMode",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxUpdateUIEvent::GetMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * UpdateUIEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxUpdateUIEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_SysColourChangedEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSysColourChangedEvent *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_SysColourChangedEvent",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSysColourChangedEvent *)new wxSysColourChangedEvent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSysColourChangedEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SysColourChangedEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxSysColourChangedEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MouseCaptureChangedEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxWindow *arg2 = (wxWindow *) NULL ;
    wxMouseCaptureChangedEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "winid",(char *) "gainedCapture", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_MouseCaptureChangedEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMouseCaptureChangedEvent *)new wxMouseCaptureChangedEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxMouseCaptureChangedEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MouseCaptureChangedEvent_GetCapturedWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMouseCaptureChangedEvent *arg1 = (wxMouseCaptureChangedEvent *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MouseCaptureChangedEvent_GetCapturedWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMouseCaptureChangedEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxMouseCaptureChangedEvent const *)arg1)->GetCapturedWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MouseCaptureChangedEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMouseCaptureChangedEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DisplayChangedEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDisplayChangedEvent *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_DisplayChangedEvent",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDisplayChangedEvent *)new wxDisplayChangedEvent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxDisplayChangedEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DisplayChangedEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxDisplayChangedEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PaletteChangedEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxPaletteChangedEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_PaletteChangedEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPaletteChangedEvent *)new wxPaletteChangedEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPaletteChangedEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PaletteChangedEvent_SetChangedWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPaletteChangedEvent *arg1 = (wxPaletteChangedEvent *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PaletteChangedEvent_SetChangedWindow",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPaletteChangedEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetChangedWindow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PaletteChangedEvent_GetChangedWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPaletteChangedEvent *arg1 = (wxPaletteChangedEvent *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PaletteChangedEvent_GetChangedWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPaletteChangedEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)(arg1)->GetChangedWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PaletteChangedEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPaletteChangedEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_QueryNewPaletteEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxQueryNewPaletteEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_QueryNewPaletteEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxQueryNewPaletteEvent *)new wxQueryNewPaletteEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxQueryNewPaletteEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_QueryNewPaletteEvent_SetPaletteRealized(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxQueryNewPaletteEvent *arg1 = (wxQueryNewPaletteEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "realized", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:QueryNewPaletteEvent_SetPaletteRealized",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxQueryNewPaletteEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPaletteRealized(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_QueryNewPaletteEvent_GetPaletteRealized(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxQueryNewPaletteEvent *arg1 = (wxQueryNewPaletteEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:QueryNewPaletteEvent_GetPaletteRealized",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxQueryNewPaletteEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxQueryNewPaletteEvent const *)arg1)->GetPaletteRealized();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * QueryNewPaletteEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxQueryNewPaletteEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_NavigationKeyEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNavigationKeyEvent *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_NavigationKeyEvent",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxNavigationKeyEvent *)new wxNavigationKeyEvent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxNavigationKeyEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_NavigationKeyEvent_GetDirection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNavigationKeyEvent *arg1 = (wxNavigationKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:NavigationKeyEvent_GetDirection",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxNavigationKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxNavigationKeyEvent const *)arg1)->GetDirection();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_NavigationKeyEvent_SetDirection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNavigationKeyEvent *arg1 = (wxNavigationKeyEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bForward", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:NavigationKeyEvent_SetDirection",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxNavigationKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDirection(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_NavigationKeyEvent_IsWindowChange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNavigationKeyEvent *arg1 = (wxNavigationKeyEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:NavigationKeyEvent_IsWindowChange",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxNavigationKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxNavigationKeyEvent const *)arg1)->IsWindowChange();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_NavigationKeyEvent_SetWindowChange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNavigationKeyEvent *arg1 = (wxNavigationKeyEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bIs", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:NavigationKeyEvent_SetWindowChange",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxNavigationKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWindowChange(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_NavigationKeyEvent_GetCurrentFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNavigationKeyEvent *arg1 = (wxNavigationKeyEvent *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:NavigationKeyEvent_GetCurrentFocus",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxNavigationKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxNavigationKeyEvent const *)arg1)->GetCurrentFocus();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_NavigationKeyEvent_SetCurrentFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxNavigationKeyEvent *arg1 = (wxNavigationKeyEvent *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:NavigationKeyEvent_SetCurrentFocus",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxNavigationKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCurrentFocus(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * NavigationKeyEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxNavigationKeyEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_WindowCreateEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) NULL ;
    wxWindowCreateEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_WindowCreateEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindowCreateEvent *)new wxWindowCreateEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxWindowCreateEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_WindowCreateEvent_GetWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindowCreateEvent *arg1 = (wxWindowCreateEvent *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:WindowCreateEvent_GetWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindowCreateEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxWindowCreateEvent const *)arg1)->GetWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * WindowCreateEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxWindowCreateEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_WindowDestroyEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) NULL ;
    wxWindowDestroyEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_WindowDestroyEvent",kwnames,&obj0)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindowDestroyEvent *)new wxWindowDestroyEvent(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxWindowDestroyEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_WindowDestroyEvent_GetWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindowDestroyEvent *arg1 = (wxWindowDestroyEvent *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:WindowDestroyEvent_GetWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindowDestroyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxWindowDestroyEvent const *)arg1)->GetWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * WindowDestroyEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxWindowDestroyEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ContextMenuEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxContextMenuEvent *result;
    wxPoint temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "type",(char *) "winid",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_ContextMenuEvent",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxContextMenuEvent *)new wxContextMenuEvent(arg1,arg2,(wxPoint const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxContextMenuEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ContextMenuEvent_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxContextMenuEvent *arg1 = (wxContextMenuEvent *) 0 ;
    wxPoint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ContextMenuEvent_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxContextMenuEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxPoint const &_result_ref = ((wxContextMenuEvent const *)arg1)->GetPosition();
            result = (wxPoint *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ContextMenuEvent_SetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxContextMenuEvent *arg1 = (wxContextMenuEvent *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ContextMenuEvent_SetPosition",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxContextMenuEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPosition((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ContextMenuEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxContextMenuEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_IdleEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIdleEvent *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_IdleEvent",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxIdleEvent *)new wxIdleEvent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIdleEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IdleEvent_RequestMore(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIdleEvent *arg1 = (wxIdleEvent *) 0 ;
    bool arg2 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "needMore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:IdleEvent_RequestMore",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIdleEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RequestMore(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IdleEvent_MoreRequested(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIdleEvent *arg1 = (wxIdleEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IdleEvent_MoreRequested",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIdleEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxIdleEvent const *)arg1)->MoreRequested();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IdleEvent_SetMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IdleEvent_SetMode",kwnames,&obj0)) goto fail;
    {
        arg1 = (wxIdleMode) SWIG_PyObj_AsInt(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxIdleEvent::SetMode((wxIdleMode )arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IdleEvent_GetMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":IdleEvent_GetMode",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxIdleEvent::GetMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IdleEvent_CanSend(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IdleEvent_CanSend",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxIdleEvent::CanSend(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * IdleEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxIdleEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    wxEventType arg2 = (wxEventType) wxEVT_NULL ;
    wxPyEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "winid",(char *) "commandType", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_PyEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (wxEventType) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyEvent *)new wxPyEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPyEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PyEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEvent *arg1 = (wxPyEvent *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_PyEvent",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEvent_SetSelf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEvent *arg1 = (wxPyEvent *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEvent_SetSelf",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSelf(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEvent_GetSelf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEvent *arg1 = (wxPyEvent *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyEvent_GetSelf",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)(arg1)->GetSelf();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyCommandEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEventType arg1 = (wxEventType) wxEVT_NULL ;
    int arg2 = (int) 0 ;
    wxPyCommandEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "commandType",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_PyCommandEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (wxEventType) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyCommandEvent *)new wxPyCommandEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPyCommandEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PyCommandEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCommandEvent *arg1 = (wxPyCommandEvent *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_PyCommandEvent",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCommandEvent_SetSelf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCommandEvent *arg1 = (wxPyCommandEvent *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCommandEvent_SetSelf",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSelf(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCommandEvent_GetSelf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCommandEvent *arg1 = (wxPyCommandEvent *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyCommandEvent_GetSelf",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)(arg1)->GetSelf();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyCommandEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyCommandEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyApp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PyApp",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyApp *)new_wxPyApp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PyApp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_PyApp",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp__setCallbackInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyApp__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetAppName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_GetAppName",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyApp const *)arg1)->GetAppName();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetAppName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyApp_SetAppName",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAppName((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyApp_GetClassName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_GetClassName",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxPyApp const *)arg1)->GetClassName();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetClassName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyApp_SetClassName",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetClassName((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyApp_GetVendorName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxString *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_GetVendorName",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxString const &_result_ref = ((wxPyApp const *)arg1)->GetVendorName();
            result = (wxString *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
        resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetVendorName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyApp_SetVendorName",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVendorName((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyApp_GetTraits(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxAppTraits *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_GetTraits",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxAppTraits *)(arg1)->GetTraits();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxAppTraits, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_ProcessPendingEvents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_ProcessPendingEvents",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ProcessPendingEvents();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_Yield(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    bool arg2 = (bool) False ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "onlyIfNeeded", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyApp_Yield",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Yield(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_WakeUpIdle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_WakeUpIdle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WakeUpIdle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_MainLoop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_MainLoop",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->MainLoop();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_Exit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_Exit",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Exit();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_ExitMainLoop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_ExitMainLoop",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ExitMainLoop();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_Pending(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_Pending",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Pending();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_Dispatch(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_Dispatch",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Dispatch();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_ProcessIdle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_ProcessIdle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->ProcessIdle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SendIdleEvents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxIdleEvent *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "win",(char *) "event", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyApp_SendIdleEvents",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxIdleEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SendIdleEvents(arg2,*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_IsActive(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_IsActive",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyApp const *)arg1)->IsActive();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetTopWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyApp_SetTopWindow",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTopWindow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetTopWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_GetTopWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxPyApp const *)arg1)->GetTopWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetExitOnFrameDelete(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flag", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyApp_SetExitOnFrameDelete",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetExitOnFrameDelete(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetExitOnFrameDelete(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_GetExitOnFrameDelete",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyApp const *)arg1)->GetExitOnFrameDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetUseBestVisual(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flag", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyApp_SetUseBestVisual",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetUseBestVisual(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetUseBestVisual(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_GetUseBestVisual",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxPyApp const *)arg1)->GetUseBestVisual();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetPrintMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyApp_SetPrintMode",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPrintMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetPrintMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_GetPrintMode",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxPyApp const *)arg1)->GetPrintMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetAssertMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyApp_SetAssertMode",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAssertMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetAssertMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_GetAssertMode",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetAssertMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetMacSupportPCMenuShortcuts(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    bool result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":PyApp_GetMacSupportPCMenuShortcuts",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxPyApp::GetMacSupportPCMenuShortcuts();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetMacAboutMenuItemId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":PyApp_GetMacAboutMenuItemId",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)wxPyApp::GetMacAboutMenuItemId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetMacPreferencesMenuItemId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":PyApp_GetMacPreferencesMenuItemId",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)wxPyApp::GetMacPreferencesMenuItemId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetMacExitMenuItemId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":PyApp_GetMacExitMenuItemId",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)wxPyApp::GetMacExitMenuItemId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetMacHelpMenuTitleName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":PyApp_GetMacHelpMenuTitleName",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = wxPyApp::GetMacHelpMenuTitleName();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetMacSupportPCMenuShortcuts(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    bool arg1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_SetMacSupportPCMenuShortcuts",kwnames,&obj0)) goto fail;
    {
        arg1 = (bool) SWIG_PyObj_AsBool(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyApp::SetMacSupportPCMenuShortcuts(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetMacAboutMenuItemId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long arg1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_SetMacAboutMenuItemId",kwnames,&obj0)) goto fail;
    {
        arg1 = (long) SWIG_PyObj_AsLong(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyApp::SetMacAboutMenuItemId(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetMacPreferencesMenuItemId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long arg1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_SetMacPreferencesMenuItemId",kwnames,&obj0)) goto fail;
    {
        arg1 = (long) SWIG_PyObj_AsLong(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyApp::SetMacPreferencesMenuItemId(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetMacExitMenuItemId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long arg1 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_SetMacExitMenuItemId",kwnames,&obj0)) goto fail;
    {
        arg1 = (long) SWIG_PyObj_AsLong(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyApp::SetMacExitMenuItemId(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_SetMacHelpMenuTitleName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp_SetMacHelpMenuTitleName",kwnames,&obj0)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyApp::SetMacHelpMenuTitleName((wxString const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_PyApp__BootstrapApp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *arg1 = (wxPyApp *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyApp__BootstrapApp",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyApp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_BootstrapApp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyApp_GetComCtl32Version(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":PyApp_GetComCtl32Version",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)PyApp_GetComCtl32Version();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyApp_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyApp, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Exit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":Exit",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxExit();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Yield(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    bool result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":Yield",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxYield();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_YieldIfNeeded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    bool result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":YieldIfNeeded",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxYieldIfNeeded();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SafeYield(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) NULL ;
    bool arg2 = (bool) False ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "win",(char *) "onlyIfNeeded", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:SafeYield",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxSafeYield(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_WakeUpIdle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":WakeUpIdle",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxWakeUpIdle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PostEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxEvtHandler *arg1 = (wxEvtHandler *) 0 ;
    wxEvent *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "dest",(char *) "event", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PostEvent",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPostEvent(arg1,*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_App_CleanUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":App_CleanUp",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxApp_CleanUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetApp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyApp *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":GetApp",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyApp *)wxGetApp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AcceleratorEntry(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    int arg2 = (int) 0 ;
    int arg3 = (int) 0 ;
    wxMenuItem *arg4 = (wxMenuItem *) NULL ;
    wxAcceleratorEntry *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "flags",(char *) "keyCode",(char *) "cmd",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOO:new_AcceleratorEntry",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxAcceleratorEntry *)new wxAcceleratorEntry(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxAcceleratorEntry, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_AcceleratorEntry(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAcceleratorEntry *arg1 = (wxAcceleratorEntry *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_AcceleratorEntry",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxAcceleratorEntry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AcceleratorEntry_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAcceleratorEntry *arg1 = (wxAcceleratorEntry *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    wxMenuItem *arg5 = (wxMenuItem *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flags",(char *) "keyCode",(char *) "cmd",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:AcceleratorEntry_Set",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxAcceleratorEntry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Set(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AcceleratorEntry_SetMenuItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAcceleratorEntry *arg1 = (wxAcceleratorEntry *) 0 ;
    wxMenuItem *arg2 = (wxMenuItem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AcceleratorEntry_SetMenuItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxAcceleratorEntry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMenuItem(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AcceleratorEntry_GetMenuItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAcceleratorEntry *arg1 = (wxAcceleratorEntry *) 0 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:AcceleratorEntry_GetMenuItem",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxAcceleratorEntry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)((wxAcceleratorEntry const *)arg1)->GetMenuItem();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AcceleratorEntry_GetFlags(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAcceleratorEntry *arg1 = (wxAcceleratorEntry *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:AcceleratorEntry_GetFlags",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxAcceleratorEntry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetFlags();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AcceleratorEntry_GetKeyCode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAcceleratorEntry *arg1 = (wxAcceleratorEntry *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:AcceleratorEntry_GetKeyCode",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxAcceleratorEntry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetKeyCode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AcceleratorEntry_GetCommand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAcceleratorEntry *arg1 = (wxAcceleratorEntry *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:AcceleratorEntry_GetCommand",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxAcceleratorEntry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetCommand();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * AcceleratorEntry_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxAcceleratorEntry, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_AcceleratorTable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    wxAcceleratorEntry *arg2 = (wxAcceleratorEntry *) 0 ;
    wxAcceleratorTable *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "n", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:new_AcceleratorTable",kwnames,&obj0)) goto fail;
    {
        arg2 = wxAcceleratorEntry_LIST_helper(obj0);
        if (arg2) arg1 = PyList_Size(obj0);
        else    arg1 = 0;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxAcceleratorTable *)new wxAcceleratorTable(arg1,(wxAcceleratorEntry const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxAcceleratorTable, 1);
    {
        delete [] arg2;
    }
    return resultobj;
    fail:
    {
        delete [] arg2;
    }
    return NULL;
}


static PyObject *_wrap_delete_AcceleratorTable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAcceleratorTable *arg1 = (wxAcceleratorTable *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_AcceleratorTable",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxAcceleratorTable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AcceleratorTable_Ok(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAcceleratorTable *arg1 = (wxAcceleratorTable *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:AcceleratorTable_Ok",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxAcceleratorTable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxAcceleratorTable const *)arg1)->Ok();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * AcceleratorTable_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxAcceleratorTable, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_NullAcceleratorTable_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable NullAcceleratorTable is read-only.");
    return 1;
}


static PyObject *_wrap_NullAcceleratorTable_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) &wxNullAcceleratorTable, SWIGTYPE_p_wxAcceleratorTable, 0);
    return pyobj;
}


static PyObject *_wrap_GetAccelFromString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    wxAcceleratorEntry *result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "label", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GetAccelFromString",kwnames,&obj0)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxAcceleratorEntry *)wxGetAccelFromString((wxString const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxAcceleratorEntry, 0);
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static int _wrap_PanelNameStr_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable PanelNameStr is read-only.");
    return 1;
}


static PyObject *_wrap_PanelNameStr_get() {
    PyObject *pyobj;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyPanelNameStr)->c_str(), (&wxPyPanelNameStr)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyPanelNameStr)->c_str(), (&wxPyPanelNameStr)->Len());
#endif
    }
    return pyobj;
}


static PyObject *_wrap_new_Window(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) 0 ;
    wxString const &arg6_defvalue = wxPyPanelNameStr ;
    wxString *arg6 = (wxString *) &arg6_defvalue ;
    wxWindow *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    bool temp6 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOO:new_Window",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int const) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (long) SWIG_PyObj_AsLong(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = wxString_in_helper(obj5);
            if (arg6 == NULL) SWIG_fail;
            temp6 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)new wxWindow(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5,(wxString const &)*arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp6)
        delete arg6;
    }
    return resultobj;
    fail:
    {
        if (temp6)
        delete arg6;
    }
    return NULL;
}


static PyObject *_wrap_new_PreWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PreWindow",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)new wxWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 ;
    wxPoint const &arg4_defvalue = wxDefaultPosition ;
    wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
    wxSize const &arg5_defvalue = wxDefaultSize ;
    wxSize *arg5 = (wxSize *) &arg5_defvalue ;
    long arg6 = (long) 0 ;
    wxString const &arg7_defvalue = wxPyPanelNameStr ;
    wxString *arg7 = (wxString *) &arg7_defvalue ;
    bool result;
    wxPoint temp4 ;
    wxSize temp5 ;
    bool temp7 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OOOO:Window_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = (int const) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (long) SWIG_PyObj_AsLong(obj5);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = wxString_in_helper(obj6);
            if (arg7 == NULL) SWIG_fail;
            temp7 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Create(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxString const &)*arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp7)
        delete arg7;
    }
    return resultobj;
    fail:
    {
        if (temp7)
        delete arg7;
    }
    return NULL;
}


static PyObject *_wrap_Window_Close(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool arg2 = (bool) False ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "force", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Window_Close",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Close(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Destroy",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Destroy();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_DestroyChildren(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_DestroyChildren",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->DestroyChildren();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_IsBeingDeleted(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_IsBeingDeleted",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->IsBeingDeleted();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetTitle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "title", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetTitle",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTitle((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Window_GetTitle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetTitle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetTitle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "label", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetLabel",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLabel((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Window_GetLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetLabel",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetLabel();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetName",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetName((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Window_GetName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetName",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetName();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetId",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetId(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetId",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_NewControlId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":Window_NewControlId",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxWindow::NewControlId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_NextControlId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_NextControlId",kwnames,&obj0)) goto fail;
    {
        arg1 = (int) SWIG_PyObj_AsInt(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxWindow::NextControlId(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_PrevControlId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_PrevControlId",kwnames,&obj0)) goto fail;
    {
        arg1 = (int) SWIG_PyObj_AsInt(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxWindow::PrevControlId(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetSize",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSize((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetDimensions(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 = (int) wxSIZE_AUTO ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "width",(char *) "height",(char *) "sizeFlags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|O:Window_SetDimensions",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg5 = (int) SWIG_PyObj_AsInt(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int) SWIG_PyObj_AsInt(obj5);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSize(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxRect *arg2 = 0 ;
    int arg3 = (int) wxSIZE_AUTO ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect",(char *) "sizeFlags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:Window_SetRect",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSize((wxRect const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetSizeWH(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Window_SetSizeWH",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint *arg2 = 0 ;
    int arg3 = (int) wxSIZE_USE_EXISTING ;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:Window_Move",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Move((wxPoint const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_MoveXY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 = (int) wxSIZE_USE_EXISTING ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:Window_MoveXY",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Move(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Raise(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Raise",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Raise();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Lower",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Lower();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetClientSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetClientSize",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetClientSize((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetClientSizeWH(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Window_SetClientSizeWH",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetClientSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetClientRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetClientRect",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetClientSize((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetPositionTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetPositionTuple",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetPosition(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetSizeTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetSizeTuple",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        ((wxWindow const *)arg1)->GetSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxRect result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetRect",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetRect();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRect * resultptr;
        resultptr = new wxRect((wxRect &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxRect, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetClientSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetClientSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetClientSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetClientSizeTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetClientSizeTuple",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        ((wxWindow const *)arg1)->GetClientSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetClientAreaOrigin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetClientAreaOrigin",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetClientAreaOrigin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetClientRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxRect result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetClientRect",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetClientRect();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRect * resultptr;
        resultptr = new wxRect((wxRect &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxRect, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetBestSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetBestSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetBestSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetBestSizeTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetBestSizeTuple",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        ((wxWindow const *)arg1)->GetBestSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetAdjustedBestSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetAdjustedBestSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetAdjustedBestSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Center(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) wxBOTH ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "direction", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Window_Center",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Center(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_CenterOnScreen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) wxBOTH ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dir", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Window_CenterOnScreen",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CenterOnScreen(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_CenterOnParent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) wxBOTH ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dir", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Window_CenterOnParent",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CenterOnParent(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Fit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Fit",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Fit();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_FitInside(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_FitInside",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->FitInside();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetSizeHints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 = (int) -1 ;
    int arg5 = (int) -1 ;
    int arg6 = (int) -1 ;
    int arg7 = (int) -1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "minW",(char *) "minH",(char *) "maxW",(char *) "maxH",(char *) "incW",(char *) "incH", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OOOO:Window_SetSizeHints",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int) SWIG_PyObj_AsInt(obj5);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int) SWIG_PyObj_AsInt(obj6);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSizeHints(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetVirtualSizeHints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 = (int) -1 ;
    int arg5 = (int) -1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "minW",(char *) "minH",(char *) "maxW",(char *) "maxH", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:Window_SetVirtualSizeHints",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVirtualSizeHints(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetMinWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetMinWidth",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetMinWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetMinHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetMinHeight",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetMinHeight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetMaxWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetMaxWidth",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetMaxWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetMaxHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetMaxHeight",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetMaxHeight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetMaxSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetMaxSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetMaxSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetVirtualSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetVirtualSize",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVirtualSize((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetVirtualSizeWH(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Window_SetVirtualSizeWH",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVirtualSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetVirtualSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetVirtualSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetVirtualSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetVirtualSizeTuple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetVirtualSizeTuple",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        ((wxWindow const *)arg1)->GetVirtualSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetBestVirtualSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetBestVirtualSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetBestVirtualSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool arg2 = (bool) True ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Window_Show",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Show(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Hide",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Hide();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool arg2 = (bool) True ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "enable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Window_Enable",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Enable(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Disable",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Disable();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_IsShown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_IsShown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->IsShown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_IsEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_IsEnabled",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->IsEnabled();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetWindowStyleFlag(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetWindowStyleFlag",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWindowStyleFlag(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetWindowStyleFlag(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetWindowStyleFlag",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)((wxWindow const *)arg1)->GetWindowStyleFlag();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetWindowStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetWindowStyle",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWindowStyle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetWindowStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetWindowStyle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)((wxWindow const *)arg1)->GetWindowStyle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_HasFlag(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flag", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_HasFlag",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->HasFlag(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_IsRetained(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_IsRetained",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->IsRetained();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetExtraStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "exStyle", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetExtraStyle",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetExtraStyle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetExtraStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetExtraStyle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)((wxWindow const *)arg1)->GetExtraStyle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_MakeModal(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool arg2 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "modal", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Window_MakeModal",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MakeModal(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetThemeEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "enableTheme", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetThemeEnabled",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetThemeEnabled(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetThemeEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetThemeEnabled",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->GetThemeEnabled();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ShouldInheritColours(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_ShouldInheritColours",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->ShouldInheritColours();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_SetFocus",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFocus();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetFocusFromKbd(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_SetFocusFromKbd",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFocusFromKbd();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_FindFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":Window_FindFocus",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)wxWindow::FindFocus();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_AcceptsFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_AcceptsFocus",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->AcceptsFocus();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_AcceptsFocusFromKeyboard(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_AcceptsFocusFromKeyboard",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->AcceptsFocusFromKeyboard();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetDefaultItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetDefaultItem",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxWindow const *)arg1)->GetDefaultItem();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetDefaultItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "child", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetDefaultItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)(arg1)->SetDefaultItem(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetTmpDefaultItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetTmpDefaultItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTmpDefaultItem(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetChildren(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetChildren",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxWindow_GetChildren(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetParent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetParent",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxWindow const *)arg1)->GetParent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetGrandParent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetGrandParent",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxWindow const *)arg1)->GetGrandParent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_IsTopLevel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_IsTopLevel",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->IsTopLevel();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "newParent", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_Reparent",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Reparent(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_AddChild(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "child", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_AddChild",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddChild(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_RemoveChild(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "child", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_RemoveChild",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveChild(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_FindWindowById(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long arg2 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "winid", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_FindWindowById",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)(arg1)->FindWindow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_FindWindowByName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString *arg2 = 0 ;
    wxWindow *result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_FindWindowByName",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)(arg1)->FindWindow((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Window_GetEventHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxEvtHandler *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetEventHandler",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEvtHandler *)((wxWindow const *)arg1)->GetEventHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetEventHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxEvtHandler *arg2 = (wxEvtHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetEventHandler",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEventHandler(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_PushEventHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxEvtHandler *arg2 = (wxEvtHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_PushEventHandler",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PushEventHandler(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_PopEventHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool arg2 = (bool) False ;
    wxEvtHandler *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "deleteHandler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Window_PopEventHandler",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEvtHandler *)(arg1)->PopEventHandler(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_RemoveEventHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxEvtHandler *arg2 = (wxEvtHandler *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_RemoveEventHandler",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->RemoveEventHandler(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetValidator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxValidator *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "validator", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetValidator",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetValidator((wxValidator const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetValidator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxValidator *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetValidator",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxValidator *)(arg1)->GetValidator();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetAcceleratorTable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxAcceleratorTable *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "accel", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetAcceleratorTable",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxAcceleratorTable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAcceleratorTable((wxAcceleratorTable const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetAcceleratorTable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxAcceleratorTable *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetAcceleratorTable",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxAcceleratorTable *)(arg1)->GetAcceleratorTable();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxAcceleratorTable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_RegisterHotKey(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "hotkeyId",(char *) "modifiers",(char *) "keycode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:Window_RegisterHotKey",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxWindow_RegisterHotKey(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_UnregisterHotKey(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "hotkeyId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_UnregisterHotKey",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxWindow_UnregisterHotKey(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ConvertDialogPointToPixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_ConvertDialogPointToPixels",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->ConvertDialogToPixels((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ConvertDialogSizeToPixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize result;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_ConvertDialogSizeToPixels",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->ConvertDialogToPixels((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_DLG_PNT(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_DLG_PNT",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->ConvertDialogToPixels((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_DLG_SZE(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize result;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_DLG_SZE",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->ConvertDialogToPixels((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ConvertPixelPointToDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_ConvertPixelPointToDialog",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->ConvertPixelsToDialog((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ConvertPixelSizeToDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize result;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_ConvertPixelSizeToDialog",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->ConvertPixelsToDialog((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_WarpPointer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Window_WarpPointer",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WarpPointer(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_CaptureMouse(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_CaptureMouse",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CaptureMouse();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ReleaseMouse(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_ReleaseMouse",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ReleaseMouse();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetCapture(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":Window_GetCapture",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)wxWindow::GetCapture();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_HasCapture(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_HasCapture",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->HasCapture();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Refresh(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool arg2 = (bool) True ;
    wxRect *arg3 = (wxRect *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "eraseBackground",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:Window_Refresh",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Refresh(arg2,(wxRect const *)arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_RefreshRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_RefreshRect",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RefreshRect((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Update(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Update",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Update();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ClearBackground(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_ClearBackground",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearBackground();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Freeze(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Freeze",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Freeze();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Thaw(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Thaw",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Thaw();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_PrepareDC(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_PrepareDC",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxDC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PrepareDC(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetUpdateRegion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxRegion *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetUpdateRegion",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxRegion &_result_ref = (arg1)->GetUpdateRegion();
            result = (wxRegion *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetUpdateClientRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxRect result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetUpdateClientRect",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetUpdateClientRect();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRect * resultptr;
        resultptr = new wxRect((wxRect &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxRect, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_IsExposed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 = (int) 1 ;
    int arg5 = (int) 1 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:Window_IsExposed",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->IsExposed(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_IsExposedPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint *arg2 = 0 ;
    bool result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_IsExposedPoint",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->IsExposed((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_isExposedRect(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxRect *arg2 = 0 ;
    bool result;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_isExposedRect",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->IsExposed((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetBackgroundColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxColour *arg2 = 0 ;
    bool result;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetBackgroundColour",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetBackgroundColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetForegroundColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxColour *arg2 = 0 ;
    bool result;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetForegroundColour",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetForegroundColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetBackgroundColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetBackgroundColour",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetBackgroundColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetForegroundColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetForegroundColour",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetForegroundColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxCursor *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "cursor", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetCursor",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxCursor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetCursor((wxCursor const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxCursor *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetCursor",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxCursor &_result_ref = (arg1)->GetCursor();
            result = (wxCursor *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCursor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxFont *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "font", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetFont",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetFont((wxFont const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxFont *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetFont",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxFont &_result_ref = (arg1)->GetFont();
            result = (wxFont *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxFont, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetCaret(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxCaret *arg2 = (wxCaret *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "caret", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetCaret",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxCaret,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCaret(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetCaret(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxCaret *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetCaret",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCaret *)((wxWindow const *)arg1)->GetCaret();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCaret, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetCharHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetCharHeight",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetCharHeight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetCharWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetCharWidth",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetCharWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetTextExtent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString *arg2 = 0 ;
    int *arg3 = (int *) 0 ;
    int *arg4 = (int *) 0 ;
    bool temp2 = False ;
    int temp3 ;
    int temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "string", NULL 
    };
    
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_GetTextExtent",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetTextExtent((wxString const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Window_GetFullTextExtent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString *arg2 = 0 ;
    int *arg3 = (int *) 0 ;
    int *arg4 = (int *) 0 ;
    int *arg5 = (int *) 0 ;
    int *arg6 = (int *) 0 ;
    wxFont *arg7 = (wxFont *) NULL ;
    bool temp2 = False ;
    int temp3 ;
    int temp4 ;
    int temp5 ;
    int temp6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "string",(char *) "font", NULL 
    };
    
    arg3 = &temp3;
    arg4 = &temp4;
    arg5 = &temp5;
    arg6 = &temp6;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:Window_GetFullTextExtent",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg7, SWIGTYPE_p_wxFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetTextExtent((wxString const &)*arg2,arg3,arg4,arg5,arg6,(wxFont const *)arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg6));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Window_ClientToScreenXY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Window_ClientToScreenXY",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        temp2 = PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
        arg2 = &temp2;
    }
    {
        temp3 = PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
        arg3 = &temp3;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        ((wxWindow const *)arg1)->ClientToScreen(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ScreenToClientXY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Window_ScreenToClientXY",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        temp2 = PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
        arg2 = &temp2;
    }
    {
        temp3 = PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
        arg3 = &temp3;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        ((wxWindow const *)arg1)->ScreenToClient(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ClientToScreen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_ClientToScreen",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->ClientToScreen((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ScreenToClient(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_ScreenToClient",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->ScreenToClient((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_HitTestXY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Window_HitTestXY",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->HitTest(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_HitTest(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPoint *arg2 = 0 ;
    int result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_HitTest",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->HitTest((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetBorderFlags(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_GetBorderFlags",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (long) SWIG_PyObj_AsLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetBorder(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetBorder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetBorder",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetBorder();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_UpdateWindowUI(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long arg2 = (long) wxUPDATE_UI_NONE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Window_UpdateWindowUI",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (long) SWIG_PyObj_AsLong(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->UpdateWindowUI(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_PopupMenuXY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxMenu *arg2 = (wxMenu *) 0 ;
    int arg3 ;
    int arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "menu",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:Window_PopupMenuXY",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->PopupMenu(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_PopupMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxMenu *arg2 = (wxMenu *) 0 ;
    wxPoint *arg3 = 0 ;
    bool result;
    wxPoint temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "menu",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Window_PopupMenu",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = &temp3;
        if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->PopupMenu(arg2,(wxPoint const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetHandle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetHandle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)wxWindow_GetHandle(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_HasScrollbar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_HasScrollbar",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->HasScrollbar(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetScrollbar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    bool arg6 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "orient",(char *) "pos",(char *) "thumbvisible",(char *) "range",(char *) "refresh", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|O:Window_SetScrollbar",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg5 = (int) SWIG_PyObj_AsInt(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (bool) SWIG_PyObj_AsBool(obj5);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetScrollbar(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetScrollPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    bool arg4 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "orient",(char *) "pos",(char *) "refresh", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:Window_SetScrollPos",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (bool) SWIG_PyObj_AsBool(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetScrollPos(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetScrollPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_GetScrollPos",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetScrollPos(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetScrollThumb(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_GetScrollThumb",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetScrollThumb(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetScrollRange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_GetScrollRange",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxWindow const *)arg1)->GetScrollRange(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ScrollWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    wxRect *arg4 = (wxRect *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dx",(char *) "dy",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:Window_ScrollWindow",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_wxRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ScrollWindow(arg2,arg3,(wxRect const *)arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ScrollLines(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "lines", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_ScrollLines",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->ScrollLines(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_ScrollPages(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pages", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_ScrollPages",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->ScrollPages(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_LineUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_LineUp",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LineUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_LineDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_LineDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LineDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_PageUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_PageUp",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->PageUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_PageDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_PageDown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->PageDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetHelpText",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHelpText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Window_SetHelpTextForId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetHelpTextForId",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHelpTextForId((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Window_GetHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetHelpText",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxWindow const *)arg1)->GetHelpText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetToolTipString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "tip", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetToolTipString",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetToolTip((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Window_SetToolTip(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxToolTip *arg2 = (wxToolTip *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "tip", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetToolTip",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxToolTip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetToolTip(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetToolTip(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxToolTip *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetToolTip",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxToolTip *)((wxWindow const *)arg1)->GetToolTip();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetDropTarget(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPyDropTarget *arg2 = (wxPyDropTarget *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dropTarget", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetDropTarget",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxPyDropTarget,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDropTarget(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetDropTarget(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxPyDropTarget *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetDropTarget",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyDropTarget *)((wxWindow const *)arg1)->GetDropTarget();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPyDropTarget, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetConstraints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxLayoutConstraints *arg2 = (wxLayoutConstraints *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "constraints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetConstraints",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetConstraints(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetConstraints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxLayoutConstraints *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetConstraints",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxLayoutConstraints *)((wxWindow const *)arg1)->GetConstraints();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxLayoutConstraints, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetAutoLayout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "autoLayout", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetAutoLayout",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAutoLayout(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetAutoLayout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetAutoLayout",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxWindow const *)arg1)->GetAutoLayout();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_Layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_Layout",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Layout();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSizer *arg2 = (wxSizer *) 0 ;
    bool arg3 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sizer",(char *) "deleteOld", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:Window_SetSizer",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        {
            arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSizer(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetSizerAndFit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSizer *arg2 = (wxSizer *) 0 ;
    bool arg3 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sizer",(char *) "deleteOld", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:Window_SetSizerAndFit",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        {
            arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSizerAndFit(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSizer *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetSizer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSizer *)((wxWindow const *)arg1)->GetSizer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxSizer(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_SetContainingSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSizer *arg2 = (wxSizer *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sizer", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Window_SetContainingSizer",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetContainingSizer(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Window_GetContainingSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxSizer *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_GetContainingSizer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSizer *)((wxWindow const *)arg1)->GetContainingSizer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxSizer(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Window_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxWindow, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_FindWindowById(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long arg1 ;
    wxWindow *arg2 = (wxWindow *) NULL ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "id",(char *) "parent", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:FindWindowById",kwnames,&obj0,&obj1)) goto fail;
    {
        arg1 = (long) SWIG_PyObj_AsLong(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)wxFindWindowById(arg1,(wxWindow const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FindWindowByName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    wxWindow *arg2 = (wxWindow *) NULL ;
    wxWindow *result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "name",(char *) "parent", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:FindWindowByName",kwnames,&obj0,&obj1)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)wxFindWindowByName((wxString const &)*arg1,(wxWindow const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_FindWindowByLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    wxWindow *arg2 = (wxWindow *) NULL ;
    wxWindow *result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "label",(char *) "parent", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:FindWindowByLabel",kwnames,&obj0,&obj1)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)wxFindWindowByLabel((wxString const &)*arg1,(wxWindow const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_Window_FromHWND(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    unsigned long arg1 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "hWnd", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Window_FromHWND",kwnames,&obj0)) goto fail;
    {
        arg1 = (unsigned long) SWIG_PyObj_AsUnsignedLong(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)wxWindow_FromHWND(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Validator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxValidator *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_Validator",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxValidator *)new wxValidator();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Validator_Clone(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxValidator *arg1 = (wxValidator *) 0 ;
    wxValidator *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Validator_Clone",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxValidator *)(arg1)->Clone();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Validator_Validate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxValidator *arg1 = (wxValidator *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Validator_Validate",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Validate(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Validator_TransferToWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxValidator *arg1 = (wxValidator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Validator_TransferToWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->TransferToWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Validator_TransferFromWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxValidator *arg1 = (wxValidator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Validator_TransferFromWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->TransferFromWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Validator_GetWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxValidator *arg1 = (wxValidator *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Validator_GetWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)(arg1)->GetWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Validator_SetWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxValidator *arg1 = (wxValidator *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "window", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Validator_SetWindow",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWindow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Validator_IsSilent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    bool result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":Validator_IsSilent",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxValidator::IsSilent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Validator_SetBellOnError(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) True ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "doIt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:Validator_SetBellOnError",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxValidator::SetBellOnError(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Validator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxValidator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyValidator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyValidator *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PyValidator",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyValidator *)new wxPyValidator();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPyValidator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyValidator__setCallbackInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyValidator *arg1 = (wxPyValidator *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    int arg4 = (int) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class",(char *) "incref", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PyValidator__setCallbackInfo",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPyValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyValidator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyValidator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_DefaultValidator_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable DefaultValidator is read-only.");
    return 1;
}


static PyObject *_wrap_DefaultValidator_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) &wxDefaultValidator, SWIGTYPE_p_wxValidator, 0);
    return pyobj;
}


static PyObject *_wrap_new_Menu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString const &arg1_defvalue = wxPyEmptyString ;
    wxString *arg1 = (wxString *) &arg1_defvalue ;
    long arg2 = (long) 0 ;
    wxMenu *result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "title",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_Menu",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = wxString_in_helper(obj0);
            if (arg1 == NULL) SWIG_fail;
            temp1 = True;
        }
    }
    if (obj1) {
        {
            arg2 = (long) SWIG_PyObj_AsLong(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenu *)new wxMenu((wxString const &)*arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_Menu_Append(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    wxString const &arg4_defvalue = wxPyEmptyString ;
    wxString *arg4 = (wxString *) &arg4_defvalue ;
    int arg5 = (int) wxITEM_NORMAL ;
    wxMenuItem *result;
    bool temp3 = False ;
    bool temp4 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "text",(char *) "help",(char *) "kind", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:Menu_Append",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if (obj3) {
        {
            arg4 = wxString_in_helper(obj3);
            if (arg4 == NULL) SWIG_fail;
            temp4 = True;
        }
    }
    if (obj4) {
        {
            arg5 = (wxItemKind) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Append(arg2,(wxString const &)*arg3,(wxString const &)*arg4,(wxItemKind )arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_Menu_AppendSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_AppendSeparator",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->AppendSeparator();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_AppendCheckItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    wxString const &arg4_defvalue = wxPyEmptyString ;
    wxString *arg4 = (wxString *) &arg4_defvalue ;
    wxMenuItem *result;
    bool temp3 = False ;
    bool temp4 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "text",(char *) "help", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:Menu_AppendCheckItem",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if (obj3) {
        {
            arg4 = wxString_in_helper(obj3);
            if (arg4 == NULL) SWIG_fail;
            temp4 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->AppendCheckItem(arg2,(wxString const &)*arg3,(wxString const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_Menu_AppendRadioItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    wxString const &arg4_defvalue = wxPyEmptyString ;
    wxString *arg4 = (wxString *) &arg4_defvalue ;
    wxMenuItem *result;
    bool temp3 = False ;
    bool temp4 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "text",(char *) "help", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:Menu_AppendRadioItem",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if (obj3) {
        {
            arg4 = wxString_in_helper(obj3);
            if (arg4 == NULL) SWIG_fail;
            temp4 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->AppendRadioItem(arg2,(wxString const &)*arg3,(wxString const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_Menu_AppendMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    wxMenu *arg4 = (wxMenu *) 0 ;
    wxString const &arg5_defvalue = wxPyEmptyString ;
    wxString *arg5 = (wxString *) &arg5_defvalue ;
    wxMenuItem *result;
    bool temp3 = False ;
    bool temp5 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "text",(char *) "submenu",(char *) "help", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:Menu_AppendMenu",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        {
            arg5 = wxString_in_helper(obj4);
            if (arg5 == NULL) SWIG_fail;
            temp5 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Append(arg2,(wxString const &)*arg3,arg4,(wxString const &)*arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp5)
        delete arg5;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp5)
        delete arg5;
    }
    return NULL;
}


static PyObject *_wrap_Menu_AppendItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenuItem *arg2 = (wxMenuItem *) 0 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_AppendItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Append(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_Break(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_Break",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Break();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_InsertItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    size_t arg2 ;
    wxMenuItem *arg3 = (wxMenuItem *) 0 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Menu_InsertItem",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Insert(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_Insert(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    size_t arg2 ;
    int arg3 ;
    wxString *arg4 = 0 ;
    wxString const &arg5_defvalue = wxPyEmptyString ;
    wxString *arg5 = (wxString *) &arg5_defvalue ;
    int arg6 = (int) wxITEM_NORMAL ;
    wxMenuItem *result;
    bool temp4 = False ;
    bool temp5 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "id",(char *) "text",(char *) "help",(char *) "kind", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:Menu_Insert",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = True;
    }
    if (obj4) {
        {
            arg5 = wxString_in_helper(obj4);
            if (arg5 == NULL) SWIG_fail;
            temp5 = True;
        }
    }
    if (obj5) {
        {
            arg6 = (wxItemKind) SWIG_PyObj_AsInt(obj5);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Insert(arg2,arg3,(wxString const &)*arg4,(wxString const &)*arg5,(wxItemKind )arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp4)
        delete arg4;
    }
    {
        if (temp5)
        delete arg5;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    {
        if (temp5)
        delete arg5;
    }
    return NULL;
}


static PyObject *_wrap_Menu_InsertSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    size_t arg2 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_InsertSeparator",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->InsertSeparator(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_InsertCheckItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    size_t arg2 ;
    int arg3 ;
    wxString *arg4 = 0 ;
    wxString const &arg5_defvalue = wxPyEmptyString ;
    wxString *arg5 = (wxString *) &arg5_defvalue ;
    wxMenuItem *result;
    bool temp4 = False ;
    bool temp5 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "id",(char *) "text",(char *) "help", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:Menu_InsertCheckItem",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = True;
    }
    if (obj4) {
        {
            arg5 = wxString_in_helper(obj4);
            if (arg5 == NULL) SWIG_fail;
            temp5 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->InsertCheckItem(arg2,arg3,(wxString const &)*arg4,(wxString const &)*arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp4)
        delete arg4;
    }
    {
        if (temp5)
        delete arg5;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    {
        if (temp5)
        delete arg5;
    }
    return NULL;
}


static PyObject *_wrap_Menu_InsertRadioItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    size_t arg2 ;
    int arg3 ;
    wxString *arg4 = 0 ;
    wxString const &arg5_defvalue = wxPyEmptyString ;
    wxString *arg5 = (wxString *) &arg5_defvalue ;
    wxMenuItem *result;
    bool temp4 = False ;
    bool temp5 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "id",(char *) "text",(char *) "help", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:Menu_InsertRadioItem",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = True;
    }
    if (obj4) {
        {
            arg5 = wxString_in_helper(obj4);
            if (arg5 == NULL) SWIG_fail;
            temp5 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->InsertRadioItem(arg2,arg3,(wxString const &)*arg4,(wxString const &)*arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp4)
        delete arg4;
    }
    {
        if (temp5)
        delete arg5;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    {
        if (temp5)
        delete arg5;
    }
    return NULL;
}


static PyObject *_wrap_Menu_InsertMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    size_t arg2 ;
    int arg3 ;
    wxString *arg4 = 0 ;
    wxMenu *arg5 = (wxMenu *) 0 ;
    wxString const &arg6_defvalue = wxPyEmptyString ;
    wxString *arg6 = (wxString *) &arg6_defvalue ;
    wxMenuItem *result;
    bool temp4 = False ;
    bool temp6 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "id",(char *) "text",(char *) "submenu",(char *) "help", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|O:Menu_InsertMenu",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = True;
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj5) {
        {
            arg6 = wxString_in_helper(obj5);
            if (arg6 == NULL) SWIG_fail;
            temp6 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Insert(arg2,arg3,(wxString const &)*arg4,arg5,(wxString const &)*arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp4)
        delete arg4;
    }
    {
        if (temp6)
        delete arg6;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    {
        if (temp6)
        delete arg6;
    }
    return NULL;
}


static PyObject *_wrap_Menu_PrependItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenuItem *arg2 = (wxMenuItem *) 0 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_PrependItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Prepend(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_Prepend(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    wxString const &arg4_defvalue = wxPyEmptyString ;
    wxString *arg4 = (wxString *) &arg4_defvalue ;
    int arg5 = (int) wxITEM_NORMAL ;
    wxMenuItem *result;
    bool temp3 = False ;
    bool temp4 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "text",(char *) "help",(char *) "kind", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:Menu_Prepend",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if (obj3) {
        {
            arg4 = wxString_in_helper(obj3);
            if (arg4 == NULL) SWIG_fail;
            temp4 = True;
        }
    }
    if (obj4) {
        {
            arg5 = (wxItemKind) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Prepend(arg2,(wxString const &)*arg3,(wxString const &)*arg4,(wxItemKind )arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_Menu_PrependSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_PrependSeparator",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->PrependSeparator();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_PrependCheckItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    wxString const &arg4_defvalue = wxPyEmptyString ;
    wxString *arg4 = (wxString *) &arg4_defvalue ;
    wxMenuItem *result;
    bool temp3 = False ;
    bool temp4 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "text",(char *) "help", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:Menu_PrependCheckItem",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if (obj3) {
        {
            arg4 = wxString_in_helper(obj3);
            if (arg4 == NULL) SWIG_fail;
            temp4 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->PrependCheckItem(arg2,(wxString const &)*arg3,(wxString const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_Menu_PrependRadioItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    wxString const &arg4_defvalue = wxPyEmptyString ;
    wxString *arg4 = (wxString *) &arg4_defvalue ;
    wxMenuItem *result;
    bool temp3 = False ;
    bool temp4 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "text",(char *) "help", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:Menu_PrependRadioItem",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if (obj3) {
        {
            arg4 = wxString_in_helper(obj3);
            if (arg4 == NULL) SWIG_fail;
            temp4 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->PrependRadioItem(arg2,(wxString const &)*arg3,(wxString const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_Menu_PrependMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    wxMenu *arg4 = (wxMenu *) 0 ;
    wxString const &arg5_defvalue = wxPyEmptyString ;
    wxString *arg5 = (wxString *) &arg5_defvalue ;
    wxMenuItem *result;
    bool temp3 = False ;
    bool temp5 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "text",(char *) "submenu",(char *) "help", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:Menu_PrependMenu",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        {
            arg5 = wxString_in_helper(obj4);
            if (arg5 == NULL) SWIG_fail;
            temp5 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Prepend(arg2,(wxString const &)*arg3,arg4,(wxString const &)*arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp5)
        delete arg5;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp5)
        delete arg5;
    }
    return NULL;
}


static PyObject *_wrap_Menu_Remove(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_Remove",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Remove(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_RemoveItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenuItem *arg2 = (wxMenuItem *) 0 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_RemoveItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)(arg1)->Remove(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_Delete(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_Delete",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Delete(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_DeleteItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenuItem *arg2 = (wxMenuItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_DeleteItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Delete(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_Destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_Destroy",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxMenu_Destroy(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_DestroyId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_DestroyId",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Destroy(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_DestroyItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenuItem *arg2 = (wxMenuItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_DestroyItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Destroy(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_GetMenuItemCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_GetMenuItemCount",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (size_t)((wxMenu const *)arg1)->GetMenuItemCount();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedLong((unsigned long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_GetMenuItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_GetMenuItems",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxMenu_GetMenuItems(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_FindItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxString *arg2 = 0 ;
    int result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_FindItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMenu const *)arg1)->FindItem((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Menu_FindItemById(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_FindItemById",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)((wxMenu const *)arg1)->FindItem(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_FindItemByPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    size_t arg2 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "position", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_FindItemByPosition",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)((wxMenu const *)arg1)->FindItemByPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_Enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "enable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Menu_Enable",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Enable(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_IsEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_IsEnabled",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenu const *)arg1)->IsEnabled(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_Check(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "check", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Menu_Check",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Check(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_IsChecked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_IsChecked",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenu const *)arg1)->IsChecked(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_SetLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "label", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Menu_SetLabel",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLabel(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_Menu_GetLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_GetLabel",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMenu const *)arg1)->GetLabel(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_SetHelpString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "helpString", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Menu_SetHelpString",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHelpString(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_Menu_GetHelpString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    int arg2 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_GetHelpString",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMenu const *)arg1)->GetHelpString(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_SetTitle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "title", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_SetTitle",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTitle((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_Menu_GetTitle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_GetTitle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMenu const *)arg1)->GetTitle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_SetEventHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxEvtHandler *arg2 = (wxEvtHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_SetEventHandler",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEventHandler(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_GetEventHandler(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxEvtHandler *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_GetEventHandler",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEvtHandler *)((wxMenu const *)arg1)->GetEventHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_SetInvokingWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_SetInvokingWindow",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetInvokingWindow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_GetInvokingWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_GetInvokingWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)((wxMenu const *)arg1)->GetInvokingWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_GetStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_GetStyle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)((wxMenu const *)arg1)->GetStyle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_UpdateUI(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxEvtHandler *arg2 = (wxEvtHandler *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "source", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Menu_UpdateUI",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxEvtHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->UpdateUI(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_GetMenuBar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenuBar *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_GetMenuBar",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuBar *)((wxMenu const *)arg1)->GetMenuBar();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_Attach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenuBarBase *arg2 = (wxMenuBarBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "menubar", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_Attach",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenuBarBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Attach(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_Detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_Detach",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Detach();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_IsAttached(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_IsAttached",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenu const *)arg1)->IsAttached();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_SetParent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenu *arg2 = (wxMenu *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Menu_SetParent",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetParent(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Menu_GetParent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) 0 ;
    wxMenu *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Menu_GetParent",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenu *)((wxMenu const *)arg1)->GetParent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Menu_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMenu, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MenuBar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    long arg1 = (long) 0 ;
    wxMenuBar *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_MenuBar",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (long) SWIG_PyObj_AsLong(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuBar *)new wxMenuBar(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_Append(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    wxMenu *arg2 = (wxMenu *) 0 ;
    wxString *arg3 = 0 ;
    bool result;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "menu",(char *) "title", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MenuBar_Append",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Append(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_MenuBar_Insert(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    size_t arg2 ;
    wxMenu *arg3 = (wxMenu *) 0 ;
    wxString *arg4 = 0 ;
    bool result;
    bool temp4 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "menu",(char *) "title", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:MenuBar_Insert",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Insert(arg2,arg3,(wxString const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_MenuBar_GetMenuCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuBar_GetMenuCount",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (size_t)((wxMenuBar const *)arg1)->GetMenuCount();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromUnsignedLong((unsigned long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_GetMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    size_t arg2 ;
    wxMenu *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_GetMenu",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenu *)((wxMenuBar const *)arg1)->GetMenu(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_Replace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    size_t arg2 ;
    wxMenu *arg3 = (wxMenu *) 0 ;
    wxString *arg4 = 0 ;
    wxMenu *result;
    bool temp4 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "menu",(char *) "title", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:MenuBar_Replace",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenu *)(arg1)->Replace(arg2,arg3,(wxString const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_MenuBar_Remove(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    size_t arg2 ;
    wxMenu *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_Remove",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenu *)(arg1)->Remove(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_EnableTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    size_t arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "enable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MenuBar_EnableTop",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EnableTop(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_IsEnabledTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    size_t arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_IsEnabledTop",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuBar const *)arg1)->IsEnabledTop(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_SetLabelTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    size_t arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "label", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MenuBar_SetLabelTop",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLabelTop(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_MenuBar_GetLabelTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    size_t arg2 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_GetLabelTop",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMenuBar const *)arg1)->GetLabelTop(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_FindMenuItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    wxString *arg2 = 0 ;
    wxString *arg3 = 0 ;
    int result;
    bool temp2 = False ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "menu",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MenuBar_FindMenuItem",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMenuBar const *)arg1)->FindMenuItem((wxString const &)*arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_MenuBar_FindItemById(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    int arg2 ;
    wxMenuItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_FindItemById",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)((wxMenuBar const *)arg1)->FindItem(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_FindMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    wxString *arg2 = 0 ;
    int result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "title", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_FindMenu",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMenuBar const *)arg1)->FindMenu((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_MenuBar_Enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "enable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MenuBar_Enable",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Enable(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_Check(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "check", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MenuBar_Check",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Check(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_IsChecked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_IsChecked",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuBar const *)arg1)->IsChecked(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_IsEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_IsEnabled",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuBar const *)arg1)->IsEnabled(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_SetLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "label", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MenuBar_SetLabel",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLabel(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_MenuBar_GetLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    int arg2 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_GetLabel",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMenuBar const *)arg1)->GetLabel(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_SetHelpString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id",(char *) "helpString", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MenuBar_SetHelpString",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHelpString(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_MenuBar_GetHelpString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    int arg2 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_GetHelpString",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMenuBar const *)arg1)->GetHelpString(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_GetFrame(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    wxFrame *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuBar_GetFrame",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFrame *)((wxMenuBar const *)arg1)->GetFrame();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_IsAttached(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuBar_IsAttached",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuBar const *)arg1)->IsAttached();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_Attach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    wxFrame *arg2 = (wxFrame *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "frame", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuBar_Attach",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Attach(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuBar_Detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuBar *arg1 = (wxMenuBar *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuBar_Detach",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuBar,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Detach();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MenuBar_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMenuBar, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MenuItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenu *arg1 = (wxMenu *) NULL ;
    int arg2 = (int) wxID_SEPARATOR ;
    wxString const &arg3_defvalue = wxPyEmptyString ;
    wxString *arg3 = (wxString *) &arg3_defvalue ;
    wxString const &arg4_defvalue = wxPyEmptyString ;
    wxString *arg4 = (wxString *) &arg4_defvalue ;
    int arg5 = (int) wxITEM_NORMAL ;
    wxMenu *arg6 = (wxMenu *) NULL ;
    wxMenuItem *result;
    bool temp3 = False ;
    bool temp4 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "parentMenu",(char *) "id",(char *) "text",(char *) "help",(char *) "kind",(char *) "subMenu", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOOO:new_MenuItem",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = wxString_in_helper(obj2);
            if (arg3 == NULL) SWIG_fail;
            temp3 = True;
        }
    }
    if (obj3) {
        {
            arg4 = wxString_in_helper(obj3);
            if (arg4 == NULL) SWIG_fail;
            temp4 = True;
        }
    }
    if (obj4) {
        {
            arg5 = (wxItemKind) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj5) {
        if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenuItem *)new wxMenuItem(arg1,arg2,(wxString const &)*arg3,(wxString const &)*arg4,(wxItemKind )arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_MenuItem_GetMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxMenu *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetMenu",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenu *)((wxMenuItem const *)arg1)->GetMenu();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_SetMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxMenu *arg2 = (wxMenu *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "menu", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuItem_SetMenu",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMenu(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_SetId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuItem_SetId",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetId(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_GetId(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetId",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMenuItem const *)arg1)->GetId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_IsSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_IsSeparator",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuItem const *)arg1)->IsSeparator();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_SetText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "str", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuItem_SetText",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_MenuItem_GetLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetLabel",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxMenuItem const *)arg1)->GetLabel();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_GetText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxString *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetText",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxString const &_result_ref = ((wxMenuItem const *)arg1)->GetText();
            result = (wxString *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
        resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_GetLabelFromText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxString *arg1 = 0 ;
    wxString result;
    bool temp1 = False ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetLabelFromText",kwnames,&obj0)) goto fail;
    {
        arg1 = wxString_in_helper(obj0);
        if (arg1 == NULL) SWIG_fail;
        temp1 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = wxMenuItem::GetLabelFromText((wxString const &)*arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    {
        if (temp1)
        delete arg1;
    }
    return resultobj;
    fail:
    {
        if (temp1)
        delete arg1;
    }
    return NULL;
}


static PyObject *_wrap_MenuItem_GetKind(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetKind",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxMenuItem const *)arg1)->GetKind();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_SetCheckable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "checkable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuItem_SetCheckable",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCheckable(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_IsCheckable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_IsCheckable",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuItem const *)arg1)->IsCheckable();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_IsSubMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_IsSubMenu",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuItem const *)arg1)->IsSubMenu();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_SetSubMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxMenu *arg2 = (wxMenu *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "menu", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuItem_SetSubMenu",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxMenu,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSubMenu(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_GetSubMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxMenu *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetSubMenu",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxMenu *)((wxMenuItem const *)arg1)->GetSubMenu();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_Enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    bool arg2 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "enable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:MenuItem_Enable",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Enable(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_IsEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_IsEnabled",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuItem const *)arg1)->IsEnabled();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_Check(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    bool arg2 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "check", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:MenuItem_Check",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Check(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_IsChecked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_IsChecked",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxMenuItem const *)arg1)->IsChecked();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_Toggle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_Toggle",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Toggle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_SetHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "str", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuItem_SetHelp",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHelp((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_MenuItem_GetHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxString *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetHelp",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxString const &_result_ref = ((wxMenuItem const *)arg1)->GetHelp();
            result = (wxString *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
        resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_GetAccel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxAcceleratorEntry *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetAccel",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxAcceleratorEntry *)((wxMenuItem const *)arg1)->GetAccel();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxAcceleratorEntry, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_SetAccel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxAcceleratorEntry *arg2 = (wxAcceleratorEntry *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "accel", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuItem_SetAccel",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxAcceleratorEntry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAccel(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_GetDefaultMarginWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":MenuItem_GetDefaultMarginWidth",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)MenuItem_GetDefaultMarginWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_SetBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxBitmap *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bitmap", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MenuItem_SetBitmap",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxBitmap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBitmap((wxBitmap const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MenuItem_GetBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxMenuItem *arg1 = (wxMenuItem *) 0 ;
    wxBitmap *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:MenuItem_GetBitmap",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxMenuItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxBitmap const &_result_ref = (arg1)->GetBitmap();
            result = (wxBitmap *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxBitmap, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MenuItem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxMenuItem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_ControlNameStr_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable ControlNameStr is read-only.");
    return 1;
}


static PyObject *_wrap_ControlNameStr_get() {
    PyObject *pyobj;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPyControlNameStr)->c_str(), (&wxPyControlNameStr)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPyControlNameStr)->c_str(), (&wxPyControlNameStr)->Len());
#endif
    }
    return pyobj;
}


static PyObject *_wrap_new_Control(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) 0 ;
    wxValidator const &arg6_defvalue = wxDefaultValidator ;
    wxValidator *arg6 = (wxValidator *) &arg6_defvalue ;
    wxString const &arg7_defvalue = wxPyControlNameStr ;
    wxString *arg7 = (wxString *) &arg7_defvalue ;
    wxControl *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    bool temp7 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "validator",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOOO:new_Control",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (long) SWIG_PyObj_AsLong(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj5) {
        if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_wxValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg6 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    if (obj6) {
        {
            arg7 = wxString_in_helper(obj6);
            if (arg7 == NULL) SWIG_fail;
            temp7 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxControl *)new wxControl(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5,(wxValidator const &)*arg6,(wxString const &)*arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    {
        if (temp7)
        delete arg7;
    }
    return resultobj;
    fail:
    {
        if (temp7)
        delete arg7;
    }
    return NULL;
}


static PyObject *_wrap_new_PreControl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxControl *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PreControl",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxControl *)new wxControl();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Control_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxControl *arg1 = (wxControl *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 ;
    wxPoint const &arg4_defvalue = wxDefaultPosition ;
    wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
    wxSize const &arg5_defvalue = wxDefaultSize ;
    wxSize *arg5 = (wxSize *) &arg5_defvalue ;
    long arg6 = (long) 0 ;
    wxValidator const &arg7_defvalue = wxDefaultValidator ;
    wxValidator *arg7 = (wxValidator *) &arg7_defvalue ;
    wxString const &arg8_defvalue = wxPyControlNameStr ;
    wxString *arg8 = (wxString *) &arg8_defvalue ;
    bool result;
    wxPoint temp4 ;
    wxSize temp5 ;
    bool temp8 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "validator",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OOOOO:Control_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (long) SWIG_PyObj_AsLong(obj5);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj6) {
        if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_wxValidator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg7 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    if (obj7) {
        {
            arg8 = wxString_in_helper(obj7);
            if (arg8 == NULL) SWIG_fail;
            temp8 = True;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Create(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxValidator const &)*arg7,(wxString const &)*arg8);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        if (temp8)
        delete arg8;
    }
    return resultobj;
    fail:
    {
        if (temp8)
        delete arg8;
    }
    return NULL;
}


static PyObject *_wrap_Control_Command(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxControl *arg1 = (wxControl *) 0 ;
    wxCommandEvent *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "event", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Control_Command",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxCommandEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Command(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Control_GetLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxControl *arg1 = (wxControl *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Control_GetLabel",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetLabel();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Control_SetLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxControl *arg1 = (wxControl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "label", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Control_SetLabel",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLabel((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject * Control_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxControl, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ItemContainer_Append(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    wxString *arg2 = 0 ;
    PyObject *arg3 = (PyObject *) NULL ;
    int result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "clientData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:ItemContainer_Append",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    if (obj2) {
        arg3 = obj2;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxItemContainer_Append(arg1,(wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ItemContainer_AppendItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    wxArrayString *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "strings", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ItemContainer_AppendItems",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (! PySequence_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
            SWIG_fail;
        }
        arg2 = new wxArrayString;
        int i, len=PySequence_Length(obj1);
        for (i=0; i<len; i++) {
            PyObject* item = PySequence_GetItem(obj1, i);
#if wxUSE_UNICODE
            PyObject* str  = PyObject_Unicode(item);
#else
            PyObject* str  = PyObject_Str(item);
#endif
            arg2->Add(Py2wxString(str));
            Py_DECREF(item);
            Py_DECREF(str);
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Append((wxArrayString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (arg2) delete arg2;
    }
    return resultobj;
    fail:
    {
        if (arg2) delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ItemContainer_Insert(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 ;
    PyObject *arg4 = (PyObject *) NULL ;
    int result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "pos",(char *) "clientData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:ItemContainer_Insert",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = obj3;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)wxItemContainer_Insert(arg1,(wxString const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ItemContainer_Clear(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ItemContainer_Clear",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Clear();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_Delete(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "n", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ItemContainer_Delete",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Delete(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_GetCount(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ItemContainer_GetCount",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxItemContainer const *)arg1)->GetCount();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_IsEmpty(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ItemContainer_IsEmpty",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxItemContainer const *)arg1)->IsEmpty();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_GetString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    int arg2 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "n", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ItemContainer_GetString",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxItemContainer const *)arg1)->GetString(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_GetStrings(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    wxArrayString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ItemContainer_GetStrings",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxItemContainer const *)arg1)->GetStrings();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxArrayString2PyList_helper(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_SetString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "n",(char *) "s", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ItemContainer_SetString",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetString(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_ItemContainer_FindString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    wxString *arg2 = 0 ;
    int result;
    bool temp2 = False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "s", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ItemContainer_FindString",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = True;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxItemContainer const *)arg1)->FindString((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ItemContainer_Select(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "n", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ItemContainer_Select",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Select(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_GetSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ItemContainer_GetSelection",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxItemContainer const *)arg1)->GetSelection();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_GetStringSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ItemContainer_GetStringSelection",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxItemContainer const *)arg1)->GetStringSelection();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_GetClientData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    int arg2 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "n", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ItemContainer_GetClientData",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxItemContainer_GetClientData(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ItemContainer_SetClientData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxItemContainer *arg1 = (wxItemContainer *) 0 ;
    int arg2 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "n",(char *) "clientData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ItemContainer_SetClientData",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxItemContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxItemContainer_SetClientData(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ItemContainer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxItemContainer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject * ControlWithItems_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxControlWithItems, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_SizerItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_SizerItem",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSizerItem *)new wxSizerItem();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSizerItem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SizerItemSpacer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    wxObject *arg6 = (wxObject *) 0 ;
    wxSizerItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "width",(char *) "height",(char *) "proportion",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:new_SizerItemSpacer",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    {
        arg1 = (int) SWIG_PyObj_AsInt(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg5 = (int) SWIG_PyObj_AsInt(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSizerItem *)new wxSizerItem(arg1,arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSizerItem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SizerItemWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    wxObject *arg5 = (wxObject *) 0 ;
    wxSizerItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "window",(char *) "proportion",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:new_SizerItemWindow",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSizerItem *)new wxSizerItem(arg1,arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSizerItem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SizerItemSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    wxObject *arg5 = (wxObject *) 0 ;
    wxSizerItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "sizer",(char *) "proportion",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:new_SizerItemSizer",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSizerItem *)new wxSizerItem(arg1,arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSizerItem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_DeleteWindows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_DeleteWindows",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteWindows();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_DetachSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_DetachSizer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DetachSizer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_CalcMin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_CalcMin",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->CalcMin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetDimension(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxPoint arg2 ;
    wxSize arg3 ;
    wxPoint *argp2 ;
    wxSize *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:SizerItem_SetDimension",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_wxPoint,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDimension(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetMinSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetMinSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetMinSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetInitSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:SizerItem_SetInitSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetInitSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetRatioWH(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:SizerItem_SetRatioWH",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRatio(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetRatioSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxSize arg2 ;
    wxSize *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizerItem_SetRatioSize",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_wxSize,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRatio(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetRatio(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "ratio", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizerItem_SetRatio",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (float) SWIG_PyObj_AsFloat(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRatio(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetRatio(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetRatio",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (float)(arg1)->GetRatio();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromFloat((float)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_IsWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_IsWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_IsSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_IsSizer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsSizer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_IsSpacer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_IsSpacer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsSpacer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetProportion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "proportion", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizerItem_SetProportion",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetProportion(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetProportion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetProportion",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetProportion();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetFlag(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flag", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizerItem_SetFlag",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFlag(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetFlag(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetFlag",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetFlag();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetBorder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "border", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizerItem_SetBorder",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBorder(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetBorder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetBorder",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetBorder();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)(arg1)->GetWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "window", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizerItem_SetWindow",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWindow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxSizer *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetSizer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxSizer *)(arg1)->GetSizer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxSizer(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxSizer *arg2 = (wxSizer *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sizer", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizerItem_SetSizer",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSizer(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetSpacer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxSize *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetSpacer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxSize const &_result_ref = (arg1)->GetSpacer();
            result = (wxSize *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxSize, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_SetSpacer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizerItem_SetSpacer",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSpacer((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_Show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SizerItem_Show",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Show(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_IsShown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_IsShown",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsShown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SizerItem_GetUserData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizerItem *arg1 = (wxSizerItem *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:SizerItem_GetUserData",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxSizerItem_GetUserData(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SizerItem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxSizerItem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Sizer__setOORInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "_self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer__setOORInfo",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxSizer__setOORInfo(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_Add(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    int arg3 = (int) 0 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject *arg6 = (PyObject *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "proportion",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOO:Sizer_Add",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj5) {
        arg6 = obj5;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxSizer_Add(arg1,arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_Insert(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    int arg2 ;
    PyObject *arg3 = (PyObject *) 0 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject *arg7 = (PyObject *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "before",(char *) "item",(char *) "proportion",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OOOO:Sizer_Insert",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    arg3 = obj2;
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int) SWIG_PyObj_AsInt(obj5);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj6) {
        arg7 = obj6;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxSizer_Insert(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_Prepend(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    int arg3 = (int) 0 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject *arg6 = (PyObject *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "proportion",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOO:Sizer_Prepend",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj5) {
        arg6 = obj5;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxSizer_Prepend(arg1,arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_Remove(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_Remove",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxSizer_Remove(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer__SetItemMinSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    wxSize *arg3 = 0 ;
    wxSize temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Sizer__SetItemMinSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        arg3 = &temp3;
        if ( ! wxSize_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxSizer__SetItemMinSize(arg1,arg2,(wxSize const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_AddItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxSizerItem *arg2 = (wxSizerItem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_AddItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Add(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_InsertItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    size_t arg2 ;
    wxSizerItem *arg3 = (wxSizerItem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "index",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Sizer_InsertItem",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Insert(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_PrependItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxSizerItem *arg2 = (wxSizerItem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_PrependItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Prepend(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_SetDimension(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:Sizer_SetDimension",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = (int) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg5 = (int) SWIG_PyObj_AsInt(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDimension(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_SetMinSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_SetMinSize",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMinSize((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_GetSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Sizer_GetSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_GetPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Sizer_GetPosition",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint((wxPoint &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_GetMinSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Sizer_GetMinSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetMinSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_RecalcSizes(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Sizer_RecalcSizes",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RecalcSizes();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_CalcMin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Sizer_CalcMin",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->CalcMin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_Layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Sizer_Layout",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Layout();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_Fit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "window", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_Fit",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->Fit(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_FitInside(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "window", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_FitInside",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->FitInside(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_SetSizeHints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "window", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_SetSizeHints",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSizeHints(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_SetVirtualSizeHints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "window", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_SetVirtualSizeHints",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVirtualSizeHints(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_Clear(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    bool arg2 = (bool) False ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "delete_windows", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:Sizer_Clear",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Clear(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_DeleteWindows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Sizer_DeleteWindows",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteWindows();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_GetChildren(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Sizer_GetChildren",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxSizer_GetChildren(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_Show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    bool arg3 = (bool) True ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:Sizer_Show",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    if (obj2) {
        {
            arg3 = (bool) SWIG_PyObj_AsBool(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxSizer_Show(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_Hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_Hide",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxSizer_Hide(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_IsShown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_IsShown",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxSizer_IsShown(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Sizer_ShowItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Sizer_ShowItems",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ShowItems(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Sizer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxSizer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PySizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPySizer *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PySizer",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPySizer *)new wxPySizer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxPySizer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PySizer__setCallbackInfo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPySizer *arg1 = (wxPySizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PySizer__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxPySizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PySizer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPySizer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_BoxSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) wxHORIZONTAL ;
    wxBoxSizer *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_BoxSizer",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxBoxSizer *)new wxBoxSizer(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxBoxSizer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BoxSizer_GetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxBoxSizer *arg1 = (wxBoxSizer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:BoxSizer_GetOrientation",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxBoxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetOrientation();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BoxSizer_SetOrientation(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxBoxSizer *arg1 = (wxBoxSizer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:BoxSizer_SetOrientation",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxBoxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOrientation(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BoxSizer_RecalcSizes(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxBoxSizer *arg1 = (wxBoxSizer *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:BoxSizer_RecalcSizes",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxBoxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RecalcSizes();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BoxSizer_CalcMin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxBoxSizer *arg1 = (wxBoxSizer *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:BoxSizer_CalcMin",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxBoxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->CalcMin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BoxSizer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxBoxSizer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_StaticBoxSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxStaticBox *arg1 = (wxStaticBox *) 0 ;
    int arg2 = (int) wxHORIZONTAL ;
    wxStaticBoxSizer *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "box",(char *) "orient", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:new_StaticBoxSizer",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxStaticBox,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxStaticBoxSizer *)new wxStaticBoxSizer(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxStaticBoxSizer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticBoxSizer_GetStaticBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxStaticBoxSizer *arg1 = (wxStaticBoxSizer *) 0 ;
    wxStaticBox *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StaticBoxSizer_GetStaticBox",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxStaticBoxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxStaticBox *)(arg1)->GetStaticBox();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticBoxSizer_RecalcSizes(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxStaticBoxSizer *arg1 = (wxStaticBoxSizer *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StaticBoxSizer_RecalcSizes",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxStaticBoxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RecalcSizes();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StaticBoxSizer_CalcMin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxStaticBoxSizer *arg1 = (wxStaticBoxSizer *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StaticBoxSizer_CalcMin",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxStaticBoxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->CalcMin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * StaticBoxSizer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxStaticBoxSizer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_GridSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 1 ;
    int arg2 = (int) 0 ;
    int arg3 = (int) 0 ;
    int arg4 = (int) 0 ;
    wxGridSizer *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "rows",(char *) "cols",(char *) "vgap",(char *) "hgap", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOO:new_GridSizer",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGridSizer *)new wxGridSizer(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGridSizer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_RecalcSizes(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GridSizer_RecalcSizes",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RecalcSizes();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_CalcMin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GridSizer_CalcMin",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->CalcMin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_SetCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "cols", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GridSizer_SetCols",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCols(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_SetRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rows", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GridSizer_SetRows",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRows(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_SetVGap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "gap", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GridSizer_SetVGap",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVGap(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_SetHGap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "gap", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GridSizer_SetHGap",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHGap(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_GetCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GridSizer_GetCols",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetCols();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_GetRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GridSizer_GetRows",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetRows();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_GetVGap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GridSizer_GetVGap",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetVGap();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridSizer_GetHGap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridSizer *arg1 = (wxGridSizer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GridSizer_GetHGap",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetHGap();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * GridSizer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxGridSizer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_FlexGridSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 1 ;
    int arg2 = (int) 0 ;
    int arg3 = (int) 0 ;
    int arg4 = (int) 0 ;
    wxFlexGridSizer *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "rows",(char *) "cols",(char *) "vgap",(char *) "hgap", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOO:new_FlexGridSizer",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFlexGridSizer *)new wxFlexGridSizer(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxFlexGridSizer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_RecalcSizes(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FlexGridSizer_RecalcSizes",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RecalcSizes();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_CalcMin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FlexGridSizer_CalcMin",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->CalcMin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_AddGrowableRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    size_t arg2 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "idx",(char *) "proportion", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:FlexGridSizer_AddGrowableRow",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddGrowableRow(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_RemoveGrowableRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "idx", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FlexGridSizer_RemoveGrowableRow",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveGrowableRow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_AddGrowableCol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    size_t arg2 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "idx",(char *) "proportion", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:FlexGridSizer_AddGrowableCol",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddGrowableCol(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_RemoveGrowableCol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "idx", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FlexGridSizer_RemoveGrowableCol",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveGrowableCol(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_SetFlexibleDirection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "direction", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FlexGridSizer_SetFlexibleDirection",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFlexibleDirection(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_GetFlexibleDirection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FlexGridSizer_GetFlexibleDirection",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetFlexibleDirection();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_SetNonFlexibleGrowMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FlexGridSizer_SetNonFlexibleGrowMode",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (wxFlexSizerGrowMode) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetNonFlexibleGrowMode((wxFlexSizerGrowMode )arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_GetNonFlexibleGrowMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FlexGridSizer_GetNonFlexibleGrowMode",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetNonFlexibleGrowMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_GetRowHeights(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    wxArrayInt *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FlexGridSizer_GetRowHeights",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxArrayInt const &_result_ref = ((wxFlexGridSizer const *)arg1)->GetRowHeights();
            result = (wxArrayInt *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = PyList_New(0);
        size_t idx;
        for (idx = 0; idx < result->GetCount(); idx += 1) {
            PyObject* val = PyInt_FromLong( result->Item(idx) );
            PyList_Append(resultobj, val);
            Py_DECREF(val);
        }
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FlexGridSizer_GetColWidths(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxFlexGridSizer *arg1 = (wxFlexGridSizer *) 0 ;
    wxArrayInt *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:FlexGridSizer_GetColWidths",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxFlexGridSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxArrayInt const &_result_ref = ((wxFlexGridSizer const *)arg1)->GetColWidths();
            result = (wxArrayInt *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = PyList_New(0);
        size_t idx;
        for (idx = 0; idx < result->GetCount(); idx += 1) {
            PyObject* val = PyInt_FromLong( result->Item(idx) );
            PyList_Append(resultobj, val);
            Py_DECREF(val);
        }
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * FlexGridSizer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxFlexGridSizer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_GBPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    int arg2 = (int) 0 ;
    wxGBPosition *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "row",(char *) "col", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_GBPosition",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBPosition *)new wxGBPosition(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBPosition, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBPosition_GetRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBPosition *arg1 = (wxGBPosition *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GBPosition_GetRow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxGBPosition const *)arg1)->GetRow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBPosition_GetCol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBPosition *arg1 = (wxGBPosition *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GBPosition_GetCol",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxGBPosition const *)arg1)->GetCol();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBPosition_SetRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBPosition *arg1 = (wxGBPosition *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "row", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBPosition_SetRow",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBPosition_SetCol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBPosition *arg1 = (wxGBPosition *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "col", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBPosition_SetCol",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCol(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBPosition___eq__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBPosition *arg1 = (wxGBPosition *) 0 ;
    wxGBPosition *arg2 = 0 ;
    bool result;
    wxGBPosition temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "p", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBPosition___eq__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBPosition_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxGBPosition const *)arg1)->operator ==((wxGBPosition const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBPosition___ne__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBPosition *arg1 = (wxGBPosition *) 0 ;
    wxGBPosition *arg2 = 0 ;
    bool result;
    wxGBPosition temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "p", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBPosition___ne__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBPosition_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxGBPosition const *)arg1)->operator !=((wxGBPosition const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBPosition_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBPosition *arg1 = (wxGBPosition *) 0 ;
    int arg2 = (int) 0 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "row",(char *) "col", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:GBPosition_Set",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxGBPosition_Set(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBPosition_Get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBPosition *arg1 = (wxGBPosition *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GBPosition_Get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxGBPosition_Get(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * GBPosition_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxGBPosition, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_GBSpan(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 1 ;
    int arg2 = (int) 1 ;
    wxGBSpan *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "rowspan",(char *) "colspan", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_GBSpan",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSpan *)new wxGBSpan(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSpan, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSpan_GetRowspan(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSpan *arg1 = (wxGBSpan *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GBSpan_GetRowspan",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSpan,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxGBSpan const *)arg1)->GetRowspan();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSpan_GetColspan(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSpan *arg1 = (wxGBSpan *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GBSpan_GetColspan",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSpan,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxGBSpan const *)arg1)->GetColspan();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSpan_SetRowspan(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSpan *arg1 = (wxGBSpan *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rowspan", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBSpan_SetRowspan",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSpan,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRowspan(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSpan_SetColspan(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSpan *arg1 = (wxGBSpan *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colspan", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBSpan_SetColspan",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSpan,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetColspan(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSpan___eq__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSpan *arg1 = (wxGBSpan *) 0 ;
    wxGBSpan *arg2 = 0 ;
    bool result;
    wxGBSpan temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "o", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBSpan___eq__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSpan,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBSpan_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxGBSpan const *)arg1)->operator ==((wxGBSpan const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSpan___ne__(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSpan *arg1 = (wxGBSpan *) 0 ;
    wxGBSpan *arg2 = 0 ;
    bool result;
    wxGBSpan temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "o", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBSpan___ne__",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSpan,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBSpan_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxGBSpan const *)arg1)->operator !=((wxGBSpan const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSpan_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSpan *arg1 = (wxGBSpan *) 0 ;
    int arg2 = (int) 1 ;
    int arg3 = (int) 1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rowspan",(char *) "colspan", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:GBSpan_Set",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSpan,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxGBSpan_Set(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSpan_Get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSpan *arg1 = (wxGBSpan *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GBSpan_Get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSpan,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxGBSpan_Get(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * GBSpan_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxGBSpan, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_DefaultSpan_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable DefaultSpan is read-only.");
    return 1;
}


static PyObject *_wrap_DefaultSpan_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) &wxDefaultSpan, SWIGTYPE_p_wxGBSpan, 0);
    return pyobj;
}


static PyObject *_wrap_new_GBSizerItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSizerItem *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_GBSizerItem",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSizerItem *)new wxGBSizerItem();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSizerItem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_GBSizerItemWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxGBPosition *arg2 = 0 ;
    wxGBSpan *arg3 = 0 ;
    int arg4 ;
    int arg5 ;
    wxObject *arg6 = (wxObject *) 0 ;
    wxGBSizerItem *result;
    wxGBPosition temp2 ;
    wxGBSpan temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "window",(char *) "pos",(char *) "span",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:new_GBSizerItemWindow",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBPosition_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxGBSpan_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg5 = (int) SWIG_PyObj_AsInt(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSizerItem *)new wxGBSizerItem(arg1,(wxGBPosition const &)*arg2,(wxGBSpan const &)*arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSizerItem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_GBSizerItemSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxSizer *arg1 = (wxSizer *) 0 ;
    wxGBPosition *arg2 = 0 ;
    wxGBSpan *arg3 = 0 ;
    int arg4 ;
    int arg5 ;
    wxObject *arg6 = (wxObject *) 0 ;
    wxGBSizerItem *result;
    wxGBPosition temp2 ;
    wxGBSpan temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "sizer",(char *) "pos",(char *) "span",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:new_GBSizerItemSizer",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBPosition_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxGBSpan_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg5 = (int) SWIG_PyObj_AsInt(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSizerItem *)new wxGBSizerItem(arg1,(wxGBPosition const &)*arg2,(wxGBSpan const &)*arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSizerItem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_GBSizerItemSpacer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    wxGBPosition *arg3 = 0 ;
    wxGBSpan *arg4 = 0 ;
    int arg5 ;
    int arg6 ;
    wxObject *arg7 = (wxObject *) 0 ;
    wxGBSizerItem *result;
    wxGBPosition temp3 ;
    wxGBSpan temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "width",(char *) "height",(char *) "pos",(char *) "span",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOOO:new_GBSizerItemSpacer",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    {
        arg1 = (int) SWIG_PyObj_AsInt(obj0);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxGBPosition_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        arg4 = &temp4;
        if ( ! wxGBSpan_helper(obj3, &arg4)) SWIG_fail;
    }
    {
        arg5 = (int) SWIG_PyObj_AsInt(obj4);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg6 = (int) SWIG_PyObj_AsInt(obj5);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSizerItem *)new wxGBSizerItem(arg1,arg2,(wxGBPosition const &)*arg3,(wxGBSpan const &)*arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSizerItem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSizerItem_GetPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSizerItem *arg1 = (wxGBSizerItem *) 0 ;
    wxGBPosition result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GBSizerItem_GetPos",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxGBSizerItem const *)arg1)->GetPos();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxGBPosition * resultptr;
        resultptr = new wxGBPosition((wxGBPosition &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxGBPosition, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSizerItem_GetSpan(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSizerItem *arg1 = (wxGBSizerItem *) 0 ;
    wxGBSpan result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GBSizerItem_GetSpan",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxGBSizerItem const *)arg1)->GetSpan();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxGBSpan * resultptr;
        resultptr = new wxGBSpan((wxGBSpan &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxGBSpan, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSizerItem_SetPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSizerItem *arg1 = (wxGBSizerItem *) 0 ;
    wxGBPosition *arg2 = 0 ;
    bool result;
    wxGBPosition temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBSizerItem_SetPos",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBPosition_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetPos((wxGBPosition const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSizerItem_SetSpan(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSizerItem *arg1 = (wxGBSizerItem *) 0 ;
    wxGBSpan *arg2 = 0 ;
    bool result;
    wxGBSpan temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "span", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBSizerItem_SetSpan",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBSpan_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetSpan((wxGBSpan const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSizerItem_Intersects__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGBSizerItem *arg1 = (wxGBSizerItem *) 0 ;
    wxGBSizerItem *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GBSizerItem_Intersects",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Intersects((wxGBSizerItem const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSizerItem_Intersects__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGBSizerItem *arg1 = (wxGBSizerItem *) 0 ;
    wxGBPosition *arg2 = 0 ;
    wxGBSpan *arg3 = 0 ;
    bool result;
    wxGBPosition temp2 ;
    wxGBSpan temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:GBSizerItem_Intersects",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBPosition_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxGBSpan_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Intersects((wxGBPosition const &)*arg2,(wxGBSpan const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSizerItem_Intersects(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGBSizerItem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxGBSizerItem, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_GBSizerItem_Intersects__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGBSizerItem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = wxPySimple_typecheck(argv[1], wxT("wxGBPosition"), 2);
            }
            if (_v) {
                {
                    _v = wxPySimple_typecheck(argv[2], wxT("wxGBSpan"), 2);
                }
                if (_v) {
                    return _wrap_GBSizerItem_Intersects__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GBSizerItem_Intersects'");
    return NULL;
}


static PyObject *_wrap_GBSizerItem_GetEndPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSizerItem *arg1 = (wxGBSizerItem *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "row",(char *) "col", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:GBSizerItem_GetEndPos",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetEndPos(*arg2,*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSizerItem_GetGBSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSizerItem *arg1 = (wxGBSizerItem *) 0 ;
    wxGridBagSizer *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GBSizerItem_GetGBSizer",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGridBagSizer *)((wxGBSizerItem const *)arg1)->GetGBSizer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGridBagSizer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GBSizerItem_SetGBSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGBSizerItem *arg1 = (wxGBSizerItem *) 0 ;
    wxGridBagSizer *arg2 = (wxGridBagSizer *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sizer", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GBSizerItem_SetGBSizer",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetGBSizer(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * GBSizerItem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxGBSizerItem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_GridBagSizer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    int arg2 = (int) 0 ;
    wxGridBagSizer *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "vgap",(char *) "hgap", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_GridBagSizer",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (int) SWIG_PyObj_AsInt(obj0);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int) SWIG_PyObj_AsInt(obj1);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGridBagSizer *)new wxGridBagSizer(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGridBagSizer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_Add(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    wxGBPosition *arg3 = 0 ;
    wxGBSpan const &arg4_defvalue = wxDefaultSpan ;
    wxGBSpan *arg4 = (wxGBSpan *) &arg4_defvalue ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject *arg7 = (PyObject *) NULL ;
    bool result;
    wxGBPosition temp3 ;
    wxGBSpan temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item",(char *) "pos",(char *) "span",(char *) "flag",(char *) "border",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OOOO:GridBagSizer_Add",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = obj1;
    {
        arg3 = &temp3;
        if ( ! wxGBPosition_helper(obj2, &arg3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxGBSpan_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int) SWIG_PyObj_AsInt(obj5);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj6) {
        arg7 = obj6;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)wxGridBagSizer_Add(arg1,arg2,(wxGBPosition const &)*arg3,(wxGBSpan const &)*arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_AddItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxGBSizerItem *arg2 = (wxGBSizerItem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "item", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GridBagSizer_AddItem",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Add(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_GetEmptyCellSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GridBagSizer_GetEmptyCellSize",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxGridBagSizer const *)arg1)->GetEmptyCellSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_SetEmptyCellSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxSize *arg2 = 0 ;
    wxSize temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GridBagSizer_SetEmptyCellSize",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEmptyCellSize((wxSize const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_GetItemPosition__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxGBPosition result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GridBagSizer_GetItemPosition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetItemPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxGBPosition * resultptr;
        resultptr = new wxGBPosition((wxGBPosition &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxGBPosition, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_GetItemPosition__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxSizer *arg2 = (wxSizer *) 0 ;
    wxGBPosition result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GridBagSizer_GetItemPosition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetItemPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxGBPosition * resultptr;
        resultptr = new wxGBPosition((wxGBPosition &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxGBPosition, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_GetItemPosition__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    size_t arg2 ;
    wxGBPosition result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GridBagSizer_GetItemPosition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetItemPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxGBPosition * resultptr;
        resultptr = new wxGBPosition((wxGBPosition &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxGBPosition, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_GetItemPosition(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxWindow, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_GridBagSizer_GetItemPosition__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxSizer, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_GridBagSizer_GetItemPosition__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                SWIG_PyObj_AsUnsignedLong(argv[1]);
                if (PyErr_Occurred()) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_GridBagSizer_GetItemPosition__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GridBagSizer_GetItemPosition'");
    return NULL;
}


static PyObject *_wrap_GridBagSizer_SetItemPosition__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxGBPosition *arg3 = 0 ;
    bool result;
    wxGBPosition temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:GridBagSizer_SetItemPosition",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = &temp3;
        if ( ! wxGBPosition_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetItemPosition(arg2,(wxGBPosition const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_SetItemPosition__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxSizer *arg2 = (wxSizer *) 0 ;
    wxGBPosition *arg3 = 0 ;
    bool result;
    wxGBPosition temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:GridBagSizer_SetItemPosition",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = &temp3;
        if ( ! wxGBPosition_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetItemPosition(arg2,(wxGBPosition const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_SetItemPosition__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    size_t arg2 ;
    wxGBPosition *arg3 = 0 ;
    bool result;
    wxGBPosition temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:GridBagSizer_SetItemPosition",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxGBPosition_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetItemPosition(arg2,(wxGBPosition const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_SetItemPosition(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxWindow, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = wxPySimple_typecheck(argv[2], wxT("wxGBPosition"), 2);
                }
                if (_v) {
                    return _wrap_GridBagSizer_SetItemPosition__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxSizer, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = wxPySimple_typecheck(argv[2], wxT("wxGBPosition"), 2);
                }
                if (_v) {
                    return _wrap_GridBagSizer_SetItemPosition__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                SWIG_PyObj_AsUnsignedLong(argv[1]);
                if (PyErr_Occurred()) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = wxPySimple_typecheck(argv[2], wxT("wxGBPosition"), 2);
                }
                if (_v) {
                    return _wrap_GridBagSizer_SetItemPosition__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GridBagSizer_SetItemPosition'");
    return NULL;
}


static PyObject *_wrap_GridBagSizer_GetItemSpan__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxGBSpan result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GridBagSizer_GetItemSpan",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetItemSpan(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxGBSpan * resultptr;
        resultptr = new wxGBSpan((wxGBSpan &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxGBSpan, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_GetItemSpan__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxSizer *arg2 = (wxSizer *) 0 ;
    wxGBSpan result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GridBagSizer_GetItemSpan",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetItemSpan(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxGBSpan * resultptr;
        resultptr = new wxGBSpan((wxGBSpan &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxGBSpan, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_GetItemSpan__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    size_t arg2 ;
    wxGBSpan result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GridBagSizer_GetItemSpan",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetItemSpan(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxGBSpan * resultptr;
        resultptr = new wxGBSpan((wxGBSpan &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxGBSpan, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_GetItemSpan(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxWindow, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_GridBagSizer_GetItemSpan__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxSizer, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_GridBagSizer_GetItemSpan__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                SWIG_PyObj_AsUnsignedLong(argv[1]);
                if (PyErr_Occurred()) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_GridBagSizer_GetItemSpan__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GridBagSizer_GetItemSpan'");
    return NULL;
}


static PyObject *_wrap_GridBagSizer_SetItemSpan__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxGBSpan *arg3 = 0 ;
    bool result;
    wxGBSpan temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:GridBagSizer_SetItemSpan",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = &temp3;
        if ( ! wxGBSpan_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetItemSpan(arg2,(wxGBSpan const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_SetItemSpan__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxSizer *arg2 = (wxSizer *) 0 ;
    wxGBSpan *arg3 = 0 ;
    bool result;
    wxGBSpan temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:GridBagSizer_SetItemSpan",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = &temp3;
        if ( ! wxGBSpan_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetItemSpan(arg2,(wxGBSpan const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_SetItemSpan__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    size_t arg2 ;
    wxGBSpan *arg3 = 0 ;
    bool result;
    wxGBSpan temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:GridBagSizer_SetItemSpan",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (size_t) SWIG_PyObj_AsUnsignedLong(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxGBSpan_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetItemSpan(arg2,(wxGBSpan const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_SetItemSpan(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxWindow, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = wxPySimple_typecheck(argv[2], wxT("wxGBSpan"), 2);
                }
                if (_v) {
                    return _wrap_GridBagSizer_SetItemSpan__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxSizer, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = wxPySimple_typecheck(argv[2], wxT("wxGBSpan"), 2);
                }
                if (_v) {
                    return _wrap_GridBagSizer_SetItemSpan__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                SWIG_PyObj_AsUnsignedLong(argv[1]);
                if (PyErr_Occurred()) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = wxPySimple_typecheck(argv[2], wxT("wxGBSpan"), 2);
                }
                if (_v) {
                    return _wrap_GridBagSizer_SetItemSpan__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GridBagSizer_SetItemSpan'");
    return NULL;
}


static PyObject *_wrap_GridBagSizer_FindItem__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxGBSizerItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GridBagSizer_FindItem",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSizerItem *)(arg1)->FindItem(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSizerItem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_FindItem__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxSizer *arg2 = (wxSizer *) 0 ;
    wxGBSizerItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GridBagSizer_FindItem",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSizerItem *)(arg1)->FindItem(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSizerItem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_FindItem(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxWindow, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_GridBagSizer_FindItem__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxSizer, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_GridBagSizer_FindItem__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GridBagSizer_FindItem'");
    return NULL;
}


static PyObject *_wrap_GridBagSizer_FindItemAtPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxGBPosition *arg2 = 0 ;
    wxGBSizerItem *result;
    wxGBPosition temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GridBagSizer_FindItemAtPosition",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBPosition_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSizerItem *)(arg1)->FindItemAtPosition((wxGBPosition const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSizerItem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_FindItemAtPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxPoint *arg2 = 0 ;
    wxGBSizerItem *result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GridBagSizer_FindItemAtPoint",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSizerItem *)(arg1)->FindItemAtPoint((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSizerItem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_FindItemWithData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxObject *arg2 = (wxObject *) 0 ;
    wxGBSizerItem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "userData", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:GridBagSizer_FindItemWithData",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxGBSizerItem *)(arg1)->FindItemWithData((wxObject const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxGBSizerItem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_RecalcSizes(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GridBagSizer_RecalcSizes",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RecalcSizes();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_CalcMin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxSize result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:GridBagSizer_CalcMin",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->CalcMin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxSize * resultptr;
        resultptr = new wxSize((wxSize &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxSize, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_CheckForIntersection__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxGBSizerItem *arg2 = (wxGBSizerItem *) 0 ;
    wxGBSizerItem *arg3 = (wxGBSizerItem *) NULL ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:GridBagSizer_CheckForIntersection",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CheckForIntersection(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_CheckForIntersection__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wxGridBagSizer *arg1 = (wxGridBagSizer *) 0 ;
    wxGBPosition *arg2 = 0 ;
    wxGBSpan *arg3 = 0 ;
    wxGBSizerItem *arg4 = (wxGBSizerItem *) NULL ;
    bool result;
    wxGBPosition temp2 ;
    wxGBSpan temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|O:GridBagSizer_CheckForIntersection",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxGridBagSizer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxGBPosition_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxGBSpan_helper(obj2, &arg3)) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_wxGBSizerItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CheckForIntersection((wxGBPosition const &)*arg2,(wxGBSpan const &)*arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GridBagSizer_CheckForIntersection(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_wxGBSizerItem, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_GridBagSizer_CheckForIntersection__SWIG_0(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_wxGBSizerItem, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_GridBagSizer_CheckForIntersection__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wxGridBagSizer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = wxPySimple_typecheck(argv[1], wxT("wxGBPosition"), 2);
            }
            if (_v) {
                {
                    _v = wxPySimple_typecheck(argv[2], wxT("wxGBSpan"), 2);
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_GridBagSizer_CheckForIntersection__SWIG_1(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_wxGBSizerItem, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_GridBagSizer_CheckForIntersection__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GridBagSizer_CheckForIntersection'");
    return NULL;
}


static PyObject * GridBagSizer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxGridBagSizer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_IndividualLayoutConstraint_Set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int arg2 ;
    wxWindow *arg3 = (wxWindow *) 0 ;
    int arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) wxLAYOUT_DEFAULT_MARGIN ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rel",(char *) "otherW",(char *) "otherE",(char *) "val",(char *) "marg", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:IndividualLayoutConstraint_Set",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (wxRelationship) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg4 = (wxEdge) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int) SWIG_PyObj_AsInt(obj4);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int) SWIG_PyObj_AsInt(obj5);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Set((wxRelationship )arg2,arg3,(wxEdge )arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_LeftOf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sibling",(char *) "marg", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:IndividualLayoutConstraint_LeftOf",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LeftOf(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_RightOf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sibling",(char *) "marg", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:IndividualLayoutConstraint_RightOf",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RightOf(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_Above(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sibling",(char *) "marg", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:IndividualLayoutConstraint_Above",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Above(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_Below(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sibling",(char *) "marg", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:IndividualLayoutConstraint_Below",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        {
            arg3 = (int) SWIG_PyObj_AsInt(obj2);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Below(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_SameAs(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 ;
    int arg4 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "otherW",(char *) "edge",(char *) "marg", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:IndividualLayoutConstraint_SameAs",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = (wxEdge) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int) SWIG_PyObj_AsInt(obj3);  
            if (PyErr_Occurred()) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SameAs(arg2,(wxEdge )arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_PercentOf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "otherW",(char *) "wh",(char *) "per", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:IndividualLayoutConstraint_PercentOf",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = (wxEdge) SWIG_PyObj_AsInt(obj2);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        arg4 = (int) SWIG_PyObj_AsInt(obj3);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PercentOf(arg2,(wxEdge )arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_Absolute(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IndividualLayoutConstraint_Absolute",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Absolute(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_Unconstrained(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_Unconstrained",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Unconstrained();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_AsIs(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_AsIs",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AsIs();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_GetOtherWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    wxWindow *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_GetOtherWindow",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxWindow *)(arg1)->GetOtherWindow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_GetMyEdge(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_GetMyEdge",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxIndividualLayoutConstraint const *)arg1)->GetMyEdge();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_SetEdge(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "which", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IndividualLayoutConstraint_SetEdge",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (wxEdge) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEdge((wxEdge )arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_SetValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "v", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IndividualLayoutConstraint_SetValue",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetValue(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_GetMargin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_GetMargin",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetMargin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_SetMargin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IndividualLayoutConstraint_SetMargin",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (int) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMargin(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_GetValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_GetValue",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxIndividualLayoutConstraint const *)arg1)->GetValue();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_GetPercent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_GetPercent",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxIndividualLayoutConstraint const *)arg1)->GetPercent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_GetOtherEdge(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_GetOtherEdge",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxIndividualLayoutConstraint const *)arg1)->GetOtherEdge();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_GetDone(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_GetDone",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxIndividualLayoutConstraint const *)arg1)->GetDone();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_SetDone(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "d", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IndividualLayoutConstraint_SetDone",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (bool) SWIG_PyObj_AsBool(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDone(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_GetRelationship(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:IndividualLayoutConstraint_GetRelationship",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetRelationship();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_SetRelationship(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "r", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IndividualLayoutConstraint_SetRelationship",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (wxRelationship) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRelationship((wxRelationship )arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_ResetIfWin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "otherW", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:IndividualLayoutConstraint_ResetIfWin",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->ResetIfWin(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_SatisfyConstraint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    wxLayoutConstraints *arg2 = (wxLayoutConstraints *) 0 ;
    wxWindow *arg3 = (wxWindow *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "constraints",(char *) "win", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:IndividualLayoutConstraint_SatisfyConstraint",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SatisfyConstraint(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndividualLayoutConstraint_GetEdge(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxIndividualLayoutConstraint *arg1 = (wxIndividualLayoutConstraint *) 0 ;
    int arg2 ;
    wxWindow *arg3 = (wxWindow *) 0 ;
    wxWindow *arg4 = (wxWindow *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "which",(char *) "thisWin",(char *) "other", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:IndividualLayoutConstraint_GetEdge",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxIndividualLayoutConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = (wxEdge) SWIG_PyObj_AsInt(obj1);  
        if (PyErr_Occurred()) SWIG_fail;
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxIndividualLayoutConstraint const *)arg1)->GetEdge((wxEdge )arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_PyObj_FromInt((int)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * IndividualLayoutConstraint_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxIndividualLayoutConstraint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_LayoutConstraints_left_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    wxIndividualLayoutConstraint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LayoutConstraints_left_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxIndividualLayoutConstraint *)& ((arg1)->left);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIndividualLayoutConstraint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LayoutConstraints_top_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    wxIndividualLayoutConstraint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LayoutConstraints_top_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxIndividualLayoutConstraint *)& ((arg1)->top);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIndividualLayoutConstraint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LayoutConstraints_right_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    wxIndividualLayoutConstraint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LayoutConstraints_right_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxIndividualLayoutConstraint *)& ((arg1)->right);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIndividualLayoutConstraint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LayoutConstraints_bottom_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    wxIndividualLayoutConstraint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LayoutConstraints_bottom_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxIndividualLayoutConstraint *)& ((arg1)->bottom);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIndividualLayoutConstraint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LayoutConstraints_width_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    wxIndividualLayoutConstraint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LayoutConstraints_width_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxIndividualLayoutConstraint *)& ((arg1)->width);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIndividualLayoutConstraint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LayoutConstraints_height_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    wxIndividualLayoutConstraint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LayoutConstraints_height_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxIndividualLayoutConstraint *)& ((arg1)->height);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIndividualLayoutConstraint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LayoutConstraints_centreX_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    wxIndividualLayoutConstraint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LayoutConstraints_centreX_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxIndividualLayoutConstraint *)& ((arg1)->centreX);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIndividualLayoutConstraint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LayoutConstraints_centreY_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    wxIndividualLayoutConstraint *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LayoutConstraints_centreY_get",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (wxIndividualLayoutConstraint *)& ((arg1)->centreY);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxIndividualLayoutConstraint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LayoutConstraints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_LayoutConstraints",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxLayoutConstraints *)new wxLayoutConstraints();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxLayoutConstraints, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LayoutConstraints_SatisfyConstraints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int *arg3 = (int *) 0 ;
    bool result;
    int temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "win", NULL 
    };
    
    arg3 = &temp3;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LayoutConstraints_SatisfyConstraints",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SatisfyConstraints(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LayoutConstraints_AreSatisfied(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxLayoutConstraints *arg1 = (wxLayoutConstraints *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:LayoutConstraints_AreSatisfied",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxLayoutConstraints,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxLayoutConstraints const *)arg1)->AreSatisfied();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * LayoutConstraints_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxLayoutConstraints, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyMethodDef SwigMethods[] = {
	 { (char *)"_wxPySetDictionary", __wxPySetDictionary, METH_VARARGS },
	 { (char *)"_wxPyFixStockObjects", __wxPyFixStockObjects, METH_VARARGS },
	 { (char *)"Object_GetClassName", (PyCFunction) _wrap_Object_GetClassName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Object_Destroy", (PyCFunction) _wrap_Object_Destroy, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Object_swigregister", Object_swigregister, METH_VARARGS },
	 { (char *)"Size_width_set", (PyCFunction) _wrap_Size_width_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_width_get", (PyCFunction) _wrap_Size_width_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_height_set", (PyCFunction) _wrap_Size_height_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_height_get", (PyCFunction) _wrap_Size_height_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_Size", (PyCFunction) _wrap_new_Size, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_Size", (PyCFunction) _wrap_delete_Size, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size___eq__", (PyCFunction) _wrap_Size___eq__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size___ne__", (PyCFunction) _wrap_Size___ne__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size___add__", (PyCFunction) _wrap_Size___add__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size___sub__", (PyCFunction) _wrap_Size___sub__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_IncTo", (PyCFunction) _wrap_Size_IncTo, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_DecTo", (PyCFunction) _wrap_Size_DecTo, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_Set", (PyCFunction) _wrap_Size_Set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_SetWidth", (PyCFunction) _wrap_Size_SetWidth, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_SetHeight", (PyCFunction) _wrap_Size_SetHeight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_GetWidth", (PyCFunction) _wrap_Size_GetWidth, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_GetHeight", (PyCFunction) _wrap_Size_GetHeight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_Get", (PyCFunction) _wrap_Size_Get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Size_swigregister", Size_swigregister, METH_VARARGS },
	 { (char *)"RealPoint_x_set", (PyCFunction) _wrap_RealPoint_x_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint_x_get", (PyCFunction) _wrap_RealPoint_x_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint_y_set", (PyCFunction) _wrap_RealPoint_y_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint_y_get", (PyCFunction) _wrap_RealPoint_y_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_RealPoint", (PyCFunction) _wrap_new_RealPoint, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_RealPoint", (PyCFunction) _wrap_delete_RealPoint, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint___eq__", (PyCFunction) _wrap_RealPoint___eq__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint___ne__", (PyCFunction) _wrap_RealPoint___ne__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint___add__", (PyCFunction) _wrap_RealPoint___add__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint___sub__", (PyCFunction) _wrap_RealPoint___sub__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint_Set", (PyCFunction) _wrap_RealPoint_Set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint_Get", (PyCFunction) _wrap_RealPoint_Get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"RealPoint_swigregister", RealPoint_swigregister, METH_VARARGS },
	 { (char *)"Point_x_set", (PyCFunction) _wrap_Point_x_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point_x_get", (PyCFunction) _wrap_Point_x_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point_y_set", (PyCFunction) _wrap_Point_y_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point_y_get", (PyCFunction) _wrap_Point_y_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_Point", (PyCFunction) _wrap_new_Point, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_Point", (PyCFunction) _wrap_delete_Point, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point___eq__", (PyCFunction) _wrap_Point___eq__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point___ne__", (PyCFunction) _wrap_Point___ne__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point___add__", (PyCFunction) _wrap_Point___add__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point___sub__", (PyCFunction) _wrap_Point___sub__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point___iadd__", (PyCFunction) _wrap_Point___iadd__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point___isub__", (PyCFunction) _wrap_Point___isub__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point_Set", (PyCFunction) _wrap_Point_Set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point_Get", (PyCFunction) _wrap_Point_Get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point_swigregister", Point_swigregister, METH_VARARGS },
	 { (char *)"new_Rect", (PyCFunction) _wrap_new_Rect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_RectPP", (PyCFunction) _wrap_new_RectPP, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_RectPS", (PyCFunction) _wrap_new_RectPS, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_Rect", (PyCFunction) _wrap_delete_Rect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetX", (PyCFunction) _wrap_Rect_GetX, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetX", (PyCFunction) _wrap_Rect_SetX, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetY", (PyCFunction) _wrap_Rect_GetY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetY", (PyCFunction) _wrap_Rect_SetY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetWidth", (PyCFunction) _wrap_Rect_GetWidth, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetWidth", (PyCFunction) _wrap_Rect_SetWidth, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetHeight", (PyCFunction) _wrap_Rect_GetHeight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetHeight", (PyCFunction) _wrap_Rect_SetHeight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetPosition", (PyCFunction) _wrap_Rect_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetPosition", (PyCFunction) _wrap_Rect_SetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetSize", (PyCFunction) _wrap_Rect_GetSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetSize", (PyCFunction) _wrap_Rect_SetSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetTopLeft", (PyCFunction) _wrap_Rect_GetTopLeft, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetTopLeft", (PyCFunction) _wrap_Rect_SetTopLeft, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetBottomRight", (PyCFunction) _wrap_Rect_GetBottomRight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetBottomRight", (PyCFunction) _wrap_Rect_SetBottomRight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetLeft", (PyCFunction) _wrap_Rect_GetLeft, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetTop", (PyCFunction) _wrap_Rect_GetTop, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetBottom", (PyCFunction) _wrap_Rect_GetBottom, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_GetRight", (PyCFunction) _wrap_Rect_GetRight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetLeft", (PyCFunction) _wrap_Rect_SetLeft, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetRight", (PyCFunction) _wrap_Rect_SetRight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetTop", (PyCFunction) _wrap_Rect_SetTop, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_SetBottom", (PyCFunction) _wrap_Rect_SetBottom, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_Inflate", (PyCFunction) _wrap_Rect_Inflate, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_Deflate", (PyCFunction) _wrap_Rect_Deflate, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_OffsetXY", (PyCFunction) _wrap_Rect_OffsetXY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_Offset", (PyCFunction) _wrap_Rect_Offset, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_Intersect", (PyCFunction) _wrap_Rect_Intersect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect___add__", (PyCFunction) _wrap_Rect___add__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect___iadd__", (PyCFunction) _wrap_Rect___iadd__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect___eq__", (PyCFunction) _wrap_Rect___eq__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect___ne__", (PyCFunction) _wrap_Rect___ne__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_InsideXY", (PyCFunction) _wrap_Rect_InsideXY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_Inside", (PyCFunction) _wrap_Rect_Inside, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_Intersects", (PyCFunction) _wrap_Rect_Intersects, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_x_set", (PyCFunction) _wrap_Rect_x_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_x_get", (PyCFunction) _wrap_Rect_x_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_y_set", (PyCFunction) _wrap_Rect_y_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_y_get", (PyCFunction) _wrap_Rect_y_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_width_set", (PyCFunction) _wrap_Rect_width_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_width_get", (PyCFunction) _wrap_Rect_width_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_height_set", (PyCFunction) _wrap_Rect_height_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_height_get", (PyCFunction) _wrap_Rect_height_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_Set", (PyCFunction) _wrap_Rect_Set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_Get", (PyCFunction) _wrap_Rect_Get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Rect_swigregister", Rect_swigregister, METH_VARARGS },
	 { (char *)"IntersectRect", (PyCFunction) _wrap_IntersectRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_Point2D", (PyCFunction) _wrap_new_Point2D, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_Point2DCopy", (PyCFunction) _wrap_new_Point2DCopy, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_Point2DFromPoint", (PyCFunction) _wrap_new_Point2DFromPoint, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_GetFloor", (PyCFunction) _wrap_Point2D_GetFloor, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_GetRounded", (PyCFunction) _wrap_Point2D_GetRounded, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_GetVectorLength", (PyCFunction) _wrap_Point2D_GetVectorLength, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_GetVectorAngle", (PyCFunction) _wrap_Point2D_GetVectorAngle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_SetVectorLength", (PyCFunction) _wrap_Point2D_SetVectorLength, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_SetVectorAngle", (PyCFunction) _wrap_Point2D_SetVectorAngle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_GetDistance", (PyCFunction) _wrap_Point2D_GetDistance, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_GetDistanceSquare", (PyCFunction) _wrap_Point2D_GetDistanceSquare, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_GetDotProduct", (PyCFunction) _wrap_Point2D_GetDotProduct, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_GetCrossProduct", (PyCFunction) _wrap_Point2D_GetCrossProduct, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D___neg__", (PyCFunction) _wrap_Point2D___neg__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D___iadd__", (PyCFunction) _wrap_Point2D___iadd__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D___isub__", (PyCFunction) _wrap_Point2D___isub__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D___imul__", (PyCFunction) _wrap_Point2D___imul__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D___idiv__", (PyCFunction) _wrap_Point2D___idiv__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D___eq__", (PyCFunction) _wrap_Point2D___eq__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D___ne__", (PyCFunction) _wrap_Point2D___ne__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_x_set", (PyCFunction) _wrap_Point2D_x_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_x_get", (PyCFunction) _wrap_Point2D_x_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_y_set", (PyCFunction) _wrap_Point2D_y_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_y_get", (PyCFunction) _wrap_Point2D_y_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_Set", (PyCFunction) _wrap_Point2D_Set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_Get", (PyCFunction) _wrap_Point2D_Get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Point2D_swigregister", Point2D_swigregister, METH_VARARGS },
	 { (char *)"new_InputStream", (PyCFunction) _wrap_new_InputStream, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_close", (PyCFunction) _wrap_InputStream_close, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_flush", (PyCFunction) _wrap_InputStream_flush, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_eof", (PyCFunction) _wrap_InputStream_eof, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_read", (PyCFunction) _wrap_InputStream_read, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_readline", (PyCFunction) _wrap_InputStream_readline, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_readlines", (PyCFunction) _wrap_InputStream_readlines, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_seek", (PyCFunction) _wrap_InputStream_seek, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_tell", (PyCFunction) _wrap_InputStream_tell, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_Peek", (PyCFunction) _wrap_InputStream_Peek, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_GetC", (PyCFunction) _wrap_InputStream_GetC, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_LastRead", (PyCFunction) _wrap_InputStream_LastRead, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_CanRead", (PyCFunction) _wrap_InputStream_CanRead, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_Eof", (PyCFunction) _wrap_InputStream_Eof, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_Ungetch", (PyCFunction) _wrap_InputStream_Ungetch, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_SeekI", (PyCFunction) _wrap_InputStream_SeekI, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_TellI", (PyCFunction) _wrap_InputStream_TellI, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InputStream_swigregister", InputStream_swigregister, METH_VARARGS },
	 { (char *)"OutputStream_write", (PyCFunction) _wrap_OutputStream_write, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"OutputStream_swigregister", OutputStream_swigregister, METH_VARARGS },
	 { (char *)"new_FSFile", (PyCFunction) _wrap_new_FSFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_FSFile", (PyCFunction) _wrap_delete_FSFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FSFile_GetStream", (PyCFunction) _wrap_FSFile_GetStream, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FSFile_GetMimeType", (PyCFunction) _wrap_FSFile_GetMimeType, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FSFile_GetLocation", (PyCFunction) _wrap_FSFile_GetLocation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FSFile_GetAnchor", (PyCFunction) _wrap_FSFile_GetAnchor, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FSFile_GetModificationTime", (PyCFunction) _wrap_FSFile_GetModificationTime, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FSFile_swigregister", FSFile_swigregister, METH_VARARGS },
	 { (char *)"CPPFileSystemHandler_swigregister", CPPFileSystemHandler_swigregister, METH_VARARGS },
	 { (char *)"new_FileSystemHandler", (PyCFunction) _wrap_new_FileSystemHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler__setCallbackInfo", (PyCFunction) _wrap_FileSystemHandler__setCallbackInfo, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_CanOpen", (PyCFunction) _wrap_FileSystemHandler_CanOpen, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_OpenFile", (PyCFunction) _wrap_FileSystemHandler_OpenFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_FindFirst", (PyCFunction) _wrap_FileSystemHandler_FindFirst, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_FindNext", (PyCFunction) _wrap_FileSystemHandler_FindNext, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_GetProtocol", (PyCFunction) _wrap_FileSystemHandler_GetProtocol, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_GetLeftLocation", (PyCFunction) _wrap_FileSystemHandler_GetLeftLocation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_GetAnchor", (PyCFunction) _wrap_FileSystemHandler_GetAnchor, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_GetRightLocation", (PyCFunction) _wrap_FileSystemHandler_GetRightLocation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_GetMimeTypeFromExt", (PyCFunction) _wrap_FileSystemHandler_GetMimeTypeFromExt, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystemHandler_swigregister", FileSystemHandler_swigregister, METH_VARARGS },
	 { (char *)"new_FileSystem", (PyCFunction) _wrap_new_FileSystem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_FileSystem", (PyCFunction) _wrap_delete_FileSystem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystem_ChangePathTo", (PyCFunction) _wrap_FileSystem_ChangePathTo, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystem_GetPath", (PyCFunction) _wrap_FileSystem_GetPath, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystem_OpenFile", (PyCFunction) _wrap_FileSystem_OpenFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystem_FindFirst", (PyCFunction) _wrap_FileSystem_FindFirst, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystem_FindNext", (PyCFunction) _wrap_FileSystem_FindNext, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystem_AddHandler", (PyCFunction) _wrap_FileSystem_AddHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystem_CleanUpHandlers", (PyCFunction) _wrap_FileSystem_CleanUpHandlers, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystem_FileNameToURL", (PyCFunction) _wrap_FileSystem_FileNameToURL, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FileSystem_swigregister", FileSystem_swigregister, METH_VARARGS },
	 { (char *)"FileSystem_URLToFileName", (PyCFunction) _wrap_FileSystem_URLToFileName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_InternetFSHandler", (PyCFunction) _wrap_new_InternetFSHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InternetFSHandler_CanOpen", (PyCFunction) _wrap_InternetFSHandler_CanOpen, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InternetFSHandler_OpenFile", (PyCFunction) _wrap_InternetFSHandler_OpenFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InternetFSHandler_swigregister", InternetFSHandler_swigregister, METH_VARARGS },
	 { (char *)"new_ZipFSHandler", (PyCFunction) _wrap_new_ZipFSHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ZipFSHandler_CanOpen", (PyCFunction) _wrap_ZipFSHandler_CanOpen, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ZipFSHandler_OpenFile", (PyCFunction) _wrap_ZipFSHandler_OpenFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ZipFSHandler_FindFirst", (PyCFunction) _wrap_ZipFSHandler_FindFirst, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ZipFSHandler_FindNext", (PyCFunction) _wrap_ZipFSHandler_FindNext, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ZipFSHandler_swigregister", ZipFSHandler_swigregister, METH_VARARGS },
	 { (char *)"__wxMemoryFSHandler_AddFile_wxImage", (PyCFunction) _wrap___wxMemoryFSHandler_AddFile_wxImage, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"__wxMemoryFSHandler_AddFile_wxBitmap", (PyCFunction) _wrap___wxMemoryFSHandler_AddFile_wxBitmap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"__wxMemoryFSHandler_AddFile_Data", (PyCFunction) _wrap___wxMemoryFSHandler_AddFile_Data, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_MemoryFSHandler", (PyCFunction) _wrap_new_MemoryFSHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MemoryFSHandler_RemoveFile", (PyCFunction) _wrap_MemoryFSHandler_RemoveFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MemoryFSHandler_CanOpen", (PyCFunction) _wrap_MemoryFSHandler_CanOpen, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MemoryFSHandler_OpenFile", (PyCFunction) _wrap_MemoryFSHandler_OpenFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MemoryFSHandler_FindFirst", (PyCFunction) _wrap_MemoryFSHandler_FindFirst, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MemoryFSHandler_FindNext", (PyCFunction) _wrap_MemoryFSHandler_FindNext, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MemoryFSHandler_swigregister", MemoryFSHandler_swigregister, METH_VARARGS },
	 { (char *)"ImageHandler_GetName", (PyCFunction) _wrap_ImageHandler_GetName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHandler_GetExtension", (PyCFunction) _wrap_ImageHandler_GetExtension, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHandler_GetType", (PyCFunction) _wrap_ImageHandler_GetType, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHandler_GetMimeType", (PyCFunction) _wrap_ImageHandler_GetMimeType, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHandler_CanRead", (PyCFunction) _wrap_ImageHandler_CanRead, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHandler_SetName", (PyCFunction) _wrap_ImageHandler_SetName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHandler_SetExtension", (PyCFunction) _wrap_ImageHandler_SetExtension, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHandler_SetType", (PyCFunction) _wrap_ImageHandler_SetType, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHandler_SetMimeType", (PyCFunction) _wrap_ImageHandler_SetMimeType, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHandler_swigregister", ImageHandler_swigregister, METH_VARARGS },
	 { (char *)"new_ImageHistogram", (PyCFunction) _wrap_new_ImageHistogram, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHistogram_MakeKey", (PyCFunction) _wrap_ImageHistogram_MakeKey, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHistogram_FindFirstUnusedColour", (PyCFunction) _wrap_ImageHistogram_FindFirstUnusedColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ImageHistogram_swigregister", ImageHistogram_swigregister, METH_VARARGS },
	 { (char *)"new_Image", (PyCFunction) _wrap_new_Image, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_Image", (PyCFunction) _wrap_delete_Image, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_ImageFromMime", (PyCFunction) _wrap_new_ImageFromMime, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_ImageFromStream", (PyCFunction) _wrap_new_ImageFromStream, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_ImageFromStreamMime", (PyCFunction) _wrap_new_ImageFromStreamMime, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_EmptyImage", (PyCFunction) _wrap_new_EmptyImage, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_ImageFromBitmap", (PyCFunction) _wrap_new_ImageFromBitmap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_ImageFromData", (PyCFunction) _wrap_new_ImageFromData, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Create", (PyCFunction) _wrap_Image_Create, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Destroy", (PyCFunction) _wrap_Image_Destroy, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Scale", (PyCFunction) _wrap_Image_Scale, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_ShrinkBy", (PyCFunction) _wrap_Image_ShrinkBy, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Rescale", (PyCFunction) _wrap_Image_Rescale, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetRGB", (PyCFunction) _wrap_Image_SetRGB, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetRed", (PyCFunction) _wrap_Image_GetRed, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetGreen", (PyCFunction) _wrap_Image_GetGreen, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetBlue", (PyCFunction) _wrap_Image_GetBlue, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetAlpha", (PyCFunction) _wrap_Image_SetAlpha, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetAlpha", (PyCFunction) _wrap_Image_GetAlpha, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_HasAlpha", (PyCFunction) _wrap_Image_HasAlpha, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_FindFirstUnusedColour", (PyCFunction) _wrap_Image_FindFirstUnusedColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetMaskFromImage", (PyCFunction) _wrap_Image_SetMaskFromImage, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_CanRead", (PyCFunction) _wrap_Image_CanRead, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetImageCount", (PyCFunction) _wrap_Image_GetImageCount, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_LoadFile", (PyCFunction) _wrap_Image_LoadFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_LoadMimeFile", (PyCFunction) _wrap_Image_LoadMimeFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SaveFile", (PyCFunction) _wrap_Image_SaveFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SaveMimeFile", (PyCFunction) _wrap_Image_SaveMimeFile, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_CanReadStream", (PyCFunction) _wrap_Image_CanReadStream, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_LoadStream", (PyCFunction) _wrap_Image_LoadStream, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_LoadMimeStream", (PyCFunction) _wrap_Image_LoadMimeStream, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Ok", (PyCFunction) _wrap_Image_Ok, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetWidth", (PyCFunction) _wrap_Image_GetWidth, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetHeight", (PyCFunction) _wrap_Image_GetHeight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetSubImage", (PyCFunction) _wrap_Image_GetSubImage, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Copy", (PyCFunction) _wrap_Image_Copy, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Paste", (PyCFunction) _wrap_Image_Paste, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetData", (PyCFunction) _wrap_Image_GetData, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetData", (PyCFunction) _wrap_Image_SetData, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetDataBuffer", (PyCFunction) _wrap_Image_GetDataBuffer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetDataBuffer", (PyCFunction) _wrap_Image_SetDataBuffer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetAlphaData", (PyCFunction) _wrap_Image_GetAlphaData, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetAlphaData", (PyCFunction) _wrap_Image_SetAlphaData, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetAlphaBuffer", (PyCFunction) _wrap_Image_GetAlphaBuffer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetAlphaBuffer", (PyCFunction) _wrap_Image_SetAlphaBuffer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetMaskColour", (PyCFunction) _wrap_Image_SetMaskColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetMaskRed", (PyCFunction) _wrap_Image_GetMaskRed, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetMaskGreen", (PyCFunction) _wrap_Image_GetMaskGreen, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetMaskBlue", (PyCFunction) _wrap_Image_GetMaskBlue, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetMask", (PyCFunction) _wrap_Image_SetMask, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_HasMask", (PyCFunction) _wrap_Image_HasMask, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Rotate", (PyCFunction) _wrap_Image_Rotate, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Rotate90", (PyCFunction) _wrap_Image_Rotate90, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Mirror", (PyCFunction) _wrap_Image_Mirror, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_Replace", (PyCFunction) _wrap_Image_Replace, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_ConvertToMono", (PyCFunction) _wrap_Image_ConvertToMono, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetOption", (PyCFunction) _wrap_Image_SetOption, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_SetOptionInt", (PyCFunction) _wrap_Image_SetOptionInt, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetOption", (PyCFunction) _wrap_Image_GetOption, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetOptionInt", (PyCFunction) _wrap_Image_GetOptionInt, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_HasOption", (PyCFunction) _wrap_Image_HasOption, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_CountColours", (PyCFunction) _wrap_Image_CountColours, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_ComputeHistogram", (PyCFunction) _wrap_Image_ComputeHistogram, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_AddHandler", (PyCFunction) _wrap_Image_AddHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_InsertHandler", (PyCFunction) _wrap_Image_InsertHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_RemoveHandler", (PyCFunction) _wrap_Image_RemoveHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_GetImageExtWildcard", (PyCFunction) _wrap_Image_GetImageExtWildcard, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_ConvertToBitmap", (PyCFunction) _wrap_Image_ConvertToBitmap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_ConvertToMonoBitmap", (PyCFunction) _wrap_Image_ConvertToMonoBitmap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Image_swigregister", Image_swigregister, METH_VARARGS },
	 { (char *)"InitAllImageHandlers", (PyCFunction) _wrap_InitAllImageHandlers, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_BMPHandler", (PyCFunction) _wrap_new_BMPHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"BMPHandler_swigregister", BMPHandler_swigregister, METH_VARARGS },
	 { (char *)"new_ICOHandler", (PyCFunction) _wrap_new_ICOHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ICOHandler_swigregister", ICOHandler_swigregister, METH_VARARGS },
	 { (char *)"new_CURHandler", (PyCFunction) _wrap_new_CURHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CURHandler_swigregister", CURHandler_swigregister, METH_VARARGS },
	 { (char *)"new_ANIHandler", (PyCFunction) _wrap_new_ANIHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ANIHandler_swigregister", ANIHandler_swigregister, METH_VARARGS },
	 { (char *)"new_PNGHandler", (PyCFunction) _wrap_new_PNGHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PNGHandler_swigregister", PNGHandler_swigregister, METH_VARARGS },
	 { (char *)"new_GIFHandler", (PyCFunction) _wrap_new_GIFHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GIFHandler_swigregister", GIFHandler_swigregister, METH_VARARGS },
	 { (char *)"new_PCXHandler", (PyCFunction) _wrap_new_PCXHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PCXHandler_swigregister", PCXHandler_swigregister, METH_VARARGS },
	 { (char *)"new_JPEGHandler", (PyCFunction) _wrap_new_JPEGHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"JPEGHandler_swigregister", JPEGHandler_swigregister, METH_VARARGS },
	 { (char *)"new_PNMHandler", (PyCFunction) _wrap_new_PNMHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PNMHandler_swigregister", PNMHandler_swigregister, METH_VARARGS },
	 { (char *)"new_XPMHandler", (PyCFunction) _wrap_new_XPMHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"XPMHandler_swigregister", XPMHandler_swigregister, METH_VARARGS },
	 { (char *)"new_TIFFHandler", (PyCFunction) _wrap_new_TIFFHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"TIFFHandler_swigregister", TIFFHandler_swigregister, METH_VARARGS },
	 { (char *)"new_EvtHandler", (PyCFunction) _wrap_new_EvtHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_GetNextHandler", (PyCFunction) _wrap_EvtHandler_GetNextHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_GetPreviousHandler", (PyCFunction) _wrap_EvtHandler_GetPreviousHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_SetNextHandler", (PyCFunction) _wrap_EvtHandler_SetNextHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_SetPreviousHandler", (PyCFunction) _wrap_EvtHandler_SetPreviousHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_GetEvtHandlerEnabled", (PyCFunction) _wrap_EvtHandler_GetEvtHandlerEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_SetEvtHandlerEnabled", (PyCFunction) _wrap_EvtHandler_SetEvtHandlerEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_ProcessEvent", (PyCFunction) _wrap_EvtHandler_ProcessEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_AddPendingEvent", (PyCFunction) _wrap_EvtHandler_AddPendingEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_ProcessPendingEvents", (PyCFunction) _wrap_EvtHandler_ProcessPendingEvents, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_Connect", (PyCFunction) _wrap_EvtHandler_Connect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_Disconnect", (PyCFunction) _wrap_EvtHandler_Disconnect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler__setOORInfo", (PyCFunction) _wrap_EvtHandler__setOORInfo, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EvtHandler_swigregister", EvtHandler_swigregister, METH_VARARGS },
	 { (char *)"NewEventType", (PyCFunction) _wrap_NewEventType, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_Event", (PyCFunction) _wrap_delete_Event, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_SetEventType", (PyCFunction) _wrap_Event_SetEventType, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_GetEventType", (PyCFunction) _wrap_Event_GetEventType, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_GetEventObject", (PyCFunction) _wrap_Event_GetEventObject, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_SetEventObject", (PyCFunction) _wrap_Event_SetEventObject, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_GetTimestamp", (PyCFunction) _wrap_Event_GetTimestamp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_SetTimestamp", (PyCFunction) _wrap_Event_SetTimestamp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_GetId", (PyCFunction) _wrap_Event_GetId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_SetId", (PyCFunction) _wrap_Event_SetId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_IsCommandEvent", (PyCFunction) _wrap_Event_IsCommandEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_Skip", (PyCFunction) _wrap_Event_Skip, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_GetSkipped", (PyCFunction) _wrap_Event_GetSkipped, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_ShouldPropagate", (PyCFunction) _wrap_Event_ShouldPropagate, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_StopPropagation", (PyCFunction) _wrap_Event_StopPropagation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_ResumePropagation", (PyCFunction) _wrap_Event_ResumePropagation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_Clone", (PyCFunction) _wrap_Event_Clone, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Event_swigregister", Event_swigregister, METH_VARARGS },
	 { (char *)"new_PropagationDisabler", (PyCFunction) _wrap_new_PropagationDisabler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_PropagationDisabler", (PyCFunction) _wrap_delete_PropagationDisabler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PropagationDisabler_swigregister", PropagationDisabler_swigregister, METH_VARARGS },
	 { (char *)"new_PropagateOnce", (PyCFunction) _wrap_new_PropagateOnce, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_PropagateOnce", (PyCFunction) _wrap_delete_PropagateOnce, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PropagateOnce_swigregister", PropagateOnce_swigregister, METH_VARARGS },
	 { (char *)"new_CommandEvent", (PyCFunction) _wrap_new_CommandEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_GetSelection", (PyCFunction) _wrap_CommandEvent_GetSelection, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_SetString", (PyCFunction) _wrap_CommandEvent_SetString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_GetString", (PyCFunction) _wrap_CommandEvent_GetString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_IsChecked", (PyCFunction) _wrap_CommandEvent_IsChecked, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_IsSelection", (PyCFunction) _wrap_CommandEvent_IsSelection, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_SetExtraLong", (PyCFunction) _wrap_CommandEvent_SetExtraLong, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_GetExtraLong", (PyCFunction) _wrap_CommandEvent_GetExtraLong, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_SetInt", (PyCFunction) _wrap_CommandEvent_SetInt, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_GetInt", (PyCFunction) _wrap_CommandEvent_GetInt, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_Clone", (PyCFunction) _wrap_CommandEvent_Clone, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CommandEvent_swigregister", CommandEvent_swigregister, METH_VARARGS },
	 { (char *)"new_NotifyEvent", (PyCFunction) _wrap_new_NotifyEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NotifyEvent_Veto", (PyCFunction) _wrap_NotifyEvent_Veto, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NotifyEvent_Allow", (PyCFunction) _wrap_NotifyEvent_Allow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NotifyEvent_IsAllowed", (PyCFunction) _wrap_NotifyEvent_IsAllowed, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NotifyEvent_swigregister", NotifyEvent_swigregister, METH_VARARGS },
	 { (char *)"new_ScrollEvent", (PyCFunction) _wrap_new_ScrollEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollEvent_GetOrientation", (PyCFunction) _wrap_ScrollEvent_GetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollEvent_GetPosition", (PyCFunction) _wrap_ScrollEvent_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollEvent_SetOrientation", (PyCFunction) _wrap_ScrollEvent_SetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollEvent_SetPosition", (PyCFunction) _wrap_ScrollEvent_SetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollEvent_swigregister", ScrollEvent_swigregister, METH_VARARGS },
	 { (char *)"new_ScrollWinEvent", (PyCFunction) _wrap_new_ScrollWinEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollWinEvent_GetOrientation", (PyCFunction) _wrap_ScrollWinEvent_GetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollWinEvent_GetPosition", (PyCFunction) _wrap_ScrollWinEvent_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollWinEvent_SetOrientation", (PyCFunction) _wrap_ScrollWinEvent_SetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollWinEvent_SetPosition", (PyCFunction) _wrap_ScrollWinEvent_SetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ScrollWinEvent_swigregister", ScrollWinEvent_swigregister, METH_VARARGS },
	 { (char *)"new_MouseEvent", (PyCFunction) _wrap_new_MouseEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_IsButton", (PyCFunction) _wrap_MouseEvent_IsButton, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_ButtonDown", (PyCFunction) _wrap_MouseEvent_ButtonDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_ButtonDClick", (PyCFunction) _wrap_MouseEvent_ButtonDClick, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_ButtonUp", (PyCFunction) _wrap_MouseEvent_ButtonUp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_Button", (PyCFunction) _wrap_MouseEvent_Button, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_ButtonIsDown", (PyCFunction) _wrap_MouseEvent_ButtonIsDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_GetButton", (PyCFunction) _wrap_MouseEvent_GetButton, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_ControlDown", (PyCFunction) _wrap_MouseEvent_ControlDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_MetaDown", (PyCFunction) _wrap_MouseEvent_MetaDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_AltDown", (PyCFunction) _wrap_MouseEvent_AltDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_ShiftDown", (PyCFunction) _wrap_MouseEvent_ShiftDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_LeftDown", (PyCFunction) _wrap_MouseEvent_LeftDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_MiddleDown", (PyCFunction) _wrap_MouseEvent_MiddleDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_RightDown", (PyCFunction) _wrap_MouseEvent_RightDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_LeftUp", (PyCFunction) _wrap_MouseEvent_LeftUp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_MiddleUp", (PyCFunction) _wrap_MouseEvent_MiddleUp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_RightUp", (PyCFunction) _wrap_MouseEvent_RightUp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_LeftDClick", (PyCFunction) _wrap_MouseEvent_LeftDClick, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_MiddleDClick", (PyCFunction) _wrap_MouseEvent_MiddleDClick, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_RightDClick", (PyCFunction) _wrap_MouseEvent_RightDClick, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_LeftIsDown", (PyCFunction) _wrap_MouseEvent_LeftIsDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_MiddleIsDown", (PyCFunction) _wrap_MouseEvent_MiddleIsDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_RightIsDown", (PyCFunction) _wrap_MouseEvent_RightIsDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_Dragging", (PyCFunction) _wrap_MouseEvent_Dragging, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_Moving", (PyCFunction) _wrap_MouseEvent_Moving, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_Entering", (PyCFunction) _wrap_MouseEvent_Entering, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_Leaving", (PyCFunction) _wrap_MouseEvent_Leaving, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_GetPosition", (PyCFunction) _wrap_MouseEvent_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_GetPositionTuple", (PyCFunction) _wrap_MouseEvent_GetPositionTuple, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_GetLogicalPosition", (PyCFunction) _wrap_MouseEvent_GetLogicalPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_GetX", (PyCFunction) _wrap_MouseEvent_GetX, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_GetY", (PyCFunction) _wrap_MouseEvent_GetY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_GetWheelRotation", (PyCFunction) _wrap_MouseEvent_GetWheelRotation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_GetWheelDelta", (PyCFunction) _wrap_MouseEvent_GetWheelDelta, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_GetLinesPerAction", (PyCFunction) _wrap_MouseEvent_GetLinesPerAction, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_IsPageScroll", (PyCFunction) _wrap_MouseEvent_IsPageScroll, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_x_set", (PyCFunction) _wrap_MouseEvent_m_x_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_x_get", (PyCFunction) _wrap_MouseEvent_m_x_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_y_set", (PyCFunction) _wrap_MouseEvent_m_y_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_y_get", (PyCFunction) _wrap_MouseEvent_m_y_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_leftDown_set", (PyCFunction) _wrap_MouseEvent_m_leftDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_leftDown_get", (PyCFunction) _wrap_MouseEvent_m_leftDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_middleDown_set", (PyCFunction) _wrap_MouseEvent_m_middleDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_middleDown_get", (PyCFunction) _wrap_MouseEvent_m_middleDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_rightDown_set", (PyCFunction) _wrap_MouseEvent_m_rightDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_rightDown_get", (PyCFunction) _wrap_MouseEvent_m_rightDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_controlDown_set", (PyCFunction) _wrap_MouseEvent_m_controlDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_controlDown_get", (PyCFunction) _wrap_MouseEvent_m_controlDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_shiftDown_set", (PyCFunction) _wrap_MouseEvent_m_shiftDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_shiftDown_get", (PyCFunction) _wrap_MouseEvent_m_shiftDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_altDown_set", (PyCFunction) _wrap_MouseEvent_m_altDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_altDown_get", (PyCFunction) _wrap_MouseEvent_m_altDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_metaDown_set", (PyCFunction) _wrap_MouseEvent_m_metaDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_metaDown_get", (PyCFunction) _wrap_MouseEvent_m_metaDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_wheelRotation_set", (PyCFunction) _wrap_MouseEvent_m_wheelRotation_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_wheelRotation_get", (PyCFunction) _wrap_MouseEvent_m_wheelRotation_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_wheelDelta_set", (PyCFunction) _wrap_MouseEvent_m_wheelDelta_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_wheelDelta_get", (PyCFunction) _wrap_MouseEvent_m_wheelDelta_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_linesPerAction_set", (PyCFunction) _wrap_MouseEvent_m_linesPerAction_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_m_linesPerAction_get", (PyCFunction) _wrap_MouseEvent_m_linesPerAction_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseEvent_swigregister", MouseEvent_swigregister, METH_VARARGS },
	 { (char *)"new_SetCursorEvent", (PyCFunction) _wrap_new_SetCursorEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SetCursorEvent_GetX", (PyCFunction) _wrap_SetCursorEvent_GetX, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SetCursorEvent_GetY", (PyCFunction) _wrap_SetCursorEvent_GetY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SetCursorEvent_SetCursor", (PyCFunction) _wrap_SetCursorEvent_SetCursor, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SetCursorEvent_GetCursor", (PyCFunction) _wrap_SetCursorEvent_GetCursor, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SetCursorEvent_HasCursor", (PyCFunction) _wrap_SetCursorEvent_HasCursor, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SetCursorEvent_swigregister", SetCursorEvent_swigregister, METH_VARARGS },
	 { (char *)"new_KeyEvent", (PyCFunction) _wrap_new_KeyEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_ControlDown", (PyCFunction) _wrap_KeyEvent_ControlDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_MetaDown", (PyCFunction) _wrap_KeyEvent_MetaDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_AltDown", (PyCFunction) _wrap_KeyEvent_AltDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_ShiftDown", (PyCFunction) _wrap_KeyEvent_ShiftDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_HasModifiers", (PyCFunction) _wrap_KeyEvent_HasModifiers, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_GetKeyCode", (PyCFunction) _wrap_KeyEvent_GetKeyCode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_GetUniChar", (PyCFunction) _wrap_KeyEvent_GetUniChar, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_GetRawKeyCode", (PyCFunction) _wrap_KeyEvent_GetRawKeyCode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_GetRawKeyFlags", (PyCFunction) _wrap_KeyEvent_GetRawKeyFlags, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_GetPosition", (PyCFunction) _wrap_KeyEvent_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_GetPositionTuple", (PyCFunction) _wrap_KeyEvent_GetPositionTuple, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_GetX", (PyCFunction) _wrap_KeyEvent_GetX, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_GetY", (PyCFunction) _wrap_KeyEvent_GetY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_x_set", (PyCFunction) _wrap_KeyEvent_m_x_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_x_get", (PyCFunction) _wrap_KeyEvent_m_x_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_y_set", (PyCFunction) _wrap_KeyEvent_m_y_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_y_get", (PyCFunction) _wrap_KeyEvent_m_y_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_keyCode_set", (PyCFunction) _wrap_KeyEvent_m_keyCode_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_keyCode_get", (PyCFunction) _wrap_KeyEvent_m_keyCode_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_controlDown_set", (PyCFunction) _wrap_KeyEvent_m_controlDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_controlDown_get", (PyCFunction) _wrap_KeyEvent_m_controlDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_shiftDown_set", (PyCFunction) _wrap_KeyEvent_m_shiftDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_shiftDown_get", (PyCFunction) _wrap_KeyEvent_m_shiftDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_altDown_set", (PyCFunction) _wrap_KeyEvent_m_altDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_altDown_get", (PyCFunction) _wrap_KeyEvent_m_altDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_metaDown_set", (PyCFunction) _wrap_KeyEvent_m_metaDown_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_metaDown_get", (PyCFunction) _wrap_KeyEvent_m_metaDown_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_scanCode_set", (PyCFunction) _wrap_KeyEvent_m_scanCode_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_scanCode_get", (PyCFunction) _wrap_KeyEvent_m_scanCode_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_rawCode_set", (PyCFunction) _wrap_KeyEvent_m_rawCode_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_rawCode_get", (PyCFunction) _wrap_KeyEvent_m_rawCode_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_rawFlags_set", (PyCFunction) _wrap_KeyEvent_m_rawFlags_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_m_rawFlags_get", (PyCFunction) _wrap_KeyEvent_m_rawFlags_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"KeyEvent_swigregister", KeyEvent_swigregister, METH_VARARGS },
	 { (char *)"new_SizeEvent", (PyCFunction) _wrap_new_SizeEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizeEvent_GetSize", (PyCFunction) _wrap_SizeEvent_GetSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizeEvent_GetRect", (PyCFunction) _wrap_SizeEvent_GetRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizeEvent_SetRect", (PyCFunction) _wrap_SizeEvent_SetRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizeEvent_SetSize", (PyCFunction) _wrap_SizeEvent_SetSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizeEvent_m_size_set", (PyCFunction) _wrap_SizeEvent_m_size_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizeEvent_m_size_get", (PyCFunction) _wrap_SizeEvent_m_size_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizeEvent_m_rect_set", (PyCFunction) _wrap_SizeEvent_m_rect_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizeEvent_m_rect_get", (PyCFunction) _wrap_SizeEvent_m_rect_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizeEvent_swigregister", SizeEvent_swigregister, METH_VARARGS },
	 { (char *)"new_MoveEvent", (PyCFunction) _wrap_new_MoveEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MoveEvent_GetPosition", (PyCFunction) _wrap_MoveEvent_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MoveEvent_GetRect", (PyCFunction) _wrap_MoveEvent_GetRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MoveEvent_SetRect", (PyCFunction) _wrap_MoveEvent_SetRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MoveEvent_SetPosition", (PyCFunction) _wrap_MoveEvent_SetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MoveEvent_m_pos_set", (PyCFunction) _wrap_MoveEvent_m_pos_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MoveEvent_m_pos_get", (PyCFunction) _wrap_MoveEvent_m_pos_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MoveEvent_m_rect_set", (PyCFunction) _wrap_MoveEvent_m_rect_set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MoveEvent_m_rect_get", (PyCFunction) _wrap_MoveEvent_m_rect_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MoveEvent_swigregister", MoveEvent_swigregister, METH_VARARGS },
	 { (char *)"new_PaintEvent", (PyCFunction) _wrap_new_PaintEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PaintEvent_swigregister", PaintEvent_swigregister, METH_VARARGS },
	 { (char *)"new_NcPaintEvent", (PyCFunction) _wrap_new_NcPaintEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NcPaintEvent_swigregister", NcPaintEvent_swigregister, METH_VARARGS },
	 { (char *)"new_EraseEvent", (PyCFunction) _wrap_new_EraseEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EraseEvent_GetDC", (PyCFunction) _wrap_EraseEvent_GetDC, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"EraseEvent_swigregister", EraseEvent_swigregister, METH_VARARGS },
	 { (char *)"new_FocusEvent", (PyCFunction) _wrap_new_FocusEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FocusEvent_GetWindow", (PyCFunction) _wrap_FocusEvent_GetWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FocusEvent_SetWindow", (PyCFunction) _wrap_FocusEvent_SetWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FocusEvent_swigregister", FocusEvent_swigregister, METH_VARARGS },
	 { (char *)"new_ChildFocusEvent", (PyCFunction) _wrap_new_ChildFocusEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ChildFocusEvent_GetWindow", (PyCFunction) _wrap_ChildFocusEvent_GetWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ChildFocusEvent_swigregister", ChildFocusEvent_swigregister, METH_VARARGS },
	 { (char *)"new_ActivateEvent", (PyCFunction) _wrap_new_ActivateEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ActivateEvent_GetActive", (PyCFunction) _wrap_ActivateEvent_GetActive, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ActivateEvent_swigregister", ActivateEvent_swigregister, METH_VARARGS },
	 { (char *)"new_InitDialogEvent", (PyCFunction) _wrap_new_InitDialogEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"InitDialogEvent_swigregister", InitDialogEvent_swigregister, METH_VARARGS },
	 { (char *)"new_MenuEvent", (PyCFunction) _wrap_new_MenuEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuEvent_GetMenuId", (PyCFunction) _wrap_MenuEvent_GetMenuId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuEvent_IsPopup", (PyCFunction) _wrap_MenuEvent_IsPopup, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuEvent_GetMenu", (PyCFunction) _wrap_MenuEvent_GetMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuEvent_swigregister", MenuEvent_swigregister, METH_VARARGS },
	 { (char *)"new_CloseEvent", (PyCFunction) _wrap_new_CloseEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CloseEvent_SetLoggingOff", (PyCFunction) _wrap_CloseEvent_SetLoggingOff, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CloseEvent_GetLoggingOff", (PyCFunction) _wrap_CloseEvent_GetLoggingOff, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CloseEvent_Veto", (PyCFunction) _wrap_CloseEvent_Veto, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CloseEvent_SetCanVeto", (PyCFunction) _wrap_CloseEvent_SetCanVeto, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CloseEvent_CanVeto", (PyCFunction) _wrap_CloseEvent_CanVeto, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CloseEvent_GetVeto", (PyCFunction) _wrap_CloseEvent_GetVeto, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CloseEvent_swigregister", CloseEvent_swigregister, METH_VARARGS },
	 { (char *)"new_ShowEvent", (PyCFunction) _wrap_new_ShowEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ShowEvent_SetShow", (PyCFunction) _wrap_ShowEvent_SetShow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ShowEvent_GetShow", (PyCFunction) _wrap_ShowEvent_GetShow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ShowEvent_swigregister", ShowEvent_swigregister, METH_VARARGS },
	 { (char *)"new_IconizeEvent", (PyCFunction) _wrap_new_IconizeEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IconizeEvent_Iconized", (PyCFunction) _wrap_IconizeEvent_Iconized, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IconizeEvent_swigregister", IconizeEvent_swigregister, METH_VARARGS },
	 { (char *)"new_MaximizeEvent", (PyCFunction) _wrap_new_MaximizeEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MaximizeEvent_swigregister", MaximizeEvent_swigregister, METH_VARARGS },
	 { (char *)"DropFilesEvent_GetPosition", (PyCFunction) _wrap_DropFilesEvent_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"DropFilesEvent_GetNumberOfFiles", (PyCFunction) _wrap_DropFilesEvent_GetNumberOfFiles, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"DropFilesEvent_GetFiles", (PyCFunction) _wrap_DropFilesEvent_GetFiles, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"DropFilesEvent_swigregister", DropFilesEvent_swigregister, METH_VARARGS },
	 { (char *)"new_UpdateUIEvent", (PyCFunction) _wrap_new_UpdateUIEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_GetChecked", (PyCFunction) _wrap_UpdateUIEvent_GetChecked, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_GetEnabled", (PyCFunction) _wrap_UpdateUIEvent_GetEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_GetText", (PyCFunction) _wrap_UpdateUIEvent_GetText, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_GetSetText", (PyCFunction) _wrap_UpdateUIEvent_GetSetText, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_GetSetChecked", (PyCFunction) _wrap_UpdateUIEvent_GetSetChecked, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_GetSetEnabled", (PyCFunction) _wrap_UpdateUIEvent_GetSetEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_Check", (PyCFunction) _wrap_UpdateUIEvent_Check, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_Enable", (PyCFunction) _wrap_UpdateUIEvent_Enable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_SetText", (PyCFunction) _wrap_UpdateUIEvent_SetText, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_SetUpdateInterval", (PyCFunction) _wrap_UpdateUIEvent_SetUpdateInterval, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_GetUpdateInterval", (PyCFunction) _wrap_UpdateUIEvent_GetUpdateInterval, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_CanUpdate", (PyCFunction) _wrap_UpdateUIEvent_CanUpdate, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_ResetUpdateTime", (PyCFunction) _wrap_UpdateUIEvent_ResetUpdateTime, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_SetMode", (PyCFunction) _wrap_UpdateUIEvent_SetMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_GetMode", (PyCFunction) _wrap_UpdateUIEvent_GetMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"UpdateUIEvent_swigregister", UpdateUIEvent_swigregister, METH_VARARGS },
	 { (char *)"new_SysColourChangedEvent", (PyCFunction) _wrap_new_SysColourChangedEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SysColourChangedEvent_swigregister", SysColourChangedEvent_swigregister, METH_VARARGS },
	 { (char *)"new_MouseCaptureChangedEvent", (PyCFunction) _wrap_new_MouseCaptureChangedEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseCaptureChangedEvent_GetCapturedWindow", (PyCFunction) _wrap_MouseCaptureChangedEvent_GetCapturedWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MouseCaptureChangedEvent_swigregister", MouseCaptureChangedEvent_swigregister, METH_VARARGS },
	 { (char *)"new_DisplayChangedEvent", (PyCFunction) _wrap_new_DisplayChangedEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"DisplayChangedEvent_swigregister", DisplayChangedEvent_swigregister, METH_VARARGS },
	 { (char *)"new_PaletteChangedEvent", (PyCFunction) _wrap_new_PaletteChangedEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PaletteChangedEvent_SetChangedWindow", (PyCFunction) _wrap_PaletteChangedEvent_SetChangedWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PaletteChangedEvent_GetChangedWindow", (PyCFunction) _wrap_PaletteChangedEvent_GetChangedWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PaletteChangedEvent_swigregister", PaletteChangedEvent_swigregister, METH_VARARGS },
	 { (char *)"new_QueryNewPaletteEvent", (PyCFunction) _wrap_new_QueryNewPaletteEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"QueryNewPaletteEvent_SetPaletteRealized", (PyCFunction) _wrap_QueryNewPaletteEvent_SetPaletteRealized, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"QueryNewPaletteEvent_GetPaletteRealized", (PyCFunction) _wrap_QueryNewPaletteEvent_GetPaletteRealized, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"QueryNewPaletteEvent_swigregister", QueryNewPaletteEvent_swigregister, METH_VARARGS },
	 { (char *)"new_NavigationKeyEvent", (PyCFunction) _wrap_new_NavigationKeyEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NavigationKeyEvent_GetDirection", (PyCFunction) _wrap_NavigationKeyEvent_GetDirection, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NavigationKeyEvent_SetDirection", (PyCFunction) _wrap_NavigationKeyEvent_SetDirection, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NavigationKeyEvent_IsWindowChange", (PyCFunction) _wrap_NavigationKeyEvent_IsWindowChange, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NavigationKeyEvent_SetWindowChange", (PyCFunction) _wrap_NavigationKeyEvent_SetWindowChange, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NavigationKeyEvent_GetCurrentFocus", (PyCFunction) _wrap_NavigationKeyEvent_GetCurrentFocus, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NavigationKeyEvent_SetCurrentFocus", (PyCFunction) _wrap_NavigationKeyEvent_SetCurrentFocus, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"NavigationKeyEvent_swigregister", NavigationKeyEvent_swigregister, METH_VARARGS },
	 { (char *)"new_WindowCreateEvent", (PyCFunction) _wrap_new_WindowCreateEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"WindowCreateEvent_GetWindow", (PyCFunction) _wrap_WindowCreateEvent_GetWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"WindowCreateEvent_swigregister", WindowCreateEvent_swigregister, METH_VARARGS },
	 { (char *)"new_WindowDestroyEvent", (PyCFunction) _wrap_new_WindowDestroyEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"WindowDestroyEvent_GetWindow", (PyCFunction) _wrap_WindowDestroyEvent_GetWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"WindowDestroyEvent_swigregister", WindowDestroyEvent_swigregister, METH_VARARGS },
	 { (char *)"new_ContextMenuEvent", (PyCFunction) _wrap_new_ContextMenuEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ContextMenuEvent_GetPosition", (PyCFunction) _wrap_ContextMenuEvent_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ContextMenuEvent_SetPosition", (PyCFunction) _wrap_ContextMenuEvent_SetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ContextMenuEvent_swigregister", ContextMenuEvent_swigregister, METH_VARARGS },
	 { (char *)"new_IdleEvent", (PyCFunction) _wrap_new_IdleEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IdleEvent_RequestMore", (PyCFunction) _wrap_IdleEvent_RequestMore, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IdleEvent_MoreRequested", (PyCFunction) _wrap_IdleEvent_MoreRequested, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IdleEvent_SetMode", (PyCFunction) _wrap_IdleEvent_SetMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IdleEvent_GetMode", (PyCFunction) _wrap_IdleEvent_GetMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IdleEvent_CanSend", (PyCFunction) _wrap_IdleEvent_CanSend, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IdleEvent_swigregister", IdleEvent_swigregister, METH_VARARGS },
	 { (char *)"new_PyEvent", (PyCFunction) _wrap_new_PyEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_PyEvent", (PyCFunction) _wrap_delete_PyEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyEvent_SetSelf", (PyCFunction) _wrap_PyEvent_SetSelf, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyEvent_GetSelf", (PyCFunction) _wrap_PyEvent_GetSelf, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyEvent_swigregister", PyEvent_swigregister, METH_VARARGS },
	 { (char *)"new_PyCommandEvent", (PyCFunction) _wrap_new_PyCommandEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_PyCommandEvent", (PyCFunction) _wrap_delete_PyCommandEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyCommandEvent_SetSelf", (PyCFunction) _wrap_PyCommandEvent_SetSelf, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyCommandEvent_GetSelf", (PyCFunction) _wrap_PyCommandEvent_GetSelf, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyCommandEvent_swigregister", PyCommandEvent_swigregister, METH_VARARGS },
	 { (char *)"new_PyApp", (PyCFunction) _wrap_new_PyApp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_PyApp", (PyCFunction) _wrap_delete_PyApp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp__setCallbackInfo", (PyCFunction) _wrap_PyApp__setCallbackInfo, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetAppName", (PyCFunction) _wrap_PyApp_GetAppName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetAppName", (PyCFunction) _wrap_PyApp_SetAppName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetClassName", (PyCFunction) _wrap_PyApp_GetClassName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetClassName", (PyCFunction) _wrap_PyApp_SetClassName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetVendorName", (PyCFunction) _wrap_PyApp_GetVendorName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetVendorName", (PyCFunction) _wrap_PyApp_SetVendorName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetTraits", (PyCFunction) _wrap_PyApp_GetTraits, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_ProcessPendingEvents", (PyCFunction) _wrap_PyApp_ProcessPendingEvents, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_Yield", (PyCFunction) _wrap_PyApp_Yield, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_WakeUpIdle", (PyCFunction) _wrap_PyApp_WakeUpIdle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_MainLoop", (PyCFunction) _wrap_PyApp_MainLoop, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_Exit", (PyCFunction) _wrap_PyApp_Exit, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_ExitMainLoop", (PyCFunction) _wrap_PyApp_ExitMainLoop, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_Pending", (PyCFunction) _wrap_PyApp_Pending, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_Dispatch", (PyCFunction) _wrap_PyApp_Dispatch, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_ProcessIdle", (PyCFunction) _wrap_PyApp_ProcessIdle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SendIdleEvents", (PyCFunction) _wrap_PyApp_SendIdleEvents, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_IsActive", (PyCFunction) _wrap_PyApp_IsActive, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetTopWindow", (PyCFunction) _wrap_PyApp_SetTopWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetTopWindow", (PyCFunction) _wrap_PyApp_GetTopWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetExitOnFrameDelete", (PyCFunction) _wrap_PyApp_SetExitOnFrameDelete, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetExitOnFrameDelete", (PyCFunction) _wrap_PyApp_GetExitOnFrameDelete, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetUseBestVisual", (PyCFunction) _wrap_PyApp_SetUseBestVisual, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetUseBestVisual", (PyCFunction) _wrap_PyApp_GetUseBestVisual, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetPrintMode", (PyCFunction) _wrap_PyApp_SetPrintMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetPrintMode", (PyCFunction) _wrap_PyApp_GetPrintMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetAssertMode", (PyCFunction) _wrap_PyApp_SetAssertMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetAssertMode", (PyCFunction) _wrap_PyApp_GetAssertMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetMacSupportPCMenuShortcuts", (PyCFunction) _wrap_PyApp_GetMacSupportPCMenuShortcuts, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetMacAboutMenuItemId", (PyCFunction) _wrap_PyApp_GetMacAboutMenuItemId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetMacPreferencesMenuItemId", (PyCFunction) _wrap_PyApp_GetMacPreferencesMenuItemId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetMacExitMenuItemId", (PyCFunction) _wrap_PyApp_GetMacExitMenuItemId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetMacHelpMenuTitleName", (PyCFunction) _wrap_PyApp_GetMacHelpMenuTitleName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetMacSupportPCMenuShortcuts", (PyCFunction) _wrap_PyApp_SetMacSupportPCMenuShortcuts, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetMacAboutMenuItemId", (PyCFunction) _wrap_PyApp_SetMacAboutMenuItemId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetMacPreferencesMenuItemId", (PyCFunction) _wrap_PyApp_SetMacPreferencesMenuItemId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetMacExitMenuItemId", (PyCFunction) _wrap_PyApp_SetMacExitMenuItemId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_SetMacHelpMenuTitleName", (PyCFunction) _wrap_PyApp_SetMacHelpMenuTitleName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp__BootstrapApp", (PyCFunction) _wrap_PyApp__BootstrapApp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_GetComCtl32Version", (PyCFunction) _wrap_PyApp_GetComCtl32Version, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyApp_swigregister", PyApp_swigregister, METH_VARARGS },
	 { (char *)"Exit", (PyCFunction) _wrap_Exit, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Yield", (PyCFunction) _wrap_Yield, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"YieldIfNeeded", (PyCFunction) _wrap_YieldIfNeeded, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SafeYield", (PyCFunction) _wrap_SafeYield, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"WakeUpIdle", (PyCFunction) _wrap_WakeUpIdle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PostEvent", (PyCFunction) _wrap_PostEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"App_CleanUp", (PyCFunction) _wrap_App_CleanUp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GetApp", (PyCFunction) _wrap_GetApp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_AcceleratorEntry", (PyCFunction) _wrap_new_AcceleratorEntry, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_AcceleratorEntry", (PyCFunction) _wrap_delete_AcceleratorEntry, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"AcceleratorEntry_Set", (PyCFunction) _wrap_AcceleratorEntry_Set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"AcceleratorEntry_SetMenuItem", (PyCFunction) _wrap_AcceleratorEntry_SetMenuItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"AcceleratorEntry_GetMenuItem", (PyCFunction) _wrap_AcceleratorEntry_GetMenuItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"AcceleratorEntry_GetFlags", (PyCFunction) _wrap_AcceleratorEntry_GetFlags, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"AcceleratorEntry_GetKeyCode", (PyCFunction) _wrap_AcceleratorEntry_GetKeyCode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"AcceleratorEntry_GetCommand", (PyCFunction) _wrap_AcceleratorEntry_GetCommand, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"AcceleratorEntry_swigregister", AcceleratorEntry_swigregister, METH_VARARGS },
	 { (char *)"new_AcceleratorTable", (PyCFunction) _wrap_new_AcceleratorTable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"delete_AcceleratorTable", (PyCFunction) _wrap_delete_AcceleratorTable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"AcceleratorTable_Ok", (PyCFunction) _wrap_AcceleratorTable_Ok, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"AcceleratorTable_swigregister", AcceleratorTable_swigregister, METH_VARARGS },
	 { (char *)"GetAccelFromString", (PyCFunction) _wrap_GetAccelFromString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_Window", (PyCFunction) _wrap_new_Window, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_PreWindow", (PyCFunction) _wrap_new_PreWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Create", (PyCFunction) _wrap_Window_Create, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Close", (PyCFunction) _wrap_Window_Close, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Destroy", (PyCFunction) _wrap_Window_Destroy, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_DestroyChildren", (PyCFunction) _wrap_Window_DestroyChildren, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_IsBeingDeleted", (PyCFunction) _wrap_Window_IsBeingDeleted, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetTitle", (PyCFunction) _wrap_Window_SetTitle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetTitle", (PyCFunction) _wrap_Window_GetTitle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetLabel", (PyCFunction) _wrap_Window_SetLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetLabel", (PyCFunction) _wrap_Window_GetLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetName", (PyCFunction) _wrap_Window_SetName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetName", (PyCFunction) _wrap_Window_GetName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetId", (PyCFunction) _wrap_Window_SetId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetId", (PyCFunction) _wrap_Window_GetId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_NewControlId", (PyCFunction) _wrap_Window_NewControlId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_NextControlId", (PyCFunction) _wrap_Window_NextControlId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_PrevControlId", (PyCFunction) _wrap_Window_PrevControlId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetSize", (PyCFunction) _wrap_Window_SetSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetDimensions", (PyCFunction) _wrap_Window_SetDimensions, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetRect", (PyCFunction) _wrap_Window_SetRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetSizeWH", (PyCFunction) _wrap_Window_SetSizeWH, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Move", (PyCFunction) _wrap_Window_Move, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_MoveXY", (PyCFunction) _wrap_Window_MoveXY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Raise", (PyCFunction) _wrap_Window_Raise, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Lower", (PyCFunction) _wrap_Window_Lower, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetClientSize", (PyCFunction) _wrap_Window_SetClientSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetClientSizeWH", (PyCFunction) _wrap_Window_SetClientSizeWH, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetClientRect", (PyCFunction) _wrap_Window_SetClientRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetPosition", (PyCFunction) _wrap_Window_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetPositionTuple", (PyCFunction) _wrap_Window_GetPositionTuple, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetSize", (PyCFunction) _wrap_Window_GetSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetSizeTuple", (PyCFunction) _wrap_Window_GetSizeTuple, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetRect", (PyCFunction) _wrap_Window_GetRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetClientSize", (PyCFunction) _wrap_Window_GetClientSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetClientSizeTuple", (PyCFunction) _wrap_Window_GetClientSizeTuple, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetClientAreaOrigin", (PyCFunction) _wrap_Window_GetClientAreaOrigin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetClientRect", (PyCFunction) _wrap_Window_GetClientRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetBestSize", (PyCFunction) _wrap_Window_GetBestSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetBestSizeTuple", (PyCFunction) _wrap_Window_GetBestSizeTuple, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetAdjustedBestSize", (PyCFunction) _wrap_Window_GetAdjustedBestSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Center", (PyCFunction) _wrap_Window_Center, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_CenterOnScreen", (PyCFunction) _wrap_Window_CenterOnScreen, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_CenterOnParent", (PyCFunction) _wrap_Window_CenterOnParent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Fit", (PyCFunction) _wrap_Window_Fit, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_FitInside", (PyCFunction) _wrap_Window_FitInside, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetSizeHints", (PyCFunction) _wrap_Window_SetSizeHints, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetVirtualSizeHints", (PyCFunction) _wrap_Window_SetVirtualSizeHints, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetMinWidth", (PyCFunction) _wrap_Window_GetMinWidth, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetMinHeight", (PyCFunction) _wrap_Window_GetMinHeight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetMaxWidth", (PyCFunction) _wrap_Window_GetMaxWidth, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetMaxHeight", (PyCFunction) _wrap_Window_GetMaxHeight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetMaxSize", (PyCFunction) _wrap_Window_GetMaxSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetVirtualSize", (PyCFunction) _wrap_Window_SetVirtualSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetVirtualSizeWH", (PyCFunction) _wrap_Window_SetVirtualSizeWH, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetVirtualSize", (PyCFunction) _wrap_Window_GetVirtualSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetVirtualSizeTuple", (PyCFunction) _wrap_Window_GetVirtualSizeTuple, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetBestVirtualSize", (PyCFunction) _wrap_Window_GetBestVirtualSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Show", (PyCFunction) _wrap_Window_Show, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Hide", (PyCFunction) _wrap_Window_Hide, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Enable", (PyCFunction) _wrap_Window_Enable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Disable", (PyCFunction) _wrap_Window_Disable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_IsShown", (PyCFunction) _wrap_Window_IsShown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_IsEnabled", (PyCFunction) _wrap_Window_IsEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetWindowStyleFlag", (PyCFunction) _wrap_Window_SetWindowStyleFlag, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetWindowStyleFlag", (PyCFunction) _wrap_Window_GetWindowStyleFlag, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetWindowStyle", (PyCFunction) _wrap_Window_SetWindowStyle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetWindowStyle", (PyCFunction) _wrap_Window_GetWindowStyle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_HasFlag", (PyCFunction) _wrap_Window_HasFlag, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_IsRetained", (PyCFunction) _wrap_Window_IsRetained, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetExtraStyle", (PyCFunction) _wrap_Window_SetExtraStyle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetExtraStyle", (PyCFunction) _wrap_Window_GetExtraStyle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_MakeModal", (PyCFunction) _wrap_Window_MakeModal, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetThemeEnabled", (PyCFunction) _wrap_Window_SetThemeEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetThemeEnabled", (PyCFunction) _wrap_Window_GetThemeEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ShouldInheritColours", (PyCFunction) _wrap_Window_ShouldInheritColours, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetFocus", (PyCFunction) _wrap_Window_SetFocus, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetFocusFromKbd", (PyCFunction) _wrap_Window_SetFocusFromKbd, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_FindFocus", (PyCFunction) _wrap_Window_FindFocus, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_AcceptsFocus", (PyCFunction) _wrap_Window_AcceptsFocus, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_AcceptsFocusFromKeyboard", (PyCFunction) _wrap_Window_AcceptsFocusFromKeyboard, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetDefaultItem", (PyCFunction) _wrap_Window_GetDefaultItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetDefaultItem", (PyCFunction) _wrap_Window_SetDefaultItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetTmpDefaultItem", (PyCFunction) _wrap_Window_SetTmpDefaultItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetChildren", (PyCFunction) _wrap_Window_GetChildren, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetParent", (PyCFunction) _wrap_Window_GetParent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetGrandParent", (PyCFunction) _wrap_Window_GetGrandParent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_IsTopLevel", (PyCFunction) _wrap_Window_IsTopLevel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Reparent", (PyCFunction) _wrap_Window_Reparent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_AddChild", (PyCFunction) _wrap_Window_AddChild, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_RemoveChild", (PyCFunction) _wrap_Window_RemoveChild, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_FindWindowById", (PyCFunction) _wrap_Window_FindWindowById, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_FindWindowByName", (PyCFunction) _wrap_Window_FindWindowByName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetEventHandler", (PyCFunction) _wrap_Window_GetEventHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetEventHandler", (PyCFunction) _wrap_Window_SetEventHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_PushEventHandler", (PyCFunction) _wrap_Window_PushEventHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_PopEventHandler", (PyCFunction) _wrap_Window_PopEventHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_RemoveEventHandler", (PyCFunction) _wrap_Window_RemoveEventHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetValidator", (PyCFunction) _wrap_Window_SetValidator, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetValidator", (PyCFunction) _wrap_Window_GetValidator, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetAcceleratorTable", (PyCFunction) _wrap_Window_SetAcceleratorTable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetAcceleratorTable", (PyCFunction) _wrap_Window_GetAcceleratorTable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_RegisterHotKey", (PyCFunction) _wrap_Window_RegisterHotKey, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_UnregisterHotKey", (PyCFunction) _wrap_Window_UnregisterHotKey, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ConvertDialogPointToPixels", (PyCFunction) _wrap_Window_ConvertDialogPointToPixels, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ConvertDialogSizeToPixels", (PyCFunction) _wrap_Window_ConvertDialogSizeToPixels, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_DLG_PNT", (PyCFunction) _wrap_Window_DLG_PNT, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_DLG_SZE", (PyCFunction) _wrap_Window_DLG_SZE, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ConvertPixelPointToDialog", (PyCFunction) _wrap_Window_ConvertPixelPointToDialog, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ConvertPixelSizeToDialog", (PyCFunction) _wrap_Window_ConvertPixelSizeToDialog, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_WarpPointer", (PyCFunction) _wrap_Window_WarpPointer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_CaptureMouse", (PyCFunction) _wrap_Window_CaptureMouse, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ReleaseMouse", (PyCFunction) _wrap_Window_ReleaseMouse, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetCapture", (PyCFunction) _wrap_Window_GetCapture, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_HasCapture", (PyCFunction) _wrap_Window_HasCapture, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Refresh", (PyCFunction) _wrap_Window_Refresh, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_RefreshRect", (PyCFunction) _wrap_Window_RefreshRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Update", (PyCFunction) _wrap_Window_Update, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ClearBackground", (PyCFunction) _wrap_Window_ClearBackground, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Freeze", (PyCFunction) _wrap_Window_Freeze, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Thaw", (PyCFunction) _wrap_Window_Thaw, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_PrepareDC", (PyCFunction) _wrap_Window_PrepareDC, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetUpdateRegion", (PyCFunction) _wrap_Window_GetUpdateRegion, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetUpdateClientRect", (PyCFunction) _wrap_Window_GetUpdateClientRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_IsExposed", (PyCFunction) _wrap_Window_IsExposed, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_IsExposedPoint", (PyCFunction) _wrap_Window_IsExposedPoint, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_isExposedRect", (PyCFunction) _wrap_Window_isExposedRect, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetBackgroundColour", (PyCFunction) _wrap_Window_SetBackgroundColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetForegroundColour", (PyCFunction) _wrap_Window_SetForegroundColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetBackgroundColour", (PyCFunction) _wrap_Window_GetBackgroundColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetForegroundColour", (PyCFunction) _wrap_Window_GetForegroundColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetCursor", (PyCFunction) _wrap_Window_SetCursor, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetCursor", (PyCFunction) _wrap_Window_GetCursor, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetFont", (PyCFunction) _wrap_Window_SetFont, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetFont", (PyCFunction) _wrap_Window_GetFont, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetCaret", (PyCFunction) _wrap_Window_SetCaret, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetCaret", (PyCFunction) _wrap_Window_GetCaret, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetCharHeight", (PyCFunction) _wrap_Window_GetCharHeight, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetCharWidth", (PyCFunction) _wrap_Window_GetCharWidth, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetTextExtent", (PyCFunction) _wrap_Window_GetTextExtent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetFullTextExtent", (PyCFunction) _wrap_Window_GetFullTextExtent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ClientToScreenXY", (PyCFunction) _wrap_Window_ClientToScreenXY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ScreenToClientXY", (PyCFunction) _wrap_Window_ScreenToClientXY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ClientToScreen", (PyCFunction) _wrap_Window_ClientToScreen, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ScreenToClient", (PyCFunction) _wrap_Window_ScreenToClient, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_HitTestXY", (PyCFunction) _wrap_Window_HitTestXY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_HitTest", (PyCFunction) _wrap_Window_HitTest, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetBorderFlags", (PyCFunction) _wrap_Window_GetBorderFlags, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetBorder", (PyCFunction) _wrap_Window_GetBorder, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_UpdateWindowUI", (PyCFunction) _wrap_Window_UpdateWindowUI, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_PopupMenuXY", (PyCFunction) _wrap_Window_PopupMenuXY, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_PopupMenu", (PyCFunction) _wrap_Window_PopupMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetHandle", (PyCFunction) _wrap_Window_GetHandle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_HasScrollbar", (PyCFunction) _wrap_Window_HasScrollbar, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetScrollbar", (PyCFunction) _wrap_Window_SetScrollbar, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetScrollPos", (PyCFunction) _wrap_Window_SetScrollPos, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetScrollPos", (PyCFunction) _wrap_Window_GetScrollPos, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetScrollThumb", (PyCFunction) _wrap_Window_GetScrollThumb, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetScrollRange", (PyCFunction) _wrap_Window_GetScrollRange, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ScrollWindow", (PyCFunction) _wrap_Window_ScrollWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ScrollLines", (PyCFunction) _wrap_Window_ScrollLines, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_ScrollPages", (PyCFunction) _wrap_Window_ScrollPages, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_LineUp", (PyCFunction) _wrap_Window_LineUp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_LineDown", (PyCFunction) _wrap_Window_LineDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_PageUp", (PyCFunction) _wrap_Window_PageUp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_PageDown", (PyCFunction) _wrap_Window_PageDown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetHelpText", (PyCFunction) _wrap_Window_SetHelpText, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetHelpTextForId", (PyCFunction) _wrap_Window_SetHelpTextForId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetHelpText", (PyCFunction) _wrap_Window_GetHelpText, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetToolTipString", (PyCFunction) _wrap_Window_SetToolTipString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetToolTip", (PyCFunction) _wrap_Window_SetToolTip, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetToolTip", (PyCFunction) _wrap_Window_GetToolTip, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetDropTarget", (PyCFunction) _wrap_Window_SetDropTarget, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetDropTarget", (PyCFunction) _wrap_Window_GetDropTarget, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetConstraints", (PyCFunction) _wrap_Window_SetConstraints, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetConstraints", (PyCFunction) _wrap_Window_GetConstraints, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetAutoLayout", (PyCFunction) _wrap_Window_SetAutoLayout, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetAutoLayout", (PyCFunction) _wrap_Window_GetAutoLayout, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_Layout", (PyCFunction) _wrap_Window_Layout, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetSizer", (PyCFunction) _wrap_Window_SetSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetSizerAndFit", (PyCFunction) _wrap_Window_SetSizerAndFit, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetSizer", (PyCFunction) _wrap_Window_GetSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_SetContainingSizer", (PyCFunction) _wrap_Window_SetContainingSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_GetContainingSizer", (PyCFunction) _wrap_Window_GetContainingSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_swigregister", Window_swigregister, METH_VARARGS },
	 { (char *)"FindWindowById", (PyCFunction) _wrap_FindWindowById, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FindWindowByName", (PyCFunction) _wrap_FindWindowByName, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FindWindowByLabel", (PyCFunction) _wrap_FindWindowByLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Window_FromHWND", (PyCFunction) _wrap_Window_FromHWND, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_Validator", (PyCFunction) _wrap_new_Validator, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Validator_Clone", (PyCFunction) _wrap_Validator_Clone, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Validator_Validate", (PyCFunction) _wrap_Validator_Validate, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Validator_TransferToWindow", (PyCFunction) _wrap_Validator_TransferToWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Validator_TransferFromWindow", (PyCFunction) _wrap_Validator_TransferFromWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Validator_GetWindow", (PyCFunction) _wrap_Validator_GetWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Validator_SetWindow", (PyCFunction) _wrap_Validator_SetWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Validator_IsSilent", (PyCFunction) _wrap_Validator_IsSilent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Validator_SetBellOnError", (PyCFunction) _wrap_Validator_SetBellOnError, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Validator_swigregister", Validator_swigregister, METH_VARARGS },
	 { (char *)"new_PyValidator", (PyCFunction) _wrap_new_PyValidator, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyValidator__setCallbackInfo", (PyCFunction) _wrap_PyValidator__setCallbackInfo, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PyValidator_swigregister", PyValidator_swigregister, METH_VARARGS },
	 { (char *)"new_Menu", (PyCFunction) _wrap_new_Menu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Append", (PyCFunction) _wrap_Menu_Append, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_AppendSeparator", (PyCFunction) _wrap_Menu_AppendSeparator, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_AppendCheckItem", (PyCFunction) _wrap_Menu_AppendCheckItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_AppendRadioItem", (PyCFunction) _wrap_Menu_AppendRadioItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_AppendMenu", (PyCFunction) _wrap_Menu_AppendMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_AppendItem", (PyCFunction) _wrap_Menu_AppendItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Break", (PyCFunction) _wrap_Menu_Break, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_InsertItem", (PyCFunction) _wrap_Menu_InsertItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Insert", (PyCFunction) _wrap_Menu_Insert, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_InsertSeparator", (PyCFunction) _wrap_Menu_InsertSeparator, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_InsertCheckItem", (PyCFunction) _wrap_Menu_InsertCheckItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_InsertRadioItem", (PyCFunction) _wrap_Menu_InsertRadioItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_InsertMenu", (PyCFunction) _wrap_Menu_InsertMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_PrependItem", (PyCFunction) _wrap_Menu_PrependItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Prepend", (PyCFunction) _wrap_Menu_Prepend, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_PrependSeparator", (PyCFunction) _wrap_Menu_PrependSeparator, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_PrependCheckItem", (PyCFunction) _wrap_Menu_PrependCheckItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_PrependRadioItem", (PyCFunction) _wrap_Menu_PrependRadioItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_PrependMenu", (PyCFunction) _wrap_Menu_PrependMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Remove", (PyCFunction) _wrap_Menu_Remove, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_RemoveItem", (PyCFunction) _wrap_Menu_RemoveItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Delete", (PyCFunction) _wrap_Menu_Delete, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_DeleteItem", (PyCFunction) _wrap_Menu_DeleteItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Destroy", (PyCFunction) _wrap_Menu_Destroy, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_DestroyId", (PyCFunction) _wrap_Menu_DestroyId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_DestroyItem", (PyCFunction) _wrap_Menu_DestroyItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetMenuItemCount", (PyCFunction) _wrap_Menu_GetMenuItemCount, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetMenuItems", (PyCFunction) _wrap_Menu_GetMenuItems, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_FindItem", (PyCFunction) _wrap_Menu_FindItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_FindItemById", (PyCFunction) _wrap_Menu_FindItemById, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_FindItemByPosition", (PyCFunction) _wrap_Menu_FindItemByPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Enable", (PyCFunction) _wrap_Menu_Enable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_IsEnabled", (PyCFunction) _wrap_Menu_IsEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Check", (PyCFunction) _wrap_Menu_Check, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_IsChecked", (PyCFunction) _wrap_Menu_IsChecked, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_SetLabel", (PyCFunction) _wrap_Menu_SetLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetLabel", (PyCFunction) _wrap_Menu_GetLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_SetHelpString", (PyCFunction) _wrap_Menu_SetHelpString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetHelpString", (PyCFunction) _wrap_Menu_GetHelpString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_SetTitle", (PyCFunction) _wrap_Menu_SetTitle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetTitle", (PyCFunction) _wrap_Menu_GetTitle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_SetEventHandler", (PyCFunction) _wrap_Menu_SetEventHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetEventHandler", (PyCFunction) _wrap_Menu_GetEventHandler, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_SetInvokingWindow", (PyCFunction) _wrap_Menu_SetInvokingWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetInvokingWindow", (PyCFunction) _wrap_Menu_GetInvokingWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetStyle", (PyCFunction) _wrap_Menu_GetStyle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_UpdateUI", (PyCFunction) _wrap_Menu_UpdateUI, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetMenuBar", (PyCFunction) _wrap_Menu_GetMenuBar, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Attach", (PyCFunction) _wrap_Menu_Attach, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_Detach", (PyCFunction) _wrap_Menu_Detach, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_IsAttached", (PyCFunction) _wrap_Menu_IsAttached, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_SetParent", (PyCFunction) _wrap_Menu_SetParent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_GetParent", (PyCFunction) _wrap_Menu_GetParent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Menu_swigregister", Menu_swigregister, METH_VARARGS },
	 { (char *)"new_MenuBar", (PyCFunction) _wrap_new_MenuBar, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_Append", (PyCFunction) _wrap_MenuBar_Append, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_Insert", (PyCFunction) _wrap_MenuBar_Insert, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_GetMenuCount", (PyCFunction) _wrap_MenuBar_GetMenuCount, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_GetMenu", (PyCFunction) _wrap_MenuBar_GetMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_Replace", (PyCFunction) _wrap_MenuBar_Replace, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_Remove", (PyCFunction) _wrap_MenuBar_Remove, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_EnableTop", (PyCFunction) _wrap_MenuBar_EnableTop, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_IsEnabledTop", (PyCFunction) _wrap_MenuBar_IsEnabledTop, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_SetLabelTop", (PyCFunction) _wrap_MenuBar_SetLabelTop, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_GetLabelTop", (PyCFunction) _wrap_MenuBar_GetLabelTop, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_FindMenuItem", (PyCFunction) _wrap_MenuBar_FindMenuItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_FindItemById", (PyCFunction) _wrap_MenuBar_FindItemById, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_FindMenu", (PyCFunction) _wrap_MenuBar_FindMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_Enable", (PyCFunction) _wrap_MenuBar_Enable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_Check", (PyCFunction) _wrap_MenuBar_Check, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_IsChecked", (PyCFunction) _wrap_MenuBar_IsChecked, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_IsEnabled", (PyCFunction) _wrap_MenuBar_IsEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_SetLabel", (PyCFunction) _wrap_MenuBar_SetLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_GetLabel", (PyCFunction) _wrap_MenuBar_GetLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_SetHelpString", (PyCFunction) _wrap_MenuBar_SetHelpString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_GetHelpString", (PyCFunction) _wrap_MenuBar_GetHelpString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_GetFrame", (PyCFunction) _wrap_MenuBar_GetFrame, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_IsAttached", (PyCFunction) _wrap_MenuBar_IsAttached, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_Attach", (PyCFunction) _wrap_MenuBar_Attach, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_Detach", (PyCFunction) _wrap_MenuBar_Detach, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuBar_swigregister", MenuBar_swigregister, METH_VARARGS },
	 { (char *)"new_MenuItem", (PyCFunction) _wrap_new_MenuItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetMenu", (PyCFunction) _wrap_MenuItem_GetMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_SetMenu", (PyCFunction) _wrap_MenuItem_SetMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_SetId", (PyCFunction) _wrap_MenuItem_SetId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetId", (PyCFunction) _wrap_MenuItem_GetId, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_IsSeparator", (PyCFunction) _wrap_MenuItem_IsSeparator, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_SetText", (PyCFunction) _wrap_MenuItem_SetText, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetLabel", (PyCFunction) _wrap_MenuItem_GetLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetText", (PyCFunction) _wrap_MenuItem_GetText, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetLabelFromText", (PyCFunction) _wrap_MenuItem_GetLabelFromText, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetKind", (PyCFunction) _wrap_MenuItem_GetKind, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_SetCheckable", (PyCFunction) _wrap_MenuItem_SetCheckable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_IsCheckable", (PyCFunction) _wrap_MenuItem_IsCheckable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_IsSubMenu", (PyCFunction) _wrap_MenuItem_IsSubMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_SetSubMenu", (PyCFunction) _wrap_MenuItem_SetSubMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetSubMenu", (PyCFunction) _wrap_MenuItem_GetSubMenu, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_Enable", (PyCFunction) _wrap_MenuItem_Enable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_IsEnabled", (PyCFunction) _wrap_MenuItem_IsEnabled, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_Check", (PyCFunction) _wrap_MenuItem_Check, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_IsChecked", (PyCFunction) _wrap_MenuItem_IsChecked, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_Toggle", (PyCFunction) _wrap_MenuItem_Toggle, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_SetHelp", (PyCFunction) _wrap_MenuItem_SetHelp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetHelp", (PyCFunction) _wrap_MenuItem_GetHelp, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetAccel", (PyCFunction) _wrap_MenuItem_GetAccel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_SetAccel", (PyCFunction) _wrap_MenuItem_SetAccel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetDefaultMarginWidth", (PyCFunction) _wrap_MenuItem_GetDefaultMarginWidth, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_SetBitmap", (PyCFunction) _wrap_MenuItem_SetBitmap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_GetBitmap", (PyCFunction) _wrap_MenuItem_GetBitmap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"MenuItem_swigregister", MenuItem_swigregister, METH_VARARGS },
	 { (char *)"new_Control", (PyCFunction) _wrap_new_Control, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_PreControl", (PyCFunction) _wrap_new_PreControl, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Control_Create", (PyCFunction) _wrap_Control_Create, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Control_Command", (PyCFunction) _wrap_Control_Command, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Control_GetLabel", (PyCFunction) _wrap_Control_GetLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Control_SetLabel", (PyCFunction) _wrap_Control_SetLabel, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Control_swigregister", Control_swigregister, METH_VARARGS },
	 { (char *)"ItemContainer_Append", (PyCFunction) _wrap_ItemContainer_Append, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_AppendItems", (PyCFunction) _wrap_ItemContainer_AppendItems, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_Insert", (PyCFunction) _wrap_ItemContainer_Insert, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_Clear", (PyCFunction) _wrap_ItemContainer_Clear, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_Delete", (PyCFunction) _wrap_ItemContainer_Delete, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_GetCount", (PyCFunction) _wrap_ItemContainer_GetCount, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_IsEmpty", (PyCFunction) _wrap_ItemContainer_IsEmpty, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_GetString", (PyCFunction) _wrap_ItemContainer_GetString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_GetStrings", (PyCFunction) _wrap_ItemContainer_GetStrings, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_SetString", (PyCFunction) _wrap_ItemContainer_SetString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_FindString", (PyCFunction) _wrap_ItemContainer_FindString, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_Select", (PyCFunction) _wrap_ItemContainer_Select, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_GetSelection", (PyCFunction) _wrap_ItemContainer_GetSelection, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_GetStringSelection", (PyCFunction) _wrap_ItemContainer_GetStringSelection, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_GetClientData", (PyCFunction) _wrap_ItemContainer_GetClientData, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_SetClientData", (PyCFunction) _wrap_ItemContainer_SetClientData, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"ItemContainer_swigregister", ItemContainer_swigregister, METH_VARARGS },
	 { (char *)"ControlWithItems_swigregister", ControlWithItems_swigregister, METH_VARARGS },
	 { (char *)"new_SizerItem", (PyCFunction) _wrap_new_SizerItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_SizerItemSpacer", (PyCFunction) _wrap_new_SizerItemSpacer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_SizerItemWindow", (PyCFunction) _wrap_new_SizerItemWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_SizerItemSizer", (PyCFunction) _wrap_new_SizerItemSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_DeleteWindows", (PyCFunction) _wrap_SizerItem_DeleteWindows, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_DetachSizer", (PyCFunction) _wrap_SizerItem_DetachSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetSize", (PyCFunction) _wrap_SizerItem_GetSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_CalcMin", (PyCFunction) _wrap_SizerItem_CalcMin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetDimension", (PyCFunction) _wrap_SizerItem_SetDimension, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetMinSize", (PyCFunction) _wrap_SizerItem_GetMinSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetInitSize", (PyCFunction) _wrap_SizerItem_SetInitSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetRatioWH", (PyCFunction) _wrap_SizerItem_SetRatioWH, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetRatioSize", (PyCFunction) _wrap_SizerItem_SetRatioSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetRatio", (PyCFunction) _wrap_SizerItem_SetRatio, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetRatio", (PyCFunction) _wrap_SizerItem_GetRatio, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_IsWindow", (PyCFunction) _wrap_SizerItem_IsWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_IsSizer", (PyCFunction) _wrap_SizerItem_IsSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_IsSpacer", (PyCFunction) _wrap_SizerItem_IsSpacer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetProportion", (PyCFunction) _wrap_SizerItem_SetProportion, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetProportion", (PyCFunction) _wrap_SizerItem_GetProportion, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetFlag", (PyCFunction) _wrap_SizerItem_SetFlag, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetFlag", (PyCFunction) _wrap_SizerItem_GetFlag, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetBorder", (PyCFunction) _wrap_SizerItem_SetBorder, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetBorder", (PyCFunction) _wrap_SizerItem_GetBorder, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetWindow", (PyCFunction) _wrap_SizerItem_GetWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetWindow", (PyCFunction) _wrap_SizerItem_SetWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetSizer", (PyCFunction) _wrap_SizerItem_GetSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetSizer", (PyCFunction) _wrap_SizerItem_SetSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetSpacer", (PyCFunction) _wrap_SizerItem_GetSpacer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_SetSpacer", (PyCFunction) _wrap_SizerItem_SetSpacer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_Show", (PyCFunction) _wrap_SizerItem_Show, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_IsShown", (PyCFunction) _wrap_SizerItem_IsShown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetPosition", (PyCFunction) _wrap_SizerItem_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_GetUserData", (PyCFunction) _wrap_SizerItem_GetUserData, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"SizerItem_swigregister", SizerItem_swigregister, METH_VARARGS },
	 { (char *)"Sizer__setOORInfo", (PyCFunction) _wrap_Sizer__setOORInfo, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_Add", (PyCFunction) _wrap_Sizer_Add, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_Insert", (PyCFunction) _wrap_Sizer_Insert, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_Prepend", (PyCFunction) _wrap_Sizer_Prepend, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_Remove", (PyCFunction) _wrap_Sizer_Remove, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer__SetItemMinSize", (PyCFunction) _wrap_Sizer__SetItemMinSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_AddItem", (PyCFunction) _wrap_Sizer_AddItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_InsertItem", (PyCFunction) _wrap_Sizer_InsertItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_PrependItem", (PyCFunction) _wrap_Sizer_PrependItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_SetDimension", (PyCFunction) _wrap_Sizer_SetDimension, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_SetMinSize", (PyCFunction) _wrap_Sizer_SetMinSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_GetSize", (PyCFunction) _wrap_Sizer_GetSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_GetPosition", (PyCFunction) _wrap_Sizer_GetPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_GetMinSize", (PyCFunction) _wrap_Sizer_GetMinSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_RecalcSizes", (PyCFunction) _wrap_Sizer_RecalcSizes, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_CalcMin", (PyCFunction) _wrap_Sizer_CalcMin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_Layout", (PyCFunction) _wrap_Sizer_Layout, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_Fit", (PyCFunction) _wrap_Sizer_Fit, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_FitInside", (PyCFunction) _wrap_Sizer_FitInside, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_SetSizeHints", (PyCFunction) _wrap_Sizer_SetSizeHints, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_SetVirtualSizeHints", (PyCFunction) _wrap_Sizer_SetVirtualSizeHints, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_Clear", (PyCFunction) _wrap_Sizer_Clear, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_DeleteWindows", (PyCFunction) _wrap_Sizer_DeleteWindows, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_GetChildren", (PyCFunction) _wrap_Sizer_GetChildren, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_Show", (PyCFunction) _wrap_Sizer_Show, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_Hide", (PyCFunction) _wrap_Sizer_Hide, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_IsShown", (PyCFunction) _wrap_Sizer_IsShown, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_ShowItems", (PyCFunction) _wrap_Sizer_ShowItems, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"Sizer_swigregister", Sizer_swigregister, METH_VARARGS },
	 { (char *)"new_PySizer", (PyCFunction) _wrap_new_PySizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PySizer__setCallbackInfo", (PyCFunction) _wrap_PySizer__setCallbackInfo, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"PySizer_swigregister", PySizer_swigregister, METH_VARARGS },
	 { (char *)"new_BoxSizer", (PyCFunction) _wrap_new_BoxSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"BoxSizer_GetOrientation", (PyCFunction) _wrap_BoxSizer_GetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"BoxSizer_SetOrientation", (PyCFunction) _wrap_BoxSizer_SetOrientation, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"BoxSizer_RecalcSizes", (PyCFunction) _wrap_BoxSizer_RecalcSizes, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"BoxSizer_CalcMin", (PyCFunction) _wrap_BoxSizer_CalcMin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"BoxSizer_swigregister", BoxSizer_swigregister, METH_VARARGS },
	 { (char *)"new_StaticBoxSizer", (PyCFunction) _wrap_new_StaticBoxSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"StaticBoxSizer_GetStaticBox", (PyCFunction) _wrap_StaticBoxSizer_GetStaticBox, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"StaticBoxSizer_RecalcSizes", (PyCFunction) _wrap_StaticBoxSizer_RecalcSizes, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"StaticBoxSizer_CalcMin", (PyCFunction) _wrap_StaticBoxSizer_CalcMin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"StaticBoxSizer_swigregister", StaticBoxSizer_swigregister, METH_VARARGS },
	 { (char *)"new_GridSizer", (PyCFunction) _wrap_new_GridSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_RecalcSizes", (PyCFunction) _wrap_GridSizer_RecalcSizes, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_CalcMin", (PyCFunction) _wrap_GridSizer_CalcMin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_SetCols", (PyCFunction) _wrap_GridSizer_SetCols, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_SetRows", (PyCFunction) _wrap_GridSizer_SetRows, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_SetVGap", (PyCFunction) _wrap_GridSizer_SetVGap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_SetHGap", (PyCFunction) _wrap_GridSizer_SetHGap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_GetCols", (PyCFunction) _wrap_GridSizer_GetCols, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_GetRows", (PyCFunction) _wrap_GridSizer_GetRows, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_GetVGap", (PyCFunction) _wrap_GridSizer_GetVGap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_GetHGap", (PyCFunction) _wrap_GridSizer_GetHGap, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridSizer_swigregister", GridSizer_swigregister, METH_VARARGS },
	 { (char *)"new_FlexGridSizer", (PyCFunction) _wrap_new_FlexGridSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_RecalcSizes", (PyCFunction) _wrap_FlexGridSizer_RecalcSizes, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_CalcMin", (PyCFunction) _wrap_FlexGridSizer_CalcMin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_AddGrowableRow", (PyCFunction) _wrap_FlexGridSizer_AddGrowableRow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_RemoveGrowableRow", (PyCFunction) _wrap_FlexGridSizer_RemoveGrowableRow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_AddGrowableCol", (PyCFunction) _wrap_FlexGridSizer_AddGrowableCol, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_RemoveGrowableCol", (PyCFunction) _wrap_FlexGridSizer_RemoveGrowableCol, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_SetFlexibleDirection", (PyCFunction) _wrap_FlexGridSizer_SetFlexibleDirection, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_GetFlexibleDirection", (PyCFunction) _wrap_FlexGridSizer_GetFlexibleDirection, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_SetNonFlexibleGrowMode", (PyCFunction) _wrap_FlexGridSizer_SetNonFlexibleGrowMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_GetNonFlexibleGrowMode", (PyCFunction) _wrap_FlexGridSizer_GetNonFlexibleGrowMode, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_GetRowHeights", (PyCFunction) _wrap_FlexGridSizer_GetRowHeights, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_GetColWidths", (PyCFunction) _wrap_FlexGridSizer_GetColWidths, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"FlexGridSizer_swigregister", FlexGridSizer_swigregister, METH_VARARGS },
	 { (char *)"new_GBPosition", (PyCFunction) _wrap_new_GBPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBPosition_GetRow", (PyCFunction) _wrap_GBPosition_GetRow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBPosition_GetCol", (PyCFunction) _wrap_GBPosition_GetCol, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBPosition_SetRow", (PyCFunction) _wrap_GBPosition_SetRow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBPosition_SetCol", (PyCFunction) _wrap_GBPosition_SetCol, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBPosition___eq__", (PyCFunction) _wrap_GBPosition___eq__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBPosition___ne__", (PyCFunction) _wrap_GBPosition___ne__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBPosition_Set", (PyCFunction) _wrap_GBPosition_Set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBPosition_Get", (PyCFunction) _wrap_GBPosition_Get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBPosition_swigregister", GBPosition_swigregister, METH_VARARGS },
	 { (char *)"new_GBSpan", (PyCFunction) _wrap_new_GBSpan, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSpan_GetRowspan", (PyCFunction) _wrap_GBSpan_GetRowspan, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSpan_GetColspan", (PyCFunction) _wrap_GBSpan_GetColspan, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSpan_SetRowspan", (PyCFunction) _wrap_GBSpan_SetRowspan, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSpan_SetColspan", (PyCFunction) _wrap_GBSpan_SetColspan, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSpan___eq__", (PyCFunction) _wrap_GBSpan___eq__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSpan___ne__", (PyCFunction) _wrap_GBSpan___ne__, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSpan_Set", (PyCFunction) _wrap_GBSpan_Set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSpan_Get", (PyCFunction) _wrap_GBSpan_Get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSpan_swigregister", GBSpan_swigregister, METH_VARARGS },
	 { (char *)"new_GBSizerItem", (PyCFunction) _wrap_new_GBSizerItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_GBSizerItemWindow", (PyCFunction) _wrap_new_GBSizerItemWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_GBSizerItemSizer", (PyCFunction) _wrap_new_GBSizerItemSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_GBSizerItemSpacer", (PyCFunction) _wrap_new_GBSizerItemSpacer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSizerItem_GetPos", (PyCFunction) _wrap_GBSizerItem_GetPos, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSizerItem_GetSpan", (PyCFunction) _wrap_GBSizerItem_GetSpan, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSizerItem_SetPos", (PyCFunction) _wrap_GBSizerItem_SetPos, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSizerItem_SetSpan", (PyCFunction) _wrap_GBSizerItem_SetSpan, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSizerItem_Intersects", _wrap_GBSizerItem_Intersects, METH_VARARGS },
	 { (char *)"GBSizerItem_GetEndPos", (PyCFunction) _wrap_GBSizerItem_GetEndPos, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSizerItem_GetGBSizer", (PyCFunction) _wrap_GBSizerItem_GetGBSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSizerItem_SetGBSizer", (PyCFunction) _wrap_GBSizerItem_SetGBSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GBSizerItem_swigregister", GBSizerItem_swigregister, METH_VARARGS },
	 { (char *)"new_GridBagSizer", (PyCFunction) _wrap_new_GridBagSizer, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_Add", (PyCFunction) _wrap_GridBagSizer_Add, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_AddItem", (PyCFunction) _wrap_GridBagSizer_AddItem, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_GetEmptyCellSize", (PyCFunction) _wrap_GridBagSizer_GetEmptyCellSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_SetEmptyCellSize", (PyCFunction) _wrap_GridBagSizer_SetEmptyCellSize, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_GetItemPosition", _wrap_GridBagSizer_GetItemPosition, METH_VARARGS },
	 { (char *)"GridBagSizer_SetItemPosition", _wrap_GridBagSizer_SetItemPosition, METH_VARARGS },
	 { (char *)"GridBagSizer_GetItemSpan", _wrap_GridBagSizer_GetItemSpan, METH_VARARGS },
	 { (char *)"GridBagSizer_SetItemSpan", _wrap_GridBagSizer_SetItemSpan, METH_VARARGS },
	 { (char *)"GridBagSizer_FindItem", _wrap_GridBagSizer_FindItem, METH_VARARGS },
	 { (char *)"GridBagSizer_FindItemAtPosition", (PyCFunction) _wrap_GridBagSizer_FindItemAtPosition, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_FindItemAtPoint", (PyCFunction) _wrap_GridBagSizer_FindItemAtPoint, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_FindItemWithData", (PyCFunction) _wrap_GridBagSizer_FindItemWithData, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_RecalcSizes", (PyCFunction) _wrap_GridBagSizer_RecalcSizes, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_CalcMin", (PyCFunction) _wrap_GridBagSizer_CalcMin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"GridBagSizer_CheckForIntersection", _wrap_GridBagSizer_CheckForIntersection, METH_VARARGS },
	 { (char *)"GridBagSizer_swigregister", GridBagSizer_swigregister, METH_VARARGS },
	 { (char *)"IndividualLayoutConstraint_Set", (PyCFunction) _wrap_IndividualLayoutConstraint_Set, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_LeftOf", (PyCFunction) _wrap_IndividualLayoutConstraint_LeftOf, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_RightOf", (PyCFunction) _wrap_IndividualLayoutConstraint_RightOf, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_Above", (PyCFunction) _wrap_IndividualLayoutConstraint_Above, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_Below", (PyCFunction) _wrap_IndividualLayoutConstraint_Below, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_SameAs", (PyCFunction) _wrap_IndividualLayoutConstraint_SameAs, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_PercentOf", (PyCFunction) _wrap_IndividualLayoutConstraint_PercentOf, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_Absolute", (PyCFunction) _wrap_IndividualLayoutConstraint_Absolute, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_Unconstrained", (PyCFunction) _wrap_IndividualLayoutConstraint_Unconstrained, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_AsIs", (PyCFunction) _wrap_IndividualLayoutConstraint_AsIs, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_GetOtherWindow", (PyCFunction) _wrap_IndividualLayoutConstraint_GetOtherWindow, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_GetMyEdge", (PyCFunction) _wrap_IndividualLayoutConstraint_GetMyEdge, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_SetEdge", (PyCFunction) _wrap_IndividualLayoutConstraint_SetEdge, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_SetValue", (PyCFunction) _wrap_IndividualLayoutConstraint_SetValue, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_GetMargin", (PyCFunction) _wrap_IndividualLayoutConstraint_GetMargin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_SetMargin", (PyCFunction) _wrap_IndividualLayoutConstraint_SetMargin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_GetValue", (PyCFunction) _wrap_IndividualLayoutConstraint_GetValue, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_GetPercent", (PyCFunction) _wrap_IndividualLayoutConstraint_GetPercent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_GetOtherEdge", (PyCFunction) _wrap_IndividualLayoutConstraint_GetOtherEdge, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_GetDone", (PyCFunction) _wrap_IndividualLayoutConstraint_GetDone, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_SetDone", (PyCFunction) _wrap_IndividualLayoutConstraint_SetDone, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_GetRelationship", (PyCFunction) _wrap_IndividualLayoutConstraint_GetRelationship, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_SetRelationship", (PyCFunction) _wrap_IndividualLayoutConstraint_SetRelationship, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_ResetIfWin", (PyCFunction) _wrap_IndividualLayoutConstraint_ResetIfWin, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_SatisfyConstraint", (PyCFunction) _wrap_IndividualLayoutConstraint_SatisfyConstraint, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_GetEdge", (PyCFunction) _wrap_IndividualLayoutConstraint_GetEdge, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"IndividualLayoutConstraint_swigregister", IndividualLayoutConstraint_swigregister, METH_VARARGS },
	 { (char *)"LayoutConstraints_left_get", (PyCFunction) _wrap_LayoutConstraints_left_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_top_get", (PyCFunction) _wrap_LayoutConstraints_top_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_right_get", (PyCFunction) _wrap_LayoutConstraints_right_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_bottom_get", (PyCFunction) _wrap_LayoutConstraints_bottom_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_width_get", (PyCFunction) _wrap_LayoutConstraints_width_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_height_get", (PyCFunction) _wrap_LayoutConstraints_height_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_centreX_get", (PyCFunction) _wrap_LayoutConstraints_centreX_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_centreY_get", (PyCFunction) _wrap_LayoutConstraints_centreY_get, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_LayoutConstraints", (PyCFunction) _wrap_new_LayoutConstraints, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_SatisfyConstraints", (PyCFunction) _wrap_LayoutConstraints_SatisfyConstraints, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_AreSatisfied", (PyCFunction) _wrap_LayoutConstraints_AreSatisfied, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"LayoutConstraints_swigregister", LayoutConstraints_swigregister, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_wxGBSizerItemTo_p_wxSizerItem(void *x) {
    return (void *)((wxSizerItem *)  ((wxGBSizerItem *) x));
}
static void *_p_wxBoxSizerTo_p_wxSizer(void *x) {
    return (void *)((wxSizer *)  ((wxBoxSizer *) x));
}
static void *_p_wxStaticBoxSizerTo_p_wxSizer(void *x) {
    return (void *)((wxSizer *) (wxBoxSizer *) ((wxStaticBoxSizer *) x));
}
static void *_p_wxGridBagSizerTo_p_wxSizer(void *x) {
    return (void *)((wxSizer *) (wxGridSizer *)(wxFlexGridSizer *) ((wxGridBagSizer *) x));
}
static void *_p_wxGridSizerTo_p_wxSizer(void *x) {
    return (void *)((wxSizer *)  ((wxGridSizer *) x));
}
static void *_p_wxFlexGridSizerTo_p_wxSizer(void *x) {
    return (void *)((wxSizer *) (wxGridSizer *) ((wxFlexGridSizer *) x));
}
static void *_p_wxPySizerTo_p_wxSizer(void *x) {
    return (void *)((wxSizer *)  ((wxPySizer *) x));
}
static void *_p_wxStaticBoxSizerTo_p_wxBoxSizer(void *x) {
    return (void *)((wxBoxSizer *)  ((wxStaticBoxSizer *) x));
}
static void *_p_wxContextMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMenuEvent *) x));
}
static void *_p_wxCloseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxEraseEvent *) x));
}
static void *_p_wxSetCursorEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSetCursorEvent *) x));
}
static void *_p_wxInitDialogEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxInitDialogEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxPyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPyEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIdleEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIconizeEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxActivateEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMoveEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNcPaintEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSysColourChangedEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDropFilesEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxShowEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxShowEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCommandEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxKeyEvent *) x));
}
static void *_p_wxScrollWinEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxScrollWinEvent *) x));
}
static void *_p_wxGridBagSizerTo_p_wxGridSizer(void *x) {
    return (void *)((wxGridSizer *) (wxFlexGridSizer *) ((wxGridBagSizer *) x));
}
static void *_p_wxFlexGridSizerTo_p_wxGridSizer(void *x) {
    return (void *)((wxGridSizer *)  ((wxFlexGridSizer *) x));
}
static void *_p_wxGridBagSizerTo_p_wxFlexGridSizer(void *x) {
    return (void *)((wxFlexGridSizer *)  ((wxGridBagSizer *) x));
}
static void *_p_wxControlWithItemsTo_p_wxItemContainer(void *x) {
    return (void *)((wxItemContainer *)  ((wxControlWithItems *) x));
}
static void *_p_wxControlWithItemsTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxControlWithItems *) x));
}
static void *_p_wxControlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxControl *) x));
}
static void *_p_wxWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxWindow *) x));
}
static void *_p_wxControlWithItemsTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyAppTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyApp *) x));
}
static void *_p_wxValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxValidator *) x));
}
static void *_p_wxPyValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxMenuBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxMenuTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxMenu *) x));
}
static void *_p_wxANIHandlerTo_p_wxCURHandler(void *x) {
    return (void *)((wxCURHandler *)  ((wxANIHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxICOHandler(void *x) {
    return (void *)((wxICOHandler *)  ((wxCURHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxICOHandler(void *x) {
    return (void *)((wxICOHandler *) (wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxICOHandlerTo_p_wxBMPHandler(void *x) {
    return (void *)((wxBMPHandler *)  ((wxICOHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxBMPHandler(void *x) {
    return (void *)((wxBMPHandler *) (wxICOHandler *) ((wxCURHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxBMPHandler(void *x) {
    return (void *)((wxBMPHandler *) (wxICOHandler *)(wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxBMPHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *)  ((wxBMPHandler *) x));
}
static void *_p_wxICOHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *) (wxBMPHandler *) ((wxICOHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *) (wxBMPHandler *)(wxICOHandler *) ((wxCURHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *) (wxBMPHandler *)(wxICOHandler *)(wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxPNGHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *)  ((wxPNGHandler *) x));
}
static void *_p_wxGIFHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *)  ((wxGIFHandler *) x));
}
static void *_p_wxPCXHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *)  ((wxPCXHandler *) x));
}
static void *_p_wxJPEGHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *)  ((wxJPEGHandler *) x));
}
static void *_p_wxPNMHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *)  ((wxPNMHandler *) x));
}
static void *_p_wxXPMHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *)  ((wxXPMHandler *) x));
}
static void *_p_wxTIFFHandlerTo_p_wxImageHandler(void *x) {
    return (void *)((wxImageHandler *)  ((wxTIFFHandler *) x));
}
static void *_p_wxPyFileSystemHandlerTo_p_wxFileSystemHandler(void *x) {
    return (void *)((wxFileSystemHandler *)  ((wxPyFileSystemHandler *) x));
}
static void *_p_wxInternetFSHandlerTo_p_wxFileSystemHandler(void *x) {
    return (void *)((wxFileSystemHandler *)  ((wxInternetFSHandler *) x));
}
static void *_p_wxZipFSHandlerTo_p_wxFileSystemHandler(void *x) {
    return (void *)((wxFileSystemHandler *)  ((wxZipFSHandler *) x));
}
static void *_p_wxMemoryFSHandlerTo_p_wxFileSystemHandler(void *x) {
    return (void *)((wxFileSystemHandler *)  ((wxMemoryFSHandler *) x));
}
static void *_p_wxIndividualLayoutConstraintTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxIndividualLayoutConstraint *) x));
}
static void *_p_wxMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMenuEvent *) x));
}
static void *_p_wxContextMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxEraseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseEvent *) x));
}
static void *_p_wxCloseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCloseEvent *) x));
}
static void *_p_wxValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxValidator *) x));
}
static void *_p_wxPyValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxMenuBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxSetCursorEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSetCursorEvent *) x));
}
static void *_p_wxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizer *) x));
}
static void *_p_wxBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxBoxSizer *) x));
}
static void *_p_wxStaticBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStaticBoxSizer *) x));
}
static void *_p_wxMenuTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxMenu *) x));
}
static void *_p_wxInitDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxInitDialogEvent *) x));
}
static void *_p_wxImageTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImage *) x));
}
static void *_p_wxScrollEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxPyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPyEvent *) x));
}
static void *_p_wxWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxWindow *) x));
}
static void *_p_wxControlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxControl *) x));
}
static void *_p_wxAcceleratorTableTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxAcceleratorTable *) x));
}
static void *_p_wxGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxGridSizer *) x));
}
static void *_p_wxFlexGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *) ((wxFlexGridSizer *) x));
}
static void *_p_wxPyAppTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyApp *) x));
}
static void *_p_wxEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxActivateEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMoveEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIconizeEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMaximizeEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIdleEvent *) x));
}
static void *_p_wxControlWithItemsTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxEvtHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvtHandler *) x));
}
static void *_p_wxTIFFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxTIFFHandler *) x));
}
static void *_p_wxImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImageHandler *) x));
}
static void *_p_wxBMPHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxBMPHandler *) x));
}
static void *_p_wxICOHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *) ((wxICOHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *) ((wxCURHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *)(wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxPNGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNGHandler *) x));
}
static void *_p_wxGIFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxGIFHandler *) x));
}
static void *_p_wxPCXHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPCXHandler *) x));
}
static void *_p_wxJPEGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxJPEGHandler *) x));
}
static void *_p_wxPNMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNMHandler *) x));
}
static void *_p_wxXPMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxXPMHandler *) x));
}
static void *_p_wxNcPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNcPaintEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaintEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSysColourChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDisplayChangedEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaletteChangedEvent *) x));
}
static void *_p_wxLayoutConstraintsTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutConstraints *) x));
}
static void *_p_wxFileSystemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFileSystem *) x));
}
static void *_p_wxChildFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxFocusEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDropFilesEvent *) x));
}
static void *_p_wxSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizerItem *) x));
}
static void *_p_wxGBSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizerItem *) ((wxGBSizerItem *) x));
}
static void *_p_wxShowEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxShowEvent *) x));
}
static void *_p_wxFSFileTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFSFile *) x));
}
static void *_p_wxCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCommandEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxKeyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNavigationKeyEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxGridBagSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *)(wxFlexGridSizer *) ((wxGridBagSizer *) x));
}
static void *_p_wxScrollWinEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxScrollWinEvent *) x));
}
static void *_p_wxMenuItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxMenuItem *) x));
}
static void *_p_wxPySizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxPySizer *) x));
}
static void *_p_wxControlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxControl *) x));
}
static void *_p_wxControlWithItemsTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxMenuBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMenuBar *) x));
}
static void *_p_wxChildFocusEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxChildFocusEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxScrollEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowCreateEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxUpdateUIEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowDestroyEvent *) x));
}
static void *_p_wxContextMenuEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxContextMenuEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxNotifyEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxPyCommandEvent *) x));
}
static void *_p_wxPyValidatorTo_p_wxValidator(void *x) {
    return (void *)((wxValidator *)  ((wxPyValidator *) x));
}
static swig_type_info _swigt__p_wxLayoutConstraints[] = {{"_p_wxLayoutConstraints", 0, "wxLayoutConstraints *", 0},{"_p_wxLayoutConstraints"},{0}};
static swig_type_info _swigt__p_wxRealPoint[] = {{"_p_wxRealPoint", 0, "wxRealPoint *", 0},{"_p_wxRealPoint"},{0}};
static swig_type_info _swigt__p_wxSizerItem[] = {{"_p_wxSizerItem", 0, "wxSizerItem *", 0},{"_p_wxSizerItem"},{"_p_wxGBSizerItem", _p_wxGBSizerItemTo_p_wxSizerItem},{0}};
static swig_type_info _swigt__p_wxGBSizerItem[] = {{"_p_wxGBSizerItem", 0, "wxGBSizerItem *", 0},{"_p_wxGBSizerItem"},{0}};
static swig_type_info _swigt__p_wxScrollEvent[] = {{"_p_wxScrollEvent", 0, "wxScrollEvent *", 0},{"_p_wxScrollEvent"},{0}};
static swig_type_info _swigt__p_wxIndividualLayoutConstraint[] = {{"_p_wxIndividualLayoutConstraint", 0, "wxIndividualLayoutConstraint *", 0},{"_p_wxIndividualLayoutConstraint"},{0}};
static swig_type_info _swigt__p_wxSizer[] = {{"_p_wxSizer", 0, "wxSizer *", 0},{"_p_wxSizer"},{"_p_wxBoxSizer", _p_wxBoxSizerTo_p_wxSizer},{"_p_wxStaticBoxSizer", _p_wxStaticBoxSizerTo_p_wxSizer},{"_p_wxGridBagSizer", _p_wxGridBagSizerTo_p_wxSizer},{"_p_wxGridSizer", _p_wxGridSizerTo_p_wxSizer},{"_p_wxFlexGridSizer", _p_wxFlexGridSizerTo_p_wxSizer},{"_p_wxPySizer", _p_wxPySizerTo_p_wxSizer},{0}};
static swig_type_info _swigt__p_wxBoxSizer[] = {{"_p_wxBoxSizer", 0, "wxBoxSizer *", 0},{"_p_wxBoxSizer"},{"_p_wxStaticBoxSizer", _p_wxStaticBoxSizerTo_p_wxBoxSizer},{0}};
static swig_type_info _swigt__p_wxStaticBoxSizer[] = {{"_p_wxStaticBoxSizer", 0, "wxStaticBoxSizer *", 0},{"_p_wxStaticBoxSizer"},{0}};
static swig_type_info _swigt__p_wxGridBagSizer[] = {{"_p_wxGridBagSizer", 0, "wxGridBagSizer *", 0},{"_p_wxGridBagSizer"},{0}};
static swig_type_info _swigt__p_wxAcceleratorEntry[] = {{"_p_wxAcceleratorEntry", 0, "wxAcceleratorEntry *", 0},{"_p_wxAcceleratorEntry"},{0}};
static swig_type_info _swigt__p_wxUpdateUIEvent[] = {{"_p_wxUpdateUIEvent", 0, "wxUpdateUIEvent *", 0},{"_p_wxUpdateUIEvent"},{0}};
static swig_type_info _swigt__p_wxMenu[] = {{"_p_wxMenu", 0, "wxMenu *", 0},{"_p_wxMenu"},{0}};
static swig_type_info _swigt__p_wxEvent[] = {{"_p_wxEvent", 0, "wxEvent *", 0},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxEvent},{"_p_wxMenuEvent", _p_wxMenuEventTo_p_wxEvent},{"_p_wxCloseEvent", _p_wxCloseEventTo_p_wxEvent},{"_p_wxMouseEvent", _p_wxMouseEventTo_p_wxEvent},{"_p_wxEraseEvent", _p_wxEraseEventTo_p_wxEvent},{"_p_wxSetCursorEvent", _p_wxSetCursorEventTo_p_wxEvent},{"_p_wxInitDialogEvent", _p_wxInitDialogEventTo_p_wxEvent},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxEvent},{"_p_wxPyEvent", _p_wxPyEventTo_p_wxEvent},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxEvent},{"_p_wxEvent"},{"_p_wxQueryNewPaletteEvent", _p_wxQueryNewPaletteEventTo_p_wxEvent},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxEvent},{"_p_wxIdleEvent", _p_wxIdleEventTo_p_wxEvent},{"_p_wxMaximizeEvent", _p_wxMaximizeEventTo_p_wxEvent},{"_p_wxIconizeEvent", _p_wxIconizeEventTo_p_wxEvent},{"_p_wxMoveEvent", _p_wxMoveEventTo_p_wxEvent},{"_p_wxSizeEvent", _p_wxSizeEventTo_p_wxEvent},{"_p_wxActivateEvent", _p_wxActivateEventTo_p_wxEvent},{"_p_wxPaintEvent", _p_wxPaintEventTo_p_wxEvent},{"_p_wxNcPaintEvent", _p_wxNcPaintEventTo_p_wxEvent},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxEvent},{"_p_wxPaletteChangedEvent", _p_wxPaletteChangedEventTo_p_wxEvent},{"_p_wxDisplayChangedEvent", _p_wxDisplayChangedEventTo_p_wxEvent},{"_p_wxMouseCaptureChangedEvent", _p_wxMouseCaptureChangedEventTo_p_wxEvent},{"_p_wxSysColourChangedEvent", _p_wxSysColourChangedEventTo_p_wxEvent},{"_p_wxDropFilesEvent", _p_wxDropFilesEventTo_p_wxEvent},{"_p_wxFocusEvent", _p_wxFocusEventTo_p_wxEvent},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxEvent},{"_p_wxShowEvent", _p_wxShowEventTo_p_wxEvent},{"_p_wxCommandEvent", _p_wxCommandEventTo_p_wxEvent},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxEvent},{"_p_wxNavigationKeyEvent", _p_wxNavigationKeyEventTo_p_wxEvent},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxEvent},{"_p_wxKeyEvent", _p_wxKeyEventTo_p_wxEvent},{"_p_wxScrollWinEvent", _p_wxScrollWinEventTo_p_wxEvent},{0}};
static swig_type_info _swigt__p_wxGridSizer[] = {{"_p_wxGridSizer", 0, "wxGridSizer *", 0},{"_p_wxGridBagSizer", _p_wxGridBagSizerTo_p_wxGridSizer},{"_p_wxGridSizer"},{"_p_wxFlexGridSizer", _p_wxFlexGridSizerTo_p_wxGridSizer},{0}};
static swig_type_info _swigt__p_wxFlexGridSizer[] = {{"_p_wxFlexGridSizer", 0, "wxFlexGridSizer *", 0},{"_p_wxGridBagSizer", _p_wxGridBagSizerTo_p_wxFlexGridSizer},{"_p_wxFlexGridSizer"},{0}};
static swig_type_info _swigt__p_wxInitDialogEvent[] = {{"_p_wxInitDialogEvent", 0, "wxInitDialogEvent *", 0},{"_p_wxInitDialogEvent"},{0}};
static swig_type_info _swigt__p_wxItemContainer[] = {{"_p_wxItemContainer", 0, "wxItemContainer *", 0},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxItemContainer},{"_p_wxItemContainer"},{0}};
static swig_type_info _swigt__p_wxNcPaintEvent[] = {{"_p_wxNcPaintEvent", 0, "wxNcPaintEvent *", 0},{"_p_wxNcPaintEvent"},{0}};
static swig_type_info _swigt__p_wxPaintEvent[] = {{"_p_wxPaintEvent", 0, "wxPaintEvent *", 0},{"_p_wxPaintEvent"},{0}};
static swig_type_info _swigt__p_wxSysColourChangedEvent[] = {{"_p_wxSysColourChangedEvent", 0, "wxSysColourChangedEvent *", 0},{"_p_wxSysColourChangedEvent"},{0}};
static swig_type_info _swigt__p_wxMouseCaptureChangedEvent[] = {{"_p_wxMouseCaptureChangedEvent", 0, "wxMouseCaptureChangedEvent *", 0},{"_p_wxMouseCaptureChangedEvent"},{0}};
static swig_type_info _swigt__p_wxDisplayChangedEvent[] = {{"_p_wxDisplayChangedEvent", 0, "wxDisplayChangedEvent *", 0},{"_p_wxDisplayChangedEvent"},{0}};
static swig_type_info _swigt__p_wxPaletteChangedEvent[] = {{"_p_wxPaletteChangedEvent", 0, "wxPaletteChangedEvent *", 0},{"_p_wxPaletteChangedEvent"},{0}};
static swig_type_info _swigt__p_wxControl[] = {{"_p_wxControl", 0, "wxControl *", 0},{"_p_wxControl"},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxControl},{0}};
static swig_type_info _swigt__p_wxFont[] = {{"_p_wxFont", 0, "wxFont *", 0},{"_p_wxFont"},{0}};
static swig_type_info _swigt__p_wxMenuBarBase[] = {{"_p_wxMenuBarBase", 0, "wxMenuBarBase *", 0},{"_p_wxMenuBarBase"},{0}};
static swig_type_info _swigt__p_wxSetCursorEvent[] = {{"_p_wxSetCursorEvent", 0, "wxSetCursorEvent *", 0},{"_p_wxSetCursorEvent"},{0}};
static swig_type_info _swigt__p_wxFSFile[] = {{"_p_wxFSFile", 0, "wxFSFile *", 0},{"_p_wxFSFile"},{0}};
static swig_type_info _swigt__p_wxCaret[] = {{"_p_wxCaret", 0, "wxCaret *", 0},{"_p_wxCaret"},{0}};
static swig_type_info _swigt__p_wxRegion[] = {{"_p_wxRegion", 0, "wxRegion *", 0},{"_p_wxRegion"},{0}};
static swig_type_info _swigt__p_wxPoint2D[] = {{"_p_wxPoint2D", 0, "wxPoint2D *", 0},{"_p_wxPoint2D"},{0}};
static swig_type_info _swigt__p_int[] = {{"_p_int", 0, "int *", 0},{"_p_int"},{0}};
static swig_type_info _swigt__p_wxSize[] = {{"_p_wxSize", 0, "wxSize *", 0},{"_p_wxSize"},{0}};
static swig_type_info _swigt__p_wxDC[] = {{"_p_wxDC", 0, "wxDC *", 0},{"_p_wxDC"},{0}};
static swig_type_info _swigt__p_wxPySizer[] = {{"_p_wxPySizer", 0, "wxPySizer *", 0},{"_p_wxPySizer"},{0}};
static swig_type_info _swigt__p_wxNotifyEvent[] = {{"_p_wxNotifyEvent", 0, "wxNotifyEvent *", 0},{"_p_wxNotifyEvent"},{0}};
static swig_type_info _swigt__p_wxPyEvent[] = {{"_p_wxPyEvent", 0, "wxPyEvent *", 0},{"_p_wxPyEvent"},{0}};
static swig_type_info _swigt__p_wxPropagationDisabler[] = {{"_p_wxPropagationDisabler", 0, "wxPropagationDisabler *", 0},{"_p_wxPropagationDisabler"},{0}};
static swig_type_info _swigt__p_wxAppTraits[] = {{"_p_wxAppTraits", 0, "wxAppTraits *", 0},{"_p_wxAppTraits"},{0}};
static swig_type_info _swigt__p_wxArrayString[] = {{"_p_wxArrayString", 0, "wxArrayString *", 0},{"_p_wxArrayString"},{0}};
static swig_type_info _swigt__p_wxShowEvent[] = {{"_p_wxShowEvent", 0, "wxShowEvent *", 0},{"_p_wxShowEvent"},{0}};
static swig_type_info _swigt__p_wxToolTip[] = {{"_p_wxToolTip", 0, "wxToolTip *", 0},{"_p_wxToolTip"},{0}};
static swig_type_info _swigt__p_wxMaximizeEvent[] = {{"_p_wxMaximizeEvent", 0, "wxMaximizeEvent *", 0},{"_p_wxMaximizeEvent"},{0}};
static swig_type_info _swigt__p_wxIconizeEvent[] = {{"_p_wxIconizeEvent", 0, "wxIconizeEvent *", 0},{"_p_wxIconizeEvent"},{0}};
static swig_type_info _swigt__p_wxActivateEvent[] = {{"_p_wxActivateEvent", 0, "wxActivateEvent *", 0},{"_p_wxActivateEvent"},{0}};
static swig_type_info _swigt__p_wxMoveEvent[] = {{"_p_wxMoveEvent", 0, "wxMoveEvent *", 0},{"_p_wxMoveEvent"},{0}};
static swig_type_info _swigt__p_wxSizeEvent[] = {{"_p_wxSizeEvent", 0, "wxSizeEvent *", 0},{"_p_wxSizeEvent"},{0}};
static swig_type_info _swigt__p_wxQueryNewPaletteEvent[] = {{"_p_wxQueryNewPaletteEvent", 0, "wxQueryNewPaletteEvent *", 0},{"_p_wxQueryNewPaletteEvent"},{0}};
static swig_type_info _swigt__p_wxWindowCreateEvent[] = {{"_p_wxWindowCreateEvent", 0, "wxWindowCreateEvent *", 0},{"_p_wxWindowCreateEvent"},{0}};
static swig_type_info _swigt__p_wxIdleEvent[] = {{"_p_wxIdleEvent", 0, "wxIdleEvent *", 0},{"_p_wxIdleEvent"},{0}};
static swig_type_info _swigt__p_wxMenuItem[] = {{"_p_wxMenuItem", 0, "wxMenuItem *", 0},{"_p_wxMenuItem"},{0}};
static swig_type_info _swigt__p_wxStaticBox[] = {{"_p_wxStaticBox", 0, "wxStaticBox *", 0},{"_p_wxStaticBox"},{0}};
static swig_type_info _swigt__p_long[] = {{"_p_long", 0, "long *", 0},{"_p_long"},{0}};
static swig_type_info _swigt__p_wxTIFFHandler[] = {{"_p_wxTIFFHandler", 0, "wxTIFFHandler *", 0},{"_p_wxTIFFHandler"},{0}};
static swig_type_info _swigt__p_wxXPMHandler[] = {{"_p_wxXPMHandler", 0, "wxXPMHandler *", 0},{"_p_wxXPMHandler"},{0}};
static swig_type_info _swigt__p_wxPNMHandler[] = {{"_p_wxPNMHandler", 0, "wxPNMHandler *", 0},{"_p_wxPNMHandler"},{0}};
static swig_type_info _swigt__p_wxJPEGHandler[] = {{"_p_wxJPEGHandler", 0, "wxJPEGHandler *", 0},{"_p_wxJPEGHandler"},{0}};
static swig_type_info _swigt__p_wxPCXHandler[] = {{"_p_wxPCXHandler", 0, "wxPCXHandler *", 0},{"_p_wxPCXHandler"},{0}};
static swig_type_info _swigt__p_wxGIFHandler[] = {{"_p_wxGIFHandler", 0, "wxGIFHandler *", 0},{"_p_wxGIFHandler"},{0}};
static swig_type_info _swigt__p_wxPNGHandler[] = {{"_p_wxPNGHandler", 0, "wxPNGHandler *", 0},{"_p_wxPNGHandler"},{0}};
static swig_type_info _swigt__p_wxANIHandler[] = {{"_p_wxANIHandler", 0, "wxANIHandler *", 0},{"_p_wxANIHandler"},{0}};
static swig_type_info _swigt__p_wxMemoryFSHandler[] = {{"_p_wxMemoryFSHandler", 0, "wxMemoryFSHandler *", 0},{"_p_wxMemoryFSHandler"},{0}};
static swig_type_info _swigt__p_wxEvtHandler[] = {{"_p_wxEvtHandler", 0, "wxEvtHandler *", 0},{"_p_wxControl", _p_wxControlTo_p_wxEvtHandler},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxEvtHandler},{"_p_wxWindow", _p_wxWindowTo_p_wxEvtHandler},{"_p_wxEvtHandler"},{"_p_wxPyApp", _p_wxPyAppTo_p_wxEvtHandler},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxEvtHandler},{"_p_wxValidator", _p_wxValidatorTo_p_wxEvtHandler},{"_p_wxPyValidator", _p_wxPyValidatorTo_p_wxEvtHandler},{"_p_wxMenu", _p_wxMenuTo_p_wxEvtHandler},{0}};
static swig_type_info _swigt__p_wxCURHandler[] = {{"_p_wxCURHandler", 0, "wxCURHandler *", 0},{"_p_wxCURHandler"},{"_p_wxANIHandler", _p_wxANIHandlerTo_p_wxCURHandler},{0}};
static swig_type_info _swigt__p_wxICOHandler[] = {{"_p_wxICOHandler", 0, "wxICOHandler *", 0},{"_p_wxICOHandler"},{"_p_wxCURHandler", _p_wxCURHandlerTo_p_wxICOHandler},{"_p_wxANIHandler", _p_wxANIHandlerTo_p_wxICOHandler},{0}};
static swig_type_info _swigt__p_wxBMPHandler[] = {{"_p_wxBMPHandler", 0, "wxBMPHandler *", 0},{"_p_wxBMPHandler"},{"_p_wxICOHandler", _p_wxICOHandlerTo_p_wxBMPHandler},{"_p_wxCURHandler", _p_wxCURHandlerTo_p_wxBMPHandler},{"_p_wxANIHandler", _p_wxANIHandlerTo_p_wxBMPHandler},{0}};
static swig_type_info _swigt__p_wxImageHandler[] = {{"_p_wxImageHandler", 0, "wxImageHandler *", 0},{"_p_wxImageHandler"},{"_p_wxBMPHandler", _p_wxBMPHandlerTo_p_wxImageHandler},{"_p_wxICOHandler", _p_wxICOHandlerTo_p_wxImageHandler},{"_p_wxCURHandler", _p_wxCURHandlerTo_p_wxImageHandler},{"_p_wxANIHandler", _p_wxANIHandlerTo_p_wxImageHandler},{"_p_wxPNGHandler", _p_wxPNGHandlerTo_p_wxImageHandler},{"_p_wxGIFHandler", _p_wxGIFHandlerTo_p_wxImageHandler},{"_p_wxPCXHandler", _p_wxPCXHandlerTo_p_wxImageHandler},{"_p_wxJPEGHandler", _p_wxJPEGHandlerTo_p_wxImageHandler},{"_p_wxPNMHandler", _p_wxPNMHandlerTo_p_wxImageHandler},{"_p_wxXPMHandler", _p_wxXPMHandlerTo_p_wxImageHandler},{"_p_wxTIFFHandler", _p_wxTIFFHandlerTo_p_wxImageHandler},{0}};
static swig_type_info _swigt__p_wxFileSystemHandler[] = {{"_p_wxFileSystemHandler", 0, "wxFileSystemHandler *", 0},{"_p_wxFileSystemHandler"},{"_p_wxPyFileSystemHandler", _p_wxPyFileSystemHandlerTo_p_wxFileSystemHandler},{"_p_wxInternetFSHandler", _p_wxInternetFSHandlerTo_p_wxFileSystemHandler},{"_p_wxZipFSHandler", _p_wxZipFSHandlerTo_p_wxFileSystemHandler},{"_p_wxMemoryFSHandler", _p_wxMemoryFSHandlerTo_p_wxFileSystemHandler},{0}};
static swig_type_info _swigt__p_wxPyFileSystemHandler[] = {{"_p_wxPyFileSystemHandler", 0, "wxPyFileSystemHandler *", 0},{"_p_wxPyFileSystemHandler"},{0}};
static swig_type_info _swigt__p_wxInternetFSHandler[] = {{"_p_wxInternetFSHandler", 0, "wxInternetFSHandler *", 0},{"_p_wxInternetFSHandler"},{0}};
static swig_type_info _swigt__p_wxZipFSHandler[] = {{"_p_wxZipFSHandler", 0, "wxZipFSHandler *", 0},{"_p_wxZipFSHandler"},{0}};
static swig_type_info _swigt__p_wxRect[] = {{"_p_wxRect", 0, "wxRect *", 0},{"_p_wxRect"},{0}};
static swig_type_info _swigt__p_wxGBSpan[] = {{"_p_wxGBSpan", 0, "wxGBSpan *", 0},{"_p_wxGBSpan"},{0}};
static swig_type_info _swigt__p_wxPropagateOnce[] = {{"_p_wxPropagateOnce", 0, "wxPropagateOnce *", 0},{"_p_wxPropagateOnce"},{0}};
static swig_type_info _swigt__p_wxAcceleratorTable[] = {{"_p_wxAcceleratorTable", 0, "wxAcceleratorTable *", 0},{"_p_wxAcceleratorTable"},{0}};
static swig_type_info _swigt__p_char[] = {{"_p_char", 0, "char *", 0},{"_p_char"},{0}};
static swig_type_info _swigt__p_wxGBPosition[] = {{"_p_wxGBPosition", 0, "wxGBPosition *", 0},{"_p_wxGBPosition"},{0}};
static swig_type_info _swigt__p_wxImage[] = {{"_p_wxImage", 0, "wxImage *", 0},{"_p_wxImage"},{0}};
static swig_type_info _swigt__p_wxFrame[] = {{"_p_wxFrame", 0, "wxFrame *", 0},{"_p_wxFrame"},{0}};
static swig_type_info _swigt__p_wxScrollWinEvent[] = {{"_p_wxScrollWinEvent", 0, "wxScrollWinEvent *", 0},{"_p_wxScrollWinEvent"},{0}};
static swig_type_info _swigt__p_wxImageHistogram[] = {{"_p_wxImageHistogram", 0, "wxImageHistogram *", 0},{"_p_wxImageHistogram"},{0}};
static swig_type_info _swigt__p_byte[] = {{"_p_byte", 0, "byte *", 0},{"_p_unsigned_char"},{"_p_byte"},{0}};
static swig_type_info _swigt__p_wxPoint[] = {{"_p_wxPoint", 0, "wxPoint *", 0},{"_p_wxPoint"},{0}};
static swig_type_info _swigt__p_wxCursor[] = {{"_p_wxCursor", 0, "wxCursor *", 0},{"_p_wxCursor"},{0}};
static swig_type_info _swigt__p_wxObject[] = {{"_p_wxObject", 0, "wxObject *", 0},{"_p_wxLayoutConstraints", _p_wxLayoutConstraintsTo_p_wxObject},{"_p_wxSizerItem", _p_wxSizerItemTo_p_wxObject},{"_p_wxGBSizerItem", _p_wxGBSizerItemTo_p_wxObject},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxObject},{"_p_wxIndividualLayoutConstraint", _p_wxIndividualLayoutConstraintTo_p_wxObject},{"_p_wxSizer", _p_wxSizerTo_p_wxObject},{"_p_wxBoxSizer", _p_wxBoxSizerTo_p_wxObject},{"_p_wxStaticBoxSizer", _p_wxStaticBoxSizerTo_p_wxObject},{"_p_wxGridBagSizer", _p_wxGridBagSizerTo_p_wxObject},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxObject},{"_p_wxMenu", _p_wxMenuTo_p_wxObject},{"_p_wxEvent", _p_wxEventTo_p_wxObject},{"_p_wxFlexGridSizer", _p_wxFlexGridSizerTo_p_wxObject},{"_p_wxGridSizer", _p_wxGridSizerTo_p_wxObject},{"_p_wxInitDialogEvent", _p_wxInitDialogEventTo_p_wxObject},{"_p_wxPaintEvent", _p_wxPaintEventTo_p_wxObject},{"_p_wxNcPaintEvent", _p_wxNcPaintEventTo_p_wxObject},{"_p_wxPaletteChangedEvent", _p_wxPaletteChangedEventTo_p_wxObject},{"_p_wxDisplayChangedEvent", _p_wxDisplayChangedEventTo_p_wxObject},{"_p_wxMouseCaptureChangedEvent", _p_wxMouseCaptureChangedEventTo_p_wxObject},{"_p_wxSysColourChangedEvent", _p_wxSysColourChangedEventTo_p_wxObject},{"_p_wxControl", _p_wxControlTo_p_wxObject},{"_p_wxSetCursorEvent", _p_wxSetCursorEventTo_p_wxObject},{"_p_wxFSFile", _p_wxFSFileTo_p_wxObject},{"_p_wxPySizer", _p_wxPySizerTo_p_wxObject},{"_p_wxPyEvent", _p_wxPyEventTo_p_wxObject},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxObject},{"_p_wxShowEvent", _p_wxShowEventTo_p_wxObject},{"_p_wxMenuItem", _p_wxMenuItemTo_p_wxObject},{"_p_wxMoveEvent", _p_wxMoveEventTo_p_wxObject},{"_p_wxSizeEvent", _p_wxSizeEventTo_p_wxObject},{"_p_wxActivateEvent", _p_wxActivateEventTo_p_wxObject},{"_p_wxIconizeEvent", _p_wxIconizeEventTo_p_wxObject},{"_p_wxMaximizeEvent", _p_wxMaximizeEventTo_p_wxObject},{"_p_wxIdleEvent", _p_wxIdleEventTo_p_wxObject},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxObject},{"_p_wxQueryNewPaletteEvent", _p_wxQueryNewPaletteEventTo_p_wxObject},{"_p_wxEvtHandler", _p_wxEvtHandlerTo_p_wxObject},{"_p_wxTIFFHandler", _p_wxTIFFHandlerTo_p_wxObject},{"_p_wxImageHandler", _p_wxImageHandlerTo_p_wxObject},{"_p_wxBMPHandler", _p_wxBMPHandlerTo_p_wxObject},{"_p_wxICOHandler", _p_wxICOHandlerTo_p_wxObject},{"_p_wxCURHandler", _p_wxCURHandlerTo_p_wxObject},{"_p_wxANIHandler", _p_wxANIHandlerTo_p_wxObject},{"_p_wxPNGHandler", _p_wxPNGHandlerTo_p_wxObject},{"_p_wxGIFHandler", _p_wxGIFHandlerTo_p_wxObject},{"_p_wxPCXHandler", _p_wxPCXHandlerTo_p_wxObject},{"_p_wxJPEGHandler", _p_wxJPEGHandlerTo_p_wxObject},{"_p_wxPNMHandler", _p_wxPNMHandlerTo_p_wxObject},{"_p_wxXPMHandler", _p_wxXPMHandlerTo_p_wxObject},{"_p_wxAcceleratorTable", _p_wxAcceleratorTableTo_p_wxObject},{"_p_wxImage", _p_wxImageTo_p_wxObject},{"_p_wxScrollWinEvent", _p_wxScrollWinEventTo_p_wxObject},{"_p_wxObject"},{"_p_wxKeyEvent", _p_wxKeyEventTo_p_wxObject},{"_p_wxNavigationKeyEvent", _p_wxNavigationKeyEventTo_p_wxObject},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxObject},{"_p_wxWindow", _p_wxWindowTo_p_wxObject},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxObject},{"_p_wxFileSystem", _p_wxFileSystemTo_p_wxObject},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxObject},{"_p_wxMenuEvent", _p_wxMenuEventTo_p_wxObject},{"_p_wxPyApp", _p_wxPyAppTo_p_wxObject},{"_p_wxCloseEvent", _p_wxCloseEventTo_p_wxObject},{"_p_wxMouseEvent", _p_wxMouseEventTo_p_wxObject},{"_p_wxEraseEvent", _p_wxEraseEventTo_p_wxObject},{"_p_wxCommandEvent", _p_wxCommandEventTo_p_wxObject},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxObject},{"_p_wxDropFilesEvent", _p_wxDropFilesEventTo_p_wxObject},{"_p_wxFocusEvent", _p_wxFocusEventTo_p_wxObject},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxObject},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxObject},{"_p_wxPyValidator", _p_wxPyValidatorTo_p_wxObject},{"_p_wxValidator", _p_wxValidatorTo_p_wxObject},{0}};
static swig_type_info _swigt__p_wxPyInputStream[] = {{"_p_wxPyInputStream", 0, "wxPyInputStream *", 0},{"_p_wxPyInputStream"},{0}};
static swig_type_info _swigt__p_wxOutputStream[] = {{"_p_wxOutputStream", 0, "wxOutputStream *", 0},{"_p_wxOutputStream"},{0}};
static swig_type_info _swigt__p_wxInputStream[] = {{"_p_wxInputStream", 0, "wxInputStream *", 0},{"_p_wxInputStream"},{0}};
static swig_type_info _swigt__p_wxDateTime[] = {{"_p_wxDateTime", 0, "wxDateTime *", 0},{"_p_wxDateTime"},{0}};
static swig_type_info _swigt__p_wxKeyEvent[] = {{"_p_wxKeyEvent", 0, "wxKeyEvent *", 0},{"_p_wxKeyEvent"},{0}};
static swig_type_info _swigt__p_wxNavigationKeyEvent[] = {{"_p_wxNavigationKeyEvent", 0, "wxNavigationKeyEvent *", 0},{"_p_wxNavigationKeyEvent"},{0}};
static swig_type_info _swigt__p_wxWindowDestroyEvent[] = {{"_p_wxWindowDestroyEvent", 0, "wxWindowDestroyEvent *", 0},{"_p_wxWindowDestroyEvent"},{0}};
static swig_type_info _swigt__p_wxWindow[] = {{"_p_wxWindow", 0, "wxWindow *", 0},{"_p_wxControl", _p_wxControlTo_p_wxWindow},{"_p_wxWindow"},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxWindow},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxWindow},{0}};
static swig_type_info _swigt__p_wxMenuBar[] = {{"_p_wxMenuBar", 0, "wxMenuBar *", 0},{"_p_wxMenuBar"},{0}};
static swig_type_info _swigt__p_wxFileSystem[] = {{"_p_wxFileSystem", 0, "wxFileSystem *", 0},{"_p_wxFileSystem"},{0}};
static swig_type_info _swigt__p_wxBitmap[] = {{"_p_wxBitmap", 0, "wxBitmap *", 0},{"_p_wxBitmap"},{0}};
static swig_type_info _swigt__p_wxMenuEvent[] = {{"_p_wxMenuEvent", 0, "wxMenuEvent *", 0},{"_p_wxMenuEvent"},{0}};
static swig_type_info _swigt__p_wxContextMenuEvent[] = {{"_p_wxContextMenuEvent", 0, "wxContextMenuEvent *", 0},{"_p_wxContextMenuEvent"},{0}};
static swig_type_info _swigt__p_unsigned_char[] = {{"_p_unsigned_char", 0, "unsigned char *", 0},{"_p_unsigned_char"},{"_p_byte"},{0}};
static swig_type_info _swigt__p_wxCloseEvent[] = {{"_p_wxCloseEvent", 0, "wxCloseEvent *", 0},{"_p_wxCloseEvent"},{0}};
static swig_type_info _swigt__p_wxEraseEvent[] = {{"_p_wxEraseEvent", 0, "wxEraseEvent *", 0},{"_p_wxEraseEvent"},{0}};
static swig_type_info _swigt__p_wxMouseEvent[] = {{"_p_wxMouseEvent", 0, "wxMouseEvent *", 0},{"_p_wxMouseEvent"},{0}};
static swig_type_info _swigt__p_wxPyApp[] = {{"_p_wxPyApp", 0, "wxPyApp *", 0},{"_p_wxPyApp"},{0}};
static swig_type_info _swigt__p_wxCommandEvent[] = {{"_p_wxCommandEvent", 0, "wxCommandEvent *", 0},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxCommandEvent},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxCommandEvent},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxCommandEvent},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxCommandEvent},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxCommandEvent},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxCommandEvent},{"_p_wxCommandEvent"},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxCommandEvent},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxCommandEvent},{0}};
static swig_type_info _swigt__p_wxPyCommandEvent[] = {{"_p_wxPyCommandEvent", 0, "wxPyCommandEvent *", 0},{"_p_wxPyCommandEvent"},{0}};
static swig_type_info _swigt__p_wxPyDropTarget[] = {{"_p_wxPyDropTarget", 0, "wxPyDropTarget *", 0},{"_p_wxPyDropTarget"},{0}};
static swig_type_info _swigt__p_wxChildFocusEvent[] = {{"_p_wxChildFocusEvent", 0, "wxChildFocusEvent *", 0},{"_p_wxChildFocusEvent"},{0}};
static swig_type_info _swigt__p_wxFocusEvent[] = {{"_p_wxFocusEvent", 0, "wxFocusEvent *", 0},{"_p_wxFocusEvent"},{0}};
static swig_type_info _swigt__p_wxDropFilesEvent[] = {{"_p_wxDropFilesEvent", 0, "wxDropFilesEvent *", 0},{"_p_wxDropFilesEvent"},{0}};
static swig_type_info _swigt__p_wxControlWithItems[] = {{"_p_wxControlWithItems", 0, "wxControlWithItems *", 0},{"_p_wxControlWithItems"},{0}};
static swig_type_info _swigt__p_wxColour[] = {{"_p_wxColour", 0, "wxColour *", 0},{"_p_wxColour"},{0}};
static swig_type_info _swigt__p_wxValidator[] = {{"_p_wxValidator", 0, "wxValidator *", 0},{"_p_wxValidator"},{"_p_wxPyValidator", _p_wxPyValidatorTo_p_wxValidator},{0}};
static swig_type_info _swigt__p_wxPyValidator[] = {{"_p_wxPyValidator", 0, "wxPyValidator *", 0},{"_p_wxPyValidator"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_wxLayoutConstraints, 
_swigt__p_wxRealPoint, 
_swigt__p_wxSizerItem, 
_swigt__p_wxGBSizerItem, 
_swigt__p_wxScrollEvent, 
_swigt__p_wxIndividualLayoutConstraint, 
_swigt__p_wxSizer, 
_swigt__p_wxBoxSizer, 
_swigt__p_wxStaticBoxSizer, 
_swigt__p_wxGridBagSizer, 
_swigt__p_wxAcceleratorEntry, 
_swigt__p_wxUpdateUIEvent, 
_swigt__p_wxMenu, 
_swigt__p_wxEvent, 
_swigt__p_wxGridSizer, 
_swigt__p_wxFlexGridSizer, 
_swigt__p_wxInitDialogEvent, 
_swigt__p_wxItemContainer, 
_swigt__p_wxNcPaintEvent, 
_swigt__p_wxPaintEvent, 
_swigt__p_wxSysColourChangedEvent, 
_swigt__p_wxMouseCaptureChangedEvent, 
_swigt__p_wxDisplayChangedEvent, 
_swigt__p_wxPaletteChangedEvent, 
_swigt__p_wxControl, 
_swigt__p_wxFont, 
_swigt__p_wxMenuBarBase, 
_swigt__p_wxSetCursorEvent, 
_swigt__p_wxFSFile, 
_swigt__p_wxCaret, 
_swigt__p_wxRegion, 
_swigt__p_wxPoint2D, 
_swigt__p_int, 
_swigt__p_wxSize, 
_swigt__p_wxDC, 
_swigt__p_wxPySizer, 
_swigt__p_wxNotifyEvent, 
_swigt__p_wxPyEvent, 
_swigt__p_wxPropagationDisabler, 
_swigt__p_wxAppTraits, 
_swigt__p_wxArrayString, 
_swigt__p_wxShowEvent, 
_swigt__p_wxToolTip, 
_swigt__p_wxMaximizeEvent, 
_swigt__p_wxIconizeEvent, 
_swigt__p_wxActivateEvent, 
_swigt__p_wxMoveEvent, 
_swigt__p_wxSizeEvent, 
_swigt__p_wxQueryNewPaletteEvent, 
_swigt__p_wxWindowCreateEvent, 
_swigt__p_wxIdleEvent, 
_swigt__p_wxMenuItem, 
_swigt__p_wxStaticBox, 
_swigt__p_long, 
_swigt__p_wxTIFFHandler, 
_swigt__p_wxXPMHandler, 
_swigt__p_wxPNMHandler, 
_swigt__p_wxJPEGHandler, 
_swigt__p_wxPCXHandler, 
_swigt__p_wxGIFHandler, 
_swigt__p_wxPNGHandler, 
_swigt__p_wxANIHandler, 
_swigt__p_wxMemoryFSHandler, 
_swigt__p_wxEvtHandler, 
_swigt__p_wxCURHandler, 
_swigt__p_wxICOHandler, 
_swigt__p_wxBMPHandler, 
_swigt__p_wxImageHandler, 
_swigt__p_wxFileSystemHandler, 
_swigt__p_wxPyFileSystemHandler, 
_swigt__p_wxInternetFSHandler, 
_swigt__p_wxZipFSHandler, 
_swigt__p_wxRect, 
_swigt__p_wxGBSpan, 
_swigt__p_wxPropagateOnce, 
_swigt__p_wxAcceleratorTable, 
_swigt__p_char, 
_swigt__p_wxGBPosition, 
_swigt__p_wxImage, 
_swigt__p_wxFrame, 
_swigt__p_wxScrollWinEvent, 
_swigt__p_wxImageHistogram, 
_swigt__p_byte, 
_swigt__p_wxPoint, 
_swigt__p_wxCursor, 
_swigt__p_wxObject, 
_swigt__p_wxPyInputStream, 
_swigt__p_wxOutputStream, 
_swigt__p_wxInputStream, 
_swigt__p_wxDateTime, 
_swigt__p_wxKeyEvent, 
_swigt__p_wxNavigationKeyEvent, 
_swigt__p_wxWindowDestroyEvent, 
_swigt__p_wxWindow, 
_swigt__p_wxMenuBar, 
_swigt__p_wxFileSystem, 
_swigt__p_wxBitmap, 
_swigt__p_wxMenuEvent, 
_swigt__p_wxContextMenuEvent, 
_swigt__p_unsigned_char, 
_swigt__p_wxCloseEvent, 
_swigt__p_wxEraseEvent, 
_swigt__p_wxMouseEvent, 
_swigt__p_wxPyApp, 
_swigt__p_wxCommandEvent, 
_swigt__p_wxPyCommandEvent, 
_swigt__p_wxPyDropTarget, 
_swigt__p_wxChildFocusEvent, 
_swigt__p_wxFocusEvent, 
_swigt__p_wxDropFilesEvent, 
_swigt__p_wxControlWithItems, 
_swigt__p_wxColour, 
_swigt__p_wxValidator, 
_swigt__p_wxPyValidator, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
    
#ifndef wxPyUSE_EXPORT
    // Make our API structure a CObject so other modules can import it
    // from this module.
    PyObject* cobj = PyCObject_FromVoidPtr(&API, NULL);
    PyDict_SetItemString(d,"_wxPyCoreAPI", cobj);
    Py_XDECREF(cobj);
#endif
    
    PyDict_SetItemString(d,"NOT_FOUND", SWIG_PyObj_FromInt((int)wxNOT_FOUND));
    PyDict_SetItemString(d,"VSCROLL", SWIG_PyObj_FromInt((int)wxVSCROLL));
    PyDict_SetItemString(d,"HSCROLL", SWIG_PyObj_FromInt((int)wxHSCROLL));
    PyDict_SetItemString(d,"CAPTION", SWIG_PyObj_FromInt((int)wxCAPTION));
    PyDict_SetItemString(d,"DOUBLE_BORDER", SWIG_PyObj_FromInt((int)wxDOUBLE_BORDER));
    PyDict_SetItemString(d,"SUNKEN_BORDER", SWIG_PyObj_FromInt((int)wxSUNKEN_BORDER));
    PyDict_SetItemString(d,"RAISED_BORDER", SWIG_PyObj_FromInt((int)wxRAISED_BORDER));
    PyDict_SetItemString(d,"BORDER", SWIG_PyObj_FromInt((int)wxBORDER));
    PyDict_SetItemString(d,"SIMPLE_BORDER", SWIG_PyObj_FromInt((int)wxSIMPLE_BORDER));
    PyDict_SetItemString(d,"STATIC_BORDER", SWIG_PyObj_FromInt((int)wxSTATIC_BORDER));
    PyDict_SetItemString(d,"TRANSPARENT_WINDOW", SWIG_PyObj_FromInt((int)wxTRANSPARENT_WINDOW));
    PyDict_SetItemString(d,"NO_BORDER", SWIG_PyObj_FromInt((int)wxNO_BORDER));
    PyDict_SetItemString(d,"USER_COLOURS", SWIG_PyObj_FromInt((int)wxUSER_COLOURS));
    PyDict_SetItemString(d,"NO_3D", SWIG_PyObj_FromInt((int)wxNO_3D));
    PyDict_SetItemString(d,"TAB_TRAVERSAL", SWIG_PyObj_FromInt((int)wxTAB_TRAVERSAL));
    PyDict_SetItemString(d,"WANTS_CHARS", SWIG_PyObj_FromInt((int)wxWANTS_CHARS));
    PyDict_SetItemString(d,"POPUP_WINDOW", SWIG_PyObj_FromInt((int)wxPOPUP_WINDOW));
    PyDict_SetItemString(d,"CENTER_FRAME", SWIG_PyObj_FromInt((int)wxCENTER_FRAME));
    PyDict_SetItemString(d,"CENTRE_ON_SCREEN", SWIG_PyObj_FromInt((int)wxCENTRE_ON_SCREEN));
    PyDict_SetItemString(d,"CENTER_ON_SCREEN", SWIG_PyObj_FromInt((int)wxCENTER_ON_SCREEN));
    PyDict_SetItemString(d,"STAY_ON_TOP", SWIG_PyObj_FromInt((int)wxSTAY_ON_TOP));
    PyDict_SetItemString(d,"ICONIZE", SWIG_PyObj_FromInt((int)wxICONIZE));
    PyDict_SetItemString(d,"MINIMIZE", SWIG_PyObj_FromInt((int)wxMINIMIZE));
    PyDict_SetItemString(d,"MAXIMIZE", SWIG_PyObj_FromInt((int)wxMAXIMIZE));
    PyDict_SetItemString(d,"CLOSE_BOX", SWIG_PyObj_FromInt((int)wxCLOSE_BOX));
    PyDict_SetItemString(d,"THICK_FRAME", SWIG_PyObj_FromInt((int)wxTHICK_FRAME));
    PyDict_SetItemString(d,"SYSTEM_MENU", SWIG_PyObj_FromInt((int)wxSYSTEM_MENU));
    PyDict_SetItemString(d,"MINIMIZE_BOX", SWIG_PyObj_FromInt((int)wxMINIMIZE_BOX));
    PyDict_SetItemString(d,"MAXIMIZE_BOX", SWIG_PyObj_FromInt((int)wxMAXIMIZE_BOX));
    PyDict_SetItemString(d,"TINY_CAPTION_HORIZ", SWIG_PyObj_FromInt((int)wxTINY_CAPTION_HORIZ));
    PyDict_SetItemString(d,"TINY_CAPTION_VERT", SWIG_PyObj_FromInt((int)wxTINY_CAPTION_VERT));
    PyDict_SetItemString(d,"RESIZE_BOX", SWIG_PyObj_FromInt((int)wxRESIZE_BOX));
    PyDict_SetItemString(d,"RESIZE_BORDER", SWIG_PyObj_FromInt((int)wxRESIZE_BORDER));
    PyDict_SetItemString(d,"DIALOG_MODAL", SWIG_PyObj_FromInt((int)wxDIALOG_MODAL));
    PyDict_SetItemString(d,"DIALOG_MODELESS", SWIG_PyObj_FromInt((int)wxDIALOG_MODELESS));
    PyDict_SetItemString(d,"DIALOG_NO_PARENT", SWIG_PyObj_FromInt((int)wxDIALOG_NO_PARENT));
    PyDict_SetItemString(d,"DEFAULT_FRAME_STYLE", SWIG_PyObj_FromInt((int)wxDEFAULT_FRAME_STYLE));
    PyDict_SetItemString(d,"DEFAULT_DIALOG_STYLE", SWIG_PyObj_FromInt((int)wxDEFAULT_DIALOG_STYLE));
    PyDict_SetItemString(d,"FRAME_TOOL_WINDOW", SWIG_PyObj_FromInt((int)wxFRAME_TOOL_WINDOW));
    PyDict_SetItemString(d,"FRAME_FLOAT_ON_PARENT", SWIG_PyObj_FromInt((int)wxFRAME_FLOAT_ON_PARENT));
    PyDict_SetItemString(d,"FRAME_NO_WINDOW_MENU", SWIG_PyObj_FromInt((int)wxFRAME_NO_WINDOW_MENU));
    PyDict_SetItemString(d,"FRAME_NO_TASKBAR", SWIG_PyObj_FromInt((int)wxFRAME_NO_TASKBAR));
    PyDict_SetItemString(d,"FRAME_SHAPED", SWIG_PyObj_FromInt((int)wxFRAME_SHAPED));
    PyDict_SetItemString(d,"ED_CLIENT_MARGIN", SWIG_PyObj_FromInt((int)wxED_CLIENT_MARGIN));
    PyDict_SetItemString(d,"ED_BUTTONS_BOTTOM", SWIG_PyObj_FromInt((int)wxED_BUTTONS_BOTTOM));
    PyDict_SetItemString(d,"ED_BUTTONS_RIGHT", SWIG_PyObj_FromInt((int)wxED_BUTTONS_RIGHT));
    PyDict_SetItemString(d,"ED_STATIC_LINE", SWIG_PyObj_FromInt((int)wxED_STATIC_LINE));
    PyDict_SetItemString(d,"EXT_DIALOG_STYLE", SWIG_PyObj_FromInt((int)wxEXT_DIALOG_STYLE));
    PyDict_SetItemString(d,"CLIP_CHILDREN", SWIG_PyObj_FromInt((int)wxCLIP_CHILDREN));
    PyDict_SetItemString(d,"CLIP_SIBLINGS", SWIG_PyObj_FromInt((int)wxCLIP_SIBLINGS));
    PyDict_SetItemString(d,"RETAINED", SWIG_PyObj_FromInt((int)wxRETAINED));
    PyDict_SetItemString(d,"BACKINGSTORE", SWIG_PyObj_FromInt((int)wxBACKINGSTORE));
    PyDict_SetItemString(d,"COLOURED", SWIG_PyObj_FromInt((int)wxCOLOURED));
    PyDict_SetItemString(d,"FIXED_LENGTH", SWIG_PyObj_FromInt((int)wxFIXED_LENGTH));
    PyDict_SetItemString(d,"LB_NEEDED_SB", SWIG_PyObj_FromInt((int)wxLB_NEEDED_SB));
    PyDict_SetItemString(d,"LB_ALWAYS_SB", SWIG_PyObj_FromInt((int)wxLB_ALWAYS_SB));
    PyDict_SetItemString(d,"LB_SORT", SWIG_PyObj_FromInt((int)wxLB_SORT));
    PyDict_SetItemString(d,"LB_SINGLE", SWIG_PyObj_FromInt((int)wxLB_SINGLE));
    PyDict_SetItemString(d,"LB_MULTIPLE", SWIG_PyObj_FromInt((int)wxLB_MULTIPLE));
    PyDict_SetItemString(d,"LB_EXTENDED", SWIG_PyObj_FromInt((int)wxLB_EXTENDED));
    PyDict_SetItemString(d,"LB_OWNERDRAW", SWIG_PyObj_FromInt((int)wxLB_OWNERDRAW));
    PyDict_SetItemString(d,"LB_HSCROLL", SWIG_PyObj_FromInt((int)wxLB_HSCROLL));
    PyDict_SetItemString(d,"PROCESS_ENTER", SWIG_PyObj_FromInt((int)wxPROCESS_ENTER));
    PyDict_SetItemString(d,"PASSWORD", SWIG_PyObj_FromInt((int)wxPASSWORD));
    PyDict_SetItemString(d,"CB_SIMPLE", SWIG_PyObj_FromInt((int)wxCB_SIMPLE));
    PyDict_SetItemString(d,"CB_DROPDOWN", SWIG_PyObj_FromInt((int)wxCB_DROPDOWN));
    PyDict_SetItemString(d,"CB_SORT", SWIG_PyObj_FromInt((int)wxCB_SORT));
    PyDict_SetItemString(d,"CB_READONLY", SWIG_PyObj_FromInt((int)wxCB_READONLY));
    PyDict_SetItemString(d,"RA_HORIZONTAL", SWIG_PyObj_FromInt((int)wxRA_HORIZONTAL));
    PyDict_SetItemString(d,"RA_VERTICAL", SWIG_PyObj_FromInt((int)wxRA_VERTICAL));
    PyDict_SetItemString(d,"RA_SPECIFY_ROWS", SWIG_PyObj_FromInt((int)wxRA_SPECIFY_ROWS));
    PyDict_SetItemString(d,"RA_SPECIFY_COLS", SWIG_PyObj_FromInt((int)wxRA_SPECIFY_COLS));
    PyDict_SetItemString(d,"RB_GROUP", SWIG_PyObj_FromInt((int)wxRB_GROUP));
    PyDict_SetItemString(d,"RB_SINGLE", SWIG_PyObj_FromInt((int)wxRB_SINGLE));
    PyDict_SetItemString(d,"SL_HORIZONTAL", SWIG_PyObj_FromInt((int)wxSL_HORIZONTAL));
    PyDict_SetItemString(d,"SL_VERTICAL", SWIG_PyObj_FromInt((int)wxSL_VERTICAL));
    PyDict_SetItemString(d,"SL_AUTOTICKS", SWIG_PyObj_FromInt((int)wxSL_AUTOTICKS));
    PyDict_SetItemString(d,"SL_LABELS", SWIG_PyObj_FromInt((int)wxSL_LABELS));
    PyDict_SetItemString(d,"SL_LEFT", SWIG_PyObj_FromInt((int)wxSL_LEFT));
    PyDict_SetItemString(d,"SL_TOP", SWIG_PyObj_FromInt((int)wxSL_TOP));
    PyDict_SetItemString(d,"SL_RIGHT", SWIG_PyObj_FromInt((int)wxSL_RIGHT));
    PyDict_SetItemString(d,"SL_BOTTOM", SWIG_PyObj_FromInt((int)wxSL_BOTTOM));
    PyDict_SetItemString(d,"SL_BOTH", SWIG_PyObj_FromInt((int)wxSL_BOTH));
    PyDict_SetItemString(d,"SL_SELRANGE", SWIG_PyObj_FromInt((int)wxSL_SELRANGE));
    PyDict_SetItemString(d,"SB_HORIZONTAL", SWIG_PyObj_FromInt((int)wxSB_HORIZONTAL));
    PyDict_SetItemString(d,"SB_VERTICAL", SWIG_PyObj_FromInt((int)wxSB_VERTICAL));
    PyDict_SetItemString(d,"ST_SIZEGRIP", SWIG_PyObj_FromInt((int)wxST_SIZEGRIP));
    PyDict_SetItemString(d,"ST_NO_AUTORESIZE", SWIG_PyObj_FromInt((int)wxST_NO_AUTORESIZE));
    PyDict_SetItemString(d,"FLOOD_SURFACE", SWIG_PyObj_FromInt((int)wxFLOOD_SURFACE));
    PyDict_SetItemString(d,"FLOOD_BORDER", SWIG_PyObj_FromInt((int)wxFLOOD_BORDER));
    PyDict_SetItemString(d,"ODDEVEN_RULE", SWIG_PyObj_FromInt((int)wxODDEVEN_RULE));
    PyDict_SetItemString(d,"WINDING_RULE", SWIG_PyObj_FromInt((int)wxWINDING_RULE));
    PyDict_SetItemString(d,"TOOL_TOP", SWIG_PyObj_FromInt((int)wxTOOL_TOP));
    PyDict_SetItemString(d,"TOOL_BOTTOM", SWIG_PyObj_FromInt((int)wxTOOL_BOTTOM));
    PyDict_SetItemString(d,"TOOL_LEFT", SWIG_PyObj_FromInt((int)wxTOOL_LEFT));
    PyDict_SetItemString(d,"TOOL_RIGHT", SWIG_PyObj_FromInt((int)wxTOOL_RIGHT));
    PyDict_SetItemString(d,"OK", SWIG_PyObj_FromInt((int)wxOK));
    PyDict_SetItemString(d,"YES_NO", SWIG_PyObj_FromInt((int)wxYES_NO));
    PyDict_SetItemString(d,"CANCEL", SWIG_PyObj_FromInt((int)wxCANCEL));
    PyDict_SetItemString(d,"YES", SWIG_PyObj_FromInt((int)wxYES));
    PyDict_SetItemString(d,"NO", SWIG_PyObj_FromInt((int)wxNO));
    PyDict_SetItemString(d,"NO_DEFAULT", SWIG_PyObj_FromInt((int)wxNO_DEFAULT));
    PyDict_SetItemString(d,"YES_DEFAULT", SWIG_PyObj_FromInt((int)wxYES_DEFAULT));
    PyDict_SetItemString(d,"ICON_EXCLAMATION", SWIG_PyObj_FromInt((int)wxICON_EXCLAMATION));
    PyDict_SetItemString(d,"ICON_HAND", SWIG_PyObj_FromInt((int)wxICON_HAND));
    PyDict_SetItemString(d,"ICON_QUESTION", SWIG_PyObj_FromInt((int)wxICON_QUESTION));
    PyDict_SetItemString(d,"ICON_INFORMATION", SWIG_PyObj_FromInt((int)wxICON_INFORMATION));
    PyDict_SetItemString(d,"ICON_STOP", SWIG_PyObj_FromInt((int)wxICON_STOP));
    PyDict_SetItemString(d,"ICON_ASTERISK", SWIG_PyObj_FromInt((int)wxICON_ASTERISK));
    PyDict_SetItemString(d,"ICON_MASK", SWIG_PyObj_FromInt((int)wxICON_MASK));
    PyDict_SetItemString(d,"ICON_WARNING", SWIG_PyObj_FromInt((int)wxICON_WARNING));
    PyDict_SetItemString(d,"ICON_ERROR", SWIG_PyObj_FromInt((int)wxICON_ERROR));
    PyDict_SetItemString(d,"FORWARD", SWIG_PyObj_FromInt((int)wxFORWARD));
    PyDict_SetItemString(d,"BACKWARD", SWIG_PyObj_FromInt((int)wxBACKWARD));
    PyDict_SetItemString(d,"RESET", SWIG_PyObj_FromInt((int)wxRESET));
    PyDict_SetItemString(d,"HELP", SWIG_PyObj_FromInt((int)wxHELP));
    PyDict_SetItemString(d,"MORE", SWIG_PyObj_FromInt((int)wxMORE));
    PyDict_SetItemString(d,"SETUP", SWIG_PyObj_FromInt((int)wxSETUP));
    PyDict_SetItemString(d,"SIZE_AUTO_WIDTH", SWIG_PyObj_FromInt((int)wxSIZE_AUTO_WIDTH));
    PyDict_SetItemString(d,"SIZE_AUTO_HEIGHT", SWIG_PyObj_FromInt((int)wxSIZE_AUTO_HEIGHT));
    PyDict_SetItemString(d,"SIZE_AUTO", SWIG_PyObj_FromInt((int)wxSIZE_AUTO));
    PyDict_SetItemString(d,"SIZE_USE_EXISTING", SWIG_PyObj_FromInt((int)wxSIZE_USE_EXISTING));
    PyDict_SetItemString(d,"SIZE_ALLOW_MINUS_ONE", SWIG_PyObj_FromInt((int)wxSIZE_ALLOW_MINUS_ONE));
    PyDict_SetItemString(d,"PORTRAIT", SWIG_PyObj_FromInt((int)wxPORTRAIT));
    PyDict_SetItemString(d,"LANDSCAPE", SWIG_PyObj_FromInt((int)wxLANDSCAPE));
    PyDict_SetItemString(d,"PRINT_QUALITY_HIGH", SWIG_PyObj_FromInt((int)wxPRINT_QUALITY_HIGH));
    PyDict_SetItemString(d,"PRINT_QUALITY_MEDIUM", SWIG_PyObj_FromInt((int)wxPRINT_QUALITY_MEDIUM));
    PyDict_SetItemString(d,"PRINT_QUALITY_LOW", SWIG_PyObj_FromInt((int)wxPRINT_QUALITY_LOW));
    PyDict_SetItemString(d,"PRINT_QUALITY_DRAFT", SWIG_PyObj_FromInt((int)wxPRINT_QUALITY_DRAFT));
    PyDict_SetItemString(d,"ID_ANY", SWIG_PyObj_FromInt((int)wxID_ANY));
    PyDict_SetItemString(d,"ID_SEPARATOR", SWIG_PyObj_FromInt((int)wxID_SEPARATOR));
    PyDict_SetItemString(d,"ID_LOWEST", SWIG_PyObj_FromInt((int)wxID_LOWEST));
    PyDict_SetItemString(d,"ID_OPEN", SWIG_PyObj_FromInt((int)wxID_OPEN));
    PyDict_SetItemString(d,"ID_CLOSE", SWIG_PyObj_FromInt((int)wxID_CLOSE));
    PyDict_SetItemString(d,"ID_NEW", SWIG_PyObj_FromInt((int)wxID_NEW));
    PyDict_SetItemString(d,"ID_SAVE", SWIG_PyObj_FromInt((int)wxID_SAVE));
    PyDict_SetItemString(d,"ID_SAVEAS", SWIG_PyObj_FromInt((int)wxID_SAVEAS));
    PyDict_SetItemString(d,"ID_REVERT", SWIG_PyObj_FromInt((int)wxID_REVERT));
    PyDict_SetItemString(d,"ID_EXIT", SWIG_PyObj_FromInt((int)wxID_EXIT));
    PyDict_SetItemString(d,"ID_UNDO", SWIG_PyObj_FromInt((int)wxID_UNDO));
    PyDict_SetItemString(d,"ID_REDO", SWIG_PyObj_FromInt((int)wxID_REDO));
    PyDict_SetItemString(d,"ID_HELP", SWIG_PyObj_FromInt((int)wxID_HELP));
    PyDict_SetItemString(d,"ID_PRINT", SWIG_PyObj_FromInt((int)wxID_PRINT));
    PyDict_SetItemString(d,"ID_PRINT_SETUP", SWIG_PyObj_FromInt((int)wxID_PRINT_SETUP));
    PyDict_SetItemString(d,"ID_PREVIEW", SWIG_PyObj_FromInt((int)wxID_PREVIEW));
    PyDict_SetItemString(d,"ID_ABOUT", SWIG_PyObj_FromInt((int)wxID_ABOUT));
    PyDict_SetItemString(d,"ID_HELP_CONTENTS", SWIG_PyObj_FromInt((int)wxID_HELP_CONTENTS));
    PyDict_SetItemString(d,"ID_HELP_COMMANDS", SWIG_PyObj_FromInt((int)wxID_HELP_COMMANDS));
    PyDict_SetItemString(d,"ID_HELP_PROCEDURES", SWIG_PyObj_FromInt((int)wxID_HELP_PROCEDURES));
    PyDict_SetItemString(d,"ID_HELP_CONTEXT", SWIG_PyObj_FromInt((int)wxID_HELP_CONTEXT));
    PyDict_SetItemString(d,"ID_CLOSE_ALL", SWIG_PyObj_FromInt((int)wxID_CLOSE_ALL));
    PyDict_SetItemString(d,"ID_PREFERENCES", SWIG_PyObj_FromInt((int)wxID_PREFERENCES));
    PyDict_SetItemString(d,"ID_CUT", SWIG_PyObj_FromInt((int)wxID_CUT));
    PyDict_SetItemString(d,"ID_COPY", SWIG_PyObj_FromInt((int)wxID_COPY));
    PyDict_SetItemString(d,"ID_PASTE", SWIG_PyObj_FromInt((int)wxID_PASTE));
    PyDict_SetItemString(d,"ID_CLEAR", SWIG_PyObj_FromInt((int)wxID_CLEAR));
    PyDict_SetItemString(d,"ID_FIND", SWIG_PyObj_FromInt((int)wxID_FIND));
    PyDict_SetItemString(d,"ID_DUPLICATE", SWIG_PyObj_FromInt((int)wxID_DUPLICATE));
    PyDict_SetItemString(d,"ID_SELECTALL", SWIG_PyObj_FromInt((int)wxID_SELECTALL));
    PyDict_SetItemString(d,"ID_DELETE", SWIG_PyObj_FromInt((int)wxID_DELETE));
    PyDict_SetItemString(d,"ID_REPLACE", SWIG_PyObj_FromInt((int)wxID_REPLACE));
    PyDict_SetItemString(d,"ID_REPLACE_ALL", SWIG_PyObj_FromInt((int)wxID_REPLACE_ALL));
    PyDict_SetItemString(d,"ID_PROPERTIES", SWIG_PyObj_FromInt((int)wxID_PROPERTIES));
    PyDict_SetItemString(d,"ID_VIEW_DETAILS", SWIG_PyObj_FromInt((int)wxID_VIEW_DETAILS));
    PyDict_SetItemString(d,"ID_VIEW_LARGEICONS", SWIG_PyObj_FromInt((int)wxID_VIEW_LARGEICONS));
    PyDict_SetItemString(d,"ID_VIEW_SMALLICONS", SWIG_PyObj_FromInt((int)wxID_VIEW_SMALLICONS));
    PyDict_SetItemString(d,"ID_VIEW_LIST", SWIG_PyObj_FromInt((int)wxID_VIEW_LIST));
    PyDict_SetItemString(d,"ID_VIEW_SORTDATE", SWIG_PyObj_FromInt((int)wxID_VIEW_SORTDATE));
    PyDict_SetItemString(d,"ID_VIEW_SORTNAME", SWIG_PyObj_FromInt((int)wxID_VIEW_SORTNAME));
    PyDict_SetItemString(d,"ID_VIEW_SORTSIZE", SWIG_PyObj_FromInt((int)wxID_VIEW_SORTSIZE));
    PyDict_SetItemString(d,"ID_VIEW_SORTTYPE", SWIG_PyObj_FromInt((int)wxID_VIEW_SORTTYPE));
    PyDict_SetItemString(d,"ID_FILE1", SWIG_PyObj_FromInt((int)wxID_FILE1));
    PyDict_SetItemString(d,"ID_FILE2", SWIG_PyObj_FromInt((int)wxID_FILE2));
    PyDict_SetItemString(d,"ID_FILE3", SWIG_PyObj_FromInt((int)wxID_FILE3));
    PyDict_SetItemString(d,"ID_FILE4", SWIG_PyObj_FromInt((int)wxID_FILE4));
    PyDict_SetItemString(d,"ID_FILE5", SWIG_PyObj_FromInt((int)wxID_FILE5));
    PyDict_SetItemString(d,"ID_FILE6", SWIG_PyObj_FromInt((int)wxID_FILE6));
    PyDict_SetItemString(d,"ID_FILE7", SWIG_PyObj_FromInt((int)wxID_FILE7));
    PyDict_SetItemString(d,"ID_FILE8", SWIG_PyObj_FromInt((int)wxID_FILE8));
    PyDict_SetItemString(d,"ID_FILE9", SWIG_PyObj_FromInt((int)wxID_FILE9));
    PyDict_SetItemString(d,"ID_OK", SWIG_PyObj_FromInt((int)wxID_OK));
    PyDict_SetItemString(d,"ID_CANCEL", SWIG_PyObj_FromInt((int)wxID_CANCEL));
    PyDict_SetItemString(d,"ID_APPLY", SWIG_PyObj_FromInt((int)wxID_APPLY));
    PyDict_SetItemString(d,"ID_YES", SWIG_PyObj_FromInt((int)wxID_YES));
    PyDict_SetItemString(d,"ID_NO", SWIG_PyObj_FromInt((int)wxID_NO));
    PyDict_SetItemString(d,"ID_STATIC", SWIG_PyObj_FromInt((int)wxID_STATIC));
    PyDict_SetItemString(d,"ID_FORWARD", SWIG_PyObj_FromInt((int)wxID_FORWARD));
    PyDict_SetItemString(d,"ID_BACKWARD", SWIG_PyObj_FromInt((int)wxID_BACKWARD));
    PyDict_SetItemString(d,"ID_DEFAULT", SWIG_PyObj_FromInt((int)wxID_DEFAULT));
    PyDict_SetItemString(d,"ID_MORE", SWIG_PyObj_FromInt((int)wxID_MORE));
    PyDict_SetItemString(d,"ID_SETUP", SWIG_PyObj_FromInt((int)wxID_SETUP));
    PyDict_SetItemString(d,"ID_RESET", SWIG_PyObj_FromInt((int)wxID_RESET));
    PyDict_SetItemString(d,"ID_CONTEXT_HELP", SWIG_PyObj_FromInt((int)wxID_CONTEXT_HELP));
    PyDict_SetItemString(d,"ID_YESTOALL", SWIG_PyObj_FromInt((int)wxID_YESTOALL));
    PyDict_SetItemString(d,"ID_NOTOALL", SWIG_PyObj_FromInt((int)wxID_NOTOALL));
    PyDict_SetItemString(d,"ID_ABORT", SWIG_PyObj_FromInt((int)wxID_ABORT));
    PyDict_SetItemString(d,"ID_RETRY", SWIG_PyObj_FromInt((int)wxID_RETRY));
    PyDict_SetItemString(d,"ID_IGNORE", SWIG_PyObj_FromInt((int)wxID_IGNORE));
    PyDict_SetItemString(d,"ID_HIGHEST", SWIG_PyObj_FromInt((int)wxID_HIGHEST));
    PyDict_SetItemString(d,"OPEN", SWIG_PyObj_FromInt((int)wxOPEN));
    PyDict_SetItemString(d,"SAVE", SWIG_PyObj_FromInt((int)wxSAVE));
    PyDict_SetItemString(d,"HIDE_READONLY", SWIG_PyObj_FromInt((int)wxHIDE_READONLY));
    PyDict_SetItemString(d,"OVERWRITE_PROMPT", SWIG_PyObj_FromInt((int)wxOVERWRITE_PROMPT));
    PyDict_SetItemString(d,"FILE_MUST_EXIST", SWIG_PyObj_FromInt((int)wxFILE_MUST_EXIST));
    PyDict_SetItemString(d,"MULTIPLE", SWIG_PyObj_FromInt((int)wxMULTIPLE));
    PyDict_SetItemString(d,"CHANGE_DIR", SWIG_PyObj_FromInt((int)wxCHANGE_DIR));
    PyDict_SetItemString(d,"ACCEL_ALT", SWIG_PyObj_FromInt((int)wxACCEL_ALT));
    PyDict_SetItemString(d,"ACCEL_CTRL", SWIG_PyObj_FromInt((int)wxACCEL_CTRL));
    PyDict_SetItemString(d,"ACCEL_SHIFT", SWIG_PyObj_FromInt((int)wxACCEL_SHIFT));
    PyDict_SetItemString(d,"ACCEL_NORMAL", SWIG_PyObj_FromInt((int)wxACCEL_NORMAL));
    PyDict_SetItemString(d,"PD_AUTO_HIDE", SWIG_PyObj_FromInt((int)wxPD_AUTO_HIDE));
    PyDict_SetItemString(d,"PD_APP_MODAL", SWIG_PyObj_FromInt((int)wxPD_APP_MODAL));
    PyDict_SetItemString(d,"PD_CAN_ABORT", SWIG_PyObj_FromInt((int)wxPD_CAN_ABORT));
    PyDict_SetItemString(d,"PD_ELAPSED_TIME", SWIG_PyObj_FromInt((int)wxPD_ELAPSED_TIME));
    PyDict_SetItemString(d,"PD_ESTIMATED_TIME", SWIG_PyObj_FromInt((int)wxPD_ESTIMATED_TIME));
    PyDict_SetItemString(d,"PD_REMAINING_TIME", SWIG_PyObj_FromInt((int)wxPD_REMAINING_TIME));
    PyDict_SetItemString(d,"DD_NEW_DIR_BUTTON", SWIG_PyObj_FromInt((int)wxDD_NEW_DIR_BUTTON));
    PyDict_SetItemString(d,"DD_DEFAULT_STYLE", SWIG_PyObj_FromInt((int)wxDD_DEFAULT_STYLE));
    PyDict_SetItemString(d,"MENU_TEAROFF", SWIG_PyObj_FromInt((int)wxMENU_TEAROFF));
    PyDict_SetItemString(d,"MB_DOCKABLE", SWIG_PyObj_FromInt((int)wxMB_DOCKABLE));
    PyDict_SetItemString(d,"NO_FULL_REPAINT_ON_RESIZE", SWIG_PyObj_FromInt((int)wxNO_FULL_REPAINT_ON_RESIZE));
    PyDict_SetItemString(d,"FULL_REPAINT_ON_RESIZE", SWIG_PyObj_FromInt((int)wxFULL_REPAINT_ON_RESIZE));
    PyDict_SetItemString(d,"LI_HORIZONTAL", SWIG_PyObj_FromInt((int)wxLI_HORIZONTAL));
    PyDict_SetItemString(d,"LI_VERTICAL", SWIG_PyObj_FromInt((int)wxLI_VERTICAL));
    PyDict_SetItemString(d,"WS_EX_VALIDATE_RECURSIVELY", SWIG_PyObj_FromInt((int)wxWS_EX_VALIDATE_RECURSIVELY));
    PyDict_SetItemString(d,"WS_EX_BLOCK_EVENTS", SWIG_PyObj_FromInt((int)wxWS_EX_BLOCK_EVENTS));
    PyDict_SetItemString(d,"WS_EX_TRANSIENT", SWIG_PyObj_FromInt((int)wxWS_EX_TRANSIENT));
    PyDict_SetItemString(d,"WS_EX_THEMED_BACKGROUND", SWIG_PyObj_FromInt((int)wxWS_EX_THEMED_BACKGROUND));
    PyDict_SetItemString(d,"WS_EX_PROCESS_IDLE", SWIG_PyObj_FromInt((int)wxWS_EX_PROCESS_IDLE));
    PyDict_SetItemString(d,"WS_EX_PROCESS_UI_UPDATES", SWIG_PyObj_FromInt((int)wxWS_EX_PROCESS_UI_UPDATES));
    PyDict_SetItemString(d,"MM_TEXT", SWIG_PyObj_FromInt((int)wxMM_TEXT));
    PyDict_SetItemString(d,"MM_LOMETRIC", SWIG_PyObj_FromInt((int)wxMM_LOMETRIC));
    PyDict_SetItemString(d,"MM_HIMETRIC", SWIG_PyObj_FromInt((int)wxMM_HIMETRIC));
    PyDict_SetItemString(d,"MM_LOENGLISH", SWIG_PyObj_FromInt((int)wxMM_LOENGLISH));
    PyDict_SetItemString(d,"MM_HIENGLISH", SWIG_PyObj_FromInt((int)wxMM_HIENGLISH));
    PyDict_SetItemString(d,"MM_TWIPS", SWIG_PyObj_FromInt((int)wxMM_TWIPS));
    PyDict_SetItemString(d,"MM_ISOTROPIC", SWIG_PyObj_FromInt((int)wxMM_ISOTROPIC));
    PyDict_SetItemString(d,"MM_ANISOTROPIC", SWIG_PyObj_FromInt((int)wxMM_ANISOTROPIC));
    PyDict_SetItemString(d,"MM_POINTS", SWIG_PyObj_FromInt((int)wxMM_POINTS));
    PyDict_SetItemString(d,"MM_METRIC", SWIG_PyObj_FromInt((int)wxMM_METRIC));
    PyDict_SetItemString(d,"CENTRE", SWIG_PyObj_FromInt((int)wxCENTRE));
    PyDict_SetItemString(d,"CENTER", SWIG_PyObj_FromInt((int)wxCENTER));
    PyDict_SetItemString(d,"HORIZONTAL", SWIG_PyObj_FromInt((int)wxHORIZONTAL));
    PyDict_SetItemString(d,"VERTICAL", SWIG_PyObj_FromInt((int)wxVERTICAL));
    PyDict_SetItemString(d,"BOTH", SWIG_PyObj_FromInt((int)wxBOTH));
    PyDict_SetItemString(d,"LEFT", SWIG_PyObj_FromInt((int)wxLEFT));
    PyDict_SetItemString(d,"RIGHT", SWIG_PyObj_FromInt((int)wxRIGHT));
    PyDict_SetItemString(d,"UP", SWIG_PyObj_FromInt((int)wxUP));
    PyDict_SetItemString(d,"DOWN", SWIG_PyObj_FromInt((int)wxDOWN));
    PyDict_SetItemString(d,"TOP", SWIG_PyObj_FromInt((int)wxTOP));
    PyDict_SetItemString(d,"BOTTOM", SWIG_PyObj_FromInt((int)wxBOTTOM));
    PyDict_SetItemString(d,"NORTH", SWIG_PyObj_FromInt((int)wxNORTH));
    PyDict_SetItemString(d,"SOUTH", SWIG_PyObj_FromInt((int)wxSOUTH));
    PyDict_SetItemString(d,"WEST", SWIG_PyObj_FromInt((int)wxWEST));
    PyDict_SetItemString(d,"EAST", SWIG_PyObj_FromInt((int)wxEAST));
    PyDict_SetItemString(d,"ALL", SWIG_PyObj_FromInt((int)wxALL));
    PyDict_SetItemString(d,"ALIGN_NOT", SWIG_PyObj_FromInt((int)wxALIGN_NOT));
    PyDict_SetItemString(d,"ALIGN_CENTER_HORIZONTAL", SWIG_PyObj_FromInt((int)wxALIGN_CENTER_HORIZONTAL));
    PyDict_SetItemString(d,"ALIGN_CENTRE_HORIZONTAL", SWIG_PyObj_FromInt((int)wxALIGN_CENTRE_HORIZONTAL));
    PyDict_SetItemString(d,"ALIGN_LEFT", SWIG_PyObj_FromInt((int)wxALIGN_LEFT));
    PyDict_SetItemString(d,"ALIGN_TOP", SWIG_PyObj_FromInt((int)wxALIGN_TOP));
    PyDict_SetItemString(d,"ALIGN_RIGHT", SWIG_PyObj_FromInt((int)wxALIGN_RIGHT));
    PyDict_SetItemString(d,"ALIGN_BOTTOM", SWIG_PyObj_FromInt((int)wxALIGN_BOTTOM));
    PyDict_SetItemString(d,"ALIGN_CENTER_VERTICAL", SWIG_PyObj_FromInt((int)wxALIGN_CENTER_VERTICAL));
    PyDict_SetItemString(d,"ALIGN_CENTRE_VERTICAL", SWIG_PyObj_FromInt((int)wxALIGN_CENTRE_VERTICAL));
    PyDict_SetItemString(d,"ALIGN_CENTER", SWIG_PyObj_FromInt((int)wxALIGN_CENTER));
    PyDict_SetItemString(d,"ALIGN_CENTRE", SWIG_PyObj_FromInt((int)wxALIGN_CENTRE));
    PyDict_SetItemString(d,"ALIGN_MASK", SWIG_PyObj_FromInt((int)wxALIGN_MASK));
    PyDict_SetItemString(d,"STRETCH_NOT", SWIG_PyObj_FromInt((int)wxSTRETCH_NOT));
    PyDict_SetItemString(d,"SHRINK", SWIG_PyObj_FromInt((int)wxSHRINK));
    PyDict_SetItemString(d,"GROW", SWIG_PyObj_FromInt((int)wxGROW));
    PyDict_SetItemString(d,"EXPAND", SWIG_PyObj_FromInt((int)wxEXPAND));
    PyDict_SetItemString(d,"SHAPED", SWIG_PyObj_FromInt((int)wxSHAPED));
    PyDict_SetItemString(d,"ADJUST_MINSIZE", SWIG_PyObj_FromInt((int)wxADJUST_MINSIZE));
    PyDict_SetItemString(d,"TILE", SWIG_PyObj_FromInt((int)wxTILE));
    PyDict_SetItemString(d,"BORDER_DEFAULT", SWIG_PyObj_FromInt((int)wxBORDER_DEFAULT));
    PyDict_SetItemString(d,"BORDER_NONE", SWIG_PyObj_FromInt((int)wxBORDER_NONE));
    PyDict_SetItemString(d,"BORDER_STATIC", SWIG_PyObj_FromInt((int)wxBORDER_STATIC));
    PyDict_SetItemString(d,"BORDER_SIMPLE", SWIG_PyObj_FromInt((int)wxBORDER_SIMPLE));
    PyDict_SetItemString(d,"BORDER_RAISED", SWIG_PyObj_FromInt((int)wxBORDER_RAISED));
    PyDict_SetItemString(d,"BORDER_SUNKEN", SWIG_PyObj_FromInt((int)wxBORDER_SUNKEN));
    PyDict_SetItemString(d,"BORDER_DOUBLE", SWIG_PyObj_FromInt((int)wxBORDER_DOUBLE));
    PyDict_SetItemString(d,"BORDER_MASK", SWIG_PyObj_FromInt((int)wxBORDER_MASK));
    PyDict_SetItemString(d,"DEFAULT", SWIG_PyObj_FromInt((int)wxDEFAULT));
    PyDict_SetItemString(d,"DECORATIVE", SWIG_PyObj_FromInt((int)wxDECORATIVE));
    PyDict_SetItemString(d,"ROMAN", SWIG_PyObj_FromInt((int)wxROMAN));
    PyDict_SetItemString(d,"SCRIPT", SWIG_PyObj_FromInt((int)wxSCRIPT));
    PyDict_SetItemString(d,"SWISS", SWIG_PyObj_FromInt((int)wxSWISS));
    PyDict_SetItemString(d,"MODERN", SWIG_PyObj_FromInt((int)wxMODERN));
    PyDict_SetItemString(d,"TELETYPE", SWIG_PyObj_FromInt((int)wxTELETYPE));
    PyDict_SetItemString(d,"VARIABLE", SWIG_PyObj_FromInt((int)wxVARIABLE));
    PyDict_SetItemString(d,"FIXED", SWIG_PyObj_FromInt((int)wxFIXED));
    PyDict_SetItemString(d,"NORMAL", SWIG_PyObj_FromInt((int)wxNORMAL));
    PyDict_SetItemString(d,"LIGHT", SWIG_PyObj_FromInt((int)wxLIGHT));
    PyDict_SetItemString(d,"BOLD", SWIG_PyObj_FromInt((int)wxBOLD));
    PyDict_SetItemString(d,"ITALIC", SWIG_PyObj_FromInt((int)wxITALIC));
    PyDict_SetItemString(d,"SLANT", SWIG_PyObj_FromInt((int)wxSLANT));
    PyDict_SetItemString(d,"SOLID", SWIG_PyObj_FromInt((int)wxSOLID));
    PyDict_SetItemString(d,"DOT", SWIG_PyObj_FromInt((int)wxDOT));
    PyDict_SetItemString(d,"LONG_DASH", SWIG_PyObj_FromInt((int)wxLONG_DASH));
    PyDict_SetItemString(d,"SHORT_DASH", SWIG_PyObj_FromInt((int)wxSHORT_DASH));
    PyDict_SetItemString(d,"DOT_DASH", SWIG_PyObj_FromInt((int)wxDOT_DASH));
    PyDict_SetItemString(d,"USER_DASH", SWIG_PyObj_FromInt((int)wxUSER_DASH));
    PyDict_SetItemString(d,"TRANSPARENT", SWIG_PyObj_FromInt((int)wxTRANSPARENT));
    PyDict_SetItemString(d,"STIPPLE", SWIG_PyObj_FromInt((int)wxSTIPPLE));
    PyDict_SetItemString(d,"BDIAGONAL_HATCH", SWIG_PyObj_FromInt((int)wxBDIAGONAL_HATCH));
    PyDict_SetItemString(d,"CROSSDIAG_HATCH", SWIG_PyObj_FromInt((int)wxCROSSDIAG_HATCH));
    PyDict_SetItemString(d,"FDIAGONAL_HATCH", SWIG_PyObj_FromInt((int)wxFDIAGONAL_HATCH));
    PyDict_SetItemString(d,"CROSS_HATCH", SWIG_PyObj_FromInt((int)wxCROSS_HATCH));
    PyDict_SetItemString(d,"HORIZONTAL_HATCH", SWIG_PyObj_FromInt((int)wxHORIZONTAL_HATCH));
    PyDict_SetItemString(d,"VERTICAL_HATCH", SWIG_PyObj_FromInt((int)wxVERTICAL_HATCH));
    PyDict_SetItemString(d,"JOIN_BEVEL", SWIG_PyObj_FromInt((int)wxJOIN_BEVEL));
    PyDict_SetItemString(d,"JOIN_MITER", SWIG_PyObj_FromInt((int)wxJOIN_MITER));
    PyDict_SetItemString(d,"JOIN_ROUND", SWIG_PyObj_FromInt((int)wxJOIN_ROUND));
    PyDict_SetItemString(d,"CAP_ROUND", SWIG_PyObj_FromInt((int)wxCAP_ROUND));
    PyDict_SetItemString(d,"CAP_PROJECTING", SWIG_PyObj_FromInt((int)wxCAP_PROJECTING));
    PyDict_SetItemString(d,"CAP_BUTT", SWIG_PyObj_FromInt((int)wxCAP_BUTT));
    PyDict_SetItemString(d,"CLEAR", SWIG_PyObj_FromInt((int)wxCLEAR));
    PyDict_SetItemString(d,"XOR", SWIG_PyObj_FromInt((int)wxXOR));
    PyDict_SetItemString(d,"INVERT", SWIG_PyObj_FromInt((int)wxINVERT));
    PyDict_SetItemString(d,"OR_REVERSE", SWIG_PyObj_FromInt((int)wxOR_REVERSE));
    PyDict_SetItemString(d,"AND_REVERSE", SWIG_PyObj_FromInt((int)wxAND_REVERSE));
    PyDict_SetItemString(d,"COPY", SWIG_PyObj_FromInt((int)wxCOPY));
    PyDict_SetItemString(d,"AND", SWIG_PyObj_FromInt((int)wxAND));
    PyDict_SetItemString(d,"AND_INVERT", SWIG_PyObj_FromInt((int)wxAND_INVERT));
    PyDict_SetItemString(d,"NO_OP", SWIG_PyObj_FromInt((int)wxNO_OP));
    PyDict_SetItemString(d,"NOR", SWIG_PyObj_FromInt((int)wxNOR));
    PyDict_SetItemString(d,"EQUIV", SWIG_PyObj_FromInt((int)wxEQUIV));
    PyDict_SetItemString(d,"SRC_INVERT", SWIG_PyObj_FromInt((int)wxSRC_INVERT));
    PyDict_SetItemString(d,"OR_INVERT", SWIG_PyObj_FromInt((int)wxOR_INVERT));
    PyDict_SetItemString(d,"NAND", SWIG_PyObj_FromInt((int)wxNAND));
    PyDict_SetItemString(d,"OR", SWIG_PyObj_FromInt((int)wxOR));
    PyDict_SetItemString(d,"SET", SWIG_PyObj_FromInt((int)wxSET));
    PyDict_SetItemString(d,"WXK_BACK", SWIG_PyObj_FromInt((int)WXK_BACK));
    PyDict_SetItemString(d,"WXK_TAB", SWIG_PyObj_FromInt((int)WXK_TAB));
    PyDict_SetItemString(d,"WXK_RETURN", SWIG_PyObj_FromInt((int)WXK_RETURN));
    PyDict_SetItemString(d,"WXK_ESCAPE", SWIG_PyObj_FromInt((int)WXK_ESCAPE));
    PyDict_SetItemString(d,"WXK_SPACE", SWIG_PyObj_FromInt((int)WXK_SPACE));
    PyDict_SetItemString(d,"WXK_DELETE", SWIG_PyObj_FromInt((int)WXK_DELETE));
    PyDict_SetItemString(d,"WXK_START", SWIG_PyObj_FromInt((int)WXK_START));
    PyDict_SetItemString(d,"WXK_LBUTTON", SWIG_PyObj_FromInt((int)WXK_LBUTTON));
    PyDict_SetItemString(d,"WXK_RBUTTON", SWIG_PyObj_FromInt((int)WXK_RBUTTON));
    PyDict_SetItemString(d,"WXK_CANCEL", SWIG_PyObj_FromInt((int)WXK_CANCEL));
    PyDict_SetItemString(d,"WXK_MBUTTON", SWIG_PyObj_FromInt((int)WXK_MBUTTON));
    PyDict_SetItemString(d,"WXK_CLEAR", SWIG_PyObj_FromInt((int)WXK_CLEAR));
    PyDict_SetItemString(d,"WXK_SHIFT", SWIG_PyObj_FromInt((int)WXK_SHIFT));
    PyDict_SetItemString(d,"WXK_ALT", SWIG_PyObj_FromInt((int)WXK_ALT));
    PyDict_SetItemString(d,"WXK_CONTROL", SWIG_PyObj_FromInt((int)WXK_CONTROL));
    PyDict_SetItemString(d,"WXK_MENU", SWIG_PyObj_FromInt((int)WXK_MENU));
    PyDict_SetItemString(d,"WXK_PAUSE", SWIG_PyObj_FromInt((int)WXK_PAUSE));
    PyDict_SetItemString(d,"WXK_CAPITAL", SWIG_PyObj_FromInt((int)WXK_CAPITAL));
    PyDict_SetItemString(d,"WXK_PRIOR", SWIG_PyObj_FromInt((int)WXK_PRIOR));
    PyDict_SetItemString(d,"WXK_NEXT", SWIG_PyObj_FromInt((int)WXK_NEXT));
    PyDict_SetItemString(d,"WXK_END", SWIG_PyObj_FromInt((int)WXK_END));
    PyDict_SetItemString(d,"WXK_HOME", SWIG_PyObj_FromInt((int)WXK_HOME));
    PyDict_SetItemString(d,"WXK_LEFT", SWIG_PyObj_FromInt((int)WXK_LEFT));
    PyDict_SetItemString(d,"WXK_UP", SWIG_PyObj_FromInt((int)WXK_UP));
    PyDict_SetItemString(d,"WXK_RIGHT", SWIG_PyObj_FromInt((int)WXK_RIGHT));
    PyDict_SetItemString(d,"WXK_DOWN", SWIG_PyObj_FromInt((int)WXK_DOWN));
    PyDict_SetItemString(d,"WXK_SELECT", SWIG_PyObj_FromInt((int)WXK_SELECT));
    PyDict_SetItemString(d,"WXK_PRINT", SWIG_PyObj_FromInt((int)WXK_PRINT));
    PyDict_SetItemString(d,"WXK_EXECUTE", SWIG_PyObj_FromInt((int)WXK_EXECUTE));
    PyDict_SetItemString(d,"WXK_SNAPSHOT", SWIG_PyObj_FromInt((int)WXK_SNAPSHOT));
    PyDict_SetItemString(d,"WXK_INSERT", SWIG_PyObj_FromInt((int)WXK_INSERT));
    PyDict_SetItemString(d,"WXK_HELP", SWIG_PyObj_FromInt((int)WXK_HELP));
    PyDict_SetItemString(d,"WXK_NUMPAD0", SWIG_PyObj_FromInt((int)WXK_NUMPAD0));
    PyDict_SetItemString(d,"WXK_NUMPAD1", SWIG_PyObj_FromInt((int)WXK_NUMPAD1));
    PyDict_SetItemString(d,"WXK_NUMPAD2", SWIG_PyObj_FromInt((int)WXK_NUMPAD2));
    PyDict_SetItemString(d,"WXK_NUMPAD3", SWIG_PyObj_FromInt((int)WXK_NUMPAD3));
    PyDict_SetItemString(d,"WXK_NUMPAD4", SWIG_PyObj_FromInt((int)WXK_NUMPAD4));
    PyDict_SetItemString(d,"WXK_NUMPAD5", SWIG_PyObj_FromInt((int)WXK_NUMPAD5));
    PyDict_SetItemString(d,"WXK_NUMPAD6", SWIG_PyObj_FromInt((int)WXK_NUMPAD6));
    PyDict_SetItemString(d,"WXK_NUMPAD7", SWIG_PyObj_FromInt((int)WXK_NUMPAD7));
    PyDict_SetItemString(d,"WXK_NUMPAD8", SWIG_PyObj_FromInt((int)WXK_NUMPAD8));
    PyDict_SetItemString(d,"WXK_NUMPAD9", SWIG_PyObj_FromInt((int)WXK_NUMPAD9));
    PyDict_SetItemString(d,"WXK_MULTIPLY", SWIG_PyObj_FromInt((int)WXK_MULTIPLY));
    PyDict_SetItemString(d,"WXK_ADD", SWIG_PyObj_FromInt((int)WXK_ADD));
    PyDict_SetItemString(d,"WXK_SEPARATOR", SWIG_PyObj_FromInt((int)WXK_SEPARATOR));
    PyDict_SetItemString(d,"WXK_SUBTRACT", SWIG_PyObj_FromInt((int)WXK_SUBTRACT));
    PyDict_SetItemString(d,"WXK_DECIMAL", SWIG_PyObj_FromInt((int)WXK_DECIMAL));
    PyDict_SetItemString(d,"WXK_DIVIDE", SWIG_PyObj_FromInt((int)WXK_DIVIDE));
    PyDict_SetItemString(d,"WXK_F1", SWIG_PyObj_FromInt((int)WXK_F1));
    PyDict_SetItemString(d,"WXK_F2", SWIG_PyObj_FromInt((int)WXK_F2));
    PyDict_SetItemString(d,"WXK_F3", SWIG_PyObj_FromInt((int)WXK_F3));
    PyDict_SetItemString(d,"WXK_F4", SWIG_PyObj_FromInt((int)WXK_F4));
    PyDict_SetItemString(d,"WXK_F5", SWIG_PyObj_FromInt((int)WXK_F5));
    PyDict_SetItemString(d,"WXK_F6", SWIG_PyObj_FromInt((int)WXK_F6));
    PyDict_SetItemString(d,"WXK_F7", SWIG_PyObj_FromInt((int)WXK_F7));
    PyDict_SetItemString(d,"WXK_F8", SWIG_PyObj_FromInt((int)WXK_F8));
    PyDict_SetItemString(d,"WXK_F9", SWIG_PyObj_FromInt((int)WXK_F9));
    PyDict_SetItemString(d,"WXK_F10", SWIG_PyObj_FromInt((int)WXK_F10));
    PyDict_SetItemString(d,"WXK_F11", SWIG_PyObj_FromInt((int)WXK_F11));
    PyDict_SetItemString(d,"WXK_F12", SWIG_PyObj_FromInt((int)WXK_F12));
    PyDict_SetItemString(d,"WXK_F13", SWIG_PyObj_FromInt((int)WXK_F13));
    PyDict_SetItemString(d,"WXK_F14", SWIG_PyObj_FromInt((int)WXK_F14));
    PyDict_SetItemString(d,"WXK_F15", SWIG_PyObj_FromInt((int)WXK_F15));
    PyDict_SetItemString(d,"WXK_F16", SWIG_PyObj_FromInt((int)WXK_F16));
    PyDict_SetItemString(d,"WXK_F17", SWIG_PyObj_FromInt((int)WXK_F17));
    PyDict_SetItemString(d,"WXK_F18", SWIG_PyObj_FromInt((int)WXK_F18));
    PyDict_SetItemString(d,"WXK_F19", SWIG_PyObj_FromInt((int)WXK_F19));
    PyDict_SetItemString(d,"WXK_F20", SWIG_PyObj_FromInt((int)WXK_F20));
    PyDict_SetItemString(d,"WXK_F21", SWIG_PyObj_FromInt((int)WXK_F21));
    PyDict_SetItemString(d,"WXK_F22", SWIG_PyObj_FromInt((int)WXK_F22));
    PyDict_SetItemString(d,"WXK_F23", SWIG_PyObj_FromInt((int)WXK_F23));
    PyDict_SetItemString(d,"WXK_F24", SWIG_PyObj_FromInt((int)WXK_F24));
    PyDict_SetItemString(d,"WXK_NUMLOCK", SWIG_PyObj_FromInt((int)WXK_NUMLOCK));
    PyDict_SetItemString(d,"WXK_SCROLL", SWIG_PyObj_FromInt((int)WXK_SCROLL));
    PyDict_SetItemString(d,"WXK_PAGEUP", SWIG_PyObj_FromInt((int)WXK_PAGEUP));
    PyDict_SetItemString(d,"WXK_PAGEDOWN", SWIG_PyObj_FromInt((int)WXK_PAGEDOWN));
    PyDict_SetItemString(d,"WXK_NUMPAD_SPACE", SWIG_PyObj_FromInt((int)WXK_NUMPAD_SPACE));
    PyDict_SetItemString(d,"WXK_NUMPAD_TAB", SWIG_PyObj_FromInt((int)WXK_NUMPAD_TAB));
    PyDict_SetItemString(d,"WXK_NUMPAD_ENTER", SWIG_PyObj_FromInt((int)WXK_NUMPAD_ENTER));
    PyDict_SetItemString(d,"WXK_NUMPAD_F1", SWIG_PyObj_FromInt((int)WXK_NUMPAD_F1));
    PyDict_SetItemString(d,"WXK_NUMPAD_F2", SWIG_PyObj_FromInt((int)WXK_NUMPAD_F2));
    PyDict_SetItemString(d,"WXK_NUMPAD_F3", SWIG_PyObj_FromInt((int)WXK_NUMPAD_F3));
    PyDict_SetItemString(d,"WXK_NUMPAD_F4", SWIG_PyObj_FromInt((int)WXK_NUMPAD_F4));
    PyDict_SetItemString(d,"WXK_NUMPAD_HOME", SWIG_PyObj_FromInt((int)WXK_NUMPAD_HOME));
    PyDict_SetItemString(d,"WXK_NUMPAD_LEFT", SWIG_PyObj_FromInt((int)WXK_NUMPAD_LEFT));
    PyDict_SetItemString(d,"WXK_NUMPAD_UP", SWIG_PyObj_FromInt((int)WXK_NUMPAD_UP));
    PyDict_SetItemString(d,"WXK_NUMPAD_RIGHT", SWIG_PyObj_FromInt((int)WXK_NUMPAD_RIGHT));
    PyDict_SetItemString(d,"WXK_NUMPAD_DOWN", SWIG_PyObj_FromInt((int)WXK_NUMPAD_DOWN));
    PyDict_SetItemString(d,"WXK_NUMPAD_PRIOR", SWIG_PyObj_FromInt((int)WXK_NUMPAD_PRIOR));
    PyDict_SetItemString(d,"WXK_NUMPAD_PAGEUP", SWIG_PyObj_FromInt((int)WXK_NUMPAD_PAGEUP));
    PyDict_SetItemString(d,"WXK_NUMPAD_NEXT", SWIG_PyObj_FromInt((int)WXK_NUMPAD_NEXT));
    PyDict_SetItemString(d,"WXK_NUMPAD_PAGEDOWN", SWIG_PyObj_FromInt((int)WXK_NUMPAD_PAGEDOWN));
    PyDict_SetItemString(d,"WXK_NUMPAD_END", SWIG_PyObj_FromInt((int)WXK_NUMPAD_END));
    PyDict_SetItemString(d,"WXK_NUMPAD_BEGIN", SWIG_PyObj_FromInt((int)WXK_NUMPAD_BEGIN));
    PyDict_SetItemString(d,"WXK_NUMPAD_INSERT", SWIG_PyObj_FromInt((int)WXK_NUMPAD_INSERT));
    PyDict_SetItemString(d,"WXK_NUMPAD_DELETE", SWIG_PyObj_FromInt((int)WXK_NUMPAD_DELETE));
    PyDict_SetItemString(d,"WXK_NUMPAD_EQUAL", SWIG_PyObj_FromInt((int)WXK_NUMPAD_EQUAL));
    PyDict_SetItemString(d,"WXK_NUMPAD_MULTIPLY", SWIG_PyObj_FromInt((int)WXK_NUMPAD_MULTIPLY));
    PyDict_SetItemString(d,"WXK_NUMPAD_ADD", SWIG_PyObj_FromInt((int)WXK_NUMPAD_ADD));
    PyDict_SetItemString(d,"WXK_NUMPAD_SEPARATOR", SWIG_PyObj_FromInt((int)WXK_NUMPAD_SEPARATOR));
    PyDict_SetItemString(d,"WXK_NUMPAD_SUBTRACT", SWIG_PyObj_FromInt((int)WXK_NUMPAD_SUBTRACT));
    PyDict_SetItemString(d,"WXK_NUMPAD_DECIMAL", SWIG_PyObj_FromInt((int)WXK_NUMPAD_DECIMAL));
    PyDict_SetItemString(d,"WXK_NUMPAD_DIVIDE", SWIG_PyObj_FromInt((int)WXK_NUMPAD_DIVIDE));
    PyDict_SetItemString(d,"WXK_WINDOWS_LEFT", SWIG_PyObj_FromInt((int)WXK_WINDOWS_LEFT));
    PyDict_SetItemString(d,"WXK_WINDOWS_RIGHT", SWIG_PyObj_FromInt((int)WXK_WINDOWS_RIGHT));
    PyDict_SetItemString(d,"WXK_WINDOWS_MENU", SWIG_PyObj_FromInt((int)WXK_WINDOWS_MENU));
    PyDict_SetItemString(d,"PAPER_NONE", SWIG_PyObj_FromInt((int)wxPAPER_NONE));
    PyDict_SetItemString(d,"PAPER_LETTER", SWIG_PyObj_FromInt((int)wxPAPER_LETTER));
    PyDict_SetItemString(d,"PAPER_LEGAL", SWIG_PyObj_FromInt((int)wxPAPER_LEGAL));
    PyDict_SetItemString(d,"PAPER_A4", SWIG_PyObj_FromInt((int)wxPAPER_A4));
    PyDict_SetItemString(d,"PAPER_CSHEET", SWIG_PyObj_FromInt((int)wxPAPER_CSHEET));
    PyDict_SetItemString(d,"PAPER_DSHEET", SWIG_PyObj_FromInt((int)wxPAPER_DSHEET));
    PyDict_SetItemString(d,"PAPER_ESHEET", SWIG_PyObj_FromInt((int)wxPAPER_ESHEET));
    PyDict_SetItemString(d,"PAPER_LETTERSMALL", SWIG_PyObj_FromInt((int)wxPAPER_LETTERSMALL));
    PyDict_SetItemString(d,"PAPER_TABLOID", SWIG_PyObj_FromInt((int)wxPAPER_TABLOID));
    PyDict_SetItemString(d,"PAPER_LEDGER", SWIG_PyObj_FromInt((int)wxPAPER_LEDGER));
    PyDict_SetItemString(d,"PAPER_STATEMENT", SWIG_PyObj_FromInt((int)wxPAPER_STATEMENT));
    PyDict_SetItemString(d,"PAPER_EXECUTIVE", SWIG_PyObj_FromInt((int)wxPAPER_EXECUTIVE));
    PyDict_SetItemString(d,"PAPER_A3", SWIG_PyObj_FromInt((int)wxPAPER_A3));
    PyDict_SetItemString(d,"PAPER_A4SMALL", SWIG_PyObj_FromInt((int)wxPAPER_A4SMALL));
    PyDict_SetItemString(d,"PAPER_A5", SWIG_PyObj_FromInt((int)wxPAPER_A5));
    PyDict_SetItemString(d,"PAPER_B4", SWIG_PyObj_FromInt((int)wxPAPER_B4));
    PyDict_SetItemString(d,"PAPER_B5", SWIG_PyObj_FromInt((int)wxPAPER_B5));
    PyDict_SetItemString(d,"PAPER_FOLIO", SWIG_PyObj_FromInt((int)wxPAPER_FOLIO));
    PyDict_SetItemString(d,"PAPER_QUARTO", SWIG_PyObj_FromInt((int)wxPAPER_QUARTO));
    PyDict_SetItemString(d,"PAPER_10X14", SWIG_PyObj_FromInt((int)wxPAPER_10X14));
    PyDict_SetItemString(d,"PAPER_11X17", SWIG_PyObj_FromInt((int)wxPAPER_11X17));
    PyDict_SetItemString(d,"PAPER_NOTE", SWIG_PyObj_FromInt((int)wxPAPER_NOTE));
    PyDict_SetItemString(d,"PAPER_ENV_9", SWIG_PyObj_FromInt((int)wxPAPER_ENV_9));
    PyDict_SetItemString(d,"PAPER_ENV_10", SWIG_PyObj_FromInt((int)wxPAPER_ENV_10));
    PyDict_SetItemString(d,"PAPER_ENV_11", SWIG_PyObj_FromInt((int)wxPAPER_ENV_11));
    PyDict_SetItemString(d,"PAPER_ENV_12", SWIG_PyObj_FromInt((int)wxPAPER_ENV_12));
    PyDict_SetItemString(d,"PAPER_ENV_14", SWIG_PyObj_FromInt((int)wxPAPER_ENV_14));
    PyDict_SetItemString(d,"PAPER_ENV_DL", SWIG_PyObj_FromInt((int)wxPAPER_ENV_DL));
    PyDict_SetItemString(d,"PAPER_ENV_C5", SWIG_PyObj_FromInt((int)wxPAPER_ENV_C5));
    PyDict_SetItemString(d,"PAPER_ENV_C3", SWIG_PyObj_FromInt((int)wxPAPER_ENV_C3));
    PyDict_SetItemString(d,"PAPER_ENV_C4", SWIG_PyObj_FromInt((int)wxPAPER_ENV_C4));
    PyDict_SetItemString(d,"PAPER_ENV_C6", SWIG_PyObj_FromInt((int)wxPAPER_ENV_C6));
    PyDict_SetItemString(d,"PAPER_ENV_C65", SWIG_PyObj_FromInt((int)wxPAPER_ENV_C65));
    PyDict_SetItemString(d,"PAPER_ENV_B4", SWIG_PyObj_FromInt((int)wxPAPER_ENV_B4));
    PyDict_SetItemString(d,"PAPER_ENV_B5", SWIG_PyObj_FromInt((int)wxPAPER_ENV_B5));
    PyDict_SetItemString(d,"PAPER_ENV_B6", SWIG_PyObj_FromInt((int)wxPAPER_ENV_B6));
    PyDict_SetItemString(d,"PAPER_ENV_ITALY", SWIG_PyObj_FromInt((int)wxPAPER_ENV_ITALY));
    PyDict_SetItemString(d,"PAPER_ENV_MONARCH", SWIG_PyObj_FromInt((int)wxPAPER_ENV_MONARCH));
    PyDict_SetItemString(d,"PAPER_ENV_PERSONAL", SWIG_PyObj_FromInt((int)wxPAPER_ENV_PERSONAL));
    PyDict_SetItemString(d,"PAPER_FANFOLD_US", SWIG_PyObj_FromInt((int)wxPAPER_FANFOLD_US));
    PyDict_SetItemString(d,"PAPER_FANFOLD_STD_GERMAN", SWIG_PyObj_FromInt((int)wxPAPER_FANFOLD_STD_GERMAN));
    PyDict_SetItemString(d,"PAPER_FANFOLD_LGL_GERMAN", SWIG_PyObj_FromInt((int)wxPAPER_FANFOLD_LGL_GERMAN));
    PyDict_SetItemString(d,"PAPER_ISO_B4", SWIG_PyObj_FromInt((int)wxPAPER_ISO_B4));
    PyDict_SetItemString(d,"PAPER_JAPANESE_POSTCARD", SWIG_PyObj_FromInt((int)wxPAPER_JAPANESE_POSTCARD));
    PyDict_SetItemString(d,"PAPER_9X11", SWIG_PyObj_FromInt((int)wxPAPER_9X11));
    PyDict_SetItemString(d,"PAPER_10X11", SWIG_PyObj_FromInt((int)wxPAPER_10X11));
    PyDict_SetItemString(d,"PAPER_15X11", SWIG_PyObj_FromInt((int)wxPAPER_15X11));
    PyDict_SetItemString(d,"PAPER_ENV_INVITE", SWIG_PyObj_FromInt((int)wxPAPER_ENV_INVITE));
    PyDict_SetItemString(d,"PAPER_LETTER_EXTRA", SWIG_PyObj_FromInt((int)wxPAPER_LETTER_EXTRA));
    PyDict_SetItemString(d,"PAPER_LEGAL_EXTRA", SWIG_PyObj_FromInt((int)wxPAPER_LEGAL_EXTRA));
    PyDict_SetItemString(d,"PAPER_TABLOID_EXTRA", SWIG_PyObj_FromInt((int)wxPAPER_TABLOID_EXTRA));
    PyDict_SetItemString(d,"PAPER_A4_EXTRA", SWIG_PyObj_FromInt((int)wxPAPER_A4_EXTRA));
    PyDict_SetItemString(d,"PAPER_LETTER_TRANSVERSE", SWIG_PyObj_FromInt((int)wxPAPER_LETTER_TRANSVERSE));
    PyDict_SetItemString(d,"PAPER_A4_TRANSVERSE", SWIG_PyObj_FromInt((int)wxPAPER_A4_TRANSVERSE));
    PyDict_SetItemString(d,"PAPER_LETTER_EXTRA_TRANSVERSE", SWIG_PyObj_FromInt((int)wxPAPER_LETTER_EXTRA_TRANSVERSE));
    PyDict_SetItemString(d,"PAPER_A_PLUS", SWIG_PyObj_FromInt((int)wxPAPER_A_PLUS));
    PyDict_SetItemString(d,"PAPER_B_PLUS", SWIG_PyObj_FromInt((int)wxPAPER_B_PLUS));
    PyDict_SetItemString(d,"PAPER_LETTER_PLUS", SWIG_PyObj_FromInt((int)wxPAPER_LETTER_PLUS));
    PyDict_SetItemString(d,"PAPER_A4_PLUS", SWIG_PyObj_FromInt((int)wxPAPER_A4_PLUS));
    PyDict_SetItemString(d,"PAPER_A5_TRANSVERSE", SWIG_PyObj_FromInt((int)wxPAPER_A5_TRANSVERSE));
    PyDict_SetItemString(d,"PAPER_B5_TRANSVERSE", SWIG_PyObj_FromInt((int)wxPAPER_B5_TRANSVERSE));
    PyDict_SetItemString(d,"PAPER_A3_EXTRA", SWIG_PyObj_FromInt((int)wxPAPER_A3_EXTRA));
    PyDict_SetItemString(d,"PAPER_A5_EXTRA", SWIG_PyObj_FromInt((int)wxPAPER_A5_EXTRA));
    PyDict_SetItemString(d,"PAPER_B5_EXTRA", SWIG_PyObj_FromInt((int)wxPAPER_B5_EXTRA));
    PyDict_SetItemString(d,"PAPER_A2", SWIG_PyObj_FromInt((int)wxPAPER_A2));
    PyDict_SetItemString(d,"PAPER_A3_TRANSVERSE", SWIG_PyObj_FromInt((int)wxPAPER_A3_TRANSVERSE));
    PyDict_SetItemString(d,"PAPER_A3_EXTRA_TRANSVERSE", SWIG_PyObj_FromInt((int)wxPAPER_A3_EXTRA_TRANSVERSE));
    PyDict_SetItemString(d,"DUPLEX_SIMPLEX", SWIG_PyObj_FromInt((int)wxDUPLEX_SIMPLEX));
    PyDict_SetItemString(d,"DUPLEX_HORIZONTAL", SWIG_PyObj_FromInt((int)wxDUPLEX_HORIZONTAL));
    PyDict_SetItemString(d,"DUPLEX_VERTICAL", SWIG_PyObj_FromInt((int)wxDUPLEX_VERTICAL));
    PyDict_SetItemString(d,"ITEM_SEPARATOR", SWIG_PyObj_FromInt((int)wxITEM_SEPARATOR));
    PyDict_SetItemString(d,"ITEM_NORMAL", SWIG_PyObj_FromInt((int)wxITEM_NORMAL));
    PyDict_SetItemString(d,"ITEM_CHECK", SWIG_PyObj_FromInt((int)wxITEM_CHECK));
    PyDict_SetItemString(d,"ITEM_RADIO", SWIG_PyObj_FromInt((int)wxITEM_RADIO));
    PyDict_SetItemString(d,"ITEM_MAX", SWIG_PyObj_FromInt((int)wxITEM_MAX));
    PyDict_SetItemString(d,"HT_NOWHERE", SWIG_PyObj_FromInt((int)wxHT_NOWHERE));
    PyDict_SetItemString(d,"HT_SCROLLBAR_FIRST", SWIG_PyObj_FromInt((int)wxHT_SCROLLBAR_FIRST));
    PyDict_SetItemString(d,"HT_SCROLLBAR_ARROW_LINE_1", SWIG_PyObj_FromInt((int)wxHT_SCROLLBAR_ARROW_LINE_1));
    PyDict_SetItemString(d,"HT_SCROLLBAR_ARROW_LINE_2", SWIG_PyObj_FromInt((int)wxHT_SCROLLBAR_ARROW_LINE_2));
    PyDict_SetItemString(d,"HT_SCROLLBAR_ARROW_PAGE_1", SWIG_PyObj_FromInt((int)wxHT_SCROLLBAR_ARROW_PAGE_1));
    PyDict_SetItemString(d,"HT_SCROLLBAR_ARROW_PAGE_2", SWIG_PyObj_FromInt((int)wxHT_SCROLLBAR_ARROW_PAGE_2));
    PyDict_SetItemString(d,"HT_SCROLLBAR_THUMB", SWIG_PyObj_FromInt((int)wxHT_SCROLLBAR_THUMB));
    PyDict_SetItemString(d,"HT_SCROLLBAR_BAR_1", SWIG_PyObj_FromInt((int)wxHT_SCROLLBAR_BAR_1));
    PyDict_SetItemString(d,"HT_SCROLLBAR_BAR_2", SWIG_PyObj_FromInt((int)wxHT_SCROLLBAR_BAR_2));
    PyDict_SetItemString(d,"HT_SCROLLBAR_LAST", SWIG_PyObj_FromInt((int)wxHT_SCROLLBAR_LAST));
    PyDict_SetItemString(d,"HT_WINDOW_OUTSIDE", SWIG_PyObj_FromInt((int)wxHT_WINDOW_OUTSIDE));
    PyDict_SetItemString(d,"HT_WINDOW_INSIDE", SWIG_PyObj_FromInt((int)wxHT_WINDOW_INSIDE));
    PyDict_SetItemString(d,"HT_WINDOW_VERT_SCROLLBAR", SWIG_PyObj_FromInt((int)wxHT_WINDOW_VERT_SCROLLBAR));
    PyDict_SetItemString(d,"HT_WINDOW_HORZ_SCROLLBAR", SWIG_PyObj_FromInt((int)wxHT_WINDOW_HORZ_SCROLLBAR));
    PyDict_SetItemString(d,"HT_WINDOW_CORNER", SWIG_PyObj_FromInt((int)wxHT_WINDOW_CORNER));
    PyDict_SetItemString(d,"HT_MAX", SWIG_PyObj_FromInt((int)wxHT_MAX));
    PyDict_SetItemString(d,"MOD_NONE", SWIG_PyObj_FromInt((int)wxMOD_NONE));
    PyDict_SetItemString(d,"MOD_ALT", SWIG_PyObj_FromInt((int)wxMOD_ALT));
    PyDict_SetItemString(d,"MOD_CONTROL", SWIG_PyObj_FromInt((int)wxMOD_CONTROL));
    PyDict_SetItemString(d,"MOD_SHIFT", SWIG_PyObj_FromInt((int)wxMOD_SHIFT));
    PyDict_SetItemString(d,"MOD_WIN", SWIG_PyObj_FromInt((int)wxMOD_WIN));
    PyDict_SetItemString(d,"UPDATE_UI_NONE", SWIG_PyObj_FromInt((int)wxUPDATE_UI_NONE));
    PyDict_SetItemString(d,"UPDATE_UI_RECURSE", SWIG_PyObj_FromInt((int)wxUPDATE_UI_RECURSE));
    PyDict_SetItemString(d,"UPDATE_UI_FROMIDLE", SWIG_PyObj_FromInt((int)wxUPDATE_UI_FROMIDLE));
    PyDict_SetItemString(d,(char*)"cvar", SWIG_globals);
    SWIG_addvarlink(SWIG_globals,(char*)"EmptyString",_wrap_EmptyString_get, _wrap_EmptyString_set);
    PyDict_SetItemString(d,"BITMAP_TYPE_INVALID", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_INVALID));
    PyDict_SetItemString(d,"BITMAP_TYPE_BMP", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_BMP));
    PyDict_SetItemString(d,"BITMAP_TYPE_ICO", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_ICO));
    PyDict_SetItemString(d,"BITMAP_TYPE_CUR", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_CUR));
    PyDict_SetItemString(d,"BITMAP_TYPE_XBM", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_XBM));
    PyDict_SetItemString(d,"BITMAP_TYPE_XBM_DATA", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_XBM_DATA));
    PyDict_SetItemString(d,"BITMAP_TYPE_XPM", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_XPM));
    PyDict_SetItemString(d,"BITMAP_TYPE_XPM_DATA", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_XPM_DATA));
    PyDict_SetItemString(d,"BITMAP_TYPE_TIF", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_TIF));
    PyDict_SetItemString(d,"BITMAP_TYPE_GIF", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_GIF));
    PyDict_SetItemString(d,"BITMAP_TYPE_PNG", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_PNG));
    PyDict_SetItemString(d,"BITMAP_TYPE_JPEG", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_JPEG));
    PyDict_SetItemString(d,"BITMAP_TYPE_PNM", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_PNM));
    PyDict_SetItemString(d,"BITMAP_TYPE_PCX", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_PCX));
    PyDict_SetItemString(d,"BITMAP_TYPE_PICT", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_PICT));
    PyDict_SetItemString(d,"BITMAP_TYPE_ICON", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_ICON));
    PyDict_SetItemString(d,"BITMAP_TYPE_ANI", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_ANI));
    PyDict_SetItemString(d,"BITMAP_TYPE_IFF", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_IFF));
    PyDict_SetItemString(d,"BITMAP_TYPE_MACCURSOR", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_MACCURSOR));
    PyDict_SetItemString(d,"BITMAP_TYPE_ANY", SWIG_PyObj_FromInt((int)wxBITMAP_TYPE_ANY));
    PyDict_SetItemString(d,"CURSOR_NONE", SWIG_PyObj_FromInt((int)wxCURSOR_NONE));
    PyDict_SetItemString(d,"CURSOR_ARROW", SWIG_PyObj_FromInt((int)wxCURSOR_ARROW));
    PyDict_SetItemString(d,"CURSOR_RIGHT_ARROW", SWIG_PyObj_FromInt((int)wxCURSOR_RIGHT_ARROW));
    PyDict_SetItemString(d,"CURSOR_BULLSEYE", SWIG_PyObj_FromInt((int)wxCURSOR_BULLSEYE));
    PyDict_SetItemString(d,"CURSOR_CHAR", SWIG_PyObj_FromInt((int)wxCURSOR_CHAR));
    PyDict_SetItemString(d,"CURSOR_CROSS", SWIG_PyObj_FromInt((int)wxCURSOR_CROSS));
    PyDict_SetItemString(d,"CURSOR_HAND", SWIG_PyObj_FromInt((int)wxCURSOR_HAND));
    PyDict_SetItemString(d,"CURSOR_IBEAM", SWIG_PyObj_FromInt((int)wxCURSOR_IBEAM));
    PyDict_SetItemString(d,"CURSOR_LEFT_BUTTON", SWIG_PyObj_FromInt((int)wxCURSOR_LEFT_BUTTON));
    PyDict_SetItemString(d,"CURSOR_MAGNIFIER", SWIG_PyObj_FromInt((int)wxCURSOR_MAGNIFIER));
    PyDict_SetItemString(d,"CURSOR_MIDDLE_BUTTON", SWIG_PyObj_FromInt((int)wxCURSOR_MIDDLE_BUTTON));
    PyDict_SetItemString(d,"CURSOR_NO_ENTRY", SWIG_PyObj_FromInt((int)wxCURSOR_NO_ENTRY));
    PyDict_SetItemString(d,"CURSOR_PAINT_BRUSH", SWIG_PyObj_FromInt((int)wxCURSOR_PAINT_BRUSH));
    PyDict_SetItemString(d,"CURSOR_PENCIL", SWIG_PyObj_FromInt((int)wxCURSOR_PENCIL));
    PyDict_SetItemString(d,"CURSOR_POINT_LEFT", SWIG_PyObj_FromInt((int)wxCURSOR_POINT_LEFT));
    PyDict_SetItemString(d,"CURSOR_POINT_RIGHT", SWIG_PyObj_FromInt((int)wxCURSOR_POINT_RIGHT));
    PyDict_SetItemString(d,"CURSOR_QUESTION_ARROW", SWIG_PyObj_FromInt((int)wxCURSOR_QUESTION_ARROW));
    PyDict_SetItemString(d,"CURSOR_RIGHT_BUTTON", SWIG_PyObj_FromInt((int)wxCURSOR_RIGHT_BUTTON));
    PyDict_SetItemString(d,"CURSOR_SIZENESW", SWIG_PyObj_FromInt((int)wxCURSOR_SIZENESW));
    PyDict_SetItemString(d,"CURSOR_SIZENS", SWIG_PyObj_FromInt((int)wxCURSOR_SIZENS));
    PyDict_SetItemString(d,"CURSOR_SIZENWSE", SWIG_PyObj_FromInt((int)wxCURSOR_SIZENWSE));
    PyDict_SetItemString(d,"CURSOR_SIZEWE", SWIG_PyObj_FromInt((int)wxCURSOR_SIZEWE));
    PyDict_SetItemString(d,"CURSOR_SIZING", SWIG_PyObj_FromInt((int)wxCURSOR_SIZING));
    PyDict_SetItemString(d,"CURSOR_SPRAYCAN", SWIG_PyObj_FromInt((int)wxCURSOR_SPRAYCAN));
    PyDict_SetItemString(d,"CURSOR_WAIT", SWIG_PyObj_FromInt((int)wxCURSOR_WAIT));
    PyDict_SetItemString(d,"CURSOR_WATCH", SWIG_PyObj_FromInt((int)wxCURSOR_WATCH));
    PyDict_SetItemString(d,"CURSOR_BLANK", SWIG_PyObj_FromInt((int)wxCURSOR_BLANK));
    PyDict_SetItemString(d,"CURSOR_DEFAULT", SWIG_PyObj_FromInt((int)wxCURSOR_DEFAULT));
    PyDict_SetItemString(d,"CURSOR_COPY_ARROW", SWIG_PyObj_FromInt((int)wxCURSOR_COPY_ARROW));
    PyDict_SetItemString(d,"CURSOR_ARROWWAIT", SWIG_PyObj_FromInt((int)wxCURSOR_ARROWWAIT));
    PyDict_SetItemString(d,"CURSOR_MAX", SWIG_PyObj_FromInt((int)wxCURSOR_MAX));
    SWIG_addvarlink(SWIG_globals,(char*)"DefaultPosition",_wrap_DefaultPosition_get, _wrap_DefaultPosition_set);
    SWIG_addvarlink(SWIG_globals,(char*)"DefaultSize",_wrap_DefaultSize_get, _wrap_DefaultSize_set);
    PyDict_SetItemString(d,"FromStart", SWIG_PyObj_FromInt((int)wxFromStart));
    PyDict_SetItemString(d,"FromCurrent", SWIG_PyObj_FromInt((int)wxFromCurrent));
    PyDict_SetItemString(d,"FromEnd", SWIG_PyObj_FromInt((int)wxFromEnd));
    
    wxPyPtrTypeMap_Add("wxInputStream", "wxPyInputStream");
    
    
    wxPyPtrTypeMap_Add("wxFileSystemHandler", "wxPyFileSystemHandler");
    
    SWIG_addvarlink(SWIG_globals,(char*)"NullImage",_wrap_NullImage_get, _wrap_NullImage_set);
    SWIG_addvarlink(SWIG_globals,(char*)"IMAGE_OPTION_BMP_FORMAT",_wrap_IMAGE_OPTION_BMP_FORMAT_get, _wrap_IMAGE_OPTION_BMP_FORMAT_set);
    SWIG_addvarlink(SWIG_globals,(char*)"IMAGE_OPTION_CUR_HOTSPOT_X",_wrap_IMAGE_OPTION_CUR_HOTSPOT_X_get, _wrap_IMAGE_OPTION_CUR_HOTSPOT_X_set);
    SWIG_addvarlink(SWIG_globals,(char*)"IMAGE_OPTION_CUR_HOTSPOT_Y",_wrap_IMAGE_OPTION_CUR_HOTSPOT_Y_get, _wrap_IMAGE_OPTION_CUR_HOTSPOT_Y_set);
    SWIG_addvarlink(SWIG_globals,(char*)"IMAGE_OPTION_RESOLUTION",_wrap_IMAGE_OPTION_RESOLUTION_get, _wrap_IMAGE_OPTION_RESOLUTION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"IMAGE_OPTION_RESOLUTIONUNIT",_wrap_IMAGE_OPTION_RESOLUTIONUNIT_get, _wrap_IMAGE_OPTION_RESOLUTIONUNIT_set);
    PyDict_SetItemString(d,"IMAGE_RESOLUTION_INCHES", SWIG_PyObj_FromInt((int)wxIMAGE_RESOLUTION_INCHES));
    PyDict_SetItemString(d,"IMAGE_RESOLUTION_CM", SWIG_PyObj_FromInt((int)wxIMAGE_RESOLUTION_CM));
    PyDict_SetItemString(d,"BMP_24BPP", SWIG_PyObj_FromInt((int)wxBMP_24BPP));
    PyDict_SetItemString(d,"BMP_8BPP", SWIG_PyObj_FromInt((int)wxBMP_8BPP));
    PyDict_SetItemString(d,"BMP_8BPP_GREY", SWIG_PyObj_FromInt((int)wxBMP_8BPP_GREY));
    PyDict_SetItemString(d,"BMP_8BPP_GRAY", SWIG_PyObj_FromInt((int)wxBMP_8BPP_GRAY));
    PyDict_SetItemString(d,"BMP_8BPP_RED", SWIG_PyObj_FromInt((int)wxBMP_8BPP_RED));
    PyDict_SetItemString(d,"BMP_8BPP_PALETTE", SWIG_PyObj_FromInt((int)wxBMP_8BPP_PALETTE));
    PyDict_SetItemString(d,"BMP_4BPP", SWIG_PyObj_FromInt((int)wxBMP_4BPP));
    PyDict_SetItemString(d,"BMP_1BPP", SWIG_PyObj_FromInt((int)wxBMP_1BPP));
    PyDict_SetItemString(d,"BMP_1BPP_BW", SWIG_PyObj_FromInt((int)wxBMP_1BPP_BW));
    PyDict_SetItemString(d,"EVENT_PROPAGATE_NONE", SWIG_PyObj_FromInt((int)wxEVENT_PROPAGATE_NONE));
    PyDict_SetItemString(d,"EVENT_PROPAGATE_MAX", SWIG_PyObj_FromInt((int)wxEVENT_PROPAGATE_MAX));
    PyDict_SetItemString(d, "wxEVT_NULL", PyInt_FromLong(wxEVT_NULL));
    PyDict_SetItemString(d, "wxEVT_FIRST", PyInt_FromLong(wxEVT_FIRST));
    PyDict_SetItemString(d, "wxEVT_USER_FIRST", PyInt_FromLong(wxEVT_USER_FIRST));
    PyDict_SetItemString(d, "wxEVT_COMMAND_BUTTON_CLICKED", PyInt_FromLong(wxEVT_COMMAND_BUTTON_CLICKED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_CHECKBOX_CLICKED", PyInt_FromLong(wxEVT_COMMAND_CHECKBOX_CLICKED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_CHOICE_SELECTED", PyInt_FromLong(wxEVT_COMMAND_CHOICE_SELECTED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_LISTBOX_SELECTED", PyInt_FromLong(wxEVT_COMMAND_LISTBOX_SELECTED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_LISTBOX_DOUBLECLICKED", PyInt_FromLong(wxEVT_COMMAND_LISTBOX_DOUBLECLICKED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_CHECKLISTBOX_TOGGLED", PyInt_FromLong(wxEVT_COMMAND_CHECKLISTBOX_TOGGLED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_MENU_SELECTED", PyInt_FromLong(wxEVT_COMMAND_MENU_SELECTED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_TOOL_CLICKED", PyInt_FromLong(wxEVT_COMMAND_TOOL_CLICKED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_SLIDER_UPDATED", PyInt_FromLong(wxEVT_COMMAND_SLIDER_UPDATED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_RADIOBOX_SELECTED", PyInt_FromLong(wxEVT_COMMAND_RADIOBOX_SELECTED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_RADIOBUTTON_SELECTED", PyInt_FromLong(wxEVT_COMMAND_RADIOBUTTON_SELECTED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_SCROLLBAR_UPDATED", PyInt_FromLong(wxEVT_COMMAND_SCROLLBAR_UPDATED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_VLBOX_SELECTED", PyInt_FromLong(wxEVT_COMMAND_VLBOX_SELECTED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_COMBOBOX_SELECTED", PyInt_FromLong(wxEVT_COMMAND_COMBOBOX_SELECTED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_TOOL_RCLICKED", PyInt_FromLong(wxEVT_COMMAND_TOOL_RCLICKED));
    PyDict_SetItemString(d, "wxEVT_COMMAND_TOOL_ENTER", PyInt_FromLong(wxEVT_COMMAND_TOOL_ENTER));
    PyDict_SetItemString(d, "wxEVT_LEFT_DOWN", PyInt_FromLong(wxEVT_LEFT_DOWN));
    PyDict_SetItemString(d, "wxEVT_LEFT_UP", PyInt_FromLong(wxEVT_LEFT_UP));
    PyDict_SetItemString(d, "wxEVT_MIDDLE_DOWN", PyInt_FromLong(wxEVT_MIDDLE_DOWN));
    PyDict_SetItemString(d, "wxEVT_MIDDLE_UP", PyInt_FromLong(wxEVT_MIDDLE_UP));
    PyDict_SetItemString(d, "wxEVT_RIGHT_DOWN", PyInt_FromLong(wxEVT_RIGHT_DOWN));
    PyDict_SetItemString(d, "wxEVT_RIGHT_UP", PyInt_FromLong(wxEVT_RIGHT_UP));
    PyDict_SetItemString(d, "wxEVT_MOTION", PyInt_FromLong(wxEVT_MOTION));
    PyDict_SetItemString(d, "wxEVT_ENTER_WINDOW", PyInt_FromLong(wxEVT_ENTER_WINDOW));
    PyDict_SetItemString(d, "wxEVT_LEAVE_WINDOW", PyInt_FromLong(wxEVT_LEAVE_WINDOW));
    PyDict_SetItemString(d, "wxEVT_LEFT_DCLICK", PyInt_FromLong(wxEVT_LEFT_DCLICK));
    PyDict_SetItemString(d, "wxEVT_MIDDLE_DCLICK", PyInt_FromLong(wxEVT_MIDDLE_DCLICK));
    PyDict_SetItemString(d, "wxEVT_RIGHT_DCLICK", PyInt_FromLong(wxEVT_RIGHT_DCLICK));
    PyDict_SetItemString(d, "wxEVT_SET_FOCUS", PyInt_FromLong(wxEVT_SET_FOCUS));
    PyDict_SetItemString(d, "wxEVT_KILL_FOCUS", PyInt_FromLong(wxEVT_KILL_FOCUS));
    PyDict_SetItemString(d, "wxEVT_CHILD_FOCUS", PyInt_FromLong(wxEVT_CHILD_FOCUS));
    PyDict_SetItemString(d, "wxEVT_MOUSEWHEEL", PyInt_FromLong(wxEVT_MOUSEWHEEL));
    PyDict_SetItemString(d, "wxEVT_NC_LEFT_DOWN", PyInt_FromLong(wxEVT_NC_LEFT_DOWN));
    PyDict_SetItemString(d, "wxEVT_NC_LEFT_UP", PyInt_FromLong(wxEVT_NC_LEFT_UP));
    PyDict_SetItemString(d, "wxEVT_NC_MIDDLE_DOWN", PyInt_FromLong(wxEVT_NC_MIDDLE_DOWN));
    PyDict_SetItemString(d, "wxEVT_NC_MIDDLE_UP", PyInt_FromLong(wxEVT_NC_MIDDLE_UP));
    PyDict_SetItemString(d, "wxEVT_NC_RIGHT_DOWN", PyInt_FromLong(wxEVT_NC_RIGHT_DOWN));
    PyDict_SetItemString(d, "wxEVT_NC_RIGHT_UP", PyInt_FromLong(wxEVT_NC_RIGHT_UP));
    PyDict_SetItemString(d, "wxEVT_NC_MOTION", PyInt_FromLong(wxEVT_NC_MOTION));
    PyDict_SetItemString(d, "wxEVT_NC_ENTER_WINDOW", PyInt_FromLong(wxEVT_NC_ENTER_WINDOW));
    PyDict_SetItemString(d, "wxEVT_NC_LEAVE_WINDOW", PyInt_FromLong(wxEVT_NC_LEAVE_WINDOW));
    PyDict_SetItemString(d, "wxEVT_NC_LEFT_DCLICK", PyInt_FromLong(wxEVT_NC_LEFT_DCLICK));
    PyDict_SetItemString(d, "wxEVT_NC_MIDDLE_DCLICK", PyInt_FromLong(wxEVT_NC_MIDDLE_DCLICK));
    PyDict_SetItemString(d, "wxEVT_NC_RIGHT_DCLICK", PyInt_FromLong(wxEVT_NC_RIGHT_DCLICK));
    PyDict_SetItemString(d, "wxEVT_CHAR", PyInt_FromLong(wxEVT_CHAR));
    PyDict_SetItemString(d, "wxEVT_CHAR_HOOK", PyInt_FromLong(wxEVT_CHAR_HOOK));
    PyDict_SetItemString(d, "wxEVT_NAVIGATION_KEY", PyInt_FromLong(wxEVT_NAVIGATION_KEY));
    PyDict_SetItemString(d, "wxEVT_KEY_DOWN", PyInt_FromLong(wxEVT_KEY_DOWN));
    PyDict_SetItemString(d, "wxEVT_KEY_UP", PyInt_FromLong(wxEVT_KEY_UP));
    PyDict_SetItemString(d, "wxEVT_HOTKEY", PyInt_FromLong(wxEVT_HOTKEY));
    PyDict_SetItemString(d, "wxEVT_SET_CURSOR", PyInt_FromLong(wxEVT_SET_CURSOR));
    PyDict_SetItemString(d, "wxEVT_SCROLL_TOP", PyInt_FromLong(wxEVT_SCROLL_TOP));
    PyDict_SetItemString(d, "wxEVT_SCROLL_BOTTOM", PyInt_FromLong(wxEVT_SCROLL_BOTTOM));
    PyDict_SetItemString(d, "wxEVT_SCROLL_LINEUP", PyInt_FromLong(wxEVT_SCROLL_LINEUP));
    PyDict_SetItemString(d, "wxEVT_SCROLL_LINEDOWN", PyInt_FromLong(wxEVT_SCROLL_LINEDOWN));
    PyDict_SetItemString(d, "wxEVT_SCROLL_PAGEUP", PyInt_FromLong(wxEVT_SCROLL_PAGEUP));
    PyDict_SetItemString(d, "wxEVT_SCROLL_PAGEDOWN", PyInt_FromLong(wxEVT_SCROLL_PAGEDOWN));
    PyDict_SetItemString(d, "wxEVT_SCROLL_THUMBTRACK", PyInt_FromLong(wxEVT_SCROLL_THUMBTRACK));
    PyDict_SetItemString(d, "wxEVT_SCROLL_THUMBRELEASE", PyInt_FromLong(wxEVT_SCROLL_THUMBRELEASE));
    PyDict_SetItemString(d, "wxEVT_SCROLL_ENDSCROLL", PyInt_FromLong(wxEVT_SCROLL_ENDSCROLL));
    PyDict_SetItemString(d, "wxEVT_SCROLLWIN_TOP", PyInt_FromLong(wxEVT_SCROLLWIN_TOP));
    PyDict_SetItemString(d, "wxEVT_SCROLLWIN_BOTTOM", PyInt_FromLong(wxEVT_SCROLLWIN_BOTTOM));
    PyDict_SetItemString(d, "wxEVT_SCROLLWIN_LINEUP", PyInt_FromLong(wxEVT_SCROLLWIN_LINEUP));
    PyDict_SetItemString(d, "wxEVT_SCROLLWIN_LINEDOWN", PyInt_FromLong(wxEVT_SCROLLWIN_LINEDOWN));
    PyDict_SetItemString(d, "wxEVT_SCROLLWIN_PAGEUP", PyInt_FromLong(wxEVT_SCROLLWIN_PAGEUP));
    PyDict_SetItemString(d, "wxEVT_SCROLLWIN_PAGEDOWN", PyInt_FromLong(wxEVT_SCROLLWIN_PAGEDOWN));
    PyDict_SetItemString(d, "wxEVT_SCROLLWIN_THUMBTRACK", PyInt_FromLong(wxEVT_SCROLLWIN_THUMBTRACK));
    PyDict_SetItemString(d, "wxEVT_SCROLLWIN_THUMBRELEASE", PyInt_FromLong(wxEVT_SCROLLWIN_THUMBRELEASE));
    PyDict_SetItemString(d, "wxEVT_SIZE", PyInt_FromLong(wxEVT_SIZE));
    PyDict_SetItemString(d, "wxEVT_MOVE", PyInt_FromLong(wxEVT_MOVE));
    PyDict_SetItemString(d, "wxEVT_CLOSE_WINDOW", PyInt_FromLong(wxEVT_CLOSE_WINDOW));
    PyDict_SetItemString(d, "wxEVT_END_SESSION", PyInt_FromLong(wxEVT_END_SESSION));
    PyDict_SetItemString(d, "wxEVT_QUERY_END_SESSION", PyInt_FromLong(wxEVT_QUERY_END_SESSION));
    PyDict_SetItemString(d, "wxEVT_ACTIVATE_APP", PyInt_FromLong(wxEVT_ACTIVATE_APP));
    PyDict_SetItemString(d, "wxEVT_POWER", PyInt_FromLong(wxEVT_POWER));
    PyDict_SetItemString(d, "wxEVT_ACTIVATE", PyInt_FromLong(wxEVT_ACTIVATE));
    PyDict_SetItemString(d, "wxEVT_CREATE", PyInt_FromLong(wxEVT_CREATE));
    PyDict_SetItemString(d, "wxEVT_DESTROY", PyInt_FromLong(wxEVT_DESTROY));
    PyDict_SetItemString(d, "wxEVT_SHOW", PyInt_FromLong(wxEVT_SHOW));
    PyDict_SetItemString(d, "wxEVT_ICONIZE", PyInt_FromLong(wxEVT_ICONIZE));
    PyDict_SetItemString(d, "wxEVT_MAXIMIZE", PyInt_FromLong(wxEVT_MAXIMIZE));
    PyDict_SetItemString(d, "wxEVT_MOUSE_CAPTURE_CHANGED", PyInt_FromLong(wxEVT_MOUSE_CAPTURE_CHANGED));
    PyDict_SetItemString(d, "wxEVT_PAINT", PyInt_FromLong(wxEVT_PAINT));
    PyDict_SetItemString(d, "wxEVT_ERASE_BACKGROUND", PyInt_FromLong(wxEVT_ERASE_BACKGROUND));
    PyDict_SetItemString(d, "wxEVT_NC_PAINT", PyInt_FromLong(wxEVT_NC_PAINT));
    PyDict_SetItemString(d, "wxEVT_PAINT_ICON", PyInt_FromLong(wxEVT_PAINT_ICON));
    PyDict_SetItemString(d, "wxEVT_MENU_OPEN", PyInt_FromLong(wxEVT_MENU_OPEN));
    PyDict_SetItemString(d, "wxEVT_MENU_CLOSE", PyInt_FromLong(wxEVT_MENU_CLOSE));
    PyDict_SetItemString(d, "wxEVT_MENU_HIGHLIGHT", PyInt_FromLong(wxEVT_MENU_HIGHLIGHT));
    PyDict_SetItemString(d, "wxEVT_CONTEXT_MENU", PyInt_FromLong(wxEVT_CONTEXT_MENU));
    PyDict_SetItemString(d, "wxEVT_SYS_COLOUR_CHANGED", PyInt_FromLong(wxEVT_SYS_COLOUR_CHANGED));
    PyDict_SetItemString(d, "wxEVT_DISPLAY_CHANGED", PyInt_FromLong(wxEVT_DISPLAY_CHANGED));
    PyDict_SetItemString(d, "wxEVT_SETTING_CHANGED", PyInt_FromLong(wxEVT_SETTING_CHANGED));
    PyDict_SetItemString(d, "wxEVT_QUERY_NEW_PALETTE", PyInt_FromLong(wxEVT_QUERY_NEW_PALETTE));
    PyDict_SetItemString(d, "wxEVT_PALETTE_CHANGED", PyInt_FromLong(wxEVT_PALETTE_CHANGED));
    PyDict_SetItemString(d, "wxEVT_DROP_FILES", PyInt_FromLong(wxEVT_DROP_FILES));
    PyDict_SetItemString(d, "wxEVT_DRAW_ITEM", PyInt_FromLong(wxEVT_DRAW_ITEM));
    PyDict_SetItemString(d, "wxEVT_MEASURE_ITEM", PyInt_FromLong(wxEVT_MEASURE_ITEM));
    PyDict_SetItemString(d, "wxEVT_COMPARE_ITEM", PyInt_FromLong(wxEVT_COMPARE_ITEM));
    PyDict_SetItemString(d, "wxEVT_INIT_DIALOG", PyInt_FromLong(wxEVT_INIT_DIALOG));
    PyDict_SetItemString(d, "wxEVT_IDLE", PyInt_FromLong(wxEVT_IDLE));
    PyDict_SetItemString(d, "wxEVT_UPDATE_UI", PyInt_FromLong(wxEVT_UPDATE_UI));
    PyDict_SetItemString(d, "wxEVT_SIZING", PyInt_FromLong(wxEVT_SIZING));
    PyDict_SetItemString(d, "wxEVT_MOVING", PyInt_FromLong(wxEVT_MOVING));
    PyDict_SetItemString(d, "wxEVT_COMMAND_LEFT_CLICK", PyInt_FromLong(wxEVT_COMMAND_LEFT_CLICK));
    PyDict_SetItemString(d, "wxEVT_COMMAND_LEFT_DCLICK", PyInt_FromLong(wxEVT_COMMAND_LEFT_DCLICK));
    PyDict_SetItemString(d, "wxEVT_COMMAND_RIGHT_CLICK", PyInt_FromLong(wxEVT_COMMAND_RIGHT_CLICK));
    PyDict_SetItemString(d, "wxEVT_COMMAND_RIGHT_DCLICK", PyInt_FromLong(wxEVT_COMMAND_RIGHT_DCLICK));
    PyDict_SetItemString(d, "wxEVT_COMMAND_SET_FOCUS", PyInt_FromLong(wxEVT_COMMAND_SET_FOCUS));
    PyDict_SetItemString(d, "wxEVT_COMMAND_KILL_FOCUS", PyInt_FromLong(wxEVT_COMMAND_KILL_FOCUS));
    PyDict_SetItemString(d, "wxEVT_COMMAND_ENTER", PyInt_FromLong(wxEVT_COMMAND_ENTER));
    PyDict_SetItemString(d,"MOUSE_BTN_ANY", SWIG_PyObj_FromInt((int)wxMOUSE_BTN_ANY));
    PyDict_SetItemString(d,"MOUSE_BTN_NONE", SWIG_PyObj_FromInt((int)wxMOUSE_BTN_NONE));
    PyDict_SetItemString(d,"MOUSE_BTN_LEFT", SWIG_PyObj_FromInt((int)wxMOUSE_BTN_LEFT));
    PyDict_SetItemString(d,"MOUSE_BTN_MIDDLE", SWIG_PyObj_FromInt((int)wxMOUSE_BTN_MIDDLE));
    PyDict_SetItemString(d,"MOUSE_BTN_RIGHT", SWIG_PyObj_FromInt((int)wxMOUSE_BTN_RIGHT));
    PyDict_SetItemString(d,"UPDATE_UI_PROCESS_ALL", SWIG_PyObj_FromInt((int)wxUPDATE_UI_PROCESS_ALL));
    PyDict_SetItemString(d,"UPDATE_UI_PROCESS_SPECIFIED", SWIG_PyObj_FromInt((int)wxUPDATE_UI_PROCESS_SPECIFIED));
    PyDict_SetItemString(d,"IDLE_PROCESS_ALL", SWIG_PyObj_FromInt((int)wxIDLE_PROCESS_ALL));
    PyDict_SetItemString(d,"IDLE_PROCESS_SPECIFIED", SWIG_PyObj_FromInt((int)wxIDLE_PROCESS_SPECIFIED));
    PyDict_SetItemString(d,"PYAPP_ASSERT_SUPPRESS", SWIG_PyObj_FromInt((int)wxPYAPP_ASSERT_SUPPRESS));
    PyDict_SetItemString(d,"PYAPP_ASSERT_EXCEPTION", SWIG_PyObj_FromInt((int)wxPYAPP_ASSERT_EXCEPTION));
    PyDict_SetItemString(d,"PYAPP_ASSERT_DIALOG", SWIG_PyObj_FromInt((int)wxPYAPP_ASSERT_DIALOG));
    PyDict_SetItemString(d,"PYAPP_ASSERT_LOG", SWIG_PyObj_FromInt((int)wxPYAPP_ASSERT_LOG));
    PyDict_SetItemString(d,"PRINT_WINDOWS", SWIG_PyObj_FromInt((int)wxPRINT_WINDOWS));
    PyDict_SetItemString(d,"PRINT_POSTSCRIPT", SWIG_PyObj_FromInt((int)wxPRINT_POSTSCRIPT));
    SWIG_addvarlink(SWIG_globals,(char*)"NullAcceleratorTable",_wrap_NullAcceleratorTable_get, _wrap_NullAcceleratorTable_set);
    SWIG_addvarlink(SWIG_globals,(char*)"PanelNameStr",_wrap_PanelNameStr_get, _wrap_PanelNameStr_set);
    SWIG_addvarlink(SWIG_globals,(char*)"DefaultValidator",_wrap_DefaultValidator_get, _wrap_DefaultValidator_set);
    SWIG_addvarlink(SWIG_globals,(char*)"ControlNameStr",_wrap_ControlNameStr_get, _wrap_ControlNameStr_set);
    PyDict_SetItemString(d,"FLEX_GROWMODE_NONE", SWIG_PyObj_FromInt((int)wxFLEX_GROWMODE_NONE));
    PyDict_SetItemString(d,"FLEX_GROWMODE_SPECIFIED", SWIG_PyObj_FromInt((int)wxFLEX_GROWMODE_SPECIFIED));
    PyDict_SetItemString(d,"FLEX_GROWMODE_ALL", SWIG_PyObj_FromInt((int)wxFLEX_GROWMODE_ALL));
    SWIG_addvarlink(SWIG_globals,(char*)"DefaultSpan",_wrap_DefaultSpan_get, _wrap_DefaultSpan_set);
    PyDict_SetItemString(d,"Left", SWIG_PyObj_FromInt((int)wxLeft));
    PyDict_SetItemString(d,"Top", SWIG_PyObj_FromInt((int)wxTop));
    PyDict_SetItemString(d,"Right", SWIG_PyObj_FromInt((int)wxRight));
    PyDict_SetItemString(d,"Bottom", SWIG_PyObj_FromInt((int)wxBottom));
    PyDict_SetItemString(d,"Width", SWIG_PyObj_FromInt((int)wxWidth));
    PyDict_SetItemString(d,"Height", SWIG_PyObj_FromInt((int)wxHeight));
    PyDict_SetItemString(d,"Centre", SWIG_PyObj_FromInt((int)wxCentre));
    PyDict_SetItemString(d,"Center", SWIG_PyObj_FromInt((int)wxCenter));
    PyDict_SetItemString(d,"CentreX", SWIG_PyObj_FromInt((int)wxCentreX));
    PyDict_SetItemString(d,"CentreY", SWIG_PyObj_FromInt((int)wxCentreY));
    PyDict_SetItemString(d,"Unconstrained", SWIG_PyObj_FromInt((int)wxUnconstrained));
    PyDict_SetItemString(d,"AsIs", SWIG_PyObj_FromInt((int)wxAsIs));
    PyDict_SetItemString(d,"PercentOf", SWIG_PyObj_FromInt((int)wxPercentOf));
    PyDict_SetItemString(d,"Above", SWIG_PyObj_FromInt((int)wxAbove));
    PyDict_SetItemString(d,"Below", SWIG_PyObj_FromInt((int)wxBelow));
    PyDict_SetItemString(d,"LeftOf", SWIG_PyObj_FromInt((int)wxLeftOf));
    PyDict_SetItemString(d,"RightOf", SWIG_PyObj_FromInt((int)wxRightOf));
    PyDict_SetItemString(d,"SameAs", SWIG_PyObj_FromInt((int)wxSameAs));
    PyDict_SetItemString(d,"Absolute", SWIG_PyObj_FromInt((int)wxAbsolute));
    
    // Initialize threading, some globals and such
    __wxPyPreStart(d);
    
    
    // Although these are defined in __version__ they need to be here too so
    // that an assert can be done to ensure that the wxPython and the wxWindows
    // versions match.
    PyDict_SetItemString(d,"MAJOR_VERSION", PyInt_FromLong((long)wxMAJOR_VERSION ));
    PyDict_SetItemString(d,"MINOR_VERSION", PyInt_FromLong((long)wxMINOR_VERSION ));
    PyDict_SetItemString(d,"RELEASE_VERSION", PyInt_FromLong((long)wxRELEASE_NUMBER ));
    
}

