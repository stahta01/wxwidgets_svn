/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.27
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/***********************************************************************
 *
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 *
 ************************************************************************/

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
#  if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#    define SWIGTEMPLATEDISAMBIGUATOR template
#  else
#    define SWIGTEMPLATEDISAMBIGUATOR 
#  endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__) || defined(__ICC)
#   define SWIGUNUSED __attribute__ ((unused)) 
# else
#   define SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods for Windows DLLs */
#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   define SWIGEXPORT
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif



#include <Python.h>

/***********************************************************************
 * swigrun.swg
 *
 *     This file contains generic CAPI SWIG runtime support for pointer
 *     type checking.
 *
 ************************************************************************/

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "2"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store inforomation on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;


/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (int)(*f1 - *f2);
  }
  return (l1 - f1) - (l2 - f2);
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}


/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu = 0;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * SWIG API. Portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * for internal method declarations
 * ----------------------------------------------------------------------------- */

#ifndef SWIGINTERN
#  define SWIGINTERN static SWIGUNUSED
#endif

#ifndef SWIGINTERNINLINE
#  define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/*
  Exception handling in wrappers
*/
#define SWIG_fail                goto fail
#define SWIG_arg_fail(arg)       SWIG_Python_ArgFail(arg)
#define SWIG_append_errmsg(msg)   SWIG_Python_AddErrMesg(msg,0)
#define SWIG_preppend_errmsg(msg) SWIG_Python_AddErrMesg(msg,1)
#define SWIG_type_error(type,obj) SWIG_Python_TypeError(type,obj)
#define SWIG_null_ref(type)       SWIG_Python_NullRef(type)

/*
  Contract support
*/
#define SWIG_contract_assert(expr, msg) \
 if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Alloc. memory flags
 * ----------------------------------------------------------------------------- */
#define SWIG_OLDOBJ  1
#define SWIG_NEWOBJ  SWIG_OLDOBJ + 1
#define SWIG_PYSTR   SWIG_NEWOBJ + 1

#ifdef __cplusplus
}
#endif


/***********************************************************************
 * pyrun.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags)    SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags)       SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)
 

/* Python-specific SWIG API */
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags)   SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type)              SWIG_Python_NewPackedObj(ptr, sz, type)

/* Runtime API */
#define SWIG_GetModule(clientdata) SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer) SWIG_Python_SetModule(pointer)

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */
/*
  Use SWIG_NO_COBJECT_TYPES to force the use of strings to represent
  C/C++ pointers in the python side. Very useful for debugging, but
  not always safe.
*/
#if !defined(SWIG_NO_COBJECT_TYPES) && !defined(SWIG_COBJECT_TYPES)
#  define SWIG_COBJECT_TYPES
#endif

/* Flags for pointer conversion */
#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2


/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
#define PyOS_snprintf snprintf
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Create a new pointer string 
 * ----------------------------------------------------------------------------- */
#ifndef SWIG_BUFFER_SIZE
#define SWIG_BUFFER_SIZE 1024
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000
static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_BUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

#if PY_VERSION_HEX < 0x01060000
#define PyObject_Del(op) PyMem_DEL((op))
#endif

#if defined(SWIG_COBJECT_TYPES)
#if !defined(SWIG_COBJECT_PYTHON)
/* -----------------------------------------------------------------------------
 * Implements a simple Swig Object type, and use it instead of PyCObject
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *ptr;
  const char *desc;
} PySwigObject;

/* Declarations for objects of type PySwigObject */

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int flags)
{
  char result[SWIG_BUFFER_SIZE];
  flags = flags;
  if (SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result))) {
    fputs("<Swig Object at ", fp); fputs(result, fp); fputs(">", fp);
    return 0; 
  } else {
    return 1; 
  }
}
  
SWIGRUNTIME PyObject *
PySwigObject_repr(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result)) ?
    PyString_FromFormat("<Swig Object at %s>", result) : 0;
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args && (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0)) {
    PyObject *ofmt = PyString_FromString(fmt);
    if (ofmt) {
      res = PyString_Format(ofmt,args);
      Py_DECREF(ofmt);
    }
    Py_DECREF(args);
  }  
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  int c = strcmp(v->desc, w->desc);
  if (c) {
    return (c > 0) ? 1 : -1;
  } else {
    void *i = v->ptr;
    void *j = w->ptr;
    return (i < j) ? -1 : ((i > j) ? 1 : 0);
  }
}

SWIGRUNTIME void
PySwigObject_dealloc(PySwigObject *self)
{
  PyObject_Del(self);
}

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static char pyswigobject_type__doc__[] = 
    "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */ 
#elif PY_VERSION_HEX >= 0x02000000
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type
#if !defined(__cplusplus)
  ;  
  static int type_init = 0;
  if (!type_init) {
    PyTypeObject tmp
#endif
    = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,					/*ob_size*/
    (char *)"PySwigObject",		/*tp_name*/
    sizeof(PySwigObject),		/*tp_basicsize*/
    0,					/*tp_itemsize*/
    /* methods */
    (destructor)PySwigObject_dealloc,	/*tp_dealloc*/
    (printfunc)PySwigObject_print,	/*tp_print*/
    (getattrfunc)0,			/*tp_getattr*/
    (setattrfunc)0,			/*tp_setattr*/
    (cmpfunc)PySwigObject_compare,	/*tp_compare*/
    (reprfunc)PySwigObject_repr,	/*tp_repr*/
    &PySwigObject_as_number,	        /*tp_as_number*/
    0,					/*tp_as_sequence*/
    0,					/*tp_as_mapping*/
    (hashfunc)0,			/*tp_hash*/
    (ternaryfunc)0,			/*tp_call*/
    (reprfunc)PySwigObject_str,		/*tp_str*/
    /* Space for future expansion */
    0,0,0,0,
    pyswigobject_type__doc__, 	        /* Documentation string */
#if PY_VERSION_HEX >= 0x02000000
    0,                                  /* tp_traverse */
    0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
    0,                                  /* tp_richcompare */
    0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
    0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
    0,0,0,0                             /* tp_alloc -> tp_next */
#endif
    };
#if !defined(__cplusplus)
    pyswigobject_type = tmp;
    type_init = 1;
  }
#endif
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_FromVoidPtrAndDesc(void *ptr, const char *desc)
{
  PySwigObject *self = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (self) {
    self->ptr = ptr;
    self->desc = desc;
  }
  return (PyObject *)self;
}

SWIGRUNTIMEINLINE void *
PySwigObject_AsVoidPtr(PyObject *self)
{
  return ((PySwigObject *)self)->ptr;
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  return ((PySwigObject *)self)->desc;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  const char *desc;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int flags)
{
  char result[SWIG_BUFFER_SIZE];
  flags = flags;
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->desc,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->desc);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->desc);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->desc);
  } else {
    return PyString_FromString(v->desc);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  int c = strcmp(v->desc, w->desc);
  if (c) {
    return (c > 0) ? 1 : -1;
  } else {
    size_t i = v->size;
    size_t j = w->size;
    int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
    return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
  }
}

SWIGRUNTIME void
PySwigPacked_dealloc(PySwigPacked *self)
{
  free(self->pack);
  PyObject_Del(self);
}

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static char pyswigpacked_type__doc__[] = 
    "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type
#if !defined(__cplusplus)
  ;
  static int type_init = 0;  
  if (!type_init) {
    PyTypeObject tmp
#endif
    = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,					/*ob_size*/
    (char *)"PySwigPacked",		/*tp_name*/
    sizeof(PySwigPacked),		/*tp_basicsize*/
    0,					/*tp_itemsize*/
    /* methods */
    (destructor)PySwigPacked_dealloc,	/*tp_dealloc*/
    (printfunc)PySwigPacked_print,	/*tp_print*/
    (getattrfunc)0,			/*tp_getattr*/
    (setattrfunc)0,			/*tp_setattr*/
    (cmpfunc)PySwigPacked_compare,	/*tp_compare*/
    (reprfunc)PySwigPacked_repr,	/*tp_repr*/
    0,	                                /*tp_as_number*/
    0,					/*tp_as_sequence*/
    0,					/*tp_as_mapping*/
    (hashfunc)0,			/*tp_hash*/
    (ternaryfunc)0,			/*tp_call*/
    (reprfunc)PySwigPacked_str,		/*tp_str*/
    /* Space for future expansion */
    0,0,0,0,
    pyswigpacked_type__doc__, 	        /* Documentation string */
#if PY_VERSION_HEX >= 0x02000000
    0,                                  /* tp_traverse */
    0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
    0,                                  /* tp_richcompare */
    0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000         
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
    0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
    0,0,0,0                             /* tp_alloc -> tp_next */
#endif
    };
#if !defined(__cplusplus)
    pyswigpacked_type = tmp;
    type_init = 1;
  }
#endif
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_FromDataAndDesc(void *ptr, size_t size, const char *desc)
{
  PySwigPacked *self = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (self == NULL) {
    return NULL;
  } else {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      self->pack = pack;
      self->desc = desc;
      self->size = size;
      return (PyObject *) self;
    }
    return NULL;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  PySwigPacked *self = (PySwigPacked *)obj;
  if (self->size != size) return 0;
  memcpy(ptr, self->pack, size);
  return self->desc;
}

SWIGRUNTIMEINLINE const char *
PySwigPacked_GetDesc(PyObject *self)
{
  return ((PySwigPacked *)self)->desc;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

#else
/* -----------------------------------------------------------------------------
 * Use the old Python PyCObject instead of PySwigObject
 * ----------------------------------------------------------------------------- */

#define PySwigObject_GetDesc(obj)	           PyCObject_GetDesc(obj)
#define PySwigObject_Check(obj)	           PyCObject_Check(obj)
#define PySwigObject_AsVoidPtr(obj)	   PyCObject_AsVoidPtr(obj)
#define PySwigObject_FromVoidPtrAndDesc(p, d)  PyCObject_FromVoidPtrAndDesc(p, d, NULL)

#endif

#endif

/* -----------------------------------------------------------------------------
 * errors manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}

SWIGRUNTIMEINLINE void
SWIG_Python_NullRef(const char *type)
{
  if (type) {
    PyErr_Format(PyExc_TypeError, "null reference of type '%s' was received",type);
  } else {
    PyErr_Format(PyExc_TypeError, "null reference was received");
  }
}

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}

SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}


/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* Convert a pointer value */
SWIGRUNTIME int
SWIG_Python_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  const char *c = 0;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;
  void *vptr;
  
  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }

#ifdef SWIG_COBJECT_TYPES
  if (!(PySwigObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PySwigObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  vptr = PySwigObject_AsVoidPtr(obj);
  c = (const char *) PySwigObject_GetDesc(obj);
  if (newref) { Py_DECREF(obj); }
  goto type_check;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  c = SWIG_UnpackVoidPtr(c, &vptr, ty->name);
  if (newref) { Py_DECREF(obj); }
  if (!c) goto type_error;
#endif

type_check:
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,vptr);
  } else {
    *ptr = vptr;
  }
  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
    PyObject_SetAttrString(pyobj,(char*)"thisown",Py_False);
  }
  return 0;

type_error:
  PyErr_Clear();
  if (pyobj && !obj) {    
    obj = pyobj;
    if (PyCFunction_Check(obj)) {
      /* here we get the method pointer for callbacks */
      char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
      c = doc ? strstr(doc, "swig_ptr: ") : 0;
      if (c) {
	c = ty ? SWIG_UnpackVoidPtr(c + 10, &vptr, ty->name) : 0;
	if (!c) goto type_error;
	goto type_check;
      }
    }
  }
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
    } else {
      SWIG_Python_TypeError("C/C++ pointer", obj);
    }
  }
  return -1;
}

/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  const char *c = 0;

#if defined(SWIG_COBJECT_TYPES) && !defined(SWIG_COBJECT_PYTHON)
  c = PySwigPacked_UnpackData(obj, ptr, sz);
#else
  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  c = SWIG_UnpackDataName(c, ptr, sz, ty->name);
#endif
  if (!c) goto type_error;
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:
  PyErr_Clear();
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
    } else {
      SWIG_Python_TypeError("C/C++ packed data", obj);
    }
  }
  return -1;
}  

/* Create a new array object */
SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj = 0;
  if (!type) {
    if (!PyErr_Occurred()) {
      PyErr_Format(PyExc_TypeError, "Swig: null type passed to NewPointerObj");
    }
    return robj;
  }
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PySwigObject_FromVoidPtrAndDesc((void *) ptr, (char *)type->name);
#else
  {
    char result[SWIG_BUFFER_SIZE];
    robj = SWIG_PackVoidPtr(result, ptr, type->name, sizeof(result)) ?
      PyString_FromString(result) : 0;
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
        PyObject_SetAttrString(inst,(char*)"thisown",Py_True);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  PyObject *robj = 0;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#if defined(SWIG_COBJECT_TYPES) && !defined(SWIG_COBJECT_PYTHON)
  robj = PySwigPacked_FromDataAndDesc((void *) ptr, sz, (char *)type->name);
#else
  {
    char result[SWIG_BUFFER_SIZE];
    robj = SWIG_PackDataName(result, ptr, sz, type->name, sizeof(result)) ?
      PyString_FromString(result) : 0;
  }
#endif
  return robj;
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return -1;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return -1;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return -1;
  }
  if (PyDict_SetItemString(dict, name, o))
    return -1;
  Py_DECREF(o);
  return 0;
}
#endif

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, NULL);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  }
}

#ifdef __cplusplus
}
#endif


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_char swig_types[0]
#define SWIGTYPE_p_form_ops_t swig_types[1]
#define SWIGTYPE_p_int swig_types[2]
#define SWIGTYPE_p_unsigned_char swig_types[3]
#define SWIGTYPE_p_unsigned_int swig_types[4]
#define SWIGTYPE_p_unsigned_long swig_types[5]
#define SWIGTYPE_p_void swig_types[6]
#define SWIGTYPE_p_wxANIHandler swig_types[7]
#define SWIGTYPE_p_wxAcceleratorTable swig_types[8]
#define SWIGTYPE_p_wxActivateEvent swig_types[9]
#define SWIGTYPE_p_wxBMPHandler swig_types[10]
#define SWIGTYPE_p_wxBitmap swig_types[11]
#define SWIGTYPE_p_wxBoxSizer swig_types[12]
#define SWIGTYPE_p_wxBusyInfo swig_types[13]
#define SWIGTYPE_p_wxCURHandler swig_types[14]
#define SWIGTYPE_p_wxChildFocusEvent swig_types[15]
#define SWIGTYPE_p_wxClipboard swig_types[16]
#define SWIGTYPE_p_wxCloseEvent swig_types[17]
#define SWIGTYPE_p_wxColour swig_types[18]
#define SWIGTYPE_p_wxCommandEvent swig_types[19]
#define SWIGTYPE_p_wxContextMenuEvent swig_types[20]
#define SWIGTYPE_p_wxControl swig_types[21]
#define SWIGTYPE_p_wxControlWithItems swig_types[22]
#define SWIGTYPE_p_wxDC swig_types[23]
#define SWIGTYPE_p_wxDateEvent swig_types[24]
#define SWIGTYPE_p_wxDisplayChangedEvent swig_types[25]
#define SWIGTYPE_p_wxDropFilesEvent swig_types[26]
#define SWIGTYPE_p_wxDuplexMode swig_types[27]
#define SWIGTYPE_p_wxEraseEvent swig_types[28]
#define SWIGTYPE_p_wxEvent swig_types[29]
#define SWIGTYPE_p_wxEvtHandler swig_types[30]
#define SWIGTYPE_p_wxFSFile swig_types[31]
#define SWIGTYPE_p_wxFileHistory swig_types[32]
#define SWIGTYPE_p_wxFileSystem swig_types[33]
#define SWIGTYPE_p_wxFlexGridSizer swig_types[34]
#define SWIGTYPE_p_wxFocusEvent swig_types[35]
#define SWIGTYPE_p_wxFont swig_types[36]
#define SWIGTYPE_p_wxGBSizerItem swig_types[37]
#define SWIGTYPE_p_wxGIFHandler swig_types[38]
#define SWIGTYPE_p_wxGridBagSizer swig_types[39]
#define SWIGTYPE_p_wxGridSizer swig_types[40]
#define SWIGTYPE_p_wxICOHandler swig_types[41]
#define SWIGTYPE_p_wxIconizeEvent swig_types[42]
#define SWIGTYPE_p_wxIdleEvent swig_types[43]
#define SWIGTYPE_p_wxImage swig_types[44]
#define SWIGTYPE_p_wxImageHandler swig_types[45]
#define SWIGTYPE_p_wxIndividualLayoutConstraint swig_types[46]
#define SWIGTYPE_p_wxInitDialogEvent swig_types[47]
#define SWIGTYPE_p_wxJPEGHandler swig_types[48]
#define SWIGTYPE_p_wxJoystickEvent swig_types[49]
#define SWIGTYPE_p_wxKeyEvent swig_types[50]
#define SWIGTYPE_p_wxLayoutConstraints swig_types[51]
#define SWIGTYPE_p_wxMaximizeEvent swig_types[52]
#define SWIGTYPE_p_wxMemoryBuffer swig_types[53]
#define SWIGTYPE_p_wxMenu swig_types[54]
#define SWIGTYPE_p_wxMenuBar swig_types[55]
#define SWIGTYPE_p_wxMenuEvent swig_types[56]
#define SWIGTYPE_p_wxMenuItem swig_types[57]
#define SWIGTYPE_p_wxMouseCaptureChangedEvent swig_types[58]
#define SWIGTYPE_p_wxMouseEvent swig_types[59]
#define SWIGTYPE_p_wxMoveEvent swig_types[60]
#define SWIGTYPE_p_wxNavigationKeyEvent swig_types[61]
#define SWIGTYPE_p_wxNcPaintEvent swig_types[62]
#define SWIGTYPE_p_wxNotifyEvent swig_types[63]
#define SWIGTYPE_p_wxObject swig_types[64]
#define SWIGTYPE_p_wxPCXHandler swig_types[65]
#define SWIGTYPE_p_wxPNGHandler swig_types[66]
#define SWIGTYPE_p_wxPNMHandler swig_types[67]
#define SWIGTYPE_p_wxPaintEvent swig_types[68]
#define SWIGTYPE_p_wxPaletteChangedEvent swig_types[69]
#define SWIGTYPE_p_wxPaperSize swig_types[70]
#define SWIGTYPE_p_wxPoint swig_types[71]
#define SWIGTYPE_p_wxProcessEvent swig_types[72]
#define SWIGTYPE_p_wxPyApp swig_types[73]
#define SWIGTYPE_p_wxPyCommandEvent swig_types[74]
#define SWIGTYPE_p_wxPyEvent swig_types[75]
#define SWIGTYPE_p_wxPyImageHandler swig_types[76]
#define SWIGTYPE_p_wxPyProcess swig_types[77]
#define SWIGTYPE_p_wxPySizer swig_types[78]
#define SWIGTYPE_p_wxPyTimer swig_types[79]
#define SWIGTYPE_p_wxPyValidator swig_types[80]
#define SWIGTYPE_p_wxQueryNewPaletteEvent swig_types[81]
#define SWIGTYPE_p_wxRect swig_types[82]
#define SWIGTYPE_p_wxScrollBar swig_types[83]
#define SWIGTYPE_p_wxScrollEvent swig_types[84]
#define SWIGTYPE_p_wxScrollWinEvent swig_types[85]
#define SWIGTYPE_p_wxSetCursorEvent swig_types[86]
#define SWIGTYPE_p_wxShowEvent swig_types[87]
#define SWIGTYPE_p_wxSizeEvent swig_types[88]
#define SWIGTYPE_p_wxSizer swig_types[89]
#define SWIGTYPE_p_wxSizerItem swig_types[90]
#define SWIGTYPE_p_wxStaticBoxSizer swig_types[91]
#define SWIGTYPE_p_wxStdDialogButtonSizer swig_types[92]
#define SWIGTYPE_p_wxStyledTextCtrl swig_types[93]
#define SWIGTYPE_p_wxStyledTextEvent swig_types[94]
#define SWIGTYPE_p_wxSysColourChangedEvent swig_types[95]
#define SWIGTYPE_p_wxSystemOptions swig_types[96]
#define SWIGTYPE_p_wxTIFFHandler swig_types[97]
#define SWIGTYPE_p_wxTimerEvent swig_types[98]
#define SWIGTYPE_p_wxToolTip swig_types[99]
#define SWIGTYPE_p_wxUpdateUIEvent swig_types[100]
#define SWIGTYPE_p_wxValidator swig_types[101]
#define SWIGTYPE_p_wxWindow swig_types[102]
#define SWIGTYPE_p_wxWindowCreateEvent swig_types[103]
#define SWIGTYPE_p_wxWindowDestroyEvent swig_types[104]
#define SWIGTYPE_p_wxXPMHandler swig_types[105]
#define SWIGTYPE_ptrdiff_t swig_types[106]
#define SWIGTYPE_std__ptrdiff_t swig_types[107]
#define SWIGTYPE_unsigned_int swig_types[108]
static swig_type_info *swig_types[110];
static swig_module_info swig_module = {swig_types, 109, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _stc.so
  ------------------------------------------------*/
#define SWIG_init    init_stc

#define SWIG_name    "_stc"

#include "wx/wxPython/wxPython.h"
#include "wx/wxPython/pyclasses.h"
#include <wx/stc/stc.h>


 static const wxString wxPySTCNameStr(wxSTCNameStr); 

  /*@/opt/swig/share/swig/1.3.27/python/pymacros.swg,72,SWIG_define@*/
#define SWIG_From_int PyInt_FromLong
/*@@*/


#include <limits.h>


SWIGINTERN int
  SWIG_CheckLongInRange(long value, long min_value, long max_value,
			const char *errmsg)
{
  if (value < min_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError, 
		   "value %ld is less than '%s' minimum %ld", 
		   value, errmsg, min_value);
    }
    return 0;    
  } else if (value > max_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError,
		   "value %ld is greater than '%s' maximum %ld", 
		   value, errmsg, max_value);
    }
    return 0;
  }
  return 1;
}


SWIGINTERN int
SWIG_AsVal_long(PyObject* obj, long* val)
{
    if (PyNumber_Check(obj)) {
        if (val) *val = PyInt_AsLong(obj);
        return 1;
    }
    else {
        SWIG_type_error("number", obj);
    }
    return 0;
}


#if INT_MAX != LONG_MAX
SWIGINTERN int
  SWIG_AsVal_int(PyObject *obj, int *val)
{ 
  const char* errmsg = val ? "int" : (char*)0;
  long v;
  if (SWIG_AsVal_long(obj, &v)) {
    if (SWIG_CheckLongInRange(v, INT_MIN,INT_MAX, errmsg)) {
      if (val) *val = static_cast<int >(v);
      return 1;
    } else {
      return 0;
    }
  } else {
    PyErr_Clear();
  }
  if (val) {
    SWIG_type_error(errmsg, obj);
  }
  return 0;    
}
#else
SWIGINTERNINLINE int
  SWIG_AsVal_int(PyObject *obj, int *val)
{
  return SWIG_AsVal_long(obj,(long*)val);
}
#endif


SWIGINTERNINLINE int
SWIG_As_int(PyObject* obj)
{
  int v;
  if (!SWIG_AsVal_int(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(int));
  }
  return v;
}


SWIGINTERNINLINE long
SWIG_As_long(PyObject* obj)
{
  long v;
  if (!SWIG_AsVal_long(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(long));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_int(PyObject* obj)
{
  return SWIG_AsVal_int(obj, (int*)0);
}

  
SWIGINTERNINLINE int
SWIG_Check_long(PyObject* obj)
{
  return SWIG_AsVal_long(obj, (long*)0);
}


SWIGINTERN int
  SWIG_AsVal_bool(PyObject *obj, bool *val)
{
  if (obj == Py_True) {
    if (val) *val = true;
    return 1;
  }
  if (obj == Py_False) {
    if (val) *val = false;
    return 1;
  }
  int res = 0;
  if (SWIG_AsVal_int(obj, &res)) {    
    if (val) *val = res ? true : false;
    return 1;
  } else {
    PyErr_Clear();
  }  
  if (val) {
    SWIG_type_error("bool", obj);
  }
  return 0;
}


SWIGINTERNINLINE bool
SWIG_As_bool(PyObject* obj)
{
  bool v;
  if (!SWIG_AsVal_bool(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(bool));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_bool(PyObject* obj)
{
  return SWIG_AsVal_bool(obj, (bool*)0);
}


  static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;
    
    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }            
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
  }



/* returns SWIG_OLDOBJ if the input is a raw char*, SWIG_PYSTR if is a PyString */
SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize)
{
  static swig_type_info* pchar_info = 0;
  char* vptr = 0;
  if (!pchar_info) pchar_info = SWIG_TypeQuery("char *");
  if (SWIG_ConvertPtr(obj, (void**)&vptr, pchar_info, 0) != -1) {
    if (cptr) *cptr = vptr;
    if (psize) *psize = vptr ? (strlen(vptr) + 1) : 0;
    return SWIG_OLDOBJ;
  } else {
    PyErr_Clear();
    if (PyString_Check(obj)) {
      if (cptr) {
	*cptr = PyString_AS_STRING(obj);
	if (psize) {
	  *psize = PyString_GET_SIZE(obj) + 1;
	}
      }
      return SWIG_PYSTR;
    }
  }
  if (cptr) {
    SWIG_type_error("char *", obj);
  }
  return 0;
}


SWIGINTERNINLINE int
SWIG_AsCharPtr(PyObject *obj, char **val)
{
  if (SWIG_AsCharPtrAndSize(obj, val, (size_t*)(0))) {
    return 1;
  }
  if (val) {
    PyErr_Clear();
    SWIG_type_error("char *", obj);
  }
  return 0;
}


  /*@/opt/swig/share/swig/1.3.27/python/pymacros.swg,72,SWIG_define@*/
#define SWIG_From_long PyInt_FromLong
/*@@*/

#ifdef __cplusplus
extern "C" {
#endif
static int _wrap_STCNameStr_set(PyObject *) {
    PyErr_SetString(PyExc_TypeError,"Variable STCNameStr is read-only.");
    return 1;
}


static PyObject *_wrap_STCNameStr_get(void) {
    PyObject *pyobj = NULL;
    
    {
#if wxUSE_UNICODE
        pyobj = PyUnicode_FromWideChar((&wxPySTCNameStr)->c_str(), (&wxPySTCNameStr)->Len());
#else
        pyobj = PyString_FromStringAndSize((&wxPySTCNameStr)->c_str(), (&wxPySTCNameStr)->Len());
#endif
    }
    return pyobj;
}


static PyObject *_wrap_new_StyledTextCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxWindow *arg1 = (wxWindow *) 0 ;
    int arg2 = (int) wxID_ANY ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) 0 ;
    wxString const &arg6_defvalue = wxPySTCNameStr ;
    wxString *arg6 = (wxString *) &arg6_defvalue ;
    wxStyledTextCtrl *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    bool temp6 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOOO:new_StyledTextCtrl",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = static_cast<long >(SWIG_As_long(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = wxString_in_helper(obj5);
            if (arg6 == NULL) SWIG_fail;
            temp6 = true;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxStyledTextCtrl *)new wxStyledTextCtrl(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5,(wxString const &)*arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxStyledTextCtrl, 1);
    {
        if (temp6)
        delete arg6;
    }
    return resultobj;
    fail:
    {
        if (temp6)
        delete arg6;
    }
    return NULL;
}


static PyObject *_wrap_new_PreStyledTextCtrl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PreStyledTextCtrl",kwnames)) goto fail;
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxStyledTextCtrl *)new wxStyledTextCtrl();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxStyledTextCtrl, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Create(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    int arg3 = (int) wxID_ANY ;
    wxPoint const &arg4_defvalue = wxDefaultPosition ;
    wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
    wxSize const &arg5_defvalue = wxDefaultSize ;
    wxSize *arg5 = (wxSize *) &arg5_defvalue ;
    long arg6 = (long) 0 ;
    wxString const &arg7_defvalue = wxSTCNameStr ;
    wxString *arg7 = (wxString *) &arg7_defvalue ;
    bool result;
    wxPoint temp4 ;
    wxSize temp5 ;
    bool temp7 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOOO:StyledTextCtrl_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (obj2) {
        {
            arg3 = static_cast<int >(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = static_cast<long >(SWIG_As_long(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = wxString_in_helper(obj6);
            if (arg7 == NULL) SWIG_fail;
            temp7 = true;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Create(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxString const &)*arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp7)
        delete arg7;
    }
    return resultobj;
    fail:
    {
        if (temp7)
        delete arg7;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AddText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AddText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AddStyledText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxMemoryBuffer *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AddStyledText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError, "String buffer expected");
            SWIG_fail;
        }
        char* str = PyString_AS_STRING(obj1);
        int   len = PyString_GET_SIZE(obj1);
        arg2 = new wxMemoryBuffer(len);
        temp2 = true;
        memcpy(arg2->GetData(), str, len);
        arg2->SetDataLen(len);
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddStyledText((wxMemoryBuffer const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2) delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2) delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_InsertText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_InsertText",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->InsertText(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ClearAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ClearAll",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearAll();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ClearDocumentStyle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ClearDocumentStyle",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearDocumentStyle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLength(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetLength",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLength();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCharAt(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetCharAt",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetCharAt(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCurrentPos(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCurrentPos",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetCurrentPos();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetAnchor(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetAnchor",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetAnchor();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetStyleAt(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetStyleAt",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetStyleAt(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Redo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_Redo",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Redo();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetUndoCollection(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "collectUndo", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetUndoCollection",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetUndoCollection(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SelectAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_SelectAll",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SelectAll();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSavePoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_SetSavePoint",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSavePoint();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetStyledText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    wxMemoryBuffer result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "startPos",(char *) "endPos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_GetStyledText",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetStyledText(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = PyString_FromStringAndSize((char*)(&result)->GetData(), (&result)->GetDataLen());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CanRedo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CanRedo",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CanRedo();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerLineFromHandle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handle", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_MarkerLineFromHandle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->MarkerLineFromHandle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerDeleteHandle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handle", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_MarkerDeleteHandle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MarkerDeleteHandle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetUndoCollection(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetUndoCollection",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetUndoCollection();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetViewWhiteSpace(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetViewWhiteSpace",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetViewWhiteSpace();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetViewWhiteSpace(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "viewWS", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetViewWhiteSpace",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetViewWhiteSpace(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PositionFromPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxPoint arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_PositionFromPoint",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxPoint * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_wxPoint, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("wxPoint");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->PositionFromPoint(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PositionFromPointClose(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_PositionFromPointClose",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->PositionFromPointClose(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GotoLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GotoLine",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GotoLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GotoPos(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GotoPos",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GotoPos(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetAnchor(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "posAnchor", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetAnchor",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAnchor(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCurLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int *arg2 = (int *) 0 ;
    wxString result;
    int temp2 ;
    int res2 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCurLine",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetCurLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_int, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetEndStyled(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetEndStyled",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetEndStyled();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ConvertEOLs(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "eolMode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_ConvertEOLs",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ConvertEOLs(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetEOLMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetEOLMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetEOLMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetEOLMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "eolMode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetEOLMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEOLMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StartStyling(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "mask", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StartStyling",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StartStyling(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetStyling(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "length",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetStyling",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetStyling(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetBufferedDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetBufferedDraw",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetBufferedDraw();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetBufferedDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "buffered", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetBufferedDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBufferedDraw(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetTabWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "tabWidth", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetTabWidth",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTabWidth(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetTabWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetTabWidth",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetTabWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetCodePage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "codePage", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetCodePage",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCodePage(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerDefine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    wxColour const &arg4_defvalue = wxNullColour ;
    wxColour *arg4 = (wxColour *) &arg4_defvalue ;
    wxColour const &arg5_defvalue = wxNullColour ;
    wxColour *arg5 = (wxColour *) &arg5_defvalue ;
    wxColour temp4 ;
    wxColour temp5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "markerNumber",(char *) "markerSymbol",(char *) "foreground",(char *) "background", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:StyledTextCtrl_MarkerDefine",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxColour_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxColour_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MarkerDefine(arg2,arg3,(wxColour const &)*arg4,(wxColour const &)*arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerSetForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "markerNumber",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_MarkerSetForeground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MarkerSetForeground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerSetBackground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "markerNumber",(char *) "back", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_MarkerSetBackground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MarkerSetBackground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerAdd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line",(char *) "markerNumber", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_MarkerAdd",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->MarkerAdd(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line",(char *) "markerNumber", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_MarkerDelete",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MarkerDelete(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerDeleteAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "markerNumber", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_MarkerDeleteAll",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MarkerDeleteAll(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerGet(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_MarkerGet",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->MarkerGet(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerNext(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "lineStart",(char *) "markerMask", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_MarkerNext",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->MarkerNext(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerPrevious(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "lineStart",(char *) "markerMask", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_MarkerPrevious",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->MarkerPrevious(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MarkerDefineBitmap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxBitmap *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "markerNumber",(char *) "bmp", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_MarkerDefineBitmap",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxBitmap, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("wxBitmap");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MarkerDefineBitmap(arg2,(wxBitmap const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetMarginType(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "margin",(char *) "marginType", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetMarginType",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMarginType(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetMarginType(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "margin", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetMarginType",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetMarginType(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetMarginWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "margin",(char *) "pixelWidth", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetMarginWidth",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMarginWidth(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetMarginWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "margin", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetMarginWidth",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetMarginWidth(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetMarginMask(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "margin",(char *) "mask", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetMarginMask",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMarginMask(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetMarginMask(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "margin", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetMarginMask",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetMarginMask(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetMarginSensitive(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "margin",(char *) "sensitive", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetMarginSensitive",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMarginSensitive(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetMarginSensitive(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "margin", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetMarginSensitive",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetMarginSensitive(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleClearAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_StyleClearAll",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleClearAll();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetForeground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetForeground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetBackground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "back", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetBackground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetBackground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetBold(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "bold", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetBold",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetBold(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetItalic(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "italic", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetItalic",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetItalic(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "sizePoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetFaceName(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "fontName", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetFaceName",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetFaceName(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetEOLFilled(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "filled", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetEOLFilled",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetEOLFilled(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleResetDefault(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_StyleResetDefault",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleResetDefault();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetUnderline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "underline", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetUnderline",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetUnderline(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetCase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "caseForce", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetCase",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetCase(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetHotSpot(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "hotspot", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetHotSpot",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetHotSpot(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSelForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useSetting",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetSelForeground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSelForeground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSelBackground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useSetting",(char *) "back", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetSelBackground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSelBackground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetCaretForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetCaretForeground",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCaretForeground((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CmdKeyAssign(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "key",(char *) "modifiers",(char *) "cmd", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:StyledTextCtrl_CmdKeyAssign",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<int >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CmdKeyAssign(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CmdKeyClear(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "key",(char *) "modifiers", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_CmdKeyClear",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CmdKeyClear(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CmdKeyClearAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CmdKeyClearAll",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CmdKeyClearAll();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetStyleBytes(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    char *arg3 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "length",(char *) "styleBytes", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetStyleBytes",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (!SWIG_AsCharPtr(obj2, (char**)&arg3)) {
        SWIG_arg_fail(3);SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetStyleBytes(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "visible", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetVisible",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetVisible(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCaretPeriod(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCaretPeriod",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetCaretPeriod();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetCaretPeriod(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "periodMilliseconds", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetCaretPeriod",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCaretPeriod(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetWordChars(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "characters", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetWordChars",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWordChars((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_BeginUndoAction(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_BeginUndoAction",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->BeginUndoAction();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_EndUndoAction(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_EndUndoAction",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EndUndoAction();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_IndicatorSetStyle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "indic",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_IndicatorSetStyle",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->IndicatorSetStyle(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_IndicatorGetStyle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "indic", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_IndicatorGetStyle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->IndicatorGetStyle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_IndicatorSetForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "indic",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_IndicatorSetForeground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->IndicatorSetForeground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_IndicatorGetForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "indic", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_IndicatorGetForeground",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->IndicatorGetForeground(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour(static_cast<wxColour & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetWhitespaceForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useSetting",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetWhitespaceForeground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWhitespaceForeground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetWhitespaceBackground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useSetting",(char *) "back", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetWhitespaceBackground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWhitespaceBackground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetStyleBits(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bits", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetStyleBits",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetStyleBits(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetStyleBits(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetStyleBits",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetStyleBits();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetLineState(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line",(char *) "state", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetLineState",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLineState(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLineState(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetLineState",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLineState(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetMaxLineState(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetMaxLineState",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetMaxLineState();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCaretLineVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCaretLineVisible",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetCaretLineVisible();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetCaretLineVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetCaretLineVisible",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCaretLineVisible(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCaretLineBack(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCaretLineBack",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetCaretLineBack();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour(static_cast<wxColour & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetCaretLineBack(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "back", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetCaretLineBack",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCaretLineBack((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetChangeable(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "changeable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetChangeable",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetChangeable(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompShow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "lenEntered",(char *) "itemList", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_AutoCompShow",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompShow(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompCancel(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompCancel",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompCancel();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompActive(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompActive",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->AutoCompActive();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompPosStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompPosStart",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->AutoCompPosStart();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompComplete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompComplete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompComplete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompStops(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "characterSet", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompStops",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompStops((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompSetSeparator(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "separatorCharacter", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompSetSeparator",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompSetSeparator(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompGetSeparator(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompGetSeparator",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->AutoCompGetSeparator();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompSelect(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompSelect",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompSelect((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompSetCancelAtStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "cancel", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompSetCancelAtStart",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompSetCancelAtStart(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompGetCancelAtStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompGetCancelAtStart",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->AutoCompGetCancelAtStart();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompSetFillUps(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "characterSet", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompSetFillUps",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompSetFillUps((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompSetChooseSingle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "chooseSingle", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompSetChooseSingle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompSetChooseSingle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompGetChooseSingle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompGetChooseSingle",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->AutoCompGetChooseSingle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompSetIgnoreCase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "ignoreCase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompSetIgnoreCase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompSetIgnoreCase(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompGetIgnoreCase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompGetIgnoreCase",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->AutoCompGetIgnoreCase();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_UserListShow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "listType",(char *) "itemList", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_UserListShow",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->UserListShow(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompSetAutoHide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "autoHide", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompSetAutoHide",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompSetAutoHide(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompGetAutoHide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompGetAutoHide",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->AutoCompGetAutoHide();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompSetDropRestOfWord(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dropRestOfWord", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompSetDropRestOfWord",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompSetDropRestOfWord(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompGetDropRestOfWord(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompGetDropRestOfWord",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->AutoCompGetDropRestOfWord();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_RegisterImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxBitmap *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "type",(char *) "bmp", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_RegisterImage",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxBitmap, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("wxBitmap");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RegisterImage(arg2,(wxBitmap const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ClearRegisteredImages(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ClearRegisteredImages",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearRegisteredImages();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompGetTypeSeparator(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompGetTypeSeparator",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->AutoCompGetTypeSeparator();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompSetTypeSeparator(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "separatorCharacter", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AutoCompSetTypeSeparator",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AutoCompSetTypeSeparator(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetIndent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "indentSize", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetIndent",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetIndent(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetIndent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetIndent",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetIndent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetUseTabs(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useTabs", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetUseTabs",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetUseTabs(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetUseTabs(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetUseTabs",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetUseTabs();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetLineIndentation(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line",(char *) "indentSize", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetLineIndentation",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLineIndentation(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLineIndentation(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetLineIndentation",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLineIndentation(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLineIndentPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetLineIndentPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLineIndentPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetColumn",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetColumn(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetUseHorizontalScrollBar(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetUseHorizontalScrollBar",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetUseHorizontalScrollBar(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetUseHorizontalScrollBar(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetUseHorizontalScrollBar",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetUseHorizontalScrollBar();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetIndentationGuides(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetIndentationGuides",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetIndentationGuides(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetIndentationGuides(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetIndentationGuides",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetIndentationGuides();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetHighlightGuide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetHighlightGuide",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHighlightGuide(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetHighlightGuide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetHighlightGuide",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetHighlightGuide();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLineEndPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetLineEndPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLineEndPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCodePage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCodePage",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetCodePage();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCaretForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCaretForeground",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetCaretForeground();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour(static_cast<wxColour & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetReadOnly(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetReadOnly",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetReadOnly();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetCurrentPos(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetCurrentPos",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCurrentPos(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSelectionStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetSelectionStart",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSelectionStart(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetSelectionStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetSelectionStart",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetSelectionStart();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSelectionEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetSelectionEnd",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSelectionEnd(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetSelectionEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetSelectionEnd",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetSelectionEnd();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetPrintMagnification(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "magnification", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetPrintMagnification",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPrintMagnification(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetPrintMagnification(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetPrintMagnification",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetPrintMagnification();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetPrintColourMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetPrintColourMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPrintColourMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetPrintColourMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetPrintColourMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetPrintColourMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_FindText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    wxString *arg4 = 0 ;
    int arg5 = (int) 0 ;
    int result;
    bool temp4 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "minPos",(char *) "maxPos",(char *) "text",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:StyledTextCtrl_FindText",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = true;
    }
    if (obj4) {
        {
            arg5 = static_cast<int >(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->FindText(arg2,arg3,(wxString const &)*arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_FormatRange(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    int arg3 ;
    int arg4 ;
    wxDC *arg5 = (wxDC *) 0 ;
    wxDC *arg6 = (wxDC *) 0 ;
    wxRect arg7 ;
    wxRect arg8 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "doDraw",(char *) "startPos",(char *) "endPos",(char *) "draw",(char *) "target",(char *) "renderRect",(char *) "pageRect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOOOO:StyledTextCtrl_FormatRange",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<int >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(5)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(6)) SWIG_fail;
    {
        wxRect * argp;
        SWIG_Python_ConvertPtr(obj6, (void **)&argp, SWIGTYPE_p_wxRect, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(7)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("wxRect");
        }
        if (SWIG_arg_fail(7)) SWIG_fail;
        arg7 = *argp;
    }
    {
        wxRect * argp;
        SWIG_Python_ConvertPtr(obj7, (void **)&argp, SWIGTYPE_p_wxRect, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(8)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("wxRect");
        }
        if (SWIG_arg_fail(8)) SWIG_fail;
        arg8 = *argp;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->FormatRange(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetFirstVisibleLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetFirstVisibleLine",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetFirstVisibleLine();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetLine",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLineCount(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetLineCount",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLineCount();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetMarginLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pixelWidth", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetMarginLeft",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMarginLeft(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetMarginLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetMarginLeft",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetMarginLeft();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetMarginRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pixelWidth", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetMarginRight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMarginRight(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetMarginRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetMarginRight",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetMarginRight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetModify(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetModify",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetModify();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSelection(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "start",(char *) "end", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetSelection",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSelection(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetSelectedText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetSelectedText",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetSelectedText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetTextRange(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "startPos",(char *) "endPos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_GetTextRange",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetTextRange(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_HideSelection(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "normal", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_HideSelection",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->HideSelection(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineFromPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_LineFromPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->LineFromPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PositionFromLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_PositionFromLine",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->PositionFromLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineScroll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "columns",(char *) "lines", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_LineScroll",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineScroll(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_EnsureCaretVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_EnsureCaretVisible",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EnsureCaretVisible();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ReplaceSelection(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_ReplaceSelection",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ReplaceSelection((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetReadOnly(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "readOnly", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetReadOnly",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetReadOnly(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CanPaste(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CanPaste",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CanPaste();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CanUndo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CanUndo",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CanUndo();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_EmptyUndoBuffer(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_EmptyUndoBuffer",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EmptyUndoBuffer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Undo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_Undo",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Undo();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Cut(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_Cut",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Cut();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Copy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_Copy",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Copy();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Paste(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_Paste",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Paste();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Clear(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_Clear",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Clear();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetText",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetTextLength(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetTextLength",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetTextLength();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetOvertype(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "overtype", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetOvertype",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOvertype(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetOvertype(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetOvertype",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetOvertype();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetCaretWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pixelWidth", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetCaretWidth",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCaretWidth(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCaretWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCaretWidth",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetCaretWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetTargetStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetTargetStart",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTargetStart(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetTargetStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetTargetStart",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetTargetStart();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetTargetEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetTargetEnd",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTargetEnd(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetTargetEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetTargetEnd",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetTargetEnd();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ReplaceTarget(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    int result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_ReplaceTarget",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->ReplaceTarget((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ReplaceTargetRE(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    int result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_ReplaceTargetRE",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->ReplaceTargetRE((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SearchInTarget(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    int result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SearchInTarget",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->SearchInTarget((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSearchFlags(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetSearchFlags",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSearchFlags(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetSearchFlags(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetSearchFlags",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetSearchFlags();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CallTipShow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "definition", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_CallTipShow",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CallTipShow(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CallTipCancel(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CallTipCancel",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CallTipCancel();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CallTipActive(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CallTipActive",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->CallTipActive();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CallTipPosAtStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CallTipPosAtStart",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->CallTipPosAtStart();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CallTipSetHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "start",(char *) "end", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_CallTipSetHighlight",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CallTipSetHighlight(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CallTipSetBackground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "back", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_CallTipSetBackground",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CallTipSetBackground((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CallTipSetForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_CallTipSetForeground",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CallTipSetForeground((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CallTipSetForegroundHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_CallTipSetForegroundHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CallTipSetForegroundHighlight((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_VisibleFromDocLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_VisibleFromDocLine",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->VisibleFromDocLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DocLineFromVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "lineDisplay", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_DocLineFromVisible",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->DocLineFromVisible(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetFoldLevel(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line",(char *) "level", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetFoldLevel",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFoldLevel(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetFoldLevel(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetFoldLevel",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetFoldLevel(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLastChild(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line",(char *) "level", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_GetLastChild",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLastChild(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetFoldParent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetFoldParent",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetFoldParent(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ShowLines(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "lineStart",(char *) "lineEnd", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_ShowLines",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ShowLines(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_HideLines(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "lineStart",(char *) "lineEnd", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_HideLines",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->HideLines(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLineVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetLineVisible",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetLineVisible(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetFoldExpanded(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line",(char *) "expanded", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetFoldExpanded",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFoldExpanded(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetFoldExpanded(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetFoldExpanded",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetFoldExpanded(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ToggleFold(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_ToggleFold",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ToggleFold(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_EnsureVisible(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_EnsureVisible",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EnsureVisible(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetFoldFlags(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetFoldFlags",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFoldFlags(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_EnsureVisibleEnforcePolicy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_EnsureVisibleEnforcePolicy",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EnsureVisibleEnforcePolicy(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetTabIndents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "tabIndents", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetTabIndents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTabIndents(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetTabIndents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetTabIndents",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetTabIndents();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetBackSpaceUnIndents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bsUnIndents", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetBackSpaceUnIndents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBackSpaceUnIndents(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetBackSpaceUnIndents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetBackSpaceUnIndents",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetBackSpaceUnIndents();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetMouseDwellTime(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "periodMilliseconds", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetMouseDwellTime",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMouseDwellTime(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetMouseDwellTime(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetMouseDwellTime",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetMouseDwellTime();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordStartPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "onlyWordCharacters", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_WordStartPosition",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->WordStartPosition(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordEndPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    bool arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "onlyWordCharacters", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_WordEndPosition",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->WordEndPosition(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetWrapMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetWrapMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWrapMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetWrapMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetWrapMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetWrapMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetWrapVisualFlags(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "wrapVisualFlags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetWrapVisualFlags",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWrapVisualFlags(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetWrapVisualFlags(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetWrapVisualFlags",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetWrapVisualFlags();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetWrapVisualFlagsLocation(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "wrapVisualFlagsLocation", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetWrapVisualFlagsLocation",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWrapVisualFlagsLocation(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetWrapVisualFlagsLocation(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetWrapVisualFlagsLocation",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetWrapVisualFlagsLocation();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetWrapStartIndent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "indent", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetWrapStartIndent",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWrapStartIndent(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetWrapStartIndent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetWrapStartIndent",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetWrapStartIndent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetLayoutCache(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetLayoutCache",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLayoutCache(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLayoutCache(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetLayoutCache",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLayoutCache();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetScrollWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pixelWidth", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetScrollWidth",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetScrollWidth(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetScrollWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetScrollWidth",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetScrollWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_TextWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    int result;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_TextWidth",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->TextWidth(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetEndAtLastLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "endAtLastLine", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetEndAtLastLine",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEndAtLastLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetEndAtLastLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetEndAtLastLine",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetEndAtLastLine();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_TextHeight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_TextHeight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->TextHeight(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetUseVerticalScrollBar(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetUseVerticalScrollBar",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetUseVerticalScrollBar(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetUseVerticalScrollBar(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetUseVerticalScrollBar",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetUseVerticalScrollBar();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AppendText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AppendText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AppendText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetTwoPhaseDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetTwoPhaseDraw",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetTwoPhaseDraw();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetTwoPhaseDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "twoPhase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetTwoPhaseDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTwoPhaseDraw(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_TargetFromSelection(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_TargetFromSelection",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->TargetFromSelection();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LinesJoin(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LinesJoin",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LinesJoin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LinesSplit(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pixelWidth", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_LinesSplit",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LinesSplit(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetFoldMarginColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useSetting",(char *) "back", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetFoldMarginColour",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFoldMarginColour(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetFoldMarginHiColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useSetting",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetFoldMarginHiColour",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFoldMarginHiColour(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineDown(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineDown",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineDownExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineDownExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineDownExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineUp(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineUp",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineUpExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineUpExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineUpExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CharLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CharLeft",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CharLeft();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CharLeftExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CharLeftExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CharLeftExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CharRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CharRight",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CharRight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CharRightExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CharRightExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CharRightExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordLeft",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordLeft();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordLeftExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordLeftExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordLeftExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordRight",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordRight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordRightExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordRightExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordRightExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Home(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_Home",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Home();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_HomeExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_HomeExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->HomeExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineEnd",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineEnd();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineEndExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineEndExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineEndExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DocumentStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DocumentStart",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DocumentStart();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DocumentStartExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DocumentStartExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DocumentStartExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DocumentEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DocumentEnd",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DocumentEnd();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DocumentEndExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DocumentEndExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DocumentEndExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PageUp(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_PageUp",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PageUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PageUpExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_PageUpExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PageUpExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PageDown(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_PageDown",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PageDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PageDownExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_PageDownExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PageDownExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_EditToggleOvertype(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_EditToggleOvertype",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EditToggleOvertype();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Cancel(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_Cancel",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Cancel();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DeleteBack(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DeleteBack",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteBack();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Tab(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_Tab",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Tab();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_BackTab(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_BackTab",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->BackTab();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_NewLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_NewLine",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->NewLine();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_FormFeed(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_FormFeed",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->FormFeed();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_VCHome(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_VCHome",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->VCHome();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_VCHomeExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_VCHomeExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->VCHomeExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ZoomIn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ZoomIn",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ZoomIn();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ZoomOut(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ZoomOut",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ZoomOut();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DelWordLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DelWordLeft",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DelWordLeft();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DelWordRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DelWordRight",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DelWordRight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineCut(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineCut",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineCut();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineTranspose(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineTranspose",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineTranspose();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineDuplicate(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineDuplicate",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineDuplicate();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LowerCase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LowerCase",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LowerCase();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_UpperCase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_UpperCase",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->UpperCase();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineScrollDown(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineScrollDown",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineScrollDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineScrollUp(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineScrollUp",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineScrollUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DeleteBackNotLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DeleteBackNotLine",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteBackNotLine();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_HomeDisplay(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_HomeDisplay",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->HomeDisplay();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_HomeDisplayExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_HomeDisplayExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->HomeDisplayExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineEndDisplay(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineEndDisplay",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineEndDisplay();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineEndDisplayExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineEndDisplayExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineEndDisplayExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_HomeWrap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_HomeWrap",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->HomeWrap();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_HomeWrapExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_HomeWrapExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->HomeWrapExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineEndWrap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineEndWrap",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineEndWrap();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineEndWrapExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineEndWrapExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineEndWrapExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_VCHomeWrap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_VCHomeWrap",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->VCHomeWrap();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_VCHomeWrapExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_VCHomeWrapExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->VCHomeWrapExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineCopy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineCopy",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineCopy();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_MoveCaretInsideView(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_MoveCaretInsideView",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MoveCaretInsideView();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineLength(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_LineLength",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->LineLength(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_BraceHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos1",(char *) "pos2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_BraceHighlight",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->BraceHighlight(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_BraceBadLight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_BraceBadLight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->BraceBadLight(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_BraceMatch(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_BraceMatch",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->BraceMatch(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetViewEOL(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetViewEOL",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetViewEOL();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetViewEOL(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "visible", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetViewEOL",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetViewEOL(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetDocPointer(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetDocPointer",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (void *)(arg1)->GetDocPointer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetDocPointer(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "docPointer", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetDocPointer",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        if ((SWIG_ConvertPtr(obj1,reinterpret_cast<void ** >(&arg2),0,SWIG_POINTER_EXCEPTION|0))== -1) {
            SWIG_arg_fail(2);SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDocPointer(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetModEventMask(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mask", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetModEventMask",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetModEventMask(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetEdgeColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetEdgeColumn",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetEdgeColumn();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetEdgeColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetEdgeColumn",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEdgeColumn(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetEdgeMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetEdgeMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetEdgeMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetEdgeMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetEdgeMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEdgeMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetEdgeColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetEdgeColour",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetEdgeColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour(static_cast<wxColour & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetEdgeColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "edgeColour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetEdgeColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEdgeColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SearchAnchor(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_SearchAnchor",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SearchAnchor();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SearchNext(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    int result;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flags",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SearchNext",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->SearchNext(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SearchPrev(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    int result;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flags",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SearchPrev",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->SearchPrev(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LinesOnScreen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LinesOnScreen",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->LinesOnScreen();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_UsePopUp(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "allowPopUp", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_UsePopUp",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->UsePopUp(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SelectionIsRectangle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_SelectionIsRectangle",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SelectionIsRectangle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetZoom(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "zoom", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetZoom",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetZoom(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetZoom(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetZoom",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetZoom();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CreateDocument(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CreateDocument",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (void *)(arg1)->CreateDocument();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AddRefDocument(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "docPointer", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AddRefDocument",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        if ((SWIG_ConvertPtr(obj1,reinterpret_cast<void ** >(&arg2),0,SWIG_POINTER_EXCEPTION|0))== -1) {
            SWIG_arg_fail(2);SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddRefDocument(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ReleaseDocument(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "docPointer", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_ReleaseDocument",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        if ((SWIG_ConvertPtr(obj1,reinterpret_cast<void ** >(&arg2),0,SWIG_POINTER_EXCEPTION|0))== -1) {
            SWIG_arg_fail(2);SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ReleaseDocument(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetModEventMask(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetModEventMask",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetModEventMask();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSTCFocus(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "focus", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetSTCFocus",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSTCFocus(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetSTCFocus(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetSTCFocus",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetSTCFocus();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetStatus(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "statusCode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetStatus",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetStatus(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetStatus(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetStatus",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetStatus();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetMouseDownCaptures(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "captures", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetMouseDownCaptures",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMouseDownCaptures(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetMouseDownCaptures(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetMouseDownCaptures",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetMouseDownCaptures();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSTCCursor(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "cursorType", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetSTCCursor",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSTCCursor(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetSTCCursor(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetSTCCursor",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetSTCCursor();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetControlCharSymbol(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "symbol", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetControlCharSymbol",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetControlCharSymbol(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetControlCharSymbol(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetControlCharSymbol",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetControlCharSymbol();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordPartLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordPartLeft",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordPartLeft();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordPartLeftExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordPartLeftExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordPartLeftExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordPartRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordPartRight",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordPartRight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordPartRightExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordPartRightExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordPartRightExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetVisiblePolicy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "visiblePolicy",(char *) "visibleSlop", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetVisiblePolicy",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVisiblePolicy(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DelLineLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DelLineLeft",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DelLineLeft();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DelLineRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_DelLineRight",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DelLineRight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetXOffset(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "newOffset", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetXOffset",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetXOffset(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetXOffset(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetXOffset",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetXOffset();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ChooseCaretX(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ChooseCaretX",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ChooseCaretX();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetXCaretPolicy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "caretPolicy",(char *) "caretSlop", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetXCaretPolicy",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetXCaretPolicy(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetYCaretPolicy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "caretPolicy",(char *) "caretSlop", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetYCaretPolicy",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetYCaretPolicy(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetPrintWrapMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetPrintWrapMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPrintWrapMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetPrintWrapMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetPrintWrapMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetPrintWrapMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetHotspotActiveForeground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useSetting",(char *) "fore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetHotspotActiveForeground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHotspotActiveForeground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetHotspotActiveBackground(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    wxColour *arg3 = 0 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useSetting",(char *) "back", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetHotspotActiveBackground",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHotspotActiveBackground(arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetHotspotActiveUnderline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "underline", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetHotspotActiveUnderline",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHotspotActiveUnderline(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetHotspotSingleLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "singleLine", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetHotspotSingleLine",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHotspotSingleLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ParaDown(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ParaDown",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ParaDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ParaDownExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ParaDownExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ParaDownExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ParaUp(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ParaUp",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ParaUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ParaUpExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_ParaUpExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ParaUpExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PositionBefore(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_PositionBefore",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->PositionBefore(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PositionAfter(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_PositionAfter",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->PositionAfter(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CopyRange(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "start",(char *) "end", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_CopyRange",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CopyRange(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CopyText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "length",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_CopyText",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CopyText(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetSelectionMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetSelectionMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSelectionMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetSelectionMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetSelectionMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetSelectionMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLineSelStartPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetLineSelStartPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLineSelStartPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLineSelEndPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetLineSelEndPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLineSelEndPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineDownRectExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineDownRectExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineDownRectExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineUpRectExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineUpRectExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineUpRectExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CharLeftRectExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CharLeftRectExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CharLeftRectExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CharRightRectExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_CharRightRectExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CharRightRectExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_HomeRectExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_HomeRectExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->HomeRectExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_VCHomeRectExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_VCHomeRectExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->VCHomeRectExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LineEndRectExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_LineEndRectExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->LineEndRectExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PageUpRectExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_PageUpRectExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PageUpRectExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PageDownRectExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_PageDownRectExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PageDownRectExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StutteredPageUp(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_StutteredPageUp",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StutteredPageUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StutteredPageUpExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_StutteredPageUpExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StutteredPageUpExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StutteredPageDown(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_StutteredPageDown",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StutteredPageDown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StutteredPageDownExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_StutteredPageDownExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StutteredPageDownExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordLeftEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordLeftEnd",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordLeftEnd();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordLeftEndExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordLeftEndExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordLeftEndExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordRightEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordRightEnd",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordRightEnd();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_WordRightEndExtend(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_WordRightEndExtend",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->WordRightEndExtend();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetWhitespaceChars(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "characters", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetWhitespaceChars",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWhitespaceChars((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetCharsDefault(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_SetCharsDefault",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCharsDefault();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AutoCompGetCurrent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_AutoCompGetCurrent",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->AutoCompGetCurrent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Allocate(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bytes", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_Allocate",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Allocate(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_FindColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_FindColumn",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->FindColumn(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StartRecord(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_StartRecord",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StartRecord();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StopRecord(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_StopRecord",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StopRecord();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetLexer(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "lexer", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetLexer",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLexer(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLexer(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetLexer",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLexer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_Colourise(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "start",(char *) "end", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_Colourise",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Colourise(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetProperty(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    wxString *arg3 = 0 ;
    bool temp2 = false ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "key",(char *) "value", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetProperty",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetProperty((wxString const &)*arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetKeyWords(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "keywordSet",(char *) "keyWords", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetKeyWords",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetKeyWords(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetLexerLanguage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "language", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetLexerLanguage",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLexerLanguage((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCurrentLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCurrentLine",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetCurrentLine();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetSpec(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "styleNum",(char *) "spec", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetSpec",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetSpec(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetFont(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxFont *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "styleNum",(char *) "font", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetFont",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxFont, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("wxFont");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetFont(arg2,*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetFontAttr(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    wxString *arg4 = 0 ;
    bool arg5 ;
    bool arg6 ;
    bool arg7 ;
    wxFontEncoding arg8 = (wxFontEncoding) wxFONTENCODING_DEFAULT ;
    bool temp4 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "styleNum",(char *) "size",(char *) "faceName",(char *) "bold",(char *) "italic",(char *) "underline",(char *) "encoding", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOOO|O:StyledTextCtrl_StyleSetFontAttr",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = true;
    }
    {
        arg5 = static_cast<bool >(SWIG_As_bool(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = static_cast<bool >(SWIG_As_bool(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        arg7 = static_cast<bool >(SWIG_As_bool(obj6)); 
        if (SWIG_arg_fail(7)) SWIG_fail;
    }
    if (obj7) {
        {
            arg8 = static_cast<wxFontEncoding >(SWIG_As_int(obj7)); 
            if (SWIG_arg_fail(8)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetFontAttr(arg2,arg3,(wxString const &)*arg4,arg5,arg6,arg7,arg8);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetCharacterSet(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "characterSet", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetCharacterSet",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetCharacterSet(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_StyleSetFontEncoding(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxFontEncoding arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style",(char *) "encoding", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_StyleSetFontEncoding",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<wxFontEncoding >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->StyleSetFontEncoding(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_CmdKeyExecute(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "cmd", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_CmdKeyExecute",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CmdKeyExecute(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetMargins(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "left",(char *) "right", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_SetMargins",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMargins(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetSelection(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    int temp2 ;
    int res2 = 0 ;
    int temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetSelection",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetSelection(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_int, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_int, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_PointFromPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxPoint result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_PointFromPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->PointFromPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPoint * resultptr;
        resultptr = new wxPoint(static_cast<wxPoint & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ScrollToLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_ScrollToLine",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ScrollToLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_ScrollToColumn(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "column", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_ScrollToColumn",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ScrollToColumn(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SendMsg(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    long arg3 = (long) 0 ;
    long arg4 = (long) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "msg",(char *) "wp",(char *) "lp", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:StyledTextCtrl_SendMsg",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = static_cast<long >(SWIG_As_long(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = static_cast<long >(SWIG_As_long(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)(arg1)->SendMsg(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_long(static_cast<long >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetVScrollBar(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxScrollBar *arg2 = (wxScrollBar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bar", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetVScrollBar",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxScrollBar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetVScrollBar(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetHScrollBar(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxScrollBar *arg2 = (wxScrollBar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bar", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetHScrollBar",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxScrollBar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHScrollBar(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLastKeydownProcessed(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetLastKeydownProcessed",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetLastKeydownProcessed();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetLastKeydownProcessed(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetLastKeydownProcessed",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLastKeydownProcessed(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SaveFile(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "filename", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SaveFile",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SaveFile((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_LoadFile(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "filename", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_LoadFile",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LoadFile((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DoDragOver(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    wxDragResult arg4 ;
    wxDragResult result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "def", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:StyledTextCtrl_DoDragOver",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<wxDragResult >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDragResult)(arg1)->DoDragOver(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_DoDropText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    long arg2 ;
    long arg3 ;
    wxString *arg4 = 0 ;
    bool result;
    bool temp4 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "data", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:StyledTextCtrl_DoDropText",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<long >(SWIG_As_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<long >(SWIG_As_long(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = wxString_in_helper(obj3);
        if (arg4 == NULL) SWIG_fail;
        temp4 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->DoDropText(arg2,arg3,(wxString const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp4)
        delete arg4;
    }
    return resultobj;
    fail:
    {
        if (temp4)
        delete arg4;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetUseAntiAliasing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "useAA", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetUseAntiAliasing",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetUseAntiAliasing(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetUseAntiAliasing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetUseAntiAliasing",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetUseAntiAliasing();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AddTextRaw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    char *arg2 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AddTextRaw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddTextRaw((char const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_InsertTextRaw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    char *arg3 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_InsertTextRaw",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (!SWIG_AsCharPtr(obj2, (char**)&arg3)) {
        SWIG_arg_fail(3);SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->InsertTextRaw(arg2,(char const *)arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetCurLineRaw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int *arg2 = (int *) 0 ;
    wxCharBuffer result;
    int temp2 ;
    int res2 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetCurLineRaw",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetCurLineRaw(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = PyString_FromString((char*)(&result)->data());
    }
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_int, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetLineRaw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    wxCharBuffer result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_GetLineRaw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetLineRaw(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = PyString_FromString((char*)(&result)->data());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetSelectedTextRaw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxCharBuffer result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetSelectedTextRaw",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetSelectedTextRaw();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = PyString_FromString((char*)(&result)->data());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetTextRangeRaw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    int arg2 ;
    int arg3 ;
    wxCharBuffer result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "startPos",(char *) "endPos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StyledTextCtrl_GetTextRangeRaw",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetTextRangeRaw(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = PyString_FromString((char*)(&result)->data());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_SetTextRaw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    char *arg2 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_SetTextRaw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTextRaw((char const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_GetTextRaw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    wxCharBuffer result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextCtrl_GetTextRaw",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetTextRaw();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = PyString_FromString((char*)(&result)->data());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextCtrl_AppendTextRaw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextCtrl *arg1 = (wxStyledTextCtrl *) 0 ;
    char *arg2 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextCtrl_AppendTextRaw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextCtrl, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AppendTextRaw((char const *)arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * StyledTextCtrl_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxStyledTextCtrl, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_StyledTextEvent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxEventType arg1 = (wxEventType) 0 ;
    int arg2 = (int) 0 ;
    wxStyledTextEvent *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "commandType",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_StyledTextEvent",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = static_cast<wxEventType >(SWIG_As_int(obj0)); 
            if (SWIG_arg_fail(1)) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = static_cast<int >(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxStyledTextEvent *)new wxStyledTextEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxStyledTextEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_StyledTextEvent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_StyledTextEvent",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetKey(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "k", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetKey",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetKey(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetModifiers(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetModifiers",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetModifiers(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetModificationType(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "t", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetModificationType",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetModificationType(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "t", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetLength(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "len", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetLength",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLength(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetLinesAdded(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "num", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetLinesAdded",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLinesAdded(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetLine",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetFoldLevelNow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetFoldLevelNow",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFoldLevelNow(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetFoldLevelPrev(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetFoldLevelPrev",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFoldLevelPrev(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetMargin(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetMargin",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMargin(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetMessage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetMessage",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMessage(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetWParam(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetWParam",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetWParam(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetLParam(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetLParam",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLParam(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetListType(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetListType",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetListType(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetX(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetX",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetX(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetY(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetY",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetY(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetDragText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetDragText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDragText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetDragAllowMove(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetDragAllowMove",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDragAllowMove(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_SetDragResult(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    wxDragResult arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "val", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StyledTextEvent_SetDragResult",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<wxDragResult >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDragResult(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetPosition",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetKey(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetKey",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetKey();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetModifiers(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetModifiers",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetModifiers();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetModificationType(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetModificationType",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetModificationType();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetText",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxStyledTextEvent const *)arg1)->GetText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetLength(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetLength",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetLength();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetLinesAdded(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetLinesAdded",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetLinesAdded();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetLine",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetLine();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetFoldLevelNow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetFoldLevelNow",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetFoldLevelNow();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetFoldLevelPrev(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetFoldLevelPrev",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetFoldLevelPrev();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetMargin(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetMargin",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetMargin();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetMessage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetMessage",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetMessage();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetWParam(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetWParam",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetWParam();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetLParam(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetLParam",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetLParam();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetListType(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetListType",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetListType();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetX(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetX",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetX();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetY(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetY",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxStyledTextEvent const *)arg1)->GetY();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetDragText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetDragText",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetDragText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetDragAllowMove(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetDragAllowMove",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetDragAllowMove();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetDragResult(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    wxDragResult result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetDragResult",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDragResult)(arg1)->GetDragResult();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetShift(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetShift",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxStyledTextEvent const *)arg1)->GetShift();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetControl(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetControl",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxStyledTextEvent const *)arg1)->GetControl();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_GetAlt(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_GetAlt",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxStyledTextEvent const *)arg1)->GetAlt();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StyledTextEvent_Clone(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj = NULL;
    wxStyledTextEvent *arg1 = (wxStyledTextEvent *) 0 ;
    wxEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:StyledTextEvent_Clone",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxStyledTextEvent, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxEvent *)((wxStyledTextEvent const *)arg1)->Clone();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxEvent, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * StyledTextEvent_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxStyledTextEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyMethodDef SwigMethods[] = {
	 { (char *)"new_StyledTextCtrl", (PyCFunction) _wrap_new_StyledTextCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"new_PreStyledTextCtrl", (PyCFunction) _wrap_new_PreStyledTextCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Create", (PyCFunction) _wrap_StyledTextCtrl_Create, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AddText", (PyCFunction) _wrap_StyledTextCtrl_AddText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AddStyledText", (PyCFunction) _wrap_StyledTextCtrl_AddStyledText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_InsertText", (PyCFunction) _wrap_StyledTextCtrl_InsertText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ClearAll", (PyCFunction) _wrap_StyledTextCtrl_ClearAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ClearDocumentStyle", (PyCFunction) _wrap_StyledTextCtrl_ClearDocumentStyle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLength", (PyCFunction) _wrap_StyledTextCtrl_GetLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCharAt", (PyCFunction) _wrap_StyledTextCtrl_GetCharAt, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCurrentPos", (PyCFunction) _wrap_StyledTextCtrl_GetCurrentPos, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetAnchor", (PyCFunction) _wrap_StyledTextCtrl_GetAnchor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetStyleAt", (PyCFunction) _wrap_StyledTextCtrl_GetStyleAt, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Redo", (PyCFunction) _wrap_StyledTextCtrl_Redo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetUndoCollection", (PyCFunction) _wrap_StyledTextCtrl_SetUndoCollection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SelectAll", (PyCFunction) _wrap_StyledTextCtrl_SelectAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSavePoint", (PyCFunction) _wrap_StyledTextCtrl_SetSavePoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetStyledText", (PyCFunction) _wrap_StyledTextCtrl_GetStyledText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CanRedo", (PyCFunction) _wrap_StyledTextCtrl_CanRedo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerLineFromHandle", (PyCFunction) _wrap_StyledTextCtrl_MarkerLineFromHandle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerDeleteHandle", (PyCFunction) _wrap_StyledTextCtrl_MarkerDeleteHandle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetUndoCollection", (PyCFunction) _wrap_StyledTextCtrl_GetUndoCollection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetViewWhiteSpace", (PyCFunction) _wrap_StyledTextCtrl_GetViewWhiteSpace, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetViewWhiteSpace", (PyCFunction) _wrap_StyledTextCtrl_SetViewWhiteSpace, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PositionFromPoint", (PyCFunction) _wrap_StyledTextCtrl_PositionFromPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PositionFromPointClose", (PyCFunction) _wrap_StyledTextCtrl_PositionFromPointClose, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GotoLine", (PyCFunction) _wrap_StyledTextCtrl_GotoLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GotoPos", (PyCFunction) _wrap_StyledTextCtrl_GotoPos, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetAnchor", (PyCFunction) _wrap_StyledTextCtrl_SetAnchor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCurLine", (PyCFunction) _wrap_StyledTextCtrl_GetCurLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetEndStyled", (PyCFunction) _wrap_StyledTextCtrl_GetEndStyled, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ConvertEOLs", (PyCFunction) _wrap_StyledTextCtrl_ConvertEOLs, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetEOLMode", (PyCFunction) _wrap_StyledTextCtrl_GetEOLMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetEOLMode", (PyCFunction) _wrap_StyledTextCtrl_SetEOLMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StartStyling", (PyCFunction) _wrap_StyledTextCtrl_StartStyling, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetStyling", (PyCFunction) _wrap_StyledTextCtrl_SetStyling, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetBufferedDraw", (PyCFunction) _wrap_StyledTextCtrl_GetBufferedDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetBufferedDraw", (PyCFunction) _wrap_StyledTextCtrl_SetBufferedDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetTabWidth", (PyCFunction) _wrap_StyledTextCtrl_SetTabWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetTabWidth", (PyCFunction) _wrap_StyledTextCtrl_GetTabWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetCodePage", (PyCFunction) _wrap_StyledTextCtrl_SetCodePage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerDefine", (PyCFunction) _wrap_StyledTextCtrl_MarkerDefine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerSetForeground", (PyCFunction) _wrap_StyledTextCtrl_MarkerSetForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerSetBackground", (PyCFunction) _wrap_StyledTextCtrl_MarkerSetBackground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerAdd", (PyCFunction) _wrap_StyledTextCtrl_MarkerAdd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerDelete", (PyCFunction) _wrap_StyledTextCtrl_MarkerDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerDeleteAll", (PyCFunction) _wrap_StyledTextCtrl_MarkerDeleteAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerGet", (PyCFunction) _wrap_StyledTextCtrl_MarkerGet, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerNext", (PyCFunction) _wrap_StyledTextCtrl_MarkerNext, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerPrevious", (PyCFunction) _wrap_StyledTextCtrl_MarkerPrevious, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MarkerDefineBitmap", (PyCFunction) _wrap_StyledTextCtrl_MarkerDefineBitmap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetMarginType", (PyCFunction) _wrap_StyledTextCtrl_SetMarginType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetMarginType", (PyCFunction) _wrap_StyledTextCtrl_GetMarginType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetMarginWidth", (PyCFunction) _wrap_StyledTextCtrl_SetMarginWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetMarginWidth", (PyCFunction) _wrap_StyledTextCtrl_GetMarginWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetMarginMask", (PyCFunction) _wrap_StyledTextCtrl_SetMarginMask, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetMarginMask", (PyCFunction) _wrap_StyledTextCtrl_GetMarginMask, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetMarginSensitive", (PyCFunction) _wrap_StyledTextCtrl_SetMarginSensitive, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetMarginSensitive", (PyCFunction) _wrap_StyledTextCtrl_GetMarginSensitive, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleClearAll", (PyCFunction) _wrap_StyledTextCtrl_StyleClearAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetForeground", (PyCFunction) _wrap_StyledTextCtrl_StyleSetForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetBackground", (PyCFunction) _wrap_StyledTextCtrl_StyleSetBackground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetBold", (PyCFunction) _wrap_StyledTextCtrl_StyleSetBold, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetItalic", (PyCFunction) _wrap_StyledTextCtrl_StyleSetItalic, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetSize", (PyCFunction) _wrap_StyledTextCtrl_StyleSetSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetFaceName", (PyCFunction) _wrap_StyledTextCtrl_StyleSetFaceName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetEOLFilled", (PyCFunction) _wrap_StyledTextCtrl_StyleSetEOLFilled, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleResetDefault", (PyCFunction) _wrap_StyledTextCtrl_StyleResetDefault, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetUnderline", (PyCFunction) _wrap_StyledTextCtrl_StyleSetUnderline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetCase", (PyCFunction) _wrap_StyledTextCtrl_StyleSetCase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetHotSpot", (PyCFunction) _wrap_StyledTextCtrl_StyleSetHotSpot, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSelForeground", (PyCFunction) _wrap_StyledTextCtrl_SetSelForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSelBackground", (PyCFunction) _wrap_StyledTextCtrl_SetSelBackground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetCaretForeground", (PyCFunction) _wrap_StyledTextCtrl_SetCaretForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CmdKeyAssign", (PyCFunction) _wrap_StyledTextCtrl_CmdKeyAssign, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CmdKeyClear", (PyCFunction) _wrap_StyledTextCtrl_CmdKeyClear, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CmdKeyClearAll", (PyCFunction) _wrap_StyledTextCtrl_CmdKeyClearAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetStyleBytes", (PyCFunction) _wrap_StyledTextCtrl_SetStyleBytes, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetVisible", (PyCFunction) _wrap_StyledTextCtrl_StyleSetVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCaretPeriod", (PyCFunction) _wrap_StyledTextCtrl_GetCaretPeriod, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetCaretPeriod", (PyCFunction) _wrap_StyledTextCtrl_SetCaretPeriod, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetWordChars", (PyCFunction) _wrap_StyledTextCtrl_SetWordChars, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_BeginUndoAction", (PyCFunction) _wrap_StyledTextCtrl_BeginUndoAction, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_EndUndoAction", (PyCFunction) _wrap_StyledTextCtrl_EndUndoAction, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_IndicatorSetStyle", (PyCFunction) _wrap_StyledTextCtrl_IndicatorSetStyle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_IndicatorGetStyle", (PyCFunction) _wrap_StyledTextCtrl_IndicatorGetStyle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_IndicatorSetForeground", (PyCFunction) _wrap_StyledTextCtrl_IndicatorSetForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_IndicatorGetForeground", (PyCFunction) _wrap_StyledTextCtrl_IndicatorGetForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetWhitespaceForeground", (PyCFunction) _wrap_StyledTextCtrl_SetWhitespaceForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetWhitespaceBackground", (PyCFunction) _wrap_StyledTextCtrl_SetWhitespaceBackground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetStyleBits", (PyCFunction) _wrap_StyledTextCtrl_SetStyleBits, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetStyleBits", (PyCFunction) _wrap_StyledTextCtrl_GetStyleBits, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetLineState", (PyCFunction) _wrap_StyledTextCtrl_SetLineState, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLineState", (PyCFunction) _wrap_StyledTextCtrl_GetLineState, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetMaxLineState", (PyCFunction) _wrap_StyledTextCtrl_GetMaxLineState, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCaretLineVisible", (PyCFunction) _wrap_StyledTextCtrl_GetCaretLineVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetCaretLineVisible", (PyCFunction) _wrap_StyledTextCtrl_SetCaretLineVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCaretLineBack", (PyCFunction) _wrap_StyledTextCtrl_GetCaretLineBack, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetCaretLineBack", (PyCFunction) _wrap_StyledTextCtrl_SetCaretLineBack, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetChangeable", (PyCFunction) _wrap_StyledTextCtrl_StyleSetChangeable, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompShow", (PyCFunction) _wrap_StyledTextCtrl_AutoCompShow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompCancel", (PyCFunction) _wrap_StyledTextCtrl_AutoCompCancel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompActive", (PyCFunction) _wrap_StyledTextCtrl_AutoCompActive, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompPosStart", (PyCFunction) _wrap_StyledTextCtrl_AutoCompPosStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompComplete", (PyCFunction) _wrap_StyledTextCtrl_AutoCompComplete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompStops", (PyCFunction) _wrap_StyledTextCtrl_AutoCompStops, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompSetSeparator", (PyCFunction) _wrap_StyledTextCtrl_AutoCompSetSeparator, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompGetSeparator", (PyCFunction) _wrap_StyledTextCtrl_AutoCompGetSeparator, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompSelect", (PyCFunction) _wrap_StyledTextCtrl_AutoCompSelect, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompSetCancelAtStart", (PyCFunction) _wrap_StyledTextCtrl_AutoCompSetCancelAtStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompGetCancelAtStart", (PyCFunction) _wrap_StyledTextCtrl_AutoCompGetCancelAtStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompSetFillUps", (PyCFunction) _wrap_StyledTextCtrl_AutoCompSetFillUps, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompSetChooseSingle", (PyCFunction) _wrap_StyledTextCtrl_AutoCompSetChooseSingle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompGetChooseSingle", (PyCFunction) _wrap_StyledTextCtrl_AutoCompGetChooseSingle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompSetIgnoreCase", (PyCFunction) _wrap_StyledTextCtrl_AutoCompSetIgnoreCase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompGetIgnoreCase", (PyCFunction) _wrap_StyledTextCtrl_AutoCompGetIgnoreCase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_UserListShow", (PyCFunction) _wrap_StyledTextCtrl_UserListShow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompSetAutoHide", (PyCFunction) _wrap_StyledTextCtrl_AutoCompSetAutoHide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompGetAutoHide", (PyCFunction) _wrap_StyledTextCtrl_AutoCompGetAutoHide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompSetDropRestOfWord", (PyCFunction) _wrap_StyledTextCtrl_AutoCompSetDropRestOfWord, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompGetDropRestOfWord", (PyCFunction) _wrap_StyledTextCtrl_AutoCompGetDropRestOfWord, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_RegisterImage", (PyCFunction) _wrap_StyledTextCtrl_RegisterImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ClearRegisteredImages", (PyCFunction) _wrap_StyledTextCtrl_ClearRegisteredImages, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompGetTypeSeparator", (PyCFunction) _wrap_StyledTextCtrl_AutoCompGetTypeSeparator, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompSetTypeSeparator", (PyCFunction) _wrap_StyledTextCtrl_AutoCompSetTypeSeparator, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetIndent", (PyCFunction) _wrap_StyledTextCtrl_SetIndent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetIndent", (PyCFunction) _wrap_StyledTextCtrl_GetIndent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetUseTabs", (PyCFunction) _wrap_StyledTextCtrl_SetUseTabs, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetUseTabs", (PyCFunction) _wrap_StyledTextCtrl_GetUseTabs, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetLineIndentation", (PyCFunction) _wrap_StyledTextCtrl_SetLineIndentation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLineIndentation", (PyCFunction) _wrap_StyledTextCtrl_GetLineIndentation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLineIndentPosition", (PyCFunction) _wrap_StyledTextCtrl_GetLineIndentPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetColumn", (PyCFunction) _wrap_StyledTextCtrl_GetColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetUseHorizontalScrollBar", (PyCFunction) _wrap_StyledTextCtrl_SetUseHorizontalScrollBar, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetUseHorizontalScrollBar", (PyCFunction) _wrap_StyledTextCtrl_GetUseHorizontalScrollBar, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetIndentationGuides", (PyCFunction) _wrap_StyledTextCtrl_SetIndentationGuides, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetIndentationGuides", (PyCFunction) _wrap_StyledTextCtrl_GetIndentationGuides, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetHighlightGuide", (PyCFunction) _wrap_StyledTextCtrl_SetHighlightGuide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetHighlightGuide", (PyCFunction) _wrap_StyledTextCtrl_GetHighlightGuide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLineEndPosition", (PyCFunction) _wrap_StyledTextCtrl_GetLineEndPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCodePage", (PyCFunction) _wrap_StyledTextCtrl_GetCodePage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCaretForeground", (PyCFunction) _wrap_StyledTextCtrl_GetCaretForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetReadOnly", (PyCFunction) _wrap_StyledTextCtrl_GetReadOnly, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetCurrentPos", (PyCFunction) _wrap_StyledTextCtrl_SetCurrentPos, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSelectionStart", (PyCFunction) _wrap_StyledTextCtrl_SetSelectionStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetSelectionStart", (PyCFunction) _wrap_StyledTextCtrl_GetSelectionStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSelectionEnd", (PyCFunction) _wrap_StyledTextCtrl_SetSelectionEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetSelectionEnd", (PyCFunction) _wrap_StyledTextCtrl_GetSelectionEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetPrintMagnification", (PyCFunction) _wrap_StyledTextCtrl_SetPrintMagnification, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetPrintMagnification", (PyCFunction) _wrap_StyledTextCtrl_GetPrintMagnification, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetPrintColourMode", (PyCFunction) _wrap_StyledTextCtrl_SetPrintColourMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetPrintColourMode", (PyCFunction) _wrap_StyledTextCtrl_GetPrintColourMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_FindText", (PyCFunction) _wrap_StyledTextCtrl_FindText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_FormatRange", (PyCFunction) _wrap_StyledTextCtrl_FormatRange, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetFirstVisibleLine", (PyCFunction) _wrap_StyledTextCtrl_GetFirstVisibleLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLine", (PyCFunction) _wrap_StyledTextCtrl_GetLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLineCount", (PyCFunction) _wrap_StyledTextCtrl_GetLineCount, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetMarginLeft", (PyCFunction) _wrap_StyledTextCtrl_SetMarginLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetMarginLeft", (PyCFunction) _wrap_StyledTextCtrl_GetMarginLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetMarginRight", (PyCFunction) _wrap_StyledTextCtrl_SetMarginRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetMarginRight", (PyCFunction) _wrap_StyledTextCtrl_GetMarginRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetModify", (PyCFunction) _wrap_StyledTextCtrl_GetModify, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSelection", (PyCFunction) _wrap_StyledTextCtrl_SetSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetSelectedText", (PyCFunction) _wrap_StyledTextCtrl_GetSelectedText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetTextRange", (PyCFunction) _wrap_StyledTextCtrl_GetTextRange, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_HideSelection", (PyCFunction) _wrap_StyledTextCtrl_HideSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineFromPosition", (PyCFunction) _wrap_StyledTextCtrl_LineFromPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PositionFromLine", (PyCFunction) _wrap_StyledTextCtrl_PositionFromLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineScroll", (PyCFunction) _wrap_StyledTextCtrl_LineScroll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_EnsureCaretVisible", (PyCFunction) _wrap_StyledTextCtrl_EnsureCaretVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ReplaceSelection", (PyCFunction) _wrap_StyledTextCtrl_ReplaceSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetReadOnly", (PyCFunction) _wrap_StyledTextCtrl_SetReadOnly, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CanPaste", (PyCFunction) _wrap_StyledTextCtrl_CanPaste, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CanUndo", (PyCFunction) _wrap_StyledTextCtrl_CanUndo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_EmptyUndoBuffer", (PyCFunction) _wrap_StyledTextCtrl_EmptyUndoBuffer, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Undo", (PyCFunction) _wrap_StyledTextCtrl_Undo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Cut", (PyCFunction) _wrap_StyledTextCtrl_Cut, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Copy", (PyCFunction) _wrap_StyledTextCtrl_Copy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Paste", (PyCFunction) _wrap_StyledTextCtrl_Paste, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Clear", (PyCFunction) _wrap_StyledTextCtrl_Clear, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetText", (PyCFunction) _wrap_StyledTextCtrl_SetText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetText", (PyCFunction) _wrap_StyledTextCtrl_GetText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetTextLength", (PyCFunction) _wrap_StyledTextCtrl_GetTextLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetOvertype", (PyCFunction) _wrap_StyledTextCtrl_SetOvertype, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetOvertype", (PyCFunction) _wrap_StyledTextCtrl_GetOvertype, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetCaretWidth", (PyCFunction) _wrap_StyledTextCtrl_SetCaretWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCaretWidth", (PyCFunction) _wrap_StyledTextCtrl_GetCaretWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetTargetStart", (PyCFunction) _wrap_StyledTextCtrl_SetTargetStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetTargetStart", (PyCFunction) _wrap_StyledTextCtrl_GetTargetStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetTargetEnd", (PyCFunction) _wrap_StyledTextCtrl_SetTargetEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetTargetEnd", (PyCFunction) _wrap_StyledTextCtrl_GetTargetEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ReplaceTarget", (PyCFunction) _wrap_StyledTextCtrl_ReplaceTarget, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ReplaceTargetRE", (PyCFunction) _wrap_StyledTextCtrl_ReplaceTargetRE, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SearchInTarget", (PyCFunction) _wrap_StyledTextCtrl_SearchInTarget, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSearchFlags", (PyCFunction) _wrap_StyledTextCtrl_SetSearchFlags, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetSearchFlags", (PyCFunction) _wrap_StyledTextCtrl_GetSearchFlags, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CallTipShow", (PyCFunction) _wrap_StyledTextCtrl_CallTipShow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CallTipCancel", (PyCFunction) _wrap_StyledTextCtrl_CallTipCancel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CallTipActive", (PyCFunction) _wrap_StyledTextCtrl_CallTipActive, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CallTipPosAtStart", (PyCFunction) _wrap_StyledTextCtrl_CallTipPosAtStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CallTipSetHighlight", (PyCFunction) _wrap_StyledTextCtrl_CallTipSetHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CallTipSetBackground", (PyCFunction) _wrap_StyledTextCtrl_CallTipSetBackground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CallTipSetForeground", (PyCFunction) _wrap_StyledTextCtrl_CallTipSetForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CallTipSetForegroundHighlight", (PyCFunction) _wrap_StyledTextCtrl_CallTipSetForegroundHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_VisibleFromDocLine", (PyCFunction) _wrap_StyledTextCtrl_VisibleFromDocLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DocLineFromVisible", (PyCFunction) _wrap_StyledTextCtrl_DocLineFromVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetFoldLevel", (PyCFunction) _wrap_StyledTextCtrl_SetFoldLevel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetFoldLevel", (PyCFunction) _wrap_StyledTextCtrl_GetFoldLevel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLastChild", (PyCFunction) _wrap_StyledTextCtrl_GetLastChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetFoldParent", (PyCFunction) _wrap_StyledTextCtrl_GetFoldParent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ShowLines", (PyCFunction) _wrap_StyledTextCtrl_ShowLines, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_HideLines", (PyCFunction) _wrap_StyledTextCtrl_HideLines, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLineVisible", (PyCFunction) _wrap_StyledTextCtrl_GetLineVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetFoldExpanded", (PyCFunction) _wrap_StyledTextCtrl_SetFoldExpanded, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetFoldExpanded", (PyCFunction) _wrap_StyledTextCtrl_GetFoldExpanded, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ToggleFold", (PyCFunction) _wrap_StyledTextCtrl_ToggleFold, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_EnsureVisible", (PyCFunction) _wrap_StyledTextCtrl_EnsureVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetFoldFlags", (PyCFunction) _wrap_StyledTextCtrl_SetFoldFlags, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_EnsureVisibleEnforcePolicy", (PyCFunction) _wrap_StyledTextCtrl_EnsureVisibleEnforcePolicy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetTabIndents", (PyCFunction) _wrap_StyledTextCtrl_SetTabIndents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetTabIndents", (PyCFunction) _wrap_StyledTextCtrl_GetTabIndents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetBackSpaceUnIndents", (PyCFunction) _wrap_StyledTextCtrl_SetBackSpaceUnIndents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetBackSpaceUnIndents", (PyCFunction) _wrap_StyledTextCtrl_GetBackSpaceUnIndents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetMouseDwellTime", (PyCFunction) _wrap_StyledTextCtrl_SetMouseDwellTime, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetMouseDwellTime", (PyCFunction) _wrap_StyledTextCtrl_GetMouseDwellTime, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordStartPosition", (PyCFunction) _wrap_StyledTextCtrl_WordStartPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordEndPosition", (PyCFunction) _wrap_StyledTextCtrl_WordEndPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetWrapMode", (PyCFunction) _wrap_StyledTextCtrl_SetWrapMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetWrapMode", (PyCFunction) _wrap_StyledTextCtrl_GetWrapMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetWrapVisualFlags", (PyCFunction) _wrap_StyledTextCtrl_SetWrapVisualFlags, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetWrapVisualFlags", (PyCFunction) _wrap_StyledTextCtrl_GetWrapVisualFlags, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetWrapVisualFlagsLocation", (PyCFunction) _wrap_StyledTextCtrl_SetWrapVisualFlagsLocation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetWrapVisualFlagsLocation", (PyCFunction) _wrap_StyledTextCtrl_GetWrapVisualFlagsLocation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetWrapStartIndent", (PyCFunction) _wrap_StyledTextCtrl_SetWrapStartIndent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetWrapStartIndent", (PyCFunction) _wrap_StyledTextCtrl_GetWrapStartIndent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetLayoutCache", (PyCFunction) _wrap_StyledTextCtrl_SetLayoutCache, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLayoutCache", (PyCFunction) _wrap_StyledTextCtrl_GetLayoutCache, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetScrollWidth", (PyCFunction) _wrap_StyledTextCtrl_SetScrollWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetScrollWidth", (PyCFunction) _wrap_StyledTextCtrl_GetScrollWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_TextWidth", (PyCFunction) _wrap_StyledTextCtrl_TextWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetEndAtLastLine", (PyCFunction) _wrap_StyledTextCtrl_SetEndAtLastLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetEndAtLastLine", (PyCFunction) _wrap_StyledTextCtrl_GetEndAtLastLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_TextHeight", (PyCFunction) _wrap_StyledTextCtrl_TextHeight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetUseVerticalScrollBar", (PyCFunction) _wrap_StyledTextCtrl_SetUseVerticalScrollBar, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetUseVerticalScrollBar", (PyCFunction) _wrap_StyledTextCtrl_GetUseVerticalScrollBar, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AppendText", (PyCFunction) _wrap_StyledTextCtrl_AppendText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetTwoPhaseDraw", (PyCFunction) _wrap_StyledTextCtrl_GetTwoPhaseDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetTwoPhaseDraw", (PyCFunction) _wrap_StyledTextCtrl_SetTwoPhaseDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_TargetFromSelection", (PyCFunction) _wrap_StyledTextCtrl_TargetFromSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LinesJoin", (PyCFunction) _wrap_StyledTextCtrl_LinesJoin, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LinesSplit", (PyCFunction) _wrap_StyledTextCtrl_LinesSplit, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetFoldMarginColour", (PyCFunction) _wrap_StyledTextCtrl_SetFoldMarginColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetFoldMarginHiColour", (PyCFunction) _wrap_StyledTextCtrl_SetFoldMarginHiColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineDown", (PyCFunction) _wrap_StyledTextCtrl_LineDown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineDownExtend", (PyCFunction) _wrap_StyledTextCtrl_LineDownExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineUp", (PyCFunction) _wrap_StyledTextCtrl_LineUp, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineUpExtend", (PyCFunction) _wrap_StyledTextCtrl_LineUpExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CharLeft", (PyCFunction) _wrap_StyledTextCtrl_CharLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CharLeftExtend", (PyCFunction) _wrap_StyledTextCtrl_CharLeftExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CharRight", (PyCFunction) _wrap_StyledTextCtrl_CharRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CharRightExtend", (PyCFunction) _wrap_StyledTextCtrl_CharRightExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordLeft", (PyCFunction) _wrap_StyledTextCtrl_WordLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordLeftExtend", (PyCFunction) _wrap_StyledTextCtrl_WordLeftExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordRight", (PyCFunction) _wrap_StyledTextCtrl_WordRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordRightExtend", (PyCFunction) _wrap_StyledTextCtrl_WordRightExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Home", (PyCFunction) _wrap_StyledTextCtrl_Home, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_HomeExtend", (PyCFunction) _wrap_StyledTextCtrl_HomeExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineEnd", (PyCFunction) _wrap_StyledTextCtrl_LineEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineEndExtend", (PyCFunction) _wrap_StyledTextCtrl_LineEndExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DocumentStart", (PyCFunction) _wrap_StyledTextCtrl_DocumentStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DocumentStartExtend", (PyCFunction) _wrap_StyledTextCtrl_DocumentStartExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DocumentEnd", (PyCFunction) _wrap_StyledTextCtrl_DocumentEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DocumentEndExtend", (PyCFunction) _wrap_StyledTextCtrl_DocumentEndExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PageUp", (PyCFunction) _wrap_StyledTextCtrl_PageUp, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PageUpExtend", (PyCFunction) _wrap_StyledTextCtrl_PageUpExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PageDown", (PyCFunction) _wrap_StyledTextCtrl_PageDown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PageDownExtend", (PyCFunction) _wrap_StyledTextCtrl_PageDownExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_EditToggleOvertype", (PyCFunction) _wrap_StyledTextCtrl_EditToggleOvertype, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Cancel", (PyCFunction) _wrap_StyledTextCtrl_Cancel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DeleteBack", (PyCFunction) _wrap_StyledTextCtrl_DeleteBack, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Tab", (PyCFunction) _wrap_StyledTextCtrl_Tab, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_BackTab", (PyCFunction) _wrap_StyledTextCtrl_BackTab, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_NewLine", (PyCFunction) _wrap_StyledTextCtrl_NewLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_FormFeed", (PyCFunction) _wrap_StyledTextCtrl_FormFeed, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_VCHome", (PyCFunction) _wrap_StyledTextCtrl_VCHome, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_VCHomeExtend", (PyCFunction) _wrap_StyledTextCtrl_VCHomeExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ZoomIn", (PyCFunction) _wrap_StyledTextCtrl_ZoomIn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ZoomOut", (PyCFunction) _wrap_StyledTextCtrl_ZoomOut, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DelWordLeft", (PyCFunction) _wrap_StyledTextCtrl_DelWordLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DelWordRight", (PyCFunction) _wrap_StyledTextCtrl_DelWordRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineCut", (PyCFunction) _wrap_StyledTextCtrl_LineCut, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineDelete", (PyCFunction) _wrap_StyledTextCtrl_LineDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineTranspose", (PyCFunction) _wrap_StyledTextCtrl_LineTranspose, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineDuplicate", (PyCFunction) _wrap_StyledTextCtrl_LineDuplicate, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LowerCase", (PyCFunction) _wrap_StyledTextCtrl_LowerCase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_UpperCase", (PyCFunction) _wrap_StyledTextCtrl_UpperCase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineScrollDown", (PyCFunction) _wrap_StyledTextCtrl_LineScrollDown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineScrollUp", (PyCFunction) _wrap_StyledTextCtrl_LineScrollUp, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DeleteBackNotLine", (PyCFunction) _wrap_StyledTextCtrl_DeleteBackNotLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_HomeDisplay", (PyCFunction) _wrap_StyledTextCtrl_HomeDisplay, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_HomeDisplayExtend", (PyCFunction) _wrap_StyledTextCtrl_HomeDisplayExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineEndDisplay", (PyCFunction) _wrap_StyledTextCtrl_LineEndDisplay, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineEndDisplayExtend", (PyCFunction) _wrap_StyledTextCtrl_LineEndDisplayExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_HomeWrap", (PyCFunction) _wrap_StyledTextCtrl_HomeWrap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_HomeWrapExtend", (PyCFunction) _wrap_StyledTextCtrl_HomeWrapExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineEndWrap", (PyCFunction) _wrap_StyledTextCtrl_LineEndWrap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineEndWrapExtend", (PyCFunction) _wrap_StyledTextCtrl_LineEndWrapExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_VCHomeWrap", (PyCFunction) _wrap_StyledTextCtrl_VCHomeWrap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_VCHomeWrapExtend", (PyCFunction) _wrap_StyledTextCtrl_VCHomeWrapExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineCopy", (PyCFunction) _wrap_StyledTextCtrl_LineCopy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_MoveCaretInsideView", (PyCFunction) _wrap_StyledTextCtrl_MoveCaretInsideView, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineLength", (PyCFunction) _wrap_StyledTextCtrl_LineLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_BraceHighlight", (PyCFunction) _wrap_StyledTextCtrl_BraceHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_BraceBadLight", (PyCFunction) _wrap_StyledTextCtrl_BraceBadLight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_BraceMatch", (PyCFunction) _wrap_StyledTextCtrl_BraceMatch, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetViewEOL", (PyCFunction) _wrap_StyledTextCtrl_GetViewEOL, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetViewEOL", (PyCFunction) _wrap_StyledTextCtrl_SetViewEOL, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetDocPointer", (PyCFunction) _wrap_StyledTextCtrl_GetDocPointer, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetDocPointer", (PyCFunction) _wrap_StyledTextCtrl_SetDocPointer, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetModEventMask", (PyCFunction) _wrap_StyledTextCtrl_SetModEventMask, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetEdgeColumn", (PyCFunction) _wrap_StyledTextCtrl_GetEdgeColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetEdgeColumn", (PyCFunction) _wrap_StyledTextCtrl_SetEdgeColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetEdgeMode", (PyCFunction) _wrap_StyledTextCtrl_GetEdgeMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetEdgeMode", (PyCFunction) _wrap_StyledTextCtrl_SetEdgeMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetEdgeColour", (PyCFunction) _wrap_StyledTextCtrl_GetEdgeColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetEdgeColour", (PyCFunction) _wrap_StyledTextCtrl_SetEdgeColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SearchAnchor", (PyCFunction) _wrap_StyledTextCtrl_SearchAnchor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SearchNext", (PyCFunction) _wrap_StyledTextCtrl_SearchNext, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SearchPrev", (PyCFunction) _wrap_StyledTextCtrl_SearchPrev, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LinesOnScreen", (PyCFunction) _wrap_StyledTextCtrl_LinesOnScreen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_UsePopUp", (PyCFunction) _wrap_StyledTextCtrl_UsePopUp, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SelectionIsRectangle", (PyCFunction) _wrap_StyledTextCtrl_SelectionIsRectangle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetZoom", (PyCFunction) _wrap_StyledTextCtrl_SetZoom, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetZoom", (PyCFunction) _wrap_StyledTextCtrl_GetZoom, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CreateDocument", (PyCFunction) _wrap_StyledTextCtrl_CreateDocument, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AddRefDocument", (PyCFunction) _wrap_StyledTextCtrl_AddRefDocument, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ReleaseDocument", (PyCFunction) _wrap_StyledTextCtrl_ReleaseDocument, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetModEventMask", (PyCFunction) _wrap_StyledTextCtrl_GetModEventMask, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSTCFocus", (PyCFunction) _wrap_StyledTextCtrl_SetSTCFocus, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetSTCFocus", (PyCFunction) _wrap_StyledTextCtrl_GetSTCFocus, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetStatus", (PyCFunction) _wrap_StyledTextCtrl_SetStatus, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetStatus", (PyCFunction) _wrap_StyledTextCtrl_GetStatus, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetMouseDownCaptures", (PyCFunction) _wrap_StyledTextCtrl_SetMouseDownCaptures, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetMouseDownCaptures", (PyCFunction) _wrap_StyledTextCtrl_GetMouseDownCaptures, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSTCCursor", (PyCFunction) _wrap_StyledTextCtrl_SetSTCCursor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetSTCCursor", (PyCFunction) _wrap_StyledTextCtrl_GetSTCCursor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetControlCharSymbol", (PyCFunction) _wrap_StyledTextCtrl_SetControlCharSymbol, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetControlCharSymbol", (PyCFunction) _wrap_StyledTextCtrl_GetControlCharSymbol, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordPartLeft", (PyCFunction) _wrap_StyledTextCtrl_WordPartLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordPartLeftExtend", (PyCFunction) _wrap_StyledTextCtrl_WordPartLeftExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordPartRight", (PyCFunction) _wrap_StyledTextCtrl_WordPartRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordPartRightExtend", (PyCFunction) _wrap_StyledTextCtrl_WordPartRightExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetVisiblePolicy", (PyCFunction) _wrap_StyledTextCtrl_SetVisiblePolicy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DelLineLeft", (PyCFunction) _wrap_StyledTextCtrl_DelLineLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DelLineRight", (PyCFunction) _wrap_StyledTextCtrl_DelLineRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetXOffset", (PyCFunction) _wrap_StyledTextCtrl_SetXOffset, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetXOffset", (PyCFunction) _wrap_StyledTextCtrl_GetXOffset, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ChooseCaretX", (PyCFunction) _wrap_StyledTextCtrl_ChooseCaretX, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetXCaretPolicy", (PyCFunction) _wrap_StyledTextCtrl_SetXCaretPolicy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetYCaretPolicy", (PyCFunction) _wrap_StyledTextCtrl_SetYCaretPolicy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetPrintWrapMode", (PyCFunction) _wrap_StyledTextCtrl_SetPrintWrapMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetPrintWrapMode", (PyCFunction) _wrap_StyledTextCtrl_GetPrintWrapMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetHotspotActiveForeground", (PyCFunction) _wrap_StyledTextCtrl_SetHotspotActiveForeground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetHotspotActiveBackground", (PyCFunction) _wrap_StyledTextCtrl_SetHotspotActiveBackground, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetHotspotActiveUnderline", (PyCFunction) _wrap_StyledTextCtrl_SetHotspotActiveUnderline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetHotspotSingleLine", (PyCFunction) _wrap_StyledTextCtrl_SetHotspotSingleLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ParaDown", (PyCFunction) _wrap_StyledTextCtrl_ParaDown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ParaDownExtend", (PyCFunction) _wrap_StyledTextCtrl_ParaDownExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ParaUp", (PyCFunction) _wrap_StyledTextCtrl_ParaUp, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ParaUpExtend", (PyCFunction) _wrap_StyledTextCtrl_ParaUpExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PositionBefore", (PyCFunction) _wrap_StyledTextCtrl_PositionBefore, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PositionAfter", (PyCFunction) _wrap_StyledTextCtrl_PositionAfter, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CopyRange", (PyCFunction) _wrap_StyledTextCtrl_CopyRange, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CopyText", (PyCFunction) _wrap_StyledTextCtrl_CopyText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetSelectionMode", (PyCFunction) _wrap_StyledTextCtrl_SetSelectionMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetSelectionMode", (PyCFunction) _wrap_StyledTextCtrl_GetSelectionMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLineSelStartPosition", (PyCFunction) _wrap_StyledTextCtrl_GetLineSelStartPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLineSelEndPosition", (PyCFunction) _wrap_StyledTextCtrl_GetLineSelEndPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineDownRectExtend", (PyCFunction) _wrap_StyledTextCtrl_LineDownRectExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineUpRectExtend", (PyCFunction) _wrap_StyledTextCtrl_LineUpRectExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CharLeftRectExtend", (PyCFunction) _wrap_StyledTextCtrl_CharLeftRectExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CharRightRectExtend", (PyCFunction) _wrap_StyledTextCtrl_CharRightRectExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_HomeRectExtend", (PyCFunction) _wrap_StyledTextCtrl_HomeRectExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_VCHomeRectExtend", (PyCFunction) _wrap_StyledTextCtrl_VCHomeRectExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LineEndRectExtend", (PyCFunction) _wrap_StyledTextCtrl_LineEndRectExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PageUpRectExtend", (PyCFunction) _wrap_StyledTextCtrl_PageUpRectExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PageDownRectExtend", (PyCFunction) _wrap_StyledTextCtrl_PageDownRectExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StutteredPageUp", (PyCFunction) _wrap_StyledTextCtrl_StutteredPageUp, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StutteredPageUpExtend", (PyCFunction) _wrap_StyledTextCtrl_StutteredPageUpExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StutteredPageDown", (PyCFunction) _wrap_StyledTextCtrl_StutteredPageDown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StutteredPageDownExtend", (PyCFunction) _wrap_StyledTextCtrl_StutteredPageDownExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordLeftEnd", (PyCFunction) _wrap_StyledTextCtrl_WordLeftEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordLeftEndExtend", (PyCFunction) _wrap_StyledTextCtrl_WordLeftEndExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordRightEnd", (PyCFunction) _wrap_StyledTextCtrl_WordRightEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_WordRightEndExtend", (PyCFunction) _wrap_StyledTextCtrl_WordRightEndExtend, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetWhitespaceChars", (PyCFunction) _wrap_StyledTextCtrl_SetWhitespaceChars, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetCharsDefault", (PyCFunction) _wrap_StyledTextCtrl_SetCharsDefault, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AutoCompGetCurrent", (PyCFunction) _wrap_StyledTextCtrl_AutoCompGetCurrent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Allocate", (PyCFunction) _wrap_StyledTextCtrl_Allocate, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_FindColumn", (PyCFunction) _wrap_StyledTextCtrl_FindColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StartRecord", (PyCFunction) _wrap_StyledTextCtrl_StartRecord, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StopRecord", (PyCFunction) _wrap_StyledTextCtrl_StopRecord, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetLexer", (PyCFunction) _wrap_StyledTextCtrl_SetLexer, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLexer", (PyCFunction) _wrap_StyledTextCtrl_GetLexer, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_Colourise", (PyCFunction) _wrap_StyledTextCtrl_Colourise, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetProperty", (PyCFunction) _wrap_StyledTextCtrl_SetProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetKeyWords", (PyCFunction) _wrap_StyledTextCtrl_SetKeyWords, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetLexerLanguage", (PyCFunction) _wrap_StyledTextCtrl_SetLexerLanguage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCurrentLine", (PyCFunction) _wrap_StyledTextCtrl_GetCurrentLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetSpec", (PyCFunction) _wrap_StyledTextCtrl_StyleSetSpec, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetFont", (PyCFunction) _wrap_StyledTextCtrl_StyleSetFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetFontAttr", (PyCFunction) _wrap_StyledTextCtrl_StyleSetFontAttr, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetCharacterSet", (PyCFunction) _wrap_StyledTextCtrl_StyleSetCharacterSet, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_StyleSetFontEncoding", (PyCFunction) _wrap_StyledTextCtrl_StyleSetFontEncoding, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_CmdKeyExecute", (PyCFunction) _wrap_StyledTextCtrl_CmdKeyExecute, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetMargins", (PyCFunction) _wrap_StyledTextCtrl_SetMargins, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetSelection", (PyCFunction) _wrap_StyledTextCtrl_GetSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_PointFromPosition", (PyCFunction) _wrap_StyledTextCtrl_PointFromPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ScrollToLine", (PyCFunction) _wrap_StyledTextCtrl_ScrollToLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_ScrollToColumn", (PyCFunction) _wrap_StyledTextCtrl_ScrollToColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SendMsg", (PyCFunction) _wrap_StyledTextCtrl_SendMsg, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetVScrollBar", (PyCFunction) _wrap_StyledTextCtrl_SetVScrollBar, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetHScrollBar", (PyCFunction) _wrap_StyledTextCtrl_SetHScrollBar, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLastKeydownProcessed", (PyCFunction) _wrap_StyledTextCtrl_GetLastKeydownProcessed, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetLastKeydownProcessed", (PyCFunction) _wrap_StyledTextCtrl_SetLastKeydownProcessed, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SaveFile", (PyCFunction) _wrap_StyledTextCtrl_SaveFile, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_LoadFile", (PyCFunction) _wrap_StyledTextCtrl_LoadFile, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DoDragOver", (PyCFunction) _wrap_StyledTextCtrl_DoDragOver, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_DoDropText", (PyCFunction) _wrap_StyledTextCtrl_DoDropText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetUseAntiAliasing", (PyCFunction) _wrap_StyledTextCtrl_SetUseAntiAliasing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetUseAntiAliasing", (PyCFunction) _wrap_StyledTextCtrl_GetUseAntiAliasing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AddTextRaw", (PyCFunction) _wrap_StyledTextCtrl_AddTextRaw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_InsertTextRaw", (PyCFunction) _wrap_StyledTextCtrl_InsertTextRaw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetCurLineRaw", (PyCFunction) _wrap_StyledTextCtrl_GetCurLineRaw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetLineRaw", (PyCFunction) _wrap_StyledTextCtrl_GetLineRaw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetSelectedTextRaw", (PyCFunction) _wrap_StyledTextCtrl_GetSelectedTextRaw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetTextRangeRaw", (PyCFunction) _wrap_StyledTextCtrl_GetTextRangeRaw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_SetTextRaw", (PyCFunction) _wrap_StyledTextCtrl_SetTextRaw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_GetTextRaw", (PyCFunction) _wrap_StyledTextCtrl_GetTextRaw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_AppendTextRaw", (PyCFunction) _wrap_StyledTextCtrl_AppendTextRaw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextCtrl_swigregister", StyledTextCtrl_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_StyledTextEvent", (PyCFunction) _wrap_new_StyledTextEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_StyledTextEvent", (PyCFunction) _wrap_delete_StyledTextEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetPosition", (PyCFunction) _wrap_StyledTextEvent_SetPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetKey", (PyCFunction) _wrap_StyledTextEvent_SetKey, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetModifiers", (PyCFunction) _wrap_StyledTextEvent_SetModifiers, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetModificationType", (PyCFunction) _wrap_StyledTextEvent_SetModificationType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetText", (PyCFunction) _wrap_StyledTextEvent_SetText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetLength", (PyCFunction) _wrap_StyledTextEvent_SetLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetLinesAdded", (PyCFunction) _wrap_StyledTextEvent_SetLinesAdded, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetLine", (PyCFunction) _wrap_StyledTextEvent_SetLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetFoldLevelNow", (PyCFunction) _wrap_StyledTextEvent_SetFoldLevelNow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetFoldLevelPrev", (PyCFunction) _wrap_StyledTextEvent_SetFoldLevelPrev, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetMargin", (PyCFunction) _wrap_StyledTextEvent_SetMargin, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetMessage", (PyCFunction) _wrap_StyledTextEvent_SetMessage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetWParam", (PyCFunction) _wrap_StyledTextEvent_SetWParam, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetLParam", (PyCFunction) _wrap_StyledTextEvent_SetLParam, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetListType", (PyCFunction) _wrap_StyledTextEvent_SetListType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetX", (PyCFunction) _wrap_StyledTextEvent_SetX, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetY", (PyCFunction) _wrap_StyledTextEvent_SetY, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetDragText", (PyCFunction) _wrap_StyledTextEvent_SetDragText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetDragAllowMove", (PyCFunction) _wrap_StyledTextEvent_SetDragAllowMove, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_SetDragResult", (PyCFunction) _wrap_StyledTextEvent_SetDragResult, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetPosition", (PyCFunction) _wrap_StyledTextEvent_GetPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetKey", (PyCFunction) _wrap_StyledTextEvent_GetKey, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetModifiers", (PyCFunction) _wrap_StyledTextEvent_GetModifiers, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetModificationType", (PyCFunction) _wrap_StyledTextEvent_GetModificationType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetText", (PyCFunction) _wrap_StyledTextEvent_GetText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetLength", (PyCFunction) _wrap_StyledTextEvent_GetLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetLinesAdded", (PyCFunction) _wrap_StyledTextEvent_GetLinesAdded, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetLine", (PyCFunction) _wrap_StyledTextEvent_GetLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetFoldLevelNow", (PyCFunction) _wrap_StyledTextEvent_GetFoldLevelNow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetFoldLevelPrev", (PyCFunction) _wrap_StyledTextEvent_GetFoldLevelPrev, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetMargin", (PyCFunction) _wrap_StyledTextEvent_GetMargin, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetMessage", (PyCFunction) _wrap_StyledTextEvent_GetMessage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetWParam", (PyCFunction) _wrap_StyledTextEvent_GetWParam, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetLParam", (PyCFunction) _wrap_StyledTextEvent_GetLParam, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetListType", (PyCFunction) _wrap_StyledTextEvent_GetListType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetX", (PyCFunction) _wrap_StyledTextEvent_GetX, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetY", (PyCFunction) _wrap_StyledTextEvent_GetY, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetDragText", (PyCFunction) _wrap_StyledTextEvent_GetDragText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetDragAllowMove", (PyCFunction) _wrap_StyledTextEvent_GetDragAllowMove, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetDragResult", (PyCFunction) _wrap_StyledTextEvent_GetDragResult, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetShift", (PyCFunction) _wrap_StyledTextEvent_GetShift, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetControl", (PyCFunction) _wrap_StyledTextEvent_GetControl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_GetAlt", (PyCFunction) _wrap_StyledTextEvent_GetAlt, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_Clone", (PyCFunction) _wrap_StyledTextEvent_Clone, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"StyledTextEvent_swigregister", StyledTextEvent_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_wxLayoutConstraintsTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutConstraints *) x));
}
static void *_p_wxGBSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizerItem *) ((wxGBSizerItem *) x));
}
static void *_p_wxSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizerItem *) x));
}
static void *_p_wxScrollEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxIndividualLayoutConstraintTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxIndividualLayoutConstraint *) x));
}
static void *_p_wxStaticBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStaticBoxSizer *) x));
}
static void *_p_wxBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxBoxSizer *) x));
}
static void *_p_wxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizer *) x));
}
static void *_p_wxGridBagSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *)(wxFlexGridSizer *) ((wxGridBagSizer *) x));
}
static void *_p_wxFileHistoryTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFileHistory *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvent *) x));
}
static void *_p_wxFlexGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *) ((wxFlexGridSizer *) x));
}
static void *_p_wxGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxGridSizer *) x));
}
static void *_p_wxInitDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxInitDialogEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNcPaintEvent *) x));
}
static void *_p_wxStyledTextEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxStyledTextEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSysColourChangedEvent *) x));
}
static void *_p_wxControlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxControl *) x));
}
static void *_p_wxSetCursorEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSetCursorEvent *) x));
}
static void *_p_wxTimerEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxTimerEvent *) x));
}
static void *_p_wxFSFileTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFSFile *) x));
}
static void *_p_wxClipboardTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxClipboard *) x));
}
static void *_p_wxPySizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxPySizer *) x));
}
static void *_p_wxStyledTextCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxStyledTextCtrl *) x));
}
static void *_p_wxPyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPyEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxShowEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxShowEvent *) x));
}
static void *_p_wxToolTipTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxToolTip *) x));
}
static void *_p_wxMenuItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxMenuItem *) x));
}
static void *_p_wxDateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxDateEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIdleEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIconizeEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMoveEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxActivateEvent *) x));
}
static void *_p_wxPNMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNMHandler *) x));
}
static void *_p_wxJPEGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxJPEGHandler *) x));
}
static void *_p_wxPCXHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPCXHandler *) x));
}
static void *_p_wxGIFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxGIFHandler *) x));
}
static void *_p_wxPNGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNGHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *)(wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *) ((wxCURHandler *) x));
}
static void *_p_wxICOHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *) ((wxICOHandler *) x));
}
static void *_p_wxBMPHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxBMPHandler *) x));
}
static void *_p_wxPyImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPyImageHandler *) x));
}
static void *_p_wxImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImageHandler *) x));
}
static void *_p_wxXPMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxXPMHandler *) x));
}
static void *_p_wxTIFFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxTIFFHandler *) x));
}
static void *_p_wxEvtHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvtHandler *) x));
}
static void *_p_wxStdDialogButtonSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStdDialogButtonSizer *) x));
}
static void *_p_wxAcceleratorTableTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxAcceleratorTable *) x));
}
static void *_p_wxImageTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImage *) x));
}
static void *_p_wxScrollWinEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxScrollWinEvent *) x));
}
static void *_p_wxSystemOptionsTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSystemOptions *) x));
}
static void *_p_wxJoystickEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxJoystickEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxKeyEvent *) x));
}
static void *_p_wxWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxWindow *) x));
}
static void *_p_wxMenuTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxMenu *) x));
}
static void *_p_wxMenuBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxPyProcessTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyProcess *) x));
}
static void *_p_wxFileSystemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFileSystem *) x));
}
static void *_p_wxContextMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMenuEvent *) x));
}
static void *_p_wxPyAppTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyApp *) x));
}
static void *_p_wxCloseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxEraseEvent *) x));
}
static void *_p_wxBusyInfoTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxBusyInfo *) x));
}
static void *_p_wxPyCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCommandEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDropFilesEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxProcessEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxProcessEvent *) x));
}
static void *_p_wxControlWithItemsTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxValidator *) x));
}
static void *_p_wxPyTimerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyTimer *) x));
}
static void *_p_wxControlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxControl *) x));
}
static void *_p_wxControlWithItemsTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxStyledTextCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxStyledTextCtrl *) x));
}
static void *_p_wxMenuBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMenuBar *) x));
}
static void *_p_wxChildFocusEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxChildFocusEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxScrollEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowCreateEvent *) x));
}
static void *_p_wxDateEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxDateEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxUpdateUIEvent *) x));
}
static void *_p_wxStyledTextEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxStyledTextEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowDestroyEvent *) x));
}
static void *_p_wxContextMenuEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxContextMenuEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxNotifyEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxPyCommandEvent *) x));
}
static void *_p_wxControlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxControl *) x));
}
static void *_p_wxWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxWindow *) x));
}
static void *_p_wxControlWithItemsTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyAppTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyApp *) x));
}
static void *_p_wxPyTimerTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyTimer *) x));
}
static void *_p_wxStyledTextCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxStyledTextCtrl *) x));
}
static void *_p_wxValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxValidator *) x));
}
static void *_p_wxPyValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxMenuBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxMenuTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxMenu *) x));
}
static void *_p_wxPyProcessTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyProcess *) x));
}
static void *_p_wxControlWithItemsTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxControlWithItems *) x));
}
static void *_p_wxStyledTextCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxStyledTextCtrl *) x));
}
static void *_p_wxContextMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMenuEvent *) x));
}
static void *_p_wxCloseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxEraseEvent *) x));
}
static void *_p_wxSetCursorEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSetCursorEvent *) x));
}
static void *_p_wxTimerEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxTimerEvent *) x));
}
static void *_p_wxInitDialogEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxInitDialogEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxPyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPyEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxJoystickEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxJoystickEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIdleEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIconizeEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxActivateEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMoveEvent *) x));
}
static void *_p_wxDateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxDateEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNcPaintEvent *) x));
}
static void *_p_wxStyledTextEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxStyledTextEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSysColourChangedEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDropFilesEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxProcessEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxProcessEvent *) x));
}
static void *_p_wxShowEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxShowEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCommandEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxKeyEvent *) x));
}
static void *_p_wxScrollWinEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxScrollWinEvent *) x));
}
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, 0};
static swig_type_info _swigt__p_form_ops_t = {"_p_form_ops_t", "enum form_ops_t *|form_ops_t *", 0, 0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|byte *", 0, 0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *|time_t *", 0, 0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *|wxLogLevel *", 0, 0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, 0};
static swig_type_info _swigt__p_wxBitmap = {"_p_wxBitmap", "wxBitmap *", 0, 0, 0};
static swig_type_info _swigt__p_wxColour = {"_p_wxColour", "wxColour *", 0, 0, 0};
static swig_type_info _swigt__p_wxCommandEvent = {"_p_wxCommandEvent", "wxCommandEvent *", 0, 0, 0};
static swig_type_info _swigt__p_wxChildFocusEvent = {"_p_wxChildFocusEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxScrollEvent = {"_p_wxScrollEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxWindowCreateEvent = {"_p_wxWindowCreateEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDateEvent = {"_p_wxDateEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxUpdateUIEvent = {"_p_wxUpdateUIEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxWindowDestroyEvent = {"_p_wxWindowDestroyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxContextMenuEvent = {"_p_wxContextMenuEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNotifyEvent = {"_p_wxNotifyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyCommandEvent = {"_p_wxPyCommandEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxControl = {"_p_wxControl", "wxControl *", 0, 0, 0};
static swig_type_info _swigt__p_wxControlWithItems = {"_p_wxControlWithItems", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDC = {"_p_wxDC", "wxDC *", 0, 0, 0};
static swig_type_info _swigt__p_wxDuplexMode = {"_p_wxDuplexMode", "enum wxDuplexMode *|wxDuplexMode *", 0, 0, 0};
static swig_type_info _swigt__p_wxEvent = {"_p_wxEvent", "wxEvent *", 0, 0, 0};
static swig_type_info _swigt__p_wxMenuEvent = {"_p_wxMenuEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCloseEvent = {"_p_wxCloseEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMouseEvent = {"_p_wxMouseEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxEraseEvent = {"_p_wxEraseEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSetCursorEvent = {"_p_wxSetCursorEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTimerEvent = {"_p_wxTimerEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxInitDialogEvent = {"_p_wxInitDialogEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyEvent = {"_p_wxPyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxJoystickEvent = {"_p_wxJoystickEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxIdleEvent = {"_p_wxIdleEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxQueryNewPaletteEvent = {"_p_wxQueryNewPaletteEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMaximizeEvent = {"_p_wxMaximizeEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxIconizeEvent = {"_p_wxIconizeEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxActivateEvent = {"_p_wxActivateEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSizeEvent = {"_p_wxSizeEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMoveEvent = {"_p_wxMoveEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPaintEvent = {"_p_wxPaintEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNcPaintEvent = {"_p_wxNcPaintEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPaletteChangedEvent = {"_p_wxPaletteChangedEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDisplayChangedEvent = {"_p_wxDisplayChangedEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMouseCaptureChangedEvent = {"_p_wxMouseCaptureChangedEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSysColourChangedEvent = {"_p_wxSysColourChangedEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDropFilesEvent = {"_p_wxDropFilesEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFocusEvent = {"_p_wxFocusEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxProcessEvent = {"_p_wxProcessEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxShowEvent = {"_p_wxShowEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNavigationKeyEvent = {"_p_wxNavigationKeyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxKeyEvent = {"_p_wxKeyEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxScrollWinEvent = {"_p_wxScrollWinEvent", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxEvtHandler = {"_p_wxEvtHandler", "wxEvtHandler *", 0, 0, 0};
static swig_type_info _swigt__p_wxPyApp = {"_p_wxPyApp", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyTimer = {"_p_wxPyTimer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMenuBar = {"_p_wxMenuBar", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxValidator = {"_p_wxValidator", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyValidator = {"_p_wxPyValidator", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMenu = {"_p_wxMenu", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyProcess = {"_p_wxPyProcess", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFont = {"_p_wxFont", "wxFont *", 0, 0, 0};
static swig_type_info _swigt__p_wxMemoryBuffer = {"_p_wxMemoryBuffer", "wxMemoryBuffer *", 0, 0, 0};
static swig_type_info _swigt__p_wxObject = {"_p_wxObject", "wxObject *", 0, 0, 0};
static swig_type_info _swigt__p_wxLayoutConstraints = {"_p_wxLayoutConstraints", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGBSizerItem = {"_p_wxGBSizerItem", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSizerItem = {"_p_wxSizerItem", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxIndividualLayoutConstraint = {"_p_wxIndividualLayoutConstraint", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStaticBoxSizer = {"_p_wxStaticBoxSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBoxSizer = {"_p_wxBoxSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSizer = {"_p_wxSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGridBagSizer = {"_p_wxGridBagSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFileHistory = {"_p_wxFileHistory", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGridSizer = {"_p_wxGridSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFlexGridSizer = {"_p_wxFlexGridSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFSFile = {"_p_wxFSFile", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxClipboard = {"_p_wxClipboard", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPySizer = {"_p_wxPySizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxToolTip = {"_p_wxToolTip", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMenuItem = {"_p_wxMenuItem", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyImageHandler = {"_p_wxPyImageHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxImageHandler = {"_p_wxImageHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxXPMHandler = {"_p_wxXPMHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTIFFHandler = {"_p_wxTIFFHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBMPHandler = {"_p_wxBMPHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxICOHandler = {"_p_wxICOHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCURHandler = {"_p_wxCURHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxANIHandler = {"_p_wxANIHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPNGHandler = {"_p_wxPNGHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGIFHandler = {"_p_wxGIFHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPCXHandler = {"_p_wxPCXHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxJPEGHandler = {"_p_wxJPEGHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPNMHandler = {"_p_wxPNMHandler", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStdDialogButtonSizer = {"_p_wxStdDialogButtonSizer", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxAcceleratorTable = {"_p_wxAcceleratorTable", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxImage = {"_p_wxImage", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSystemOptions = {"_p_wxSystemOptions", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFileSystem = {"_p_wxFileSystem", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBusyInfo = {"_p_wxBusyInfo", 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPaperSize = {"_p_wxPaperSize", "enum wxPaperSize *|wxPaperSize *", 0, 0, 0};
static swig_type_info _swigt__p_wxPoint = {"_p_wxPoint", "wxPoint *", 0, 0, 0};
static swig_type_info _swigt__p_wxRect = {"_p_wxRect", "wxRect *", 0, 0, 0};
static swig_type_info _swigt__p_wxScrollBar = {"_p_wxScrollBar", "wxScrollBar *", 0, 0, 0};
static swig_type_info _swigt__p_wxStyledTextCtrl = {"_p_wxStyledTextCtrl", "wxStyledTextCtrl *", 0, 0, 0};
static swig_type_info _swigt__p_wxStyledTextEvent = {"_p_wxStyledTextEvent", "wxStyledTextEvent *", 0, 0, 0};
static swig_type_info _swigt__p_wxWindow = {"_p_wxWindow", "wxWindow *", 0, 0, 0};
static swig_type_info _swigt__ptrdiff_t = {"_ptrdiff_t", "ptrdiff_t", 0, 0, 0};
static swig_type_info _swigt__std__ptrdiff_t = {"_std__ptrdiff_t", "std::ptrdiff_t", 0, 0, 0};
static swig_type_info _swigt__unsigned_int = {"_unsigned_int", "unsigned int|std::size_t", 0, 0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_char,
  &_swigt__p_form_ops_t,
  &_swigt__p_int,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_void,
  &_swigt__p_wxANIHandler,
  &_swigt__p_wxAcceleratorTable,
  &_swigt__p_wxActivateEvent,
  &_swigt__p_wxBMPHandler,
  &_swigt__p_wxBitmap,
  &_swigt__p_wxBoxSizer,
  &_swigt__p_wxBusyInfo,
  &_swigt__p_wxCURHandler,
  &_swigt__p_wxChildFocusEvent,
  &_swigt__p_wxClipboard,
  &_swigt__p_wxCloseEvent,
  &_swigt__p_wxColour,
  &_swigt__p_wxCommandEvent,
  &_swigt__p_wxContextMenuEvent,
  &_swigt__p_wxControl,
  &_swigt__p_wxControlWithItems,
  &_swigt__p_wxDC,
  &_swigt__p_wxDateEvent,
  &_swigt__p_wxDisplayChangedEvent,
  &_swigt__p_wxDropFilesEvent,
  &_swigt__p_wxDuplexMode,
  &_swigt__p_wxEraseEvent,
  &_swigt__p_wxEvent,
  &_swigt__p_wxEvtHandler,
  &_swigt__p_wxFSFile,
  &_swigt__p_wxFileHistory,
  &_swigt__p_wxFileSystem,
  &_swigt__p_wxFlexGridSizer,
  &_swigt__p_wxFocusEvent,
  &_swigt__p_wxFont,
  &_swigt__p_wxGBSizerItem,
  &_swigt__p_wxGIFHandler,
  &_swigt__p_wxGridBagSizer,
  &_swigt__p_wxGridSizer,
  &_swigt__p_wxICOHandler,
  &_swigt__p_wxIconizeEvent,
  &_swigt__p_wxIdleEvent,
  &_swigt__p_wxImage,
  &_swigt__p_wxImageHandler,
  &_swigt__p_wxIndividualLayoutConstraint,
  &_swigt__p_wxInitDialogEvent,
  &_swigt__p_wxJPEGHandler,
  &_swigt__p_wxJoystickEvent,
  &_swigt__p_wxKeyEvent,
  &_swigt__p_wxLayoutConstraints,
  &_swigt__p_wxMaximizeEvent,
  &_swigt__p_wxMemoryBuffer,
  &_swigt__p_wxMenu,
  &_swigt__p_wxMenuBar,
  &_swigt__p_wxMenuEvent,
  &_swigt__p_wxMenuItem,
  &_swigt__p_wxMouseCaptureChangedEvent,
  &_swigt__p_wxMouseEvent,
  &_swigt__p_wxMoveEvent,
  &_swigt__p_wxNavigationKeyEvent,
  &_swigt__p_wxNcPaintEvent,
  &_swigt__p_wxNotifyEvent,
  &_swigt__p_wxObject,
  &_swigt__p_wxPCXHandler,
  &_swigt__p_wxPNGHandler,
  &_swigt__p_wxPNMHandler,
  &_swigt__p_wxPaintEvent,
  &_swigt__p_wxPaletteChangedEvent,
  &_swigt__p_wxPaperSize,
  &_swigt__p_wxPoint,
  &_swigt__p_wxProcessEvent,
  &_swigt__p_wxPyApp,
  &_swigt__p_wxPyCommandEvent,
  &_swigt__p_wxPyEvent,
  &_swigt__p_wxPyImageHandler,
  &_swigt__p_wxPyProcess,
  &_swigt__p_wxPySizer,
  &_swigt__p_wxPyTimer,
  &_swigt__p_wxPyValidator,
  &_swigt__p_wxQueryNewPaletteEvent,
  &_swigt__p_wxRect,
  &_swigt__p_wxScrollBar,
  &_swigt__p_wxScrollEvent,
  &_swigt__p_wxScrollWinEvent,
  &_swigt__p_wxSetCursorEvent,
  &_swigt__p_wxShowEvent,
  &_swigt__p_wxSizeEvent,
  &_swigt__p_wxSizer,
  &_swigt__p_wxSizerItem,
  &_swigt__p_wxStaticBoxSizer,
  &_swigt__p_wxStdDialogButtonSizer,
  &_swigt__p_wxStyledTextCtrl,
  &_swigt__p_wxStyledTextEvent,
  &_swigt__p_wxSysColourChangedEvent,
  &_swigt__p_wxSystemOptions,
  &_swigt__p_wxTIFFHandler,
  &_swigt__p_wxTimerEvent,
  &_swigt__p_wxToolTip,
  &_swigt__p_wxUpdateUIEvent,
  &_swigt__p_wxValidator,
  &_swigt__p_wxWindow,
  &_swigt__p_wxWindowCreateEvent,
  &_swigt__p_wxWindowDestroyEvent,
  &_swigt__p_wxXPMHandler,
  &_swigt__ptrdiff_t,
  &_swigt__std__ptrdiff_t,
  &_swigt__unsigned_int,
};

static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_form_ops_t[] = {  {&_swigt__p_form_ops_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBitmap[] = {  {&_swigt__p_wxBitmap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxColour[] = {  {&_swigt__p_wxColour, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxChildFocusEvent[] = {{&_swigt__p_wxChildFocusEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrollEvent[] = {{&_swigt__p_wxScrollEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindowCreateEvent[] = {{&_swigt__p_wxWindowCreateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDateEvent[] = {{&_swigt__p_wxDateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxUpdateUIEvent[] = {{&_swigt__p_wxUpdateUIEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindowDestroyEvent[] = {{&_swigt__p_wxWindowDestroyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxContextMenuEvent[] = {{&_swigt__p_wxContextMenuEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNotifyEvent[] = {{&_swigt__p_wxNotifyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyCommandEvent[] = {{&_swigt__p_wxPyCommandEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCommandEvent[] = {  {&_swigt__p_wxChildFocusEvent, _p_wxChildFocusEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxScrollEvent, _p_wxScrollEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxWindowCreateEvent, _p_wxWindowCreateEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxDateEvent, _p_wxDateEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxUpdateUIEvent, _p_wxUpdateUIEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxStyledTextEvent, _p_wxStyledTextEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxWindowDestroyEvent, _p_wxWindowDestroyEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxContextMenuEvent, _p_wxContextMenuEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxCommandEvent, 0, 0, 0},  {&_swigt__p_wxNotifyEvent, _p_wxNotifyEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxPyCommandEvent, _p_wxPyCommandEventTo_p_wxCommandEvent, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxControlWithItems[] = {{&_swigt__p_wxControlWithItems, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxControl[] = {  {&_swigt__p_wxControl, 0, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxControl, 0, 0},  {&_swigt__p_wxStyledTextCtrl, _p_wxStyledTextCtrlTo_p_wxControl, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDC[] = {  {&_swigt__p_wxDC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDuplexMode[] = {  {&_swigt__p_wxDuplexMode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenuEvent[] = {{&_swigt__p_wxMenuEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCloseEvent[] = {{&_swigt__p_wxCloseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMouseEvent[] = {{&_swigt__p_wxMouseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEraseEvent[] = {{&_swigt__p_wxEraseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSetCursorEvent[] = {{&_swigt__p_wxSetCursorEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTimerEvent[] = {{&_swigt__p_wxTimerEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxInitDialogEvent[] = {{&_swigt__p_wxInitDialogEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyEvent[] = {{&_swigt__p_wxPyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxJoystickEvent[] = {{&_swigt__p_wxJoystickEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIdleEvent[] = {{&_swigt__p_wxIdleEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxQueryNewPaletteEvent[] = {{&_swigt__p_wxQueryNewPaletteEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMaximizeEvent[] = {{&_swigt__p_wxMaximizeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIconizeEvent[] = {{&_swigt__p_wxIconizeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxActivateEvent[] = {{&_swigt__p_wxActivateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSizeEvent[] = {{&_swigt__p_wxSizeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMoveEvent[] = {{&_swigt__p_wxMoveEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPaintEvent[] = {{&_swigt__p_wxPaintEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNcPaintEvent[] = {{&_swigt__p_wxNcPaintEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPaletteChangedEvent[] = {{&_swigt__p_wxPaletteChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDisplayChangedEvent[] = {{&_swigt__p_wxDisplayChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMouseCaptureChangedEvent[] = {{&_swigt__p_wxMouseCaptureChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSysColourChangedEvent[] = {{&_swigt__p_wxSysColourChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDropFilesEvent[] = {{&_swigt__p_wxDropFilesEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFocusEvent[] = {{&_swigt__p_wxFocusEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxProcessEvent[] = {{&_swigt__p_wxProcessEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxShowEvent[] = {{&_swigt__p_wxShowEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNavigationKeyEvent[] = {{&_swigt__p_wxNavigationKeyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxKeyEvent[] = {{&_swigt__p_wxKeyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrollWinEvent[] = {{&_swigt__p_wxScrollWinEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEvent[] = {  {&_swigt__p_wxContextMenuEvent, _p_wxContextMenuEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMenuEvent, _p_wxMenuEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxCloseEvent, _p_wxCloseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMouseEvent, _p_wxMouseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxEraseEvent, _p_wxEraseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSetCursorEvent, _p_wxSetCursorEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxTimerEvent, _p_wxTimerEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxInitDialogEvent, _p_wxInitDialogEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxScrollEvent, _p_wxScrollEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPyEvent, _p_wxPyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNotifyEvent, _p_wxNotifyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxJoystickEvent, _p_wxJoystickEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxEvent, 0, 0, 0},  {&_swigt__p_wxIdleEvent, _p_wxIdleEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxWindowCreateEvent, _p_wxWindowCreateEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxQueryNewPaletteEvent, _p_wxQueryNewPaletteEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMaximizeEvent, _p_wxMaximizeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxIconizeEvent, _p_wxIconizeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxActivateEvent, _p_wxActivateEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSizeEvent, _p_wxSizeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMoveEvent, _p_wxMoveEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDateEvent, _p_wxDateEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPaintEvent, _p_wxPaintEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNcPaintEvent, _p_wxNcPaintEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxStyledTextEvent, _p_wxStyledTextEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxUpdateUIEvent, _p_wxUpdateUIEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPaletteChangedEvent, _p_wxPaletteChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDisplayChangedEvent, _p_wxDisplayChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMouseCaptureChangedEvent, _p_wxMouseCaptureChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSysColourChangedEvent, _p_wxSysColourChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDropFilesEvent, _p_wxDropFilesEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxFocusEvent, _p_wxFocusEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxChildFocusEvent, _p_wxChildFocusEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxProcessEvent, _p_wxProcessEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxShowEvent, _p_wxShowEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxCommandEvent, _p_wxCommandEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPyCommandEvent, _p_wxPyCommandEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxWindowDestroyEvent, _p_wxWindowDestroyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNavigationKeyEvent, _p_wxNavigationKeyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxKeyEvent, _p_wxKeyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxScrollWinEvent, _p_wxScrollWinEventTo_p_wxEvent, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyApp[] = {{&_swigt__p_wxPyApp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyTimer[] = {{&_swigt__p_wxPyTimer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenuBar[] = {{&_swigt__p_wxMenuBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxValidator[] = {{&_swigt__p_wxValidator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyValidator[] = {{&_swigt__p_wxPyValidator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenu[] = {{&_swigt__p_wxMenu, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyProcess[] = {{&_swigt__p_wxPyProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEvtHandler[] = {  {&_swigt__p_wxControl, _p_wxControlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxWindow, _p_wxWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxEvtHandler, 0, 0, 0},  {&_swigt__p_wxStyledTextCtrl, _p_wxStyledTextCtrlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyApp, _p_wxPyAppTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyTimer, _p_wxPyTimerTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMenuBar, _p_wxMenuBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxValidator, _p_wxValidatorTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyValidator, _p_wxPyValidatorTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMenu, _p_wxMenuTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyProcess, _p_wxPyProcessTo_p_wxEvtHandler, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFont[] = {  {&_swigt__p_wxFont, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMemoryBuffer[] = {  {&_swigt__p_wxMemoryBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxLayoutConstraints[] = {{&_swigt__p_wxLayoutConstraints, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGBSizerItem[] = {{&_swigt__p_wxGBSizerItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSizerItem[] = {{&_swigt__p_wxSizerItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIndividualLayoutConstraint[] = {{&_swigt__p_wxIndividualLayoutConstraint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStaticBoxSizer[] = {{&_swigt__p_wxStaticBoxSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBoxSizer[] = {{&_swigt__p_wxBoxSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSizer[] = {{&_swigt__p_wxSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGridBagSizer[] = {{&_swigt__p_wxGridBagSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFileHistory[] = {{&_swigt__p_wxFileHistory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGridSizer[] = {{&_swigt__p_wxGridSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFlexGridSizer[] = {{&_swigt__p_wxFlexGridSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFSFile[] = {{&_swigt__p_wxFSFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxClipboard[] = {{&_swigt__p_wxClipboard, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPySizer[] = {{&_swigt__p_wxPySizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxToolTip[] = {{&_swigt__p_wxToolTip, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenuItem[] = {{&_swigt__p_wxMenuItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyImageHandler[] = {{&_swigt__p_wxPyImageHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxImageHandler[] = {{&_swigt__p_wxImageHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxXPMHandler[] = {{&_swigt__p_wxXPMHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTIFFHandler[] = {{&_swigt__p_wxTIFFHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBMPHandler[] = {{&_swigt__p_wxBMPHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxICOHandler[] = {{&_swigt__p_wxICOHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCURHandler[] = {{&_swigt__p_wxCURHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxANIHandler[] = {{&_swigt__p_wxANIHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPNGHandler[] = {{&_swigt__p_wxPNGHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGIFHandler[] = {{&_swigt__p_wxGIFHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPCXHandler[] = {{&_swigt__p_wxPCXHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxJPEGHandler[] = {{&_swigt__p_wxJPEGHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPNMHandler[] = {{&_swigt__p_wxPNMHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStdDialogButtonSizer[] = {{&_swigt__p_wxStdDialogButtonSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxAcceleratorTable[] = {{&_swigt__p_wxAcceleratorTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxImage[] = {{&_swigt__p_wxImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSystemOptions[] = {{&_swigt__p_wxSystemOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFileSystem[] = {{&_swigt__p_wxFileSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBusyInfo[] = {{&_swigt__p_wxBusyInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxObject[] = {  {&_swigt__p_wxLayoutConstraints, _p_wxLayoutConstraintsTo_p_wxObject, 0, 0},  {&_swigt__p_wxGBSizerItem, _p_wxGBSizerItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxSizerItem, _p_wxSizerItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxScrollEvent, _p_wxScrollEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxIndividualLayoutConstraint, _p_wxIndividualLayoutConstraintTo_p_wxObject, 0, 0},  {&_swigt__p_wxStaticBoxSizer, _p_wxStaticBoxSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxBoxSizer, _p_wxBoxSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxSizer, _p_wxSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxGridBagSizer, _p_wxGridBagSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxFileHistory, _p_wxFileHistoryTo_p_wxObject, 0, 0},  {&_swigt__p_wxUpdateUIEvent, _p_wxUpdateUIEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenu, _p_wxMenuTo_p_wxObject, 0, 0},  {&_swigt__p_wxEvent, _p_wxEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxGridSizer, _p_wxGridSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxFlexGridSizer, _p_wxFlexGridSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxInitDialogEvent, _p_wxInitDialogEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPaintEvent, _p_wxPaintEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxNcPaintEvent, _p_wxNcPaintEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxStyledTextEvent, _p_wxStyledTextEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPaletteChangedEvent, _p_wxPaletteChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxDisplayChangedEvent, _p_wxDisplayChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMouseCaptureChangedEvent, _p_wxMouseCaptureChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSysColourChangedEvent, _p_wxSysColourChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxControl, _p_wxControlTo_p_wxObject, 0, 0},  {&_swigt__p_wxSetCursorEvent, _p_wxSetCursorEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxTimerEvent, _p_wxTimerEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxFSFile, _p_wxFSFileTo_p_wxObject, 0, 0},  {&_swigt__p_wxClipboard, _p_wxClipboardTo_p_wxObject, 0, 0},  {&_swigt__p_wxPySizer, _p_wxPySizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxStyledTextCtrl, _p_wxStyledTextCtrlTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyEvent, _p_wxPyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxNotifyEvent, _p_wxNotifyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxShowEvent, _p_wxShowEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxToolTip, _p_wxToolTipTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenuItem, _p_wxMenuItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxDateEvent, _p_wxDateEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMoveEvent, _p_wxMoveEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSizeEvent, _p_wxSizeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxActivateEvent, _p_wxActivateEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxIconizeEvent, _p_wxIconizeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMaximizeEvent, _p_wxMaximizeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxQueryNewPaletteEvent, _p_wxQueryNewPaletteEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindowCreateEvent, _p_wxWindowCreateEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxIdleEvent, _p_wxIdleEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyImageHandler, _p_wxPyImageHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxImageHandler, _p_wxImageHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxXPMHandler, _p_wxXPMHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxTIFFHandler, _p_wxTIFFHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxEvtHandler, _p_wxEvtHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxBMPHandler, _p_wxBMPHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxICOHandler, _p_wxICOHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxCURHandler, _p_wxCURHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxANIHandler, _p_wxANIHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPNGHandler, _p_wxPNGHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxGIFHandler, _p_wxGIFHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPCXHandler, _p_wxPCXHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxJPEGHandler, _p_wxJPEGHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPNMHandler, _p_wxPNMHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxStdDialogButtonSizer, _p_wxStdDialogButtonSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxAcceleratorTable, _p_wxAcceleratorTableTo_p_wxObject, 0, 0},  {&_swigt__p_wxImage, _p_wxImageTo_p_wxObject, 0, 0},  {&_swigt__p_wxScrollWinEvent, _p_wxScrollWinEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSystemOptions, _p_wxSystemOptionsTo_p_wxObject, 0, 0},  {&_swigt__p_wxJoystickEvent, _p_wxJoystickEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxObject, 0, 0, 0},  {&_swigt__p_wxKeyEvent, _p_wxKeyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxNavigationKeyEvent, _p_wxNavigationKeyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindowDestroyEvent, _p_wxWindowDestroyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindow, _p_wxWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenuBar, _p_wxMenuBarTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyProcess, _p_wxPyProcessTo_p_wxObject, 0, 0},  {&_swigt__p_wxFileSystem, _p_wxFileSystemTo_p_wxObject, 0, 0},  {&_swigt__p_wxContextMenuEvent, _p_wxContextMenuEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenuEvent, _p_wxMenuEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyApp, _p_wxPyAppTo_p_wxObject, 0, 0},  {&_swigt__p_wxCloseEvent, _p_wxCloseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMouseEvent, _p_wxMouseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxEraseEvent, _p_wxEraseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxBusyInfo, _p_wxBusyInfoTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyCommandEvent, _p_wxPyCommandEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxCommandEvent, _p_wxCommandEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxDropFilesEvent, _p_wxDropFilesEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxFocusEvent, _p_wxFocusEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxChildFocusEvent, _p_wxChildFocusEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxProcessEvent, _p_wxProcessEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyValidator, _p_wxPyValidatorTo_p_wxObject, 0, 0},  {&_swigt__p_wxValidator, _p_wxValidatorTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyTimer, _p_wxPyTimerTo_p_wxObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPaperSize[] = {  {&_swigt__p_wxPaperSize, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPoint[] = {  {&_swigt__p_wxPoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxRect[] = {  {&_swigt__p_wxRect, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrollBar[] = {  {&_swigt__p_wxScrollBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStyledTextCtrl[] = {  {&_swigt__p_wxStyledTextCtrl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStyledTextEvent[] = {  {&_swigt__p_wxStyledTextEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindow[] = {  {&_swigt__p_wxControl, _p_wxControlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxWindow, 0, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxWindow, 0, 0},  {&_swigt__p_wxStyledTextCtrl, _p_wxStyledTextCtrlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMenuBar, _p_wxMenuBarTo_p_wxWindow, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__ptrdiff_t[] = {  {&_swigt__ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__std__ptrdiff_t[] = {  {&_swigt__std__ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__unsigned_int[] = {  {&_swigt__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_char,
  _swigc__p_form_ops_t,
  _swigc__p_int,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_void,
  _swigc__p_wxANIHandler,
  _swigc__p_wxAcceleratorTable,
  _swigc__p_wxActivateEvent,
  _swigc__p_wxBMPHandler,
  _swigc__p_wxBitmap,
  _swigc__p_wxBoxSizer,
  _swigc__p_wxBusyInfo,
  _swigc__p_wxCURHandler,
  _swigc__p_wxChildFocusEvent,
  _swigc__p_wxClipboard,
  _swigc__p_wxCloseEvent,
  _swigc__p_wxColour,
  _swigc__p_wxCommandEvent,
  _swigc__p_wxContextMenuEvent,
  _swigc__p_wxControl,
  _swigc__p_wxControlWithItems,
  _swigc__p_wxDC,
  _swigc__p_wxDateEvent,
  _swigc__p_wxDisplayChangedEvent,
  _swigc__p_wxDropFilesEvent,
  _swigc__p_wxDuplexMode,
  _swigc__p_wxEraseEvent,
  _swigc__p_wxEvent,
  _swigc__p_wxEvtHandler,
  _swigc__p_wxFSFile,
  _swigc__p_wxFileHistory,
  _swigc__p_wxFileSystem,
  _swigc__p_wxFlexGridSizer,
  _swigc__p_wxFocusEvent,
  _swigc__p_wxFont,
  _swigc__p_wxGBSizerItem,
  _swigc__p_wxGIFHandler,
  _swigc__p_wxGridBagSizer,
  _swigc__p_wxGridSizer,
  _swigc__p_wxICOHandler,
  _swigc__p_wxIconizeEvent,
  _swigc__p_wxIdleEvent,
  _swigc__p_wxImage,
  _swigc__p_wxImageHandler,
  _swigc__p_wxIndividualLayoutConstraint,
  _swigc__p_wxInitDialogEvent,
  _swigc__p_wxJPEGHandler,
  _swigc__p_wxJoystickEvent,
  _swigc__p_wxKeyEvent,
  _swigc__p_wxLayoutConstraints,
  _swigc__p_wxMaximizeEvent,
  _swigc__p_wxMemoryBuffer,
  _swigc__p_wxMenu,
  _swigc__p_wxMenuBar,
  _swigc__p_wxMenuEvent,
  _swigc__p_wxMenuItem,
  _swigc__p_wxMouseCaptureChangedEvent,
  _swigc__p_wxMouseEvent,
  _swigc__p_wxMoveEvent,
  _swigc__p_wxNavigationKeyEvent,
  _swigc__p_wxNcPaintEvent,
  _swigc__p_wxNotifyEvent,
  _swigc__p_wxObject,
  _swigc__p_wxPCXHandler,
  _swigc__p_wxPNGHandler,
  _swigc__p_wxPNMHandler,
  _swigc__p_wxPaintEvent,
  _swigc__p_wxPaletteChangedEvent,
  _swigc__p_wxPaperSize,
  _swigc__p_wxPoint,
  _swigc__p_wxProcessEvent,
  _swigc__p_wxPyApp,
  _swigc__p_wxPyCommandEvent,
  _swigc__p_wxPyEvent,
  _swigc__p_wxPyImageHandler,
  _swigc__p_wxPyProcess,
  _swigc__p_wxPySizer,
  _swigc__p_wxPyTimer,
  _swigc__p_wxPyValidator,
  _swigc__p_wxQueryNewPaletteEvent,
  _swigc__p_wxRect,
  _swigc__p_wxScrollBar,
  _swigc__p_wxScrollEvent,
  _swigc__p_wxScrollWinEvent,
  _swigc__p_wxSetCursorEvent,
  _swigc__p_wxShowEvent,
  _swigc__p_wxSizeEvent,
  _swigc__p_wxSizer,
  _swigc__p_wxSizerItem,
  _swigc__p_wxStaticBoxSizer,
  _swigc__p_wxStdDialogButtonSizer,
  _swigc__p_wxStyledTextCtrl,
  _swigc__p_wxStyledTextEvent,
  _swigc__p_wxSysColourChangedEvent,
  _swigc__p_wxSystemOptions,
  _swigc__p_wxTIFFHandler,
  _swigc__p_wxTimerEvent,
  _swigc__p_wxToolTip,
  _swigc__p_wxUpdateUIEvent,
  _swigc__p_wxValidator,
  _swigc__p_wxWindow,
  _swigc__p_wxWindowCreateEvent,
  _swigc__p_wxWindowDestroyEvent,
  _swigc__p_wxXPMHandler,
  _swigc__ptrdiff_t,
  _swigc__std__ptrdiff_t,
  _swigc__unsigned_int,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/*************************************************************************
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.

 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop though that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.

 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
**/

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif

SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
    size_t i;
    swig_module_info *module_head;
    static int init_run = 0;
    
    clientdata = clientdata;
    
    if (init_run) return;
    init_run = 1;
    
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    
    /* Try and load any already created modules */
    module_head = SWIG_GetModule(clientdata);
    if (module_head) {
        swig_module.next = module_head->next;
        module_head->next = &swig_module;
    } else {
        /* This is the first module loaded */
        swig_module.next = &swig_module;
        SWIG_SetModule(clientdata, &swig_module);
    }
    
    /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
    for (i = 0; i < swig_module.size; ++i) {
        swig_type_info *type = 0;
        swig_type_info *ret;
        swig_cast_info *cast;
        
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
        
        /* if there is another module already loaded */
        if (swig_module.next != &swig_module) {
            type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
        }
        if (type) {
            /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
            printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
            if (swig_module.type_initial[i]->clientdata) {
                type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
                printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
            }
        } else {
            type = swig_module.type_initial[i];
        }
        
        /* Insert casting types */
        cast = swig_module.cast_initial[i];
        while (cast->type) {
            /* Don't need to add information already in the list */
            ret = 0;
#ifdef SWIGRUNTIME_DEBUG
            printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
            if (swig_module.next != &swig_module) {
                ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
                if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
            }
            if (ret) {
                if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
                    printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
                    cast->type = ret;
                    ret = 0;
                } else {
                    /* Check for casting already in the list */
                    swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
                    if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
                    if (!ocast) ret = 0;
                }
            }
            
            if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
                printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
                if (type->cast) {
                    type->cast->prev = cast;
                    cast->next = type->cast;
                }
                type->cast = cast;
            }
            cast++;
        }
        /* Set entry in modules->types array equal to the type */
        swig_module.types[i] = type;
    }
    swig_module.types[i] = 0;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("**** SWIG_InitializeModule: Cast List ******\n");
    for (i = 0; i < swig_module.size; ++i) {
        int j = 0;
        swig_cast_info *cast = swig_module.cast_initial[i];
        printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
        while (cast->type) {
            printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
            cast++;
            ++j;
        }
        printf("---- Total casts: %d\n",j);
    }
    printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
    size_t i;
    swig_cast_info *equiv;
    static int init_run = 0;
    
    if (init_run) return;
    init_run = 1;
    
    for (i = 0; i < swig_module.size; i++) {
        if (swig_module.types[i]->clientdata) {
            equiv = swig_module.types[i]->cast;
            while (equiv) {
                if (!equiv->converter) {
                    if (equiv->type && !equiv->type->clientdata)
                    SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
                }
                equiv = equiv->next;
            }
        }
    }
}

#ifdef __cplusplus
#if 0
{
    /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
    
    /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
    
    /* -----------------------------------------------------------------------------
     * global variable support code.
     * ----------------------------------------------------------------------------- */
    
    typedef struct swig_globalvar {
        char       *name;                  /* Name of global variable */
        PyObject *(*get_attr)(void);       /* Return the current value */
        int       (*set_attr)(PyObject *); /* Set the value */
        struct swig_globalvar *next;
    } swig_globalvar;
    
    typedef struct swig_varlinkobject {
        PyObject_HEAD
        swig_globalvar *vars;
    } swig_varlinkobject;
    
    SWIGINTERN PyObject *
    swig_varlink_repr(swig_varlinkobject *v) {
        v = v;
        return PyString_FromString("<Swig global variables>");
    }
    
    SWIGINTERN int
    swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
        swig_globalvar  *var;
        flags = flags;
        fprintf(fp,"Swig global variables { ");
        for (var = v->vars; var; var=var->next) {
            fprintf(fp,"%s", var->name);
            if (var->next) fprintf(fp,", ");
        }
        fprintf(fp," }\n");
        return 0;
    }
    
    SWIGINTERN PyObject *
    swig_varlink_getattr(swig_varlinkobject *v, char *n) {
        swig_globalvar *var = v->vars;
        while (var) {
            if (strcmp(var->name,n) == 0) {
                return (*var->get_attr)();
            }
            var = var->next;
        }
        PyErr_SetString(PyExc_NameError,"Unknown C global variable");
        return NULL;
    }
    
    SWIGINTERN int
    swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
        swig_globalvar *var = v->vars;
        while (var) {
            if (strcmp(var->name,n) == 0) {
                return (*var->set_attr)(p);
            }
            var = var->next;
        }
        PyErr_SetString(PyExc_NameError,"Unknown C global variable");
        return 1;
    }
    
    SWIGINTERN PyTypeObject*
    swig_varlink_type(void) {
        static char varlink__doc__[] = "Swig var link object";
        static PyTypeObject varlink_type
#if !defined(__cplusplus)
        ;
        static int type_init = 0;  
        if (!type_init) {
            PyTypeObject tmp
#endif
            = {
                PyObject_HEAD_INIT(&PyType_Type)
                0,                                  /* Number of items in variable part (ob_size) */
                (char *)"swigvarlink",              /* Type name (tp_name) */
                sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
                0,                                  /* Itemsize (tp_itemsize) */
                0,                                  /* Deallocator (tp_dealloc) */ 
                (printfunc) swig_varlink_print,     /* Print (tp_print) */
                (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
                (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
                0,                                  /* tp_compare */
                (reprfunc) swig_varlink_repr,       /* tp_repr */
                0,                                  /* tp_as_number */
                0,                                  /* tp_as_sequence */
                0,                                  /* tp_as_mapping */
                0,                                  /* tp_hash */
                0,                                  /* tp_call */
                0,                                  /* tp_str */
                0,                                  /* tp_getattro */
                0,                                  /* tp_setattro */
                0,                                  /* tp_as_buffer */
                0,                                  /* tp_flags */
                varlink__doc__,                     /* tp_doc */
#if PY_VERSION_HEX >= 0x02000000
                0,                                  /* tp_traverse */
                0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
                0,                                  /* tp_richcompare */
                0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
                0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
                0,0,0,0                             /* tp_alloc -> tp_next */
#endif
            };
#if !defined(__cplusplus)
            varlink_type = tmp;
            type_init = 1;
        }
#endif
        return &varlink_type;
    }
    
    /* Create a variable linking object for use later */
    SWIGINTERN PyObject *
    SWIG_Python_newvarlink(void) {
        swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
        if (result) {
            result->vars = 0;
        }
        return ((PyObject*) result);
    }
    
    SWIGINTERN void 
    SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
        swig_varlinkobject *v = (swig_varlinkobject *) p;
        swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
        if (gv) {
            size_t size = strlen(name)+1;
            gv->name = (char *)malloc(size);
            if (gv->name) {
                strncpy(gv->name,name,size);
                gv->get_attr = get_attr;
                gv->set_attr = set_attr;
                gv->next = v->vars;
            }
        }
        v->vars = gv;
    }
    
    /* -----------------------------------------------------------------------------
     * constants/methods manipulation
     * ----------------------------------------------------------------------------- */
    
    /* Install Constants */
    SWIGINTERN void
    SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
        PyObject *obj = 0;
        size_t i;
        for (i = 0; constants[i].type; ++i) {
            switch(constants[i].type) {
                case SWIG_PY_INT:
                obj = PyInt_FromLong(constants[i].lvalue);
                break;
                case SWIG_PY_FLOAT:
                obj = PyFloat_FromDouble(constants[i].dvalue);
                break;
                case SWIG_PY_STRING:
                if (constants[i].pvalue) {
                    obj = PyString_FromString((char *) constants[i].pvalue);
                } else {
                    Py_INCREF(Py_None);
                    obj = Py_None;
                }
                break;
                case SWIG_PY_POINTER:
                obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
                break;
                case SWIG_PY_BINARY:
                obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
                break;
                default:
                obj = 0;
                break;
            }
            if (obj) {
                PyDict_SetItemString(d,constants[i].name,obj);
                Py_DECREF(obj);
            }
        }
    }
    
    /* -----------------------------------------------------------------------------*/
    /* Fix SwigMethods to carry the callback ptrs when needed */
    /* -----------------------------------------------------------------------------*/
    
    SWIGINTERN void
    SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
        size_t i;
        for (i = 0; methods[i].ml_name; ++i) {
            char *c = methods[i].ml_doc;
            if (c && (c = strstr(c, "swig_ptr: "))) {
                int j;
                swig_const_info *ci = 0;
                char *name = c + 10;
                for (j = 0; const_table[j].type; ++j) {
                    if (strncmp(const_table[j].name, name, 
                    strlen(const_table[j].name)) == 0) {
                        ci = &(const_table[j]);
                        break;
                    }
                }
                if (ci) {
                    size_t shift = (ci->ptype) - types;
                    swig_type_info *ty = types_initial[shift];
                    size_t ldoc = (c - methods[i].ml_doc);
                    size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
                    char *ndoc = (char*)malloc(ldoc + lptr + 10);
                    if (ndoc) {
                        char *buff = ndoc;
                        void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
                        if (ptr) {
                            strncpy(buff, methods[i].ml_doc, ldoc);
                            buff += ldoc;
                            strncpy(buff, "swig_ptr: ", 10);
                            buff += 10;
                            SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
                            methods[i].ml_doc = ndoc;
                        }
                    }
                }
            }
        }
    }
    
    /* -----------------------------------------------------------------------------*
     *  Initialize type list
     * -----------------------------------------------------------------------------*/
    
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    PyObject *m, *d;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    
    /* Fix SwigMethods to carry the callback ptrs when needed */
    SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
    
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    SWIG_InitializeModule(0);
    SWIG_InstallConstants(d,swig_const_table);
    
    PyDict_SetItemString(d,(char*)"cvar", SWIG_globals);
    SWIG_addvarlink(SWIG_globals,(char*)"STCNameStr",_wrap_STCNameStr_get, _wrap_STCNameStr_set);
    {
        PyDict_SetItemString(d,"STC_USE_DND", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_USE_POPUP", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_INVALID_POSITION", SWIG_From_int(static_cast<int >(-1))); 
    }
    {
        PyDict_SetItemString(d,"STC_START", SWIG_From_int(static_cast<int >(2000))); 
    }
    {
        PyDict_SetItemString(d,"STC_OPTIONAL_START", SWIG_From_int(static_cast<int >(3000))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEXER_START", SWIG_From_int(static_cast<int >(4000))); 
    }
    {
        PyDict_SetItemString(d,"STC_WS_INVISIBLE", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_WS_VISIBLEALWAYS", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_WS_VISIBLEAFTERINDENT", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_EOL_CRLF", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_EOL_CR", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_EOL_LF", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_CP_UTF8", SWIG_From_int(static_cast<int >(65001))); 
    }
    {
        PyDict_SetItemString(d,"STC_CP_DBCS", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARKER_MAX", SWIG_From_int(static_cast<int >(31))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_CIRCLE", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_ROUNDRECT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_ARROW", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_SMALLRECT", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_SHORTARROW", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_EMPTY", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_ARROWDOWN", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_MINUS", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_PLUS", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_VLINE", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_LCORNER", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_TCORNER", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_BOXPLUS", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_BOXPLUSCONNECTED", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_BOXMINUS", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_BOXMINUSCONNECTED", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_LCORNERCURVE", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_TCORNERCURVE", SWIG_From_int(static_cast<int >(17))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_CIRCLEPLUS", SWIG_From_int(static_cast<int >(18))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_CIRCLEPLUSCONNECTED", SWIG_From_int(static_cast<int >(19))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_CIRCLEMINUS", SWIG_From_int(static_cast<int >(20))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_CIRCLEMINUSCONNECTED", SWIG_From_int(static_cast<int >(21))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_BACKGROUND", SWIG_From_int(static_cast<int >(22))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_DOTDOTDOT", SWIG_From_int(static_cast<int >(23))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_ARROWS", SWIG_From_int(static_cast<int >(24))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_PIXMAP", SWIG_From_int(static_cast<int >(25))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARK_CHARACTER", SWIG_From_int(static_cast<int >(10000))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARKNUM_FOLDEREND", SWIG_From_int(static_cast<int >(25))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARKNUM_FOLDEROPENMID", SWIG_From_int(static_cast<int >(26))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARKNUM_FOLDERMIDTAIL", SWIG_From_int(static_cast<int >(27))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARKNUM_FOLDERTAIL", SWIG_From_int(static_cast<int >(28))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARKNUM_FOLDERSUB", SWIG_From_int(static_cast<int >(29))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARKNUM_FOLDER", SWIG_From_int(static_cast<int >(30))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARKNUM_FOLDEROPEN", SWIG_From_int(static_cast<int >(31))); 
    }
    {
        PyDict_SetItemString(d,"STC_MASK_FOLDERS", SWIG_From_int(static_cast<int >(0xFE000000))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARGIN_SYMBOL", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_MARGIN_NUMBER", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_STYLE_DEFAULT", SWIG_From_int(static_cast<int >(32))); 
    }
    {
        PyDict_SetItemString(d,"STC_STYLE_LINENUMBER", SWIG_From_int(static_cast<int >(33))); 
    }
    {
        PyDict_SetItemString(d,"STC_STYLE_BRACELIGHT", SWIG_From_int(static_cast<int >(34))); 
    }
    {
        PyDict_SetItemString(d,"STC_STYLE_BRACEBAD", SWIG_From_int(static_cast<int >(35))); 
    }
    {
        PyDict_SetItemString(d,"STC_STYLE_CONTROLCHAR", SWIG_From_int(static_cast<int >(36))); 
    }
    {
        PyDict_SetItemString(d,"STC_STYLE_INDENTGUIDE", SWIG_From_int(static_cast<int >(37))); 
    }
    {
        PyDict_SetItemString(d,"STC_STYLE_LASTPREDEFINED", SWIG_From_int(static_cast<int >(39))); 
    }
    {
        PyDict_SetItemString(d,"STC_STYLE_MAX", SWIG_From_int(static_cast<int >(127))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_ANSI", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_DEFAULT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_BALTIC", SWIG_From_int(static_cast<int >(186))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_CHINESEBIG5", SWIG_From_int(static_cast<int >(136))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_EASTEUROPE", SWIG_From_int(static_cast<int >(238))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_GB2312", SWIG_From_int(static_cast<int >(134))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_GREEK", SWIG_From_int(static_cast<int >(161))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_HANGUL", SWIG_From_int(static_cast<int >(129))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_MAC", SWIG_From_int(static_cast<int >(77))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_OEM", SWIG_From_int(static_cast<int >(255))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_RUSSIAN", SWIG_From_int(static_cast<int >(204))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_SHIFTJIS", SWIG_From_int(static_cast<int >(128))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_SYMBOL", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_TURKISH", SWIG_From_int(static_cast<int >(162))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_JOHAB", SWIG_From_int(static_cast<int >(130))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_HEBREW", SWIG_From_int(static_cast<int >(177))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_ARABIC", SWIG_From_int(static_cast<int >(178))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_VIETNAMESE", SWIG_From_int(static_cast<int >(163))); 
    }
    {
        PyDict_SetItemString(d,"STC_CHARSET_THAI", SWIG_From_int(static_cast<int >(222))); 
    }
    {
        PyDict_SetItemString(d,"STC_CASE_MIXED", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_CASE_UPPER", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_CASE_LOWER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC_MAX", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC_PLAIN", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC_SQUIGGLE", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC_TT", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC_DIAGONAL", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC_STRIKE", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC_HIDDEN", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC_BOX", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC0_MASK", SWIG_From_int(static_cast<int >(0x20))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC1_MASK", SWIG_From_int(static_cast<int >(0x40))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDIC2_MASK", SWIG_From_int(static_cast<int >(0x80))); 
    }
    {
        PyDict_SetItemString(d,"STC_INDICS_MASK", SWIG_From_int(static_cast<int >(0xE0))); 
    }
    {
        PyDict_SetItemString(d,"STC_PRINT_NORMAL", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_PRINT_INVERTLIGHT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_PRINT_BLACKONWHITE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_PRINT_COLOURONWHITE", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_PRINT_COLOURONWHITEDEFAULTBG", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_FIND_WHOLEWORD", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_FIND_MATCHCASE", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_FIND_WORDSTART", SWIG_From_int(static_cast<int >(0x00100000))); 
    }
    {
        PyDict_SetItemString(d,"STC_FIND_REGEXP", SWIG_From_int(static_cast<int >(0x00200000))); 
    }
    {
        PyDict_SetItemString(d,"STC_FIND_POSIX", SWIG_From_int(static_cast<int >(0x00400000))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDLEVELBASE", SWIG_From_int(static_cast<int >(0x400))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDLEVELWHITEFLAG", SWIG_From_int(static_cast<int >(0x1000))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDLEVELHEADERFLAG", SWIG_From_int(static_cast<int >(0x2000))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDLEVELBOXHEADERFLAG", SWIG_From_int(static_cast<int >(0x4000))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDLEVELBOXFOOTERFLAG", SWIG_From_int(static_cast<int >(0x8000))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDLEVELCONTRACTED", SWIG_From_int(static_cast<int >(0x10000))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDLEVELUNINDENT", SWIG_From_int(static_cast<int >(0x20000))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDLEVELNUMBERMASK", SWIG_From_int(static_cast<int >(0x0FFF))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDFLAG_LINEBEFORE_EXPANDED", SWIG_From_int(static_cast<int >(0x0002))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDFLAG_LINEBEFORE_CONTRACTED", SWIG_From_int(static_cast<int >(0x0004))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDFLAG_LINEAFTER_EXPANDED", SWIG_From_int(static_cast<int >(0x0008))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDFLAG_LINEAFTER_CONTRACTED", SWIG_From_int(static_cast<int >(0x0010))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDFLAG_LEVELNUMBERS", SWIG_From_int(static_cast<int >(0x0040))); 
    }
    {
        PyDict_SetItemString(d,"STC_FOLDFLAG_BOX", SWIG_From_int(static_cast<int >(0x0001))); 
    }
    {
        PyDict_SetItemString(d,"STC_TIME_FOREVER", SWIG_From_int(static_cast<int >(10000000))); 
    }
    {
        PyDict_SetItemString(d,"STC_WRAP_NONE", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_WRAP_WORD", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_WRAPVISUALFLAG_NONE", SWIG_From_int(static_cast<int >(0x0000))); 
    }
    {
        PyDict_SetItemString(d,"STC_WRAPVISUALFLAG_END", SWIG_From_int(static_cast<int >(0x0001))); 
    }
    {
        PyDict_SetItemString(d,"STC_WRAPVISUALFLAG_START", SWIG_From_int(static_cast<int >(0x0002))); 
    }
    {
        PyDict_SetItemString(d,"STC_WRAPVISUALFLAGLOC_DEFAULT", SWIG_From_int(static_cast<int >(0x0000))); 
    }
    {
        PyDict_SetItemString(d,"STC_WRAPVISUALFLAGLOC_END_BY_TEXT", SWIG_From_int(static_cast<int >(0x0001))); 
    }
    {
        PyDict_SetItemString(d,"STC_WRAPVISUALFLAGLOC_START_BY_TEXT", SWIG_From_int(static_cast<int >(0x0002))); 
    }
    {
        PyDict_SetItemString(d,"STC_CACHE_NONE", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_CACHE_CARET", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_CACHE_PAGE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_CACHE_DOCUMENT", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_EDGE_NONE", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_EDGE_LINE", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_EDGE_BACKGROUND", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_CURSORNORMAL", SWIG_From_int(static_cast<int >(-1))); 
    }
    {
        PyDict_SetItemString(d,"STC_CURSORWAIT", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_VISIBLE_SLOP", SWIG_From_int(static_cast<int >(0x01))); 
    }
    {
        PyDict_SetItemString(d,"STC_VISIBLE_STRICT", SWIG_From_int(static_cast<int >(0x04))); 
    }
    {
        PyDict_SetItemString(d,"STC_CARET_SLOP", SWIG_From_int(static_cast<int >(0x01))); 
    }
    {
        PyDict_SetItemString(d,"STC_CARET_STRICT", SWIG_From_int(static_cast<int >(0x04))); 
    }
    {
        PyDict_SetItemString(d,"STC_CARET_JUMPS", SWIG_From_int(static_cast<int >(0x10))); 
    }
    {
        PyDict_SetItemString(d,"STC_CARET_EVEN", SWIG_From_int(static_cast<int >(0x08))); 
    }
    {
        PyDict_SetItemString(d,"STC_SEL_STREAM", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_SEL_RECTANGLE", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_SEL_LINES", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEYWORDSET_MAX", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_MOD_INSERTTEXT", SWIG_From_int(static_cast<int >(0x1))); 
    }
    {
        PyDict_SetItemString(d,"STC_MOD_DELETETEXT", SWIG_From_int(static_cast<int >(0x2))); 
    }
    {
        PyDict_SetItemString(d,"STC_MOD_CHANGESTYLE", SWIG_From_int(static_cast<int >(0x4))); 
    }
    {
        PyDict_SetItemString(d,"STC_MOD_CHANGEFOLD", SWIG_From_int(static_cast<int >(0x8))); 
    }
    {
        PyDict_SetItemString(d,"STC_PERFORMED_USER", SWIG_From_int(static_cast<int >(0x10))); 
    }
    {
        PyDict_SetItemString(d,"STC_PERFORMED_UNDO", SWIG_From_int(static_cast<int >(0x20))); 
    }
    {
        PyDict_SetItemString(d,"STC_PERFORMED_REDO", SWIG_From_int(static_cast<int >(0x40))); 
    }
    {
        PyDict_SetItemString(d,"STC_LASTSTEPINUNDOREDO", SWIG_From_int(static_cast<int >(0x100))); 
    }
    {
        PyDict_SetItemString(d,"STC_MOD_CHANGEMARKER", SWIG_From_int(static_cast<int >(0x200))); 
    }
    {
        PyDict_SetItemString(d,"STC_MOD_BEFOREINSERT", SWIG_From_int(static_cast<int >(0x400))); 
    }
    {
        PyDict_SetItemString(d,"STC_MOD_BEFOREDELETE", SWIG_From_int(static_cast<int >(0x800))); 
    }
    {
        PyDict_SetItemString(d,"STC_MODEVENTMASKALL", SWIG_From_int(static_cast<int >(0xF77))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_DOWN", SWIG_From_int(static_cast<int >(300))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_UP", SWIG_From_int(static_cast<int >(301))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_LEFT", SWIG_From_int(static_cast<int >(302))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_RIGHT", SWIG_From_int(static_cast<int >(303))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_HOME", SWIG_From_int(static_cast<int >(304))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_END", SWIG_From_int(static_cast<int >(305))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_PRIOR", SWIG_From_int(static_cast<int >(306))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_NEXT", SWIG_From_int(static_cast<int >(307))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_DELETE", SWIG_From_int(static_cast<int >(308))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_INSERT", SWIG_From_int(static_cast<int >(309))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_ESCAPE", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_BACK", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_TAB", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_RETURN", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_ADD", SWIG_From_int(static_cast<int >(310))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_SUBTRACT", SWIG_From_int(static_cast<int >(311))); 
    }
    {
        PyDict_SetItemString(d,"STC_KEY_DIVIDE", SWIG_From_int(static_cast<int >(312))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCMOD_SHIFT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCMOD_CTRL", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCMOD_ALT", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_CONTAINER", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_NULL", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_PYTHON", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_CPP", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_HTML", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_XML", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_PERL", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_SQL", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_VB", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_PROPERTIES", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_ERRORLIST", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_MAKEFILE", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_BATCH", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_XCODE", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_LATEX", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_LUA", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_DIFF", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_CONF", SWIG_From_int(static_cast<int >(17))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_PASCAL", SWIG_From_int(static_cast<int >(18))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_AVE", SWIG_From_int(static_cast<int >(19))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_ADA", SWIG_From_int(static_cast<int >(20))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_LISP", SWIG_From_int(static_cast<int >(21))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_RUBY", SWIG_From_int(static_cast<int >(22))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_EIFFEL", SWIG_From_int(static_cast<int >(23))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_EIFFELKW", SWIG_From_int(static_cast<int >(24))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_TCL", SWIG_From_int(static_cast<int >(25))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_NNCRONTAB", SWIG_From_int(static_cast<int >(26))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_BULLANT", SWIG_From_int(static_cast<int >(27))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_VBSCRIPT", SWIG_From_int(static_cast<int >(28))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_ASP", SWIG_From_int(static_cast<int >(29))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_PHP", SWIG_From_int(static_cast<int >(30))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_BAAN", SWIG_From_int(static_cast<int >(31))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_MATLAB", SWIG_From_int(static_cast<int >(32))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_SCRIPTOL", SWIG_From_int(static_cast<int >(33))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_ASM", SWIG_From_int(static_cast<int >(34))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_CPPNOCASE", SWIG_From_int(static_cast<int >(35))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_FORTRAN", SWIG_From_int(static_cast<int >(36))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_F77", SWIG_From_int(static_cast<int >(37))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_CSS", SWIG_From_int(static_cast<int >(38))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_POV", SWIG_From_int(static_cast<int >(39))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_LOUT", SWIG_From_int(static_cast<int >(40))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_ESCRIPT", SWIG_From_int(static_cast<int >(41))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_PS", SWIG_From_int(static_cast<int >(42))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_NSIS", SWIG_From_int(static_cast<int >(43))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_MMIXAL", SWIG_From_int(static_cast<int >(44))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_CLW", SWIG_From_int(static_cast<int >(45))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_CLWNOCASE", SWIG_From_int(static_cast<int >(46))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_LOT", SWIG_From_int(static_cast<int >(47))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_YAML", SWIG_From_int(static_cast<int >(48))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_TEX", SWIG_From_int(static_cast<int >(49))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_METAPOST", SWIG_From_int(static_cast<int >(50))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_POWERBASIC", SWIG_From_int(static_cast<int >(51))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_FORTH", SWIG_From_int(static_cast<int >(52))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_ERLANG", SWIG_From_int(static_cast<int >(53))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_OCTAVE", SWIG_From_int(static_cast<int >(54))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_MSSQL", SWIG_From_int(static_cast<int >(55))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_VERILOG", SWIG_From_int(static_cast<int >(56))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_KIX", SWIG_From_int(static_cast<int >(57))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_GUI4CLI", SWIG_From_int(static_cast<int >(58))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_SPECMAN", SWIG_From_int(static_cast<int >(59))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_AU3", SWIG_From_int(static_cast<int >(60))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_APDL", SWIG_From_int(static_cast<int >(61))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_BASH", SWIG_From_int(static_cast<int >(62))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_ASN1", SWIG_From_int(static_cast<int >(63))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_VHDL", SWIG_From_int(static_cast<int >(64))); 
    }
    {
        PyDict_SetItemString(d,"STC_LEX_AUTOMATIC", SWIG_From_int(static_cast<int >(1000))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_COMMENTLINE", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_NUMBER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_STRING", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_CHARACTER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_WORD", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_TRIPLE", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_TRIPLEDOUBLE", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_CLASSNAME", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_DEFNAME", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_OPERATOR", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_IDENTIFIER", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_COMMENTBLOCK", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_P_STRINGEOL", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_COMMENTLINE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_COMMENTDOC", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_NUMBER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_WORD", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_CHARACTER", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_UUID", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_PREPROCESSOR", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_OPERATOR", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_IDENTIFIER", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_STRINGEOL", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_VERBATIM", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_REGEX", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_COMMENTLINEDOC", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_WORD2", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_COMMENTDOCKEYWORD", SWIG_From_int(static_cast<int >(17))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_COMMENTDOCKEYWORDERROR", SWIG_From_int(static_cast<int >(18))); 
    }
    {
        PyDict_SetItemString(d,"STC_C_GLOBALCLASS", SWIG_From_int(static_cast<int >(19))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_TAG", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_TAGUNKNOWN", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_ATTRIBUTE", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_ATTRIBUTEUNKNOWN", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_NUMBER", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_DOUBLESTRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SINGLESTRING", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_OTHER", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_COMMENT", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_ENTITY", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_TAGEND", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_XMLSTART", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_XMLEND", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SCRIPT", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_ASP", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_ASPAT", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_CDATA", SWIG_From_int(static_cast<int >(17))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_QUESTION", SWIG_From_int(static_cast<int >(18))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_VALUE", SWIG_From_int(static_cast<int >(19))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_XCCOMMENT", SWIG_From_int(static_cast<int >(20))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_DEFAULT", SWIG_From_int(static_cast<int >(21))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_COMMAND", SWIG_From_int(static_cast<int >(22))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_1ST_PARAM", SWIG_From_int(static_cast<int >(23))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_DOUBLESTRING", SWIG_From_int(static_cast<int >(24))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_SIMPLESTRING", SWIG_From_int(static_cast<int >(25))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_ERROR", SWIG_From_int(static_cast<int >(26))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_SPECIAL", SWIG_From_int(static_cast<int >(27))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_ENTITY", SWIG_From_int(static_cast<int >(28))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_COMMENT", SWIG_From_int(static_cast<int >(29))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_1ST_PARAM_COMMENT", SWIG_From_int(static_cast<int >(30))); 
    }
    {
        PyDict_SetItemString(d,"STC_H_SGML_BLOCK_DEFAULT", SWIG_From_int(static_cast<int >(31))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_START", SWIG_From_int(static_cast<int >(40))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_DEFAULT", SWIG_From_int(static_cast<int >(41))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_COMMENT", SWIG_From_int(static_cast<int >(42))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_COMMENTLINE", SWIG_From_int(static_cast<int >(43))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_COMMENTDOC", SWIG_From_int(static_cast<int >(44))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_NUMBER", SWIG_From_int(static_cast<int >(45))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_WORD", SWIG_From_int(static_cast<int >(46))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_KEYWORD", SWIG_From_int(static_cast<int >(47))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_DOUBLESTRING", SWIG_From_int(static_cast<int >(48))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_SINGLESTRING", SWIG_From_int(static_cast<int >(49))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_SYMBOLS", SWIG_From_int(static_cast<int >(50))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_STRINGEOL", SWIG_From_int(static_cast<int >(51))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJ_REGEX", SWIG_From_int(static_cast<int >(52))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_START", SWIG_From_int(static_cast<int >(55))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_DEFAULT", SWIG_From_int(static_cast<int >(56))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_COMMENT", SWIG_From_int(static_cast<int >(57))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_COMMENTLINE", SWIG_From_int(static_cast<int >(58))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_COMMENTDOC", SWIG_From_int(static_cast<int >(59))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_NUMBER", SWIG_From_int(static_cast<int >(60))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_WORD", SWIG_From_int(static_cast<int >(61))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_KEYWORD", SWIG_From_int(static_cast<int >(62))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_DOUBLESTRING", SWIG_From_int(static_cast<int >(63))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_SINGLESTRING", SWIG_From_int(static_cast<int >(64))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_SYMBOLS", SWIG_From_int(static_cast<int >(65))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_STRINGEOL", SWIG_From_int(static_cast<int >(66))); 
    }
    {
        PyDict_SetItemString(d,"STC_HJA_REGEX", SWIG_From_int(static_cast<int >(67))); 
    }
    {
        PyDict_SetItemString(d,"STC_HB_START", SWIG_From_int(static_cast<int >(70))); 
    }
    {
        PyDict_SetItemString(d,"STC_HB_DEFAULT", SWIG_From_int(static_cast<int >(71))); 
    }
    {
        PyDict_SetItemString(d,"STC_HB_COMMENTLINE", SWIG_From_int(static_cast<int >(72))); 
    }
    {
        PyDict_SetItemString(d,"STC_HB_NUMBER", SWIG_From_int(static_cast<int >(73))); 
    }
    {
        PyDict_SetItemString(d,"STC_HB_WORD", SWIG_From_int(static_cast<int >(74))); 
    }
    {
        PyDict_SetItemString(d,"STC_HB_STRING", SWIG_From_int(static_cast<int >(75))); 
    }
    {
        PyDict_SetItemString(d,"STC_HB_IDENTIFIER", SWIG_From_int(static_cast<int >(76))); 
    }
    {
        PyDict_SetItemString(d,"STC_HB_STRINGEOL", SWIG_From_int(static_cast<int >(77))); 
    }
    {
        PyDict_SetItemString(d,"STC_HBA_START", SWIG_From_int(static_cast<int >(80))); 
    }
    {
        PyDict_SetItemString(d,"STC_HBA_DEFAULT", SWIG_From_int(static_cast<int >(81))); 
    }
    {
        PyDict_SetItemString(d,"STC_HBA_COMMENTLINE", SWIG_From_int(static_cast<int >(82))); 
    }
    {
        PyDict_SetItemString(d,"STC_HBA_NUMBER", SWIG_From_int(static_cast<int >(83))); 
    }
    {
        PyDict_SetItemString(d,"STC_HBA_WORD", SWIG_From_int(static_cast<int >(84))); 
    }
    {
        PyDict_SetItemString(d,"STC_HBA_STRING", SWIG_From_int(static_cast<int >(85))); 
    }
    {
        PyDict_SetItemString(d,"STC_HBA_IDENTIFIER", SWIG_From_int(static_cast<int >(86))); 
    }
    {
        PyDict_SetItemString(d,"STC_HBA_STRINGEOL", SWIG_From_int(static_cast<int >(87))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_START", SWIG_From_int(static_cast<int >(90))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_DEFAULT", SWIG_From_int(static_cast<int >(91))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_COMMENTLINE", SWIG_From_int(static_cast<int >(92))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_NUMBER", SWIG_From_int(static_cast<int >(93))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_STRING", SWIG_From_int(static_cast<int >(94))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_CHARACTER", SWIG_From_int(static_cast<int >(95))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_WORD", SWIG_From_int(static_cast<int >(96))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_TRIPLE", SWIG_From_int(static_cast<int >(97))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_TRIPLEDOUBLE", SWIG_From_int(static_cast<int >(98))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_CLASSNAME", SWIG_From_int(static_cast<int >(99))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_DEFNAME", SWIG_From_int(static_cast<int >(100))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_OPERATOR", SWIG_From_int(static_cast<int >(101))); 
    }
    {
        PyDict_SetItemString(d,"STC_HP_IDENTIFIER", SWIG_From_int(static_cast<int >(102))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_COMPLEX_VARIABLE", SWIG_From_int(static_cast<int >(104))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_START", SWIG_From_int(static_cast<int >(105))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_DEFAULT", SWIG_From_int(static_cast<int >(106))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_COMMENTLINE", SWIG_From_int(static_cast<int >(107))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_NUMBER", SWIG_From_int(static_cast<int >(108))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_STRING", SWIG_From_int(static_cast<int >(109))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_CHARACTER", SWIG_From_int(static_cast<int >(110))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_WORD", SWIG_From_int(static_cast<int >(111))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_TRIPLE", SWIG_From_int(static_cast<int >(112))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_TRIPLEDOUBLE", SWIG_From_int(static_cast<int >(113))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_CLASSNAME", SWIG_From_int(static_cast<int >(114))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_DEFNAME", SWIG_From_int(static_cast<int >(115))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_OPERATOR", SWIG_From_int(static_cast<int >(116))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPA_IDENTIFIER", SWIG_From_int(static_cast<int >(117))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_DEFAULT", SWIG_From_int(static_cast<int >(118))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_HSTRING", SWIG_From_int(static_cast<int >(119))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_SIMPLESTRING", SWIG_From_int(static_cast<int >(120))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_WORD", SWIG_From_int(static_cast<int >(121))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_NUMBER", SWIG_From_int(static_cast<int >(122))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_VARIABLE", SWIG_From_int(static_cast<int >(123))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_COMMENT", SWIG_From_int(static_cast<int >(124))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_COMMENTLINE", SWIG_From_int(static_cast<int >(125))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_HSTRING_VARIABLE", SWIG_From_int(static_cast<int >(126))); 
    }
    {
        PyDict_SetItemString(d,"STC_HPHP_OPERATOR", SWIG_From_int(static_cast<int >(127))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_ERROR", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_COMMENTLINE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_POD", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_NUMBER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_WORD", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_CHARACTER", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_PUNCTUATION", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_PREPROCESSOR", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_OPERATOR", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_IDENTIFIER", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_SCALAR", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_ARRAY", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_HASH", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_SYMBOLTABLE", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_REGEX", SWIG_From_int(static_cast<int >(17))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_REGSUBST", SWIG_From_int(static_cast<int >(18))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_LONGQUOTE", SWIG_From_int(static_cast<int >(19))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_BACKTICKS", SWIG_From_int(static_cast<int >(20))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_DATASECTION", SWIG_From_int(static_cast<int >(21))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_HERE_DELIM", SWIG_From_int(static_cast<int >(22))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_HERE_Q", SWIG_From_int(static_cast<int >(23))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_HERE_QQ", SWIG_From_int(static_cast<int >(24))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_HERE_QX", SWIG_From_int(static_cast<int >(25))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_STRING_Q", SWIG_From_int(static_cast<int >(26))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_STRING_QQ", SWIG_From_int(static_cast<int >(27))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_STRING_QX", SWIG_From_int(static_cast<int >(28))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_STRING_QR", SWIG_From_int(static_cast<int >(29))); 
    }
    {
        PyDict_SetItemString(d,"STC_PL_STRING_QW", SWIG_From_int(static_cast<int >(30))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_NUMBER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_KEYWORD", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_STRING", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_PREPROCESSOR", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_OPERATOR", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_IDENTIFIER", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_DATE", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_STRINGEOL", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_KEYWORD2", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_KEYWORD3", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_KEYWORD4", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_CONSTANT", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_B_ASM", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_PROPS_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_PROPS_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_PROPS_SECTION", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_PROPS_ASSIGNMENT", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_PROPS_DEFVAL", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_L_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_L_COMMAND", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_L_TAG", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_L_MATH", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_L_COMMENT", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_COMMENTLINE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_COMMENTDOC", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_NUMBER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_WORD", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_CHARACTER", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_LITERALSTRING", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_PREPROCESSOR", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_OPERATOR", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_IDENTIFIER", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_STRINGEOL", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_WORD2", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_WORD3", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_WORD4", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_WORD5", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_WORD6", SWIG_From_int(static_cast<int >(17))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_WORD7", SWIG_From_int(static_cast<int >(18))); 
    }
    {
        PyDict_SetItemString(d,"STC_LUA_WORD8", SWIG_From_int(static_cast<int >(19))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_PYTHON", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_GCC", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_MS", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_CMD", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_BORLAND", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_PERL", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_NET", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_LUA", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_CTAG", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_DIFF_CHANGED", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_DIFF_ADDITION", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_DIFF_DELETION", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_DIFF_MESSAGE", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_PHP", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_ELF", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_IFC", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_IFORT", SWIG_From_int(static_cast<int >(17))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_ABSF", SWIG_From_int(static_cast<int >(18))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_TIDY", SWIG_From_int(static_cast<int >(19))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERR_JAVA_STACK", SWIG_From_int(static_cast<int >(20))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAT_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAT_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAT_WORD", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAT_LABEL", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAT_HIDE", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAT_COMMAND", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAT_IDENTIFIER", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAT_OPERATOR", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_MAKE_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_MAKE_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_MAKE_PREPROCESSOR", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_MAKE_IDENTIFIER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_MAKE_OPERATOR", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_MAKE_TARGET", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_MAKE_IDEOL", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_DIFF_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_DIFF_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_DIFF_COMMAND", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_DIFF_HEADER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_DIFF_POSITION", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_DIFF_DELETED", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_DIFF_ADDED", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_NUMBER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_IDENTIFIER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_EXTENSION", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_PARAMETER", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_OPERATOR", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_IP", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_CONF_DIRECTIVE", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_NUMBER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_WORD", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_ENUM", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_STRINGEOL", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_IDENTIFIER", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_OPERATOR", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_WORD1", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_WORD2", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_WORD3", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_WORD4", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_WORD5", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_AVE_WORD6", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_WORD", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_IDENTIFIER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_DELIMITER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_CHARACTER", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_CHARACTEREOL", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_STRING", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_STRINGEOL", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_LABEL", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_COMMENTLINE", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_ADA_ILLEGAL", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_COMMENTDOC", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_WORD", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_STRING", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_PREPROCESSOR", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_OPERATOR", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_IDENTIFIER", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_STRINGEOL", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_BAAN_WORD2", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_LISP_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_LISP_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_LISP_NUMBER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_LISP_KEYWORD", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_LISP_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_LISP_STRINGEOL", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_LISP_IDENTIFIER", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_LISP_OPERATOR", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_EIFFEL_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_EIFFEL_COMMENTLINE", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_EIFFEL_NUMBER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_EIFFEL_WORD", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_EIFFEL_STRING", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_EIFFEL_CHARACTER", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_EIFFEL_OPERATOR", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_EIFFEL_IDENTIFIER", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_EIFFEL_STRINGEOL", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_TASK", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_SECTION", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_KEYWORD", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_MODIFIER", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_ASTERISK", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_NUMBER", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_STRING", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_ENVIRONMENT", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_NNCRONTAB_IDENTIFIER", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_COMMENT_ML", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_IDENTIFIER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_CONTROL", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_KEYWORD", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_DEFWORD", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_PREWORD1", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_PREWORD2", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_NUMBER", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_STRING", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_FORTH_LOCALE", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_MATLAB_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_MATLAB_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_MATLAB_COMMAND", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_MATLAB_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_MATLAB_KEYWORD", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_MATLAB_STRING", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_MATLAB_OPERATOR", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_MATLAB_IDENTIFIER", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_MATLAB_DOUBLEQUOTESTRING", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_WHITE", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_COMMENTLINE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_PERSISTENT", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_CSTYLE", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_COMMENTBLOCK", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_NUMBER", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_STRING", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_CHARACTER", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_STRINGEOL", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_KEYWORD", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_OPERATOR", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_IDENTIFIER", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_TRIPLE", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_CLASSNAME", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_SCRIPTOL_PREPROCESSOR", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_NUMBER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_STRING", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_OPERATOR", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_IDENTIFIER", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_CPUINSTRUCTION", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_MATHINSTRUCTION", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_REGISTER", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_DIRECTIVE", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_DIRECTIVEOPERAND", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_COMMENTBLOCK", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_CHARACTER", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_STRINGEOL", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASM_EXTINSTRUCTION", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_NUMBER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_STRING1", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_STRING2", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_STRINGEOL", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_OPERATOR", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_IDENTIFIER", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_WORD", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_WORD2", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_WORD3", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_PREPROCESSOR", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_OPERATOR2", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_LABEL", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_F_CONTINUATION", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_TAG", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_CLASS", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_PSEUDOCLASS", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_UNKNOWN_PSEUDOCLASS", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_OPERATOR", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_IDENTIFIER", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_UNKNOWN_IDENTIFIER", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_VALUE", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_COMMENT", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_ID", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_IMPORTANT", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_DIRECTIVE", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_DOUBLESTRING", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_SINGLESTRING", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_CSS_IDENTIFIER2", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_COMMENTLINE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_OPERATOR", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_IDENTIFIER", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_STRINGEOL", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_DIRECTIVE", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_BADDIRECTIVE", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_WORD2", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_WORD3", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_WORD4", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_WORD5", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_WORD6", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_WORD7", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_POV_WORD8", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_NUMBER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_WORD", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_WORD2", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_WORD3", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_WORD4", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_STRING", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_OPERATOR", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_IDENTIFIER", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOUT_STRINGEOL", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_COMMENTLINE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_COMMENTDOC", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_NUMBER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_WORD", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_OPERATOR", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_IDENTIFIER", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_BRACE", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_WORD2", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_ESCRIPT_WORD3", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_DSC_COMMENT", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_DSC_VALUE", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_NUMBER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_NAME", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_KEYWORD", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_LITERAL", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_IMMEVAL", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_PAREN_ARRAY", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_PAREN_DICT", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_PAREN_PROC", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_TEXT", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_HEXSTRING", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_BASE85STRING", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_PS_BADSTRINGCHAR", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_STRINGDQ", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_STRINGLQ", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_STRINGRQ", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_FUNCTION", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_VARIABLE", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_LABEL", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_USERDEFINED", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_SECTIONDEF", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_SUBSECTIONDEF", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_IFDEFINEDEF", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_MACRODEF", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_STRINGVAR", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_NSIS_NUMBER", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_LEADWS", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_LABEL", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_OPCODE", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_OPCODE_PRE", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_OPCODE_VALID", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_OPCODE_UNKNOWN", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_OPCODE_POST", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_OPERANDS", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_NUMBER", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_REF", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_CHAR", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_STRING", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_REGISTER", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_HEX", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_OPERATOR", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_SYMBOL", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_MMIXAL_INCLUDE", SWIG_From_int(static_cast<int >(17))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_LABEL", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_COMMENT", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_STRING", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_USER_IDENTIFIER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_INTEGER_CONSTANT", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_REAL_CONSTANT", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_PICTURE_STRING", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_KEYWORD", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_COMPILER_DIRECTIVE", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_BUILTIN_PROCEDURES_FUNCTION", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_STRUCTURE_DATA_TYPE", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_ATTRIBUTE", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_STANDARD_EQUATE", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_CLW_ERROR", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOT_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOT_HEADER", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOT_BREAK", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOT_SET", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOT_PASS", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOT_FAIL", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_LOT_ABORT", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_YAML_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_YAML_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_YAML_IDENTIFIER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_YAML_KEYWORD", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_YAML_NUMBER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_YAML_REFERENCE", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_YAML_DOCUMENT", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_YAML_TEXT", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_YAML_ERROR", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_TEX_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_TEX_SPECIAL", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_TEX_GROUP", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_TEX_SYMBOL", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_TEX_COMMAND", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_TEX_TEXT", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_METAPOST_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_METAPOST_SPECIAL", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_METAPOST_GROUP", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_METAPOST_SYMBOL", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_METAPOST_COMMAND", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_METAPOST_TEXT", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_METAPOST_EXTRA", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_VARIABLE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_KEYWORD", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_STRING", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_OPERATOR", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_ATOM", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_FUNCTION_NAME", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_CHARACTER", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_MACRO", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_RECORD", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_SEPARATOR", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_NODE_NAME", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_ERLANG_UNKNOWN", SWIG_From_int(static_cast<int >(31))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_LINE_COMMENT", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_STRING", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_OPERATOR", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_IDENTIFIER", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_VARIABLE", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_COLUMN_NAME", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_STATEMENT", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_DATATYPE", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_SYSTABLE", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_GLOBAL_VARIABLE", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_FUNCTION", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_STORED_PROCEDURE", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_DEFAULT_PREF_DATATYPE", SWIG_From_int(static_cast<int >(15))); 
    }
    {
        PyDict_SetItemString(d,"STC_MSSQL_COLUMN_NAME_2", SWIG_From_int(static_cast<int >(16))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_COMMENTLINE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_COMMENTLINEBANG", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_NUMBER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_WORD", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_WORD2", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_WORD3", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_PREPROCESSOR", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_OPERATOR", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_IDENTIFIER", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_STRINGEOL", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_V_USER", SWIG_From_int(static_cast<int >(19))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_STRING1", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_STRING2", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_NUMBER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_VAR", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_MACRO", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_KEYWORD", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_FUNCTIONS", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_OPERATOR", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_KIX_IDENTIFIER", SWIG_From_int(static_cast<int >(31))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_COMMENTLINE", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_COMMENTBLOCK", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_GLOBAL", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_EVENT", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_ATTRIBUTE", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_CONTROL", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_COMMAND", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_STRING", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_GC_OPERATOR", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_CODE", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_COMMENTLINE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_COMMENTLINEBANG", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_NUMBER", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_WORD", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_STRING", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_WORD2", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_WORD3", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_PREPROCESSOR", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_OPERATOR", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_IDENTIFIER", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_STRINGEOL", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_REGEXTAG", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_SIGNAL", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_SN_USER", SWIG_From_int(static_cast<int >(19))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_COMMENTBLOCK", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_FUNCTION", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_KEYWORD", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_MACRO", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_STRING", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_OPERATOR", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_VARIABLE", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_SENT", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_PREPROCESSOR", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_AU3_SPECIAL", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_COMMENTBLOCK", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_STRING", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_OPERATOR", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_WORD", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_PROCESSOR", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_COMMAND", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_SLASHCOMMAND", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_STARCOMMAND", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_ARGUMENT", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_APDL_FUNCTION", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_ERROR", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_COMMENTLINE", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_WORD", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_STRING", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_CHARACTER", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_OPERATOR", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_IDENTIFIER", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_SCALAR", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_PARAM", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_BACKTICKS", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_HERE_DELIM", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_SH_HERE_Q", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_IDENTIFIER", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_STRING", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_OID", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_SCALAR", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_KEYWORD", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_ATTRIBUTE", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_DESCRIPTOR", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_TYPE", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_ASN1_OPERATOR", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_DEFAULT", SWIG_From_int(static_cast<int >(0))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_COMMENT", SWIG_From_int(static_cast<int >(1))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_COMMENTLINEBANG", SWIG_From_int(static_cast<int >(2))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_NUMBER", SWIG_From_int(static_cast<int >(3))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_STRING", SWIG_From_int(static_cast<int >(4))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_OPERATOR", SWIG_From_int(static_cast<int >(5))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_IDENTIFIER", SWIG_From_int(static_cast<int >(6))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_STRINGEOL", SWIG_From_int(static_cast<int >(7))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_KEYWORD", SWIG_From_int(static_cast<int >(8))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_STDOPERATOR", SWIG_From_int(static_cast<int >(9))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_ATTRIBUTE", SWIG_From_int(static_cast<int >(10))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_STDFUNCTION", SWIG_From_int(static_cast<int >(11))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_STDPACKAGE", SWIG_From_int(static_cast<int >(12))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_STDTYPE", SWIG_From_int(static_cast<int >(13))); 
    }
    {
        PyDict_SetItemString(d,"STC_VHDL_USERWORD", SWIG_From_int(static_cast<int >(14))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_REDO", SWIG_From_int(static_cast<int >(2011))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_SELECTALL", SWIG_From_int(static_cast<int >(2013))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_UNDO", SWIG_From_int(static_cast<int >(2176))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_CUT", SWIG_From_int(static_cast<int >(2177))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_COPY", SWIG_From_int(static_cast<int >(2178))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PASTE", SWIG_From_int(static_cast<int >(2179))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_CLEAR", SWIG_From_int(static_cast<int >(2180))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEDOWN", SWIG_From_int(static_cast<int >(2300))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEDOWNEXTEND", SWIG_From_int(static_cast<int >(2301))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEUP", SWIG_From_int(static_cast<int >(2302))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEUPEXTEND", SWIG_From_int(static_cast<int >(2303))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_CHARLEFT", SWIG_From_int(static_cast<int >(2304))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_CHARLEFTEXTEND", SWIG_From_int(static_cast<int >(2305))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_CHARRIGHT", SWIG_From_int(static_cast<int >(2306))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_CHARRIGHTEXTEND", SWIG_From_int(static_cast<int >(2307))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDLEFT", SWIG_From_int(static_cast<int >(2308))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDLEFTEXTEND", SWIG_From_int(static_cast<int >(2309))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDRIGHT", SWIG_From_int(static_cast<int >(2310))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDRIGHTEXTEND", SWIG_From_int(static_cast<int >(2311))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_HOME", SWIG_From_int(static_cast<int >(2312))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_HOMEEXTEND", SWIG_From_int(static_cast<int >(2313))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEEND", SWIG_From_int(static_cast<int >(2314))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEENDEXTEND", SWIG_From_int(static_cast<int >(2315))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DOCUMENTSTART", SWIG_From_int(static_cast<int >(2316))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DOCUMENTSTARTEXTEND", SWIG_From_int(static_cast<int >(2317))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DOCUMENTEND", SWIG_From_int(static_cast<int >(2318))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DOCUMENTENDEXTEND", SWIG_From_int(static_cast<int >(2319))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PAGEUP", SWIG_From_int(static_cast<int >(2320))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PAGEUPEXTEND", SWIG_From_int(static_cast<int >(2321))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PAGEDOWN", SWIG_From_int(static_cast<int >(2322))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PAGEDOWNEXTEND", SWIG_From_int(static_cast<int >(2323))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_EDITTOGGLEOVERTYPE", SWIG_From_int(static_cast<int >(2324))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_CANCEL", SWIG_From_int(static_cast<int >(2325))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DELETEBACK", SWIG_From_int(static_cast<int >(2326))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_TAB", SWIG_From_int(static_cast<int >(2327))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_BACKTAB", SWIG_From_int(static_cast<int >(2328))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_NEWLINE", SWIG_From_int(static_cast<int >(2329))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_FORMFEED", SWIG_From_int(static_cast<int >(2330))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_VCHOME", SWIG_From_int(static_cast<int >(2331))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_VCHOMEEXTEND", SWIG_From_int(static_cast<int >(2332))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_ZOOMIN", SWIG_From_int(static_cast<int >(2333))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_ZOOMOUT", SWIG_From_int(static_cast<int >(2334))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DELWORDLEFT", SWIG_From_int(static_cast<int >(2335))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DELWORDRIGHT", SWIG_From_int(static_cast<int >(2336))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINECUT", SWIG_From_int(static_cast<int >(2337))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEDELETE", SWIG_From_int(static_cast<int >(2338))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINETRANSPOSE", SWIG_From_int(static_cast<int >(2339))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEDUPLICATE", SWIG_From_int(static_cast<int >(2404))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LOWERCASE", SWIG_From_int(static_cast<int >(2340))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_UPPERCASE", SWIG_From_int(static_cast<int >(2341))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINESCROLLDOWN", SWIG_From_int(static_cast<int >(2342))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINESCROLLUP", SWIG_From_int(static_cast<int >(2343))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DELETEBACKNOTLINE", SWIG_From_int(static_cast<int >(2344))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_HOMEDISPLAY", SWIG_From_int(static_cast<int >(2345))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_HOMEDISPLAYEXTEND", SWIG_From_int(static_cast<int >(2346))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEENDDISPLAY", SWIG_From_int(static_cast<int >(2347))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEENDDISPLAYEXTEND", SWIG_From_int(static_cast<int >(2348))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_HOMEWRAP", SWIG_From_int(static_cast<int >(2349))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_HOMEWRAPEXTEND", SWIG_From_int(static_cast<int >(2450))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEENDWRAP", SWIG_From_int(static_cast<int >(2451))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEENDWRAPEXTEND", SWIG_From_int(static_cast<int >(2452))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_VCHOMEWRAP", SWIG_From_int(static_cast<int >(2453))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_VCHOMEWRAPEXTEND", SWIG_From_int(static_cast<int >(2454))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINECOPY", SWIG_From_int(static_cast<int >(2455))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDPARTLEFT", SWIG_From_int(static_cast<int >(2390))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDPARTLEFTEXTEND", SWIG_From_int(static_cast<int >(2391))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDPARTRIGHT", SWIG_From_int(static_cast<int >(2392))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDPARTRIGHTEXTEND", SWIG_From_int(static_cast<int >(2393))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DELLINELEFT", SWIG_From_int(static_cast<int >(2395))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_DELLINERIGHT", SWIG_From_int(static_cast<int >(2396))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PARADOWN", SWIG_From_int(static_cast<int >(2413))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PARADOWNEXTEND", SWIG_From_int(static_cast<int >(2414))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PARAUP", SWIG_From_int(static_cast<int >(2415))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PARAUPEXTEND", SWIG_From_int(static_cast<int >(2416))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEDOWNRECTEXTEND", SWIG_From_int(static_cast<int >(2426))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEUPRECTEXTEND", SWIG_From_int(static_cast<int >(2427))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_CHARLEFTRECTEXTEND", SWIG_From_int(static_cast<int >(2428))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_CHARRIGHTRECTEXTEND", SWIG_From_int(static_cast<int >(2429))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_HOMERECTEXTEND", SWIG_From_int(static_cast<int >(2430))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_VCHOMERECTEXTEND", SWIG_From_int(static_cast<int >(2431))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_LINEENDRECTEXTEND", SWIG_From_int(static_cast<int >(2432))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PAGEUPRECTEXTEND", SWIG_From_int(static_cast<int >(2433))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_PAGEDOWNRECTEXTEND", SWIG_From_int(static_cast<int >(2434))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_STUTTEREDPAGEUP", SWIG_From_int(static_cast<int >(2435))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_STUTTEREDPAGEUPEXTEND", SWIG_From_int(static_cast<int >(2436))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_STUTTEREDPAGEDOWN", SWIG_From_int(static_cast<int >(2437))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_STUTTEREDPAGEDOWNEXTEND", SWIG_From_int(static_cast<int >(2438))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDLEFTEND", SWIG_From_int(static_cast<int >(2439))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDLEFTENDEXTEND", SWIG_From_int(static_cast<int >(2440))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDRIGHTEND", SWIG_From_int(static_cast<int >(2441))); 
    }
    {
        PyDict_SetItemString(d,"STC_CMD_WORDRIGHTENDEXTEND", SWIG_From_int(static_cast<int >(2442))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_CHANGE", SWIG_From_int(static_cast<int >(wxEVT_STC_CHANGE))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_STYLENEEDED", SWIG_From_int(static_cast<int >(wxEVT_STC_STYLENEEDED))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_CHARADDED", SWIG_From_int(static_cast<int >(wxEVT_STC_CHARADDED))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_SAVEPOINTREACHED", SWIG_From_int(static_cast<int >(wxEVT_STC_SAVEPOINTREACHED))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_SAVEPOINTLEFT", SWIG_From_int(static_cast<int >(wxEVT_STC_SAVEPOINTLEFT))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_ROMODIFYATTEMPT", SWIG_From_int(static_cast<int >(wxEVT_STC_ROMODIFYATTEMPT))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_KEY", SWIG_From_int(static_cast<int >(wxEVT_STC_KEY))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_DOUBLECLICK", SWIG_From_int(static_cast<int >(wxEVT_STC_DOUBLECLICK))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_UPDATEUI", SWIG_From_int(static_cast<int >(wxEVT_STC_UPDATEUI))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_MODIFIED", SWIG_From_int(static_cast<int >(wxEVT_STC_MODIFIED))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_MACRORECORD", SWIG_From_int(static_cast<int >(wxEVT_STC_MACRORECORD))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_MARGINCLICK", SWIG_From_int(static_cast<int >(wxEVT_STC_MARGINCLICK))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_NEEDSHOWN", SWIG_From_int(static_cast<int >(wxEVT_STC_NEEDSHOWN))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_PAINTED", SWIG_From_int(static_cast<int >(wxEVT_STC_PAINTED))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_USERLISTSELECTION", SWIG_From_int(static_cast<int >(wxEVT_STC_USERLISTSELECTION))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_URIDROPPED", SWIG_From_int(static_cast<int >(wxEVT_STC_URIDROPPED))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_DWELLSTART", SWIG_From_int(static_cast<int >(wxEVT_STC_DWELLSTART))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_DWELLEND", SWIG_From_int(static_cast<int >(wxEVT_STC_DWELLEND))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_START_DRAG", SWIG_From_int(static_cast<int >(wxEVT_STC_START_DRAG))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_DRAG_OVER", SWIG_From_int(static_cast<int >(wxEVT_STC_DRAG_OVER))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_DO_DROP", SWIG_From_int(static_cast<int >(wxEVT_STC_DO_DROP))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_ZOOM", SWIG_From_int(static_cast<int >(wxEVT_STC_ZOOM))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_HOTSPOT_CLICK", SWIG_From_int(static_cast<int >(wxEVT_STC_HOTSPOT_CLICK))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_HOTSPOT_DCLICK", SWIG_From_int(static_cast<int >(wxEVT_STC_HOTSPOT_DCLICK))); 
    }
    {
        PyDict_SetItemString(d,"wxEVT_STC_CALLTIP_CLICK", SWIG_From_int(static_cast<int >(wxEVT_STC_CALLTIP_CLICK))); 
    }
    
    
}

