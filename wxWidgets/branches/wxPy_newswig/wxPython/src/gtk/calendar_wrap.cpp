/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.20
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_NOINCLUDE

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};                                                    
#endif


#include "Python.h"

/*************************************************************** -*- c -*-
 * python/precommon.swg
 *
 * Rename all exported symbols from common.swg, to avoid symbol
 * clashes if multiple interpreters are included
 *
 ************************************************************************/

#define SWIG_TypeRegister    SWIG_Python_TypeRegister
#define SWIG_TypeCheck       SWIG_Python_TypeCheck
#define SWIG_TypeCast        SWIG_Python_TypeCast
#define SWIG_TypeDynamicCast SWIG_Python_TypeDynamicCast
#define SWIG_TypeName        SWIG_Python_TypeName
#define SWIG_TypeQuery       SWIG_Python_TypeQuery
#define SWIG_TypeClientData  SWIG_Python_TypeClientData


/***********************************************************************
 * common.swg for wxPython
 *
 * Include only the function prototypes and such from SWIG's common.swg,
 * but not the runtime functions themselves.  This helps keep the
 * wrapper files clean of unnecessary stuff that is in the libpy.c file
 * anyway.
 *
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__)
#       if defined(_MSC_VER)
#               if defined(STATIC_LINKED)
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) extern a
#               else
#                       define SWIGEXPORT(a) __declspec(dllexport) a
#                       define SWIGIMPORT(a) extern a
#               endif
#       else
#               if defined(__BORLANDC__)
#                       define SWIGEXPORT(a) a _export
#                       define SWIGIMPORT(a) a _export
#               else
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) a
#               endif
#       endif
#else
#       define SWIGEXPORT(a) a
#       define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#define SWIGRUNTIME(a) static a
#endif


#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;


SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);


#ifdef __cplusplus
}
#endif

/***********************************************************************
 * pyrun.swg for wxPython
 *
 * Include only the function prototypes and such from SWIG's pyrun.swg,
 * but not the runtime functions themselves.  This helps keep the
 * wrapper files clean of unnecessary stuff that is in the libpy.c file
 * anyway.
 *
 ************************************************************************/


#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;



/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags) \
  SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags) \
  SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags) \
  SWIG_Python_MustGetPtr(p, type, argnum, flags)

/* Python-specific SWIG API */
#define SWIG_newvarlink() \
  SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr) \
  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags) \
  SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_PackData(c, ptr, sz) \
  SWIG_Python_PackData(c, ptr, sz)
#define SWIG_UnpackData(c, ptr, sz) \
  SWIG_Python_UnpackData(c, ptr, sz)
#define SWIG_NewPackedObj(ptr, sz, type) \
  SWIG_Python_NewPackedObj(ptr, sz, type)
#define SWIG_InstallConstants(d, constants) \
  SWIG_Python_InstallConstants(d, constants)


SWIGEXPORT(int)               SWIG_Python_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGEXPORT(PyObject *)        SWIG_Python_NewPointerObj(void *, swig_type_info *,int own);
SWIGEXPORT(void *)	      SWIG_Python_MustGetPtr(PyObject *, swig_type_info *, int, int);

SWIGEXPORT(PyObject *)        SWIG_Python_newvarlink(void);
SWIGEXPORT(void)              SWIG_Python_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGEXPORT(int)               SWIG_Python_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGEXPORT(char *)            SWIG_Python_PackData(char *c, void *, int);
SWIGEXPORT(char *)            SWIG_Python_UnpackData(char *c, void *, int);
SWIGEXPORT(PyObject *)        SWIG_Python_NewPackedObj(void *, int sz, swig_type_info *);
SWIGEXPORT(void)              SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]);


/* Contract support */

#define SWIG_preassert(expr, msg)  if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, msg #expr ); goto fail; } else
#define SWIG_postassert(expr, msg) if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, msg #expr ); goto fail; } else

#define SWIG_inherit_preassert(expr, msg)  if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, msg #expr ); goto fail; } else
#define SWIG_inherit_postassert(expr, msg) if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, msg #expr ); goto fail; } else

#define SWIG_invariant(expr, msg)       if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, msg #expr ); goto fail; } else
#define SWIG_invariant_begin(expr, msg) if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, msg #expr ); goto fail; } else
#define SWIG_invariant_end(expr, msg)   if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, msg #expr ); goto fail; } else

#ifdef __cplusplus
}
#endif



/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_wxDateTime__WeekDay swig_types[0] 
#define  SWIGTYPE_p_wxColour swig_types[1] 
#define  SWIGTYPE_p_wxObject swig_types[2] 
#define  SWIGTYPE_p_wxCalendarEvent swig_types[3] 
#define  SWIGTYPE_p_wxCalendarDateAttr swig_types[4] 
#define  SWIGTYPE_p_wxWindow swig_types[5] 
#define  SWIGTYPE_p_wxCommandEvent swig_types[6] 
#define  SWIGTYPE_p_wxString swig_types[7] 
#define  SWIGTYPE_p_wxEvtHandler swig_types[8] 
#define  SWIGTYPE_p_wxFont swig_types[9] 
#define  SWIGTYPE_p_wxDateTime swig_types[10] 
#define  SWIGTYPE_p_wxControl swig_types[11] 
#define  SWIGTYPE_p_wxCalendarCtrl swig_types[12] 
#define  SWIGTYPE_p_wxEvent swig_types[13] 
static swig_type_info *swig_types[15];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _calendar.so
  ------------------------------------------------*/
#define SWIG_init    init_calendar

#define SWIG_name    "_calendar"

#include "wx/wxPython/wxPython.h"
#include "wx/wxPython/pyclasses.h"

#include <wx/calctrl.h>


    DECLARE_DEF_STRING(CalendarNameStr);

#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_new_CalendarDateAttr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxColour *arg1 = 0 ;
    wxColour const &arg2_defvalue = wxNullColour ;
    wxColour *arg2 = (wxColour *) &arg2_defvalue ;
    wxColour const &arg3_defvalue = wxNullColour ;
    wxColour *arg3 = (wxColour *) &arg3_defvalue ;
    wxFont const &arg4_defvalue = wxNullFont ;
    wxFont *arg4 = (wxFont *) &arg4_defvalue ;
    int arg5 = (int) wxCAL_BORDER_NONE ;
    wxCalendarDateAttr *result;
    wxColour temp1 ;
    wxColour temp2 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "colText",(char *) "colBack",(char *) "colBorder",(char *) "font",(char *) "border", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOi:new_CalendarDateAttr",kwnames,&obj0,&obj1,&obj2,&obj3,&arg5)) goto fail;
    {
        arg1 = &temp1;
        if ( ! wxColour_helper(obj0, &arg1)) SWIG_fail;
    }
    if (obj1) {
        {
            arg2 = &temp2;
            if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_wxFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg4 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCalendarDateAttr *)new wxCalendarDateAttr((wxColour const &)*arg1,(wxColour const &)*arg2,(wxColour const &)*arg3,(wxFont const &)*arg4,(wxCalendarDateBorder )arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCalendarDateAttr, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CalendarDateAttrBorder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    wxColour const &arg2_defvalue = wxNullColour ;
    wxColour *arg2 = (wxColour *) &arg2_defvalue ;
    wxCalendarDateAttr *result;
    wxColour temp2 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "border",(char *) "colBorder", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"i|O:new_CalendarDateAttrBorder",kwnames,&arg1,&obj1)) goto fail;
    if (obj1) {
        {
            arg2 = &temp2;
            if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCalendarDateAttr *)new wxCalendarDateAttr((wxCalendarDateBorder )arg1,(wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCalendarDateAttr, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_SetTextColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colText", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CalendarDateAttr_SetTextColour",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTextColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_SetBackgroundColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colBack", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CalendarDateAttr_SetBackgroundColour",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBackgroundColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_SetBorderColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "col", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CalendarDateAttr_SetBorderColour",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBorderColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_SetFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    wxFont *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "font", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CalendarDateAttr_SetFont",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFont((wxFont const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_SetBorder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "border", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"Oi:CalendarDateAttr_SetBorder",kwnames,&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBorder((wxCalendarDateBorder )arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_SetHoliday(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "holiday", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CalendarDateAttr_SetHoliday",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHoliday(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_HasTextColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_HasTextColour",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCalendarDateAttr const *)arg1)->HasTextColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_HasBackgroundColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_HasBackgroundColour",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCalendarDateAttr const *)arg1)->HasBackgroundColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_HasBorderColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_HasBorderColour",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCalendarDateAttr const *)arg1)->HasBorderColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_HasFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_HasFont",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCalendarDateAttr const *)arg1)->HasFont();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_HasBorder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_HasBorder",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCalendarDateAttr const *)arg1)->HasBorder();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_IsHoliday(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_IsHoliday",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)((wxCalendarDateAttr const *)arg1)->IsHoliday();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_GetTextColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_GetTextColour",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarDateAttr const *)arg1)->GetTextColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_GetBackgroundColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_GetBackgroundColour",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarDateAttr const *)arg1)->GetBackgroundColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_GetBorderColour(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_GetBorderColour",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarDateAttr const *)arg1)->GetBorderColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_GetFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    wxFont result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_GetFont",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarDateAttr const *)arg1)->GetFont();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxFont * resultptr;
        resultptr = new wxFont((wxFont &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxFont, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarDateAttr_GetBorder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarDateAttr *arg1 = (wxCalendarDateAttr *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarDateAttr_GetBorder",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxCalendarDateAttr const *)arg1)->GetBorder();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CalendarDateAttr_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxCalendarDateAttr, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CalendarEvent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxEventType arg2 ;
    wxCalendarEvent *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "cal",(char *) "type", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"Oi:new_CalendarEvent",kwnames,&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCalendarEvent *)new wxCalendarEvent(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCalendarEvent, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarEvent_GetDate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarEvent *arg1 = (wxCalendarEvent *) 0 ;
    wxDateTime *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarEvent_GetDate",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxDateTime const &_result_ref = ((wxCalendarEvent const *)arg1)->GetDate();
            result = (wxDateTime *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxDateTime, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarEvent_GetWeekDay(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarEvent *arg1 = (wxCalendarEvent *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarEvent_GetWeekDay",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxCalendarEvent const *)arg1)->GetWeekDay();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CalendarEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxCalendarEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CalendarCtrl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) 0 ;
    wxWindowID arg2 ;
    wxDateTime const &arg3_defvalue = wxDefaultDateTime ;
    wxDateTime *arg3 = (wxDateTime *) &arg3_defvalue ;
    wxPoint const &arg4_defvalue = wxDefaultPosition ;
    wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
    wxSize const &arg5_defvalue = wxDefaultSize ;
    wxSize *arg5 = (wxSize *) &arg5_defvalue ;
    long arg6 = (long) wxCAL_SHOW_HOLIDAYS|wxWANTS_CHARS ;
    wxString const &arg7_defvalue = wxPyCalendarNameStr ;
    wxString *arg7 = (wxString *) &arg7_defvalue ;
    wxCalendarCtrl *result;
    wxPoint temp4 ;
    wxSize temp5 ;
    bool temp7 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "date",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"Oi|OOOlO:new_CalendarCtrl",kwnames,&obj0,&arg2,&obj2,&obj3,&obj4,&arg6,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxDateTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg3 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = wxString_in_helper(obj6);
            if (arg7 == NULL) SWIG_fail;
            temp7 = true;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCalendarCtrl *)new wxCalendarCtrl(arg1,arg2,(wxDateTime const &)*arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxString const &)*arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCalendarCtrl, 1);
    {
        if (temp7)
        delete arg7;
    }
    return resultobj;
    fail:
    {
        if (temp7)
        delete arg7;
    }
    return NULL;
}


static PyObject *_wrap_new_PreCalendarCtrl(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PreCalendarCtrl",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCalendarCtrl *)new wxCalendarCtrl();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCalendarCtrl, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_Create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxWindow *arg2 = (wxWindow *) 0 ;
    wxWindowID arg3 ;
    wxDateTime const &arg4_defvalue = wxDefaultDateTime ;
    wxDateTime *arg4 = (wxDateTime *) &arg4_defvalue ;
    wxPoint const &arg5_defvalue = wxDefaultPosition ;
    wxPoint *arg5 = (wxPoint *) &arg5_defvalue ;
    wxSize const &arg6_defvalue = wxDefaultSize ;
    wxSize *arg6 = (wxSize *) &arg6_defvalue ;
    long arg7 = (long) wxCAL_SHOW_HOLIDAYS|wxWANTS_CHARS ;
    wxString const &arg8_defvalue = wxPyCalendarNameStr ;
    wxString *arg8 = (wxString *) &arg8_defvalue ;
    bool result;
    wxPoint temp5 ;
    wxSize temp6 ;
    bool temp8 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj7 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parent",(char *) "id",(char *) "date",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOi|OOOlO:CalendarCtrl_Create",kwnames,&obj0,&obj1,&arg3,&obj3,&obj4,&obj5,&arg7,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_wxDateTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg4 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    if (obj4) {
        {
            arg5 = &temp5;
            if ( ! wxPoint_helper(obj4, &arg5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = &temp6;
            if ( ! wxSize_helper(obj5, &arg6)) SWIG_fail;
        }
    }
    if (obj7) {
        {
            arg8 = wxString_in_helper(obj7);
            if (arg8 == NULL) SWIG_fail;
            temp8 = true;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Create(arg2,arg3,(wxDateTime const &)*arg4,(wxPoint const &)*arg5,(wxSize const &)*arg6,arg7,(wxString const &)*arg8);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    {
        if (temp8)
        delete arg8;
    }
    return resultobj;
    fail:
    {
        if (temp8)
        delete arg8;
    }
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_SetDate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxDateTime *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "date", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CalendarCtrl_SetDate",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxDateTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDate((wxDateTime const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetDate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxDateTime *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarCtrl_GetDate",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxDateTime const &_result_ref = ((wxCalendarCtrl const *)arg1)->GetDate();
            result = (wxDateTime *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxDateTime, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_SetLowerDateLimit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxDateTime const &arg2_defvalue = wxDefaultDateTime ;
    wxDateTime *arg2 = (wxDateTime *) &arg2_defvalue ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "date", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:CalendarCtrl_SetLowerDateLimit",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxDateTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg2 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetLowerDateLimit((wxDateTime const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetLowerDateLimit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxDateTime *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarCtrl_GetLowerDateLimit",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxDateTime const &_result_ref = ((wxCalendarCtrl const *)arg1)->GetLowerDateLimit();
            result = (wxDateTime *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxDateTime, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_SetUpperDateLimit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxDateTime const &arg2_defvalue = wxDefaultDateTime ;
    wxDateTime *arg2 = (wxDateTime *) &arg2_defvalue ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "date", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:CalendarCtrl_SetUpperDateLimit",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxDateTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg2 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetUpperDateLimit((wxDateTime const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetUpperDateLimit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxDateTime *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarCtrl_GetUpperDateLimit",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxDateTime const &_result_ref = ((wxCalendarCtrl const *)arg1)->GetUpperDateLimit();
            result = (wxDateTime *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxDateTime, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_SetDateRange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxDateTime const &arg2_defvalue = wxDefaultDateTime ;
    wxDateTime *arg2 = (wxDateTime *) &arg2_defvalue ;
    wxDateTime const &arg3_defvalue = wxDefaultDateTime ;
    wxDateTime *arg3 = (wxDateTime *) &arg3_defvalue ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "lowerdate",(char *) "upperdate", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:CalendarCtrl_SetDateRange",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_wxDateTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg2 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxDateTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg3 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->SetDateRange((wxDateTime const &)*arg2,(wxDateTime const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_EnableYearChange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    bool arg2 = (bool) TRUE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "enable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:CalendarCtrl_EnableYearChange",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EnableYearChange(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_EnableMonthChange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    bool arg2 = (bool) TRUE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "enable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:CalendarCtrl_EnableMonthChange",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EnableMonthChange(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_EnableHolidayDisplay(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    bool arg2 = (bool) TRUE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:CalendarCtrl_EnableHolidayDisplay",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EnableHolidayDisplay(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_SetHeaderColours(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour *arg3 = 0 ;
    wxColour temp2 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colFg",(char *) "colBg", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CalendarCtrl_SetHeaderColours",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHeaderColours((wxColour const &)*arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetHeaderColourFg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarCtrl_GetHeaderColourFg",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarCtrl const *)arg1)->GetHeaderColourFg();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetHeaderColourBg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarCtrl_GetHeaderColourBg",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarCtrl const *)arg1)->GetHeaderColourBg();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_SetHighlightColours(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour *arg3 = 0 ;
    wxColour temp2 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colFg",(char *) "colBg", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CalendarCtrl_SetHighlightColours",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHighlightColours((wxColour const &)*arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetHighlightColourFg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarCtrl_GetHighlightColourFg",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarCtrl const *)arg1)->GetHighlightColourFg();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetHighlightColourBg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarCtrl_GetHighlightColourBg",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarCtrl const *)arg1)->GetHighlightColourBg();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_SetHolidayColours(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour *arg3 = 0 ;
    wxColour temp2 ;
    wxColour temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colFg",(char *) "colBg", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CalendarCtrl_SetHolidayColours",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHolidayColours((wxColour const &)*arg2,(wxColour const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetHolidayColourFg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarCtrl_GetHolidayColourFg",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarCtrl const *)arg1)->GetHolidayColourFg();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetHolidayColourBg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:CalendarCtrl_GetHolidayColourBg",kwnames,&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = ((wxCalendarCtrl const *)arg1)->GetHolidayColourBg();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_GetAttr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    size_t arg2 ;
    wxCalendarDateAttr *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "day", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CalendarCtrl_GetAttr",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxCalendarDateAttr *)((wxCalendarCtrl const *)arg1)->GetAttr(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_wxCalendarDateAttr, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_SetAttr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    size_t arg2 ;
    wxCalendarDateAttr *arg3 = (wxCalendarDateAttr *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "day",(char *) "attr", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CalendarCtrl_SetAttr",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxCalendarDateAttr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAttr(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_SetHoliday(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "day", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CalendarCtrl_SetHoliday",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHoliday(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_ResetAttr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "day", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CalendarCtrl_ResetAttr",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ResetAttr(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_HitTest(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    wxPoint *arg2 = 0 ;
    wxDateTime *arg3 = (wxDateTime *) NULL ;
    wxDateTime::WeekDay *arg4 = (wxDateTime::WeekDay *) NULL ;
    int result;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos",(char *) "date",(char *) "wd", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:CalendarCtrl_HitTest",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_wxDateTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_wxDateTime__WeekDay,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->HitTest((wxPoint const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_Enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    bool arg2 = (bool) TRUE ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "enable", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:CalendarCtrl_Enable",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Enable(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CalendarCtrl_Show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxCalendarCtrl *arg1 = (wxCalendarCtrl *) 0 ;
    bool arg2 = (bool) TRUE ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:CalendarCtrl_Show",kwnames,&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wxCalendarCtrl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Show(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CalendarCtrl_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxCalendarCtrl, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyMethodDef SwigMethods[] = {
	 { (char *)"new_CalendarDateAttr", (PyCFunction) _wrap_new_CalendarDateAttr, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_CalendarDateAttrBorder", (PyCFunction) _wrap_new_CalendarDateAttrBorder, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_SetTextColour", (PyCFunction) _wrap_CalendarDateAttr_SetTextColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_SetBackgroundColour", (PyCFunction) _wrap_CalendarDateAttr_SetBackgroundColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_SetBorderColour", (PyCFunction) _wrap_CalendarDateAttr_SetBorderColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_SetFont", (PyCFunction) _wrap_CalendarDateAttr_SetFont, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_SetBorder", (PyCFunction) _wrap_CalendarDateAttr_SetBorder, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_SetHoliday", (PyCFunction) _wrap_CalendarDateAttr_SetHoliday, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_HasTextColour", (PyCFunction) _wrap_CalendarDateAttr_HasTextColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_HasBackgroundColour", (PyCFunction) _wrap_CalendarDateAttr_HasBackgroundColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_HasBorderColour", (PyCFunction) _wrap_CalendarDateAttr_HasBorderColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_HasFont", (PyCFunction) _wrap_CalendarDateAttr_HasFont, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_HasBorder", (PyCFunction) _wrap_CalendarDateAttr_HasBorder, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_IsHoliday", (PyCFunction) _wrap_CalendarDateAttr_IsHoliday, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_GetTextColour", (PyCFunction) _wrap_CalendarDateAttr_GetTextColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_GetBackgroundColour", (PyCFunction) _wrap_CalendarDateAttr_GetBackgroundColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_GetBorderColour", (PyCFunction) _wrap_CalendarDateAttr_GetBorderColour, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_GetFont", (PyCFunction) _wrap_CalendarDateAttr_GetFont, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_GetBorder", (PyCFunction) _wrap_CalendarDateAttr_GetBorder, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarDateAttr_swigregister", CalendarDateAttr_swigregister, METH_VARARGS },
	 { (char *)"new_CalendarEvent", (PyCFunction) _wrap_new_CalendarEvent, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarEvent_GetDate", (PyCFunction) _wrap_CalendarEvent_GetDate, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarEvent_GetWeekDay", (PyCFunction) _wrap_CalendarEvent_GetWeekDay, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarEvent_swigregister", CalendarEvent_swigregister, METH_VARARGS },
	 { (char *)"new_CalendarCtrl", (PyCFunction) _wrap_new_CalendarCtrl, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"new_PreCalendarCtrl", (PyCFunction) _wrap_new_PreCalendarCtrl, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_Create", (PyCFunction) _wrap_CalendarCtrl_Create, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_SetDate", (PyCFunction) _wrap_CalendarCtrl_SetDate, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetDate", (PyCFunction) _wrap_CalendarCtrl_GetDate, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_SetLowerDateLimit", (PyCFunction) _wrap_CalendarCtrl_SetLowerDateLimit, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetLowerDateLimit", (PyCFunction) _wrap_CalendarCtrl_GetLowerDateLimit, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_SetUpperDateLimit", (PyCFunction) _wrap_CalendarCtrl_SetUpperDateLimit, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetUpperDateLimit", (PyCFunction) _wrap_CalendarCtrl_GetUpperDateLimit, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_SetDateRange", (PyCFunction) _wrap_CalendarCtrl_SetDateRange, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_EnableYearChange", (PyCFunction) _wrap_CalendarCtrl_EnableYearChange, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_EnableMonthChange", (PyCFunction) _wrap_CalendarCtrl_EnableMonthChange, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_EnableHolidayDisplay", (PyCFunction) _wrap_CalendarCtrl_EnableHolidayDisplay, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_SetHeaderColours", (PyCFunction) _wrap_CalendarCtrl_SetHeaderColours, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetHeaderColourFg", (PyCFunction) _wrap_CalendarCtrl_GetHeaderColourFg, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetHeaderColourBg", (PyCFunction) _wrap_CalendarCtrl_GetHeaderColourBg, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_SetHighlightColours", (PyCFunction) _wrap_CalendarCtrl_SetHighlightColours, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetHighlightColourFg", (PyCFunction) _wrap_CalendarCtrl_GetHighlightColourFg, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetHighlightColourBg", (PyCFunction) _wrap_CalendarCtrl_GetHighlightColourBg, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_SetHolidayColours", (PyCFunction) _wrap_CalendarCtrl_SetHolidayColours, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetHolidayColourFg", (PyCFunction) _wrap_CalendarCtrl_GetHolidayColourFg, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetHolidayColourBg", (PyCFunction) _wrap_CalendarCtrl_GetHolidayColourBg, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_GetAttr", (PyCFunction) _wrap_CalendarCtrl_GetAttr, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_SetAttr", (PyCFunction) _wrap_CalendarCtrl_SetAttr, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_SetHoliday", (PyCFunction) _wrap_CalendarCtrl_SetHoliday, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_ResetAttr", (PyCFunction) _wrap_CalendarCtrl_ResetAttr, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_HitTest", (PyCFunction) _wrap_CalendarCtrl_HitTest, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_Enable", (PyCFunction) _wrap_CalendarCtrl_Enable, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_Show", (PyCFunction) _wrap_CalendarCtrl_Show, METH_VARARGS | METH_KEYWORDS },
	 { (char *)"CalendarCtrl_swigregister", CalendarCtrl_swigregister, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_wxLayoutConstraintsTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutConstraints *) x));
}
static void *_p_wxCalendarCtrlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxCalendarCtrl *) x));
}
static void *_p_wxGBSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizerItem *) ((wxGBSizerItem *) x));
}
static void *_p_wxSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizerItem *) x));
}
static void *_p_wxScrollEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxIndividualLayoutConstraintTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxIndividualLayoutConstraint *) x));
}
static void *_p_wxStaticBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStaticBoxSizer *) x));
}
static void *_p_wxBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxBoxSizer *) x));
}
static void *_p_wxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizer *) x));
}
static void *_p_wxGridBagSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *)(wxFlexGridSizer *) ((wxGridBagSizer *) x));
}
static void *_p_wxFileHistoryTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFileHistory *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvent *) x));
}
static void *_p_wxFlexGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *) ((wxFlexGridSizer *) x));
}
static void *_p_wxGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxGridSizer *) x));
}
static void *_p_wxInitDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxInitDialogEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNcPaintEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSysColourChangedEvent *) x));
}
static void *_p_wxControlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxControl *) x));
}
static void *_p_wxSetCursorEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSetCursorEvent *) x));
}
static void *_p_wxTimerEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxTimerEvent *) x));
}
static void *_p_wxCalendarEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxCalendarEvent *) x));
}
static void *_p_wxFSFileTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFSFile *) x));
}
static void *_p_wxClipboardTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxClipboard *) x));
}
static void *_p_wxPySizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxPySizer *) x));
}
static void *_p_wxPyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPyEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxShowEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxShowEvent *) x));
}
static void *_p_wxToolTipTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxToolTip *) x));
}
static void *_p_wxMenuItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxMenuItem *) x));
}
static void *_p_wxIdleEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIdleEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIconizeEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMoveEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxActivateEvent *) x));
}
static void *_p_wxXPMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxXPMHandler *) x));
}
static void *_p_wxPNMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNMHandler *) x));
}
static void *_p_wxJPEGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxJPEGHandler *) x));
}
static void *_p_wxPCXHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPCXHandler *) x));
}
static void *_p_wxGIFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxGIFHandler *) x));
}
static void *_p_wxPNGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNGHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *)(wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *) ((wxCURHandler *) x));
}
static void *_p_wxICOHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *) ((wxICOHandler *) x));
}
static void *_p_wxBMPHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxBMPHandler *) x));
}
static void *_p_wxImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImageHandler *) x));
}
static void *_p_wxTIFFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxTIFFHandler *) x));
}
static void *_p_wxEvtHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvtHandler *) x));
}
static void *_p_wxImageTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImage *) x));
}
static void *_p_wxScrollWinEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxScrollWinEvent *) x));
}
static void *_p_wxSystemOptionsTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSystemOptions *) x));
}
static void *_p_wxJoystickEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxJoystickEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxKeyEvent *) x));
}
static void *_p_wxWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxWindow *) x));
}
static void *_p_wxMenuTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxMenu *) x));
}
static void *_p_wxMenuBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxPyProcessTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyProcess *) x));
}
static void *_p_wxFileSystemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFileSystem *) x));
}
static void *_p_wxContextMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMenuEvent *) x));
}
static void *_p_wxPyAppTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyApp *) x));
}
static void *_p_wxCloseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxEraseEvent *) x));
}
static void *_p_wxBusyInfoTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxBusyInfo *) x));
}
static void *_p_wxPyCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCommandEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDropFilesEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxProcessEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxProcessEvent *) x));
}
static void *_p_wxControlWithItemsTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxValidator *) x));
}
static void *_p_wxPyTimerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyTimer *) x));
}
static void *_p_wxControlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxControl *) x));
}
static void *_p_wxControlWithItemsTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxMenuBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMenuBar *) x));
}
static void *_p_wxCalendarCtrlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxCalendarCtrl *) x));
}
static void *_p_wxChildFocusEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxChildFocusEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxScrollEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowCreateEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxUpdateUIEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowDestroyEvent *) x));
}
static void *_p_wxContextMenuEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxContextMenuEvent *) x));
}
static void *_p_wxCalendarEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxCalendarEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxNotifyEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxPyCommandEvent *) x));
}
static void *_p_wxControlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxControl *) x));
}
static void *_p_wxWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxWindow *) x));
}
static void *_p_wxControlWithItemsTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyAppTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyApp *) x));
}
static void *_p_wxPyTimerTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyTimer *) x));
}
static void *_p_wxValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxValidator *) x));
}
static void *_p_wxPyValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxMenuBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxMenuTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxMenu *) x));
}
static void *_p_wxPyProcessTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyProcess *) x));
}
static void *_p_wxCalendarCtrlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxCalendarCtrl *) x));
}
static void *_p_wxControlWithItemsTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxControlWithItems *) x));
}
static void *_p_wxCalendarCtrlTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxCalendarCtrl *) x));
}
static void *_p_wxContextMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMenuEvent *) x));
}
static void *_p_wxCloseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxEraseEvent *) x));
}
static void *_p_wxSetCursorEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSetCursorEvent *) x));
}
static void *_p_wxTimerEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxTimerEvent *) x));
}
static void *_p_wxCalendarEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxCalendarEvent *) x));
}
static void *_p_wxInitDialogEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxInitDialogEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxPyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPyEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxJoystickEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxJoystickEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIdleEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIconizeEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxActivateEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMoveEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNcPaintEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSysColourChangedEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDropFilesEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxProcessEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxProcessEvent *) x));
}
static void *_p_wxShowEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxShowEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCommandEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxKeyEvent *) x));
}
static void *_p_wxScrollWinEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxScrollWinEvent *) x));
}
static swig_type_info _swigt__p_wxDateTime__WeekDay[] = {{"_p_wxDateTime__WeekDay", 0, "wxDateTime::WeekDay *", 0},{"_p_wxDateTime__WeekDay"},{0}};
static swig_type_info _swigt__p_wxColour[] = {{"_p_wxColour", 0, "wxColour *", 0},{"_p_wxColour"},{0}};
static swig_type_info _swigt__p_wxObject[] = {{"_p_wxObject", 0, "wxObject *", 0},{"_p_wxLayoutConstraints", _p_wxLayoutConstraintsTo_p_wxObject},{"_p_wxCalendarCtrl", _p_wxCalendarCtrlTo_p_wxObject},{"_p_wxGBSizerItem", _p_wxGBSizerItemTo_p_wxObject},{"_p_wxSizerItem", _p_wxSizerItemTo_p_wxObject},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxObject},{"_p_wxIndividualLayoutConstraint", _p_wxIndividualLayoutConstraintTo_p_wxObject},{"_p_wxStaticBoxSizer", _p_wxStaticBoxSizerTo_p_wxObject},{"_p_wxBoxSizer", _p_wxBoxSizerTo_p_wxObject},{"_p_wxSizer", _p_wxSizerTo_p_wxObject},{"_p_wxGridBagSizer", _p_wxGridBagSizerTo_p_wxObject},{"_p_wxFileHistory", _p_wxFileHistoryTo_p_wxObject},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxObject},{"_p_wxMenu", _p_wxMenuTo_p_wxObject},{"_p_wxEvent", _p_wxEventTo_p_wxObject},{"_p_wxGridSizer", _p_wxGridSizerTo_p_wxObject},{"_p_wxFlexGridSizer", _p_wxFlexGridSizerTo_p_wxObject},{"_p_wxInitDialogEvent", _p_wxInitDialogEventTo_p_wxObject},{"_p_wxPaintEvent", _p_wxPaintEventTo_p_wxObject},{"_p_wxNcPaintEvent", _p_wxNcPaintEventTo_p_wxObject},{"_p_wxPaletteChangedEvent", _p_wxPaletteChangedEventTo_p_wxObject},{"_p_wxDisplayChangedEvent", _p_wxDisplayChangedEventTo_p_wxObject},{"_p_wxMouseCaptureChangedEvent", _p_wxMouseCaptureChangedEventTo_p_wxObject},{"_p_wxSysColourChangedEvent", _p_wxSysColourChangedEventTo_p_wxObject},{"_p_wxControl", _p_wxControlTo_p_wxObject},{"_p_wxSetCursorEvent", _p_wxSetCursorEventTo_p_wxObject},{"_p_wxTimerEvent", _p_wxTimerEventTo_p_wxObject},{"_p_wxCalendarEvent", _p_wxCalendarEventTo_p_wxObject},{"_p_wxFSFile", _p_wxFSFileTo_p_wxObject},{"_p_wxClipboard", _p_wxClipboardTo_p_wxObject},{"_p_wxPySizer", _p_wxPySizerTo_p_wxObject},{"_p_wxPyEvent", _p_wxPyEventTo_p_wxObject},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxObject},{"_p_wxShowEvent", _p_wxShowEventTo_p_wxObject},{"_p_wxToolTip", _p_wxToolTipTo_p_wxObject},{"_p_wxMenuItem", _p_wxMenuItemTo_p_wxObject},{"_p_wxIdleEvent", _p_wxIdleEventTo_p_wxObject},{"_p_wxMoveEvent", _p_wxMoveEventTo_p_wxObject},{"_p_wxSizeEvent", _p_wxSizeEventTo_p_wxObject},{"_p_wxActivateEvent", _p_wxActivateEventTo_p_wxObject},{"_p_wxIconizeEvent", _p_wxIconizeEventTo_p_wxObject},{"_p_wxMaximizeEvent", _p_wxMaximizeEventTo_p_wxObject},{"_p_wxQueryNewPaletteEvent", _p_wxQueryNewPaletteEventTo_p_wxObject},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxObject},{"_p_wxCURHandler", _p_wxCURHandlerTo_p_wxObject},{"_p_wxICOHandler", _p_wxICOHandlerTo_p_wxObject},{"_p_wxBMPHandler", _p_wxBMPHandlerTo_p_wxObject},{"_p_wxImageHandler", _p_wxImageHandlerTo_p_wxObject},{"_p_wxTIFFHandler", _p_wxTIFFHandlerTo_p_wxObject},{"_p_wxEvtHandler", _p_wxEvtHandlerTo_p_wxObject},{"_p_wxANIHandler", _p_wxANIHandlerTo_p_wxObject},{"_p_wxPNGHandler", _p_wxPNGHandlerTo_p_wxObject},{"_p_wxGIFHandler", _p_wxGIFHandlerTo_p_wxObject},{"_p_wxPCXHandler", _p_wxPCXHandlerTo_p_wxObject},{"_p_wxJPEGHandler", _p_wxJPEGHandlerTo_p_wxObject},{"_p_wxPNMHandler", _p_wxPNMHandlerTo_p_wxObject},{"_p_wxXPMHandler", _p_wxXPMHandlerTo_p_wxObject},{"_p_wxImage", _p_wxImageTo_p_wxObject},{"_p_wxScrollWinEvent", _p_wxScrollWinEventTo_p_wxObject},{"_p_wxSystemOptions", _p_wxSystemOptionsTo_p_wxObject},{"_p_wxJoystickEvent", _p_wxJoystickEventTo_p_wxObject},{"_p_wxObject"},{"_p_wxKeyEvent", _p_wxKeyEventTo_p_wxObject},{"_p_wxNavigationKeyEvent", _p_wxNavigationKeyEventTo_p_wxObject},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxObject},{"_p_wxWindow", _p_wxWindowTo_p_wxObject},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxObject},{"_p_wxPyProcess", _p_wxPyProcessTo_p_wxObject},{"_p_wxFileSystem", _p_wxFileSystemTo_p_wxObject},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxObject},{"_p_wxMenuEvent", _p_wxMenuEventTo_p_wxObject},{"_p_wxPyApp", _p_wxPyAppTo_p_wxObject},{"_p_wxCloseEvent", _p_wxCloseEventTo_p_wxObject},{"_p_wxMouseEvent", _p_wxMouseEventTo_p_wxObject},{"_p_wxEraseEvent", _p_wxEraseEventTo_p_wxObject},{"_p_wxBusyInfo", _p_wxBusyInfoTo_p_wxObject},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxObject},{"_p_wxCommandEvent", _p_wxCommandEventTo_p_wxObject},{"_p_wxDropFilesEvent", _p_wxDropFilesEventTo_p_wxObject},{"_p_wxFocusEvent", _p_wxFocusEventTo_p_wxObject},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxObject},{"_p_wxProcessEvent", _p_wxProcessEventTo_p_wxObject},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxObject},{"_p_wxPyValidator", _p_wxPyValidatorTo_p_wxObject},{"_p_wxValidator", _p_wxValidatorTo_p_wxObject},{"_p_wxPyTimer", _p_wxPyTimerTo_p_wxObject},{0}};
static swig_type_info _swigt__p_wxCalendarEvent[] = {{"_p_wxCalendarEvent", 0, "wxCalendarEvent *", 0},{"_p_wxCalendarEvent"},{0}};
static swig_type_info _swigt__p_wxCalendarDateAttr[] = {{"_p_wxCalendarDateAttr", 0, "wxCalendarDateAttr *", 0},{"_p_wxCalendarDateAttr"},{0}};
static swig_type_info _swigt__p_wxWindow[] = {{"_p_wxWindow", 0, "wxWindow *", 0},{"_p_wxControl", _p_wxControlTo_p_wxWindow},{"_p_wxWindow"},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxWindow},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxWindow},{"_p_wxCalendarCtrl", _p_wxCalendarCtrlTo_p_wxWindow},{0}};
static swig_type_info _swigt__p_wxCommandEvent[] = {{"_p_wxCommandEvent", 0, "wxCommandEvent *", 0},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxCommandEvent},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxCommandEvent},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxCommandEvent},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxCommandEvent},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxCommandEvent},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxCommandEvent},{"_p_wxCalendarEvent", _p_wxCalendarEventTo_p_wxCommandEvent},{"_p_wxCommandEvent"},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxCommandEvent},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxCommandEvent},{0}};
static swig_type_info _swigt__p_wxString[] = {{"_p_wxString", 0, "wxString *", 0},{"_p_wxString"},{0}};
static swig_type_info _swigt__p_wxEvtHandler[] = {{"_p_wxEvtHandler", 0, "wxEvtHandler *", 0},{"_p_wxControl", _p_wxControlTo_p_wxEvtHandler},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxEvtHandler},{"_p_wxWindow", _p_wxWindowTo_p_wxEvtHandler},{"_p_wxEvtHandler"},{"_p_wxPyApp", _p_wxPyAppTo_p_wxEvtHandler},{"_p_wxPyTimer", _p_wxPyTimerTo_p_wxEvtHandler},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxEvtHandler},{"_p_wxValidator", _p_wxValidatorTo_p_wxEvtHandler},{"_p_wxPyValidator", _p_wxPyValidatorTo_p_wxEvtHandler},{"_p_wxMenu", _p_wxMenuTo_p_wxEvtHandler},{"_p_wxCalendarCtrl", _p_wxCalendarCtrlTo_p_wxEvtHandler},{"_p_wxPyProcess", _p_wxPyProcessTo_p_wxEvtHandler},{0}};
static swig_type_info _swigt__p_wxFont[] = {{"_p_wxFont", 0, "wxFont *", 0},{"_p_wxFont"},{0}};
static swig_type_info _swigt__p_wxDateTime[] = {{"_p_wxDateTime", 0, "wxDateTime *", 0},{"_p_wxDateTime"},{0}};
static swig_type_info _swigt__p_wxControl[] = {{"_p_wxControl", 0, "wxControl *", 0},{"_p_wxControl"},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxControl},{"_p_wxCalendarCtrl", _p_wxCalendarCtrlTo_p_wxControl},{0}};
static swig_type_info _swigt__p_wxCalendarCtrl[] = {{"_p_wxCalendarCtrl", 0, "wxCalendarCtrl *", 0},{"_p_wxCalendarCtrl"},{0}};
static swig_type_info _swigt__p_wxEvent[] = {{"_p_wxEvent", 0, "wxEvent *", 0},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxEvent},{"_p_wxMenuEvent", _p_wxMenuEventTo_p_wxEvent},{"_p_wxCloseEvent", _p_wxCloseEventTo_p_wxEvent},{"_p_wxMouseEvent", _p_wxMouseEventTo_p_wxEvent},{"_p_wxEraseEvent", _p_wxEraseEventTo_p_wxEvent},{"_p_wxSetCursorEvent", _p_wxSetCursorEventTo_p_wxEvent},{"_p_wxTimerEvent", _p_wxTimerEventTo_p_wxEvent},{"_p_wxCalendarEvent", _p_wxCalendarEventTo_p_wxEvent},{"_p_wxInitDialogEvent", _p_wxInitDialogEventTo_p_wxEvent},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxEvent},{"_p_wxPyEvent", _p_wxPyEventTo_p_wxEvent},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxEvent},{"_p_wxJoystickEvent", _p_wxJoystickEventTo_p_wxEvent},{"_p_wxEvent"},{"_p_wxIdleEvent", _p_wxIdleEventTo_p_wxEvent},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxEvent},{"_p_wxQueryNewPaletteEvent", _p_wxQueryNewPaletteEventTo_p_wxEvent},{"_p_wxMaximizeEvent", _p_wxMaximizeEventTo_p_wxEvent},{"_p_wxIconizeEvent", _p_wxIconizeEventTo_p_wxEvent},{"_p_wxActivateEvent", _p_wxActivateEventTo_p_wxEvent},{"_p_wxSizeEvent", _p_wxSizeEventTo_p_wxEvent},{"_p_wxMoveEvent", _p_wxMoveEventTo_p_wxEvent},{"_p_wxPaintEvent", _p_wxPaintEventTo_p_wxEvent},{"_p_wxNcPaintEvent", _p_wxNcPaintEventTo_p_wxEvent},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxEvent},{"_p_wxPaletteChangedEvent", _p_wxPaletteChangedEventTo_p_wxEvent},{"_p_wxDisplayChangedEvent", _p_wxDisplayChangedEventTo_p_wxEvent},{"_p_wxMouseCaptureChangedEvent", _p_wxMouseCaptureChangedEventTo_p_wxEvent},{"_p_wxSysColourChangedEvent", _p_wxSysColourChangedEventTo_p_wxEvent},{"_p_wxDropFilesEvent", _p_wxDropFilesEventTo_p_wxEvent},{"_p_wxFocusEvent", _p_wxFocusEventTo_p_wxEvent},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxEvent},{"_p_wxProcessEvent", _p_wxProcessEventTo_p_wxEvent},{"_p_wxShowEvent", _p_wxShowEventTo_p_wxEvent},{"_p_wxCommandEvent", _p_wxCommandEventTo_p_wxEvent},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxEvent},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxEvent},{"_p_wxNavigationKeyEvent", _p_wxNavigationKeyEventTo_p_wxEvent},{"_p_wxKeyEvent", _p_wxKeyEventTo_p_wxEvent},{"_p_wxScrollWinEvent", _p_wxScrollWinEventTo_p_wxEvent},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_wxDateTime__WeekDay, 
_swigt__p_wxColour, 
_swigt__p_wxObject, 
_swigt__p_wxCalendarEvent, 
_swigt__p_wxCalendarDateAttr, 
_swigt__p_wxWindow, 
_swigt__p_wxCommandEvent, 
_swigt__p_wxString, 
_swigt__p_wxEvtHandler, 
_swigt__p_wxFont, 
_swigt__p_wxDateTime, 
_swigt__p_wxControl, 
_swigt__p_wxCalendarCtrl, 
_swigt__p_wxEvent, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"CAL_SUNDAY_FIRST", (long) wxCAL_SUNDAY_FIRST, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_MONDAY_FIRST", (long) wxCAL_MONDAY_FIRST, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_SHOW_HOLIDAYS", (long) wxCAL_SHOW_HOLIDAYS, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_NO_YEAR_CHANGE", (long) wxCAL_NO_YEAR_CHANGE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_NO_MONTH_CHANGE", (long) wxCAL_NO_MONTH_CHANGE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_SEQUENTIAL_MONTH_SELECTION", (long) wxCAL_SEQUENTIAL_MONTH_SELECTION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_SHOW_SURROUNDING_WEEKS", (long) wxCAL_SHOW_SURROUNDING_WEEKS, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_HITTEST_NOWHERE", (long) wxCAL_HITTEST_NOWHERE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_HITTEST_HEADER", (long) wxCAL_HITTEST_HEADER, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_HITTEST_DAY", (long) wxCAL_HITTEST_DAY, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_HITTEST_INCMONTH", (long) wxCAL_HITTEST_INCMONTH, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_HITTEST_DECMONTH", (long) wxCAL_HITTEST_DECMONTH, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_HITTEST_SURROUNDING_WEEK", (long) wxCAL_HITTEST_SURROUNDING_WEEK, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_BORDER_NONE", (long) wxCAL_BORDER_NONE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_BORDER_SQUARE", (long) wxCAL_BORDER_SQUARE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAL_BORDER_ROUND", (long) wxCAL_BORDER_ROUND, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_CALENDAR_DOUBLECLICKED", (long) wxEVT_CALENDAR_DOUBLECLICKED, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_CALENDAR_SEL_CHANGED", (long) wxEVT_CALENDAR_SEL_CHANGED, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_CALENDAR_DAY_CHANGED", (long) wxEVT_CALENDAR_DAY_CHANGED, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_CALENDAR_MONTH_CHANGED", (long) wxEVT_CALENDAR_MONTH_CHANGED, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_CALENDAR_YEAR_CHANGED", (long) wxEVT_CALENDAR_YEAR_CHANGED, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"wxEVT_CALENDAR_WEEKDAY_CLICKED", (long) wxEVT_CALENDAR_WEEKDAY_CLICKED, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
    PyDict_SetItemString(d, "wxEVT_CALENDAR_DOUBLECLICKED", PyInt_FromLong(wxEVT_CALENDAR_DOUBLECLICKED));
    PyDict_SetItemString(d, "wxEVT_CALENDAR_SEL_CHANGED", PyInt_FromLong(wxEVT_CALENDAR_SEL_CHANGED));
    PyDict_SetItemString(d, "wxEVT_CALENDAR_DAY_CHANGED", PyInt_FromLong(wxEVT_CALENDAR_DAY_CHANGED));
    PyDict_SetItemString(d, "wxEVT_CALENDAR_MONTH_CHANGED", PyInt_FromLong(wxEVT_CALENDAR_MONTH_CHANGED));
    PyDict_SetItemString(d, "wxEVT_CALENDAR_YEAR_CHANGED", PyInt_FromLong(wxEVT_CALENDAR_YEAR_CHANGED));
    PyDict_SetItemString(d, "wxEVT_CALENDAR_WEEKDAY_CLICKED", PyInt_FromLong(wxEVT_CALENDAR_WEEKDAY_CLICKED));
    
    
}

